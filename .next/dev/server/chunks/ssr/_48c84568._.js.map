{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/components/theme/ThemeProvider.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const FONTS = registerClientReference(\n    function() { throw new Error(\"Attempted to call FONTS() from the server but FONTS is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx <module evaluation>\",\n    \"FONTS\",\n);\nexport const THEMES = registerClientReference(\n    function() { throw new Error(\"Attempted to call THEMES() from the server but THEMES is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx <module evaluation>\",\n    \"THEMES\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/theme/ThemeProvider.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx <module evaluation>\",\n    \"default\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx <module evaluation>\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,oEACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,oEACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/components/theme/ThemeProvider.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const FONTS = registerClientReference(\n    function() { throw new Error(\"Attempted to call FONTS() from the server but FONTS is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx\",\n    \"FONTS\",\n);\nexport const THEMES = registerClientReference(\n    function() { throw new Error(\"Attempted to call THEMES() from the server but THEMES is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx\",\n    \"THEMES\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/theme/ThemeProvider.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx\",\n    \"default\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/ThemeProvider.jsx\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,gDACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,gDACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/app/layout.jsx"],"sourcesContent":["import \"./globals.css\";\nimport ThemeProvider from \"@/components/theme/ThemeProvider\";\n\nexport const metadata = { title: \"Dashboard\", description: \"App\" };\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"pt-br\" suppressHydrationWarning>\n      <body className=\"min-h-screen bg-blobs text-slate-200\">\n        <ThemeProvider>\n          <div className=\"mx-auto w-full px-6 py-6 max-w-[1440px] lg:max-w-[1600px] xl:max-w-[1760px] 2xl:max-w-[1920px]\">\n            {children}\n          </div>\n          {/* reset link removido */}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AACA;;;;AAEO,MAAM,WAAW;IAAE,OAAO;IAAa,aAAa;AAAM;AAElD,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;QAAQ,wBAAwB;kBACzC,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,gJAAa;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;;;;;AAOb","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}