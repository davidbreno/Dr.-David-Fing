{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/%40swc/helpers/cjs/_interop_require_wildcard.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACA,SAAS,0BAA0B,GAAG,EAAE,WAAW;IAC/C,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS;QAAE,WAAW;IAAK;IAC/B,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n"],"names":["module","exports","require","vendored","ReactJsxRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/querystring.ts"],"sourcesContent":["import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n"],"names":["assign","searchParamsToUrlQuery","urlQueryToSearchParams","searchParams","query","key","value","entries","existing","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","URLSearchParams","Object","item","append","set","target","searchParamsList","keys","delete"],"mappings":";;;;;;;;;;;;;;;IAgDgBA,MAAM,EAAA;eAANA;;IA9CAC,sBAAsB,EAAA;eAAtBA;;IAgCAC,sBAAsB,EAAA;eAAtBA;;;AAhCT,SAASD,uBACdE,YAA6B;IAE7B,MAAMC,QAAwB,CAAC;IAC/B,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIH,aAAaI,OAAO,GAAI;QACjD,MAAMC,WAAWJ,KAAK,CAACC,IAAI;QAC3B,IAAI,OAAOG,aAAa,aAAa;YACnCJ,KAAK,CAACC,IAAI,GAAGC;QACf,OAAO,IAAIG,MAAMC,OAAO,CAACF,WAAW;YAClCA,SAASG,IAAI,CAACL;QAChB,OAAO;YACLF,KAAK,CAACC,IAAI,GAAG;gBAACG;gBAAUF;aAAM;QAChC;IACF;IACA,OAAOF;AACT;AAEA,SAASQ,uBAAuBC,KAAc;IAC5C,IAAI,OAAOA,UAAU,UAAU;QAC7B,OAAOA;IACT;IAEA,IACG,OAAOA,UAAU,YAAY,CAACC,MAAMD,UACrC,OAAOA,UAAU,WACjB;QACA,OAAOE,OAAOF;IAChB,OAAO;QACL,OAAO;IACT;AACF;AAEO,SAASX,uBAAuBE,KAAqB;IAC1D,MAAMD,eAAe,IAAIa;IACzB,KAAK,MAAM,CAACX,KAAKC,MAAM,IAAIW,OAAOV,OAAO,CAACH,OAAQ;QAChD,IAAIK,MAAMC,OAAO,CAACJ,QAAQ;YACxB,KAAK,MAAMY,QAAQZ,MAAO;gBACxBH,aAAagB,MAAM,CAACd,KAAKO,uBAAuBM;YAClD;QACF,OAAO;YACLf,aAAaiB,GAAG,CAACf,KAAKO,uBAAuBN;QAC/C;IACF;IACA,OAAOH;AACT;AAEO,SAASH,OACdqB,MAAuB,EACvB,GAAGC,gBAAmC;IAEtC,KAAK,MAAMnB,gBAAgBmB,iBAAkB;QAC3C,KAAK,MAAMjB,OAAOF,aAAaoB,IAAI,GAAI;YACrCF,OAAOG,MAAM,CAACnB;QAChB;QAEA,KAAK,MAAM,CAACA,KAAKC,MAAM,IAAIH,aAAaI,OAAO,GAAI;YACjDc,OAAOF,MAAM,CAACd,KAAKC;QACrB;IACF;IAEA,OAAOe;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/format-url.ts"],"sourcesContent":["// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n"],"names":["formatUrl","formatWithValidation","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","pathname","hash","query","host","encodeURIComponent","replace","indexOf","port","String","querystring","urlQueryToSearchParams","search","endsWith","slashes","test","url","process","env","NODE_ENV","Object","keys","forEach","key","includes","console","warn"],"mappings":"AAAA,uCAAuC;AACvC,sDAAsD;AACtD,EAAE;AACF,0EAA0E;AAC1E,gEAAgE;AAChE,sEAAsE;AACtE,sEAAsE;AACtE,4EAA4E;AAC5E,qEAAqE;AACrE,wBAAwB;AACxB,EAAE;AACF,0EAA0E;AAC1E,yDAAyD;AACzD,EAAE;AACF,0EAA0E;AAC1E,6DAA6D;AAC7D,4EAA4E;AAC5E,2EAA2E;AAC3E,wEAAwE;AACxE,4EAA4E;AAC5E,yCAAyC;;;;;;;;;;;;;;;;IAQzBA,SAAS,EAAA;eAATA;;IA6DAC,oBAAoB,EAAA;eAApBA;;IAfHC,aAAa,EAAA;eAAbA;;;;uEAlDgB;AAE7B,MAAMC,mBAAmB;AAElB,SAASH,UAAUI,MAAiB;IACzC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGF;IACzB,IAAIG,WAAWH,OAAOG,QAAQ,IAAI;IAClC,IAAIC,WAAWJ,OAAOI,QAAQ,IAAI;IAClC,IAAIC,OAAOL,OAAOK,IAAI,IAAI;IAC1B,IAAIC,QAAQN,OAAOM,KAAK,IAAI;IAC5B,IAAIC,OAAuB;IAE3BN,OAAOA,OAAOO,mBAAmBP,MAAMQ,OAAO,CAAC,QAAQ,OAAO,MAAM;IAEpE,IAAIT,OAAOO,IAAI,EAAE;QACfA,OAAON,OAAOD,OAAOO,IAAI;IAC3B,OAAO,IAAIL,UAAU;QACnBK,OAAON,OAAQ,CAAA,CAACC,SAASQ,OAAO,CAAC,OAAO,CAAC,CAAC,EAAER,SAAS,CAAC,CAAC,GAAGA,QAAO;QACjE,IAAIF,OAAOW,IAAI,EAAE;YACfJ,QAAQ,MAAMP,OAAOW,IAAI;QAC3B;IACF;IAEA,IAAIL,SAAS,OAAOA,UAAU,UAAU;QACtCA,QAAQM,OAAOC,aAAYC,sBAAsB,CAACR;IACpD;IAEA,IAAIS,SAASf,OAAOe,MAAM,IAAKT,SAAS,CAAC,CAAC,EAAEA,OAAO,IAAK;IAExD,IAAIH,YAAY,CAACA,SAASa,QAAQ,CAAC,MAAMb,YAAY;IAErD,IACEH,OAAOiB,OAAO,IACZ,CAAA,CAACd,YAAYJ,iBAAiBmB,IAAI,CAACf,SAAQ,KAAMI,SAAS,OAC5D;QACAA,OAAO,OAAQA,CAAAA,QAAQ,EAAC;QACxB,IAAIH,YAAYA,QAAQ,CAAC,EAAE,KAAK,KAAKA,WAAW,MAAMA;IACxD,OAAO,IAAI,CAACG,MAAM;QAChBA,OAAO;IACT;IAEA,IAAIF,QAAQA,IAAI,CAAC,EAAE,KAAK,KAAKA,OAAO,MAAMA;IAC1C,IAAIU,UAAUA,MAAM,CAAC,EAAE,KAAK,KAAKA,SAAS,MAAMA;IAEhDX,WAAWA,SAASK,OAAO,CAAC,SAASD;IACrCO,SAASA,OAAON,OAAO,CAAC,KAAK;IAE7B,OAAO,GAAGN,WAAWI,OAAOH,WAAWW,SAASV,MAAM;AACxD;AAEO,MAAMP,gBAAgB;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,SAASD,qBAAqBsB,GAAc;IACjD,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAe;QAC1C,IAAIH,QAAQ,QAAQ,OAAOA,QAAQ,UAAU;YAC3CI,OAAOC,IAAI,CAACL,KAAKM,OAAO,CAAC,CAACC;gBACxB,IAAI,CAAC5B,cAAc6B,QAAQ,CAACD,MAAM;oBAChCE,QAAQC,IAAI,CACV,CAAC,kDAAkD,EAAEH,KAAK;gBAE9D;YACF;QACF;IACF;IAEA,OAAO9B,UAAUuB;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n"],"names":["module","exports","require","vendored","AppRouterContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,WAAW,CAACC,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/use-merged-ref.ts"],"sourcesContent":["import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (previously via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n"],"names":["useMergedRef","refA","refB","cleanupA","useRef","cleanupB","useCallback","current","cleanupFnA","cleanupFnB","applyRef","cleanup"],"mappings":";;;+BASgBA,gBAAAA;;;eAAAA;;;uBAT8B;AASvC,SAASA,aACdC,IAAmB,EACnBC,IAAmB;IAEnB,MAAMC,WAAWC,CAAAA,GAAAA,OAAAA,MAAM,EAAsB;IAC7C,MAAMC,WAAWD,CAAAA,GAAAA,OAAAA,MAAM,EAAsB;IAE7C,mFAAmF;IACnF,yEAAyE;IACzE,uGAAuG;IACvG,8FAA8F;IAC9F,gDAAgD;IAChD,mGAAmG;IACnG,wFAAwF;IACxF,OAAOE,CAAAA,GAAAA,OAAAA,WAAW,EAChB,CAACC;QACC,IAAIA,YAAY,MAAM;YACpB,MAAMC,aAAaL,SAASI,OAAO;YACnC,IAAIC,YAAY;gBACdL,SAASI,OAAO,GAAG;gBACnBC;YACF;YACA,MAAMC,aAAaJ,SAASE,OAAO;YACnC,IAAIE,YAAY;gBACdJ,SAASE,OAAO,GAAG;gBACnBE;YACF;QACF,OAAO;YACL,IAAIR,MAAM;gBACRE,SAASI,OAAO,GAAGG,SAAST,MAAMM;YACpC;YACA,IAAIL,MAAM;gBACRG,SAASE,OAAO,GAAGG,SAASR,MAAMK;YACpC;QACF;IACF,GACA;QAACN;QAAMC;KAAK;AAEhB;AAEA,SAASQ,SACPT,IAAgC,EAChCM,OAAiB;IAEjB,IAAI,OAAON,SAAS,YAAY;QAC9B,MAAMU,UAAUV,KAAKM;QACrB,IAAI,OAAOI,YAAY,YAAY;YACjC,OAAOA;QACT,OAAO;YACL,OAAO,IAAMV,KAAK;QACpB;IACF,OAAO;QACLA,KAAKM,OAAO,GAAGA;QACf,OAAO;YACLN,KAAKM,OAAO,GAAG;QACjB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/utils.ts"],"sourcesContent":["import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n"],"names":["DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getLocationOrigin","getURL","isAbsoluteUrl","isResSent","loadGetInitialProps","normalizeRepeatedSlashes","stringifyError","fn","used","result","args","ABSOLUTE_URL_REGEX","url","test","protocol","hostname","port","window","location","href","origin","substring","length","Component","displayName","name","res","finished","headersSent","urlParts","split","urlNoQuery","replace","slice","join","App","ctx","process","env","NODE_ENV","prototype","getInitialProps","message","Error","pageProps","props","Object","keys","console","warn","performance","every","method","constructor","page","code","error","JSON","stringify","stack"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/parse-path.ts"],"sourcesContent":["/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n"],"names":["parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","substring","query","undefined","hash","slice"],"mappings":"AAAA;;;;CAIC;;;+BACeA,aAAAA;;;eAAAA;;;AAAT,SAASA,UAAUC,IAAY;IACpC,MAAMC,YAAYD,KAAKE,OAAO,CAAC;IAC/B,MAAMC,aAAaH,KAAKE,OAAO,CAAC;IAChC,MAAME,WAAWD,aAAa,CAAC,KAAMF,CAAAA,YAAY,KAAKE,aAAaF,SAAQ;IAE3E,IAAIG,YAAYH,YAAY,CAAC,GAAG;QAC9B,OAAO;YACLI,UAAUL,KAAKM,SAAS,CAAC,GAAGF,WAAWD,aAAaF;YACpDM,OAAOH,WACHJ,KAAKM,SAAS,CAACH,YAAYF,YAAY,CAAC,IAAIA,YAAYO,aACxD;YACJC,MAAMR,YAAY,CAAC,IAAID,KAAKU,KAAK,CAACT,aAAa;QACjD;IACF;IAEA,OAAO;QAAEI,UAAUL;QAAMO,OAAO;QAAIE,MAAM;IAAG;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/add-path-prefix.ts"],"sourcesContent":["import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n"],"names":["addPathPrefix","path","prefix","startsWith","pathname","query","hash","parsePath"],"mappings":";;;+BAMgBA,iBAAAA;;;eAAAA;;;2BANU;AAMnB,SAASA,cAAcC,IAAY,EAAEC,MAAe;IACzD,IAAI,CAACD,KAAKE,UAAU,CAAC,QAAQ,CAACD,QAAQ;QACpC,OAAOD;IACT;IAEA,MAAM,EAAEG,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAGC,CAAAA,GAAAA,WAAAA,SAAS,EAACN;IAC5C,OAAO,GAAGC,SAASE,WAAWC,QAAQC,MAAM;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/remove-trailing-slash.ts"],"sourcesContent":["/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n"],"names":["removeTrailingSlash","route","replace"],"mappings":"AAAA;;;;;;CAMC;;;+BACeA,uBAAAA;;;eAAAA;;;AAAT,SAASA,oBAAoBC,KAAa;IAC/C,OAAOA,MAAMC,OAAO,CAAC,OAAO,OAAO;AACrC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/normalize-trailing-slash.ts"],"sourcesContent":["import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n"],"names":["normalizePathTrailingSlash","path","startsWith","process","env","__NEXT_MANUAL_TRAILING_SLASH","pathname","query","hash","parsePath","__NEXT_TRAILING_SLASH","test","removeTrailingSlash","endsWith"],"mappings":";;;+BAOaA,8BAAAA;;;eAAAA;;;qCAPuB;2BACV;AAMnB,MAAMA,6BAA6B,CAACC;IACzC,IAAI,CAACA,KAAKC,UAAU,CAAC,QAAQC,QAAQC,GAAG,CAACC,4BAA4B,EAAE;QACrE,OAAOJ;IACT;IAEA,MAAM,EAAEK,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAGC,CAAAA,GAAAA,WAAAA,SAAS,EAACR;IAC5C,IAAIE,QAAQC,GAAG,CAACM,qBAAqB,EAAE;;IAUvC,OAAO,GAAGE,CAAAA,GAAAA,qBAAAA,mBAAmB,EAACN,YAAYC,QAAQC,MAAM;AAC1D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/add-base-path.ts"],"sourcesContent":["import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n"],"names":["addBasePath","basePath","process","env","__NEXT_ROUTER_BASEPATH","path","required","normalizePathTrailingSlash","__NEXT_MANUAL_CLIENT_BASE_PATH","addPathPrefix"],"mappings":";;;+BAKgBA,eAAAA;;;eAAAA;;;+BALc;wCACa;AAE3C,MAAMC,WAAYC,QAAQC,GAAG,CAACC,sBAAsB,MAAe;AAE5D,SAASJ,YAAYK,IAAY,EAAEC,QAAkB;IAC1D,OAAOC,CAAAA,GAAAA,wBAAAA,0BAA0B,EAC/BL,QAAQC,GAAG,CAACK,0BACRH,IADsC,IAAI,CAACC,iBAE3CG,CAAAA,GAAAA,eAAAA,aAAa,EAACJ,MAAMJ;AAE5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/utils/warn-once.ts"],"sourcesContent":["let warnOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const warnings = new Set<string>()\n  warnOnce = (msg: string) => {\n    if (!warnings.has(msg)) {\n      console.warn(msg)\n    }\n    warnings.add(msg)\n  }\n}\n\nexport { warnOnce }\n"],"names":["warnOnce","_","process","env","NODE_ENV","warnings","Set","msg","has","console","warn","add"],"mappings":";;;+BAWSA,YAAAA;;;eAAAA;;;AAXT,IAAIA,WAAW,CAACC,KAAe;AAC/B,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAc;IACzC,MAAMC,WAAW,IAAIC;IACrBN,WAAW,CAACO;QACV,IAAI,CAACF,SAASG,GAAG,CAACD,MAAM;YACtBE,QAAQC,IAAI,CAACH;QACf;QACAF,SAASM,GAAG,CAACJ;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/html-bots.ts"],"sourcesContent":["// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n"],"names":["HTML_LIMITED_BOT_UA_RE"],"mappings":"AAAA,6GAA6G;AAC7G,sKAAsK;AACtK,kJAAkJ;AAClJ,iGAAiG;;;;+BACpFA,0BAAAA;;;eAAAA;;;AAAN,MAAMA,yBACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/is-bot.ts"],"sourcesContent":["import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n"],"names":["HTML_LIMITED_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","getBotType","isBot","HEADLESS_BROWSER_BOT_UA_RE","source","isDomBotUA","userAgent","test","isHtmlLimitedBotUA","undefined"],"mappings":";;;;;;;;;;;;;;;;IAUSA,sBAAsB,EAAA;eAAtBA,UAAAA,sBAAsB;;IAFlBC,6BAA6B,EAAA;eAA7BA;;IAgBGC,UAAU,EAAA;eAAVA;;IAJAC,KAAK,EAAA;eAALA;;;0BApBuB;AAEvC,mEAAmE;AACnE,yFAAyF;AACzF,4FAA4F;AAC5F,oGAAoG;AACpG,MAAMC,6BAA6B;AAE5B,MAAMH,gCAAgCD,UAAAA,sBAAsB,CAACK,MAAM;AAI1E,SAASC,WAAWC,SAAiB;IACnC,OAAOH,2BAA2BI,IAAI,CAACD;AACzC;AAEA,SAASE,mBAAmBF,SAAiB;IAC3C,OAAOP,UAAAA,sBAAsB,CAACQ,IAAI,CAACD;AACrC;AAEO,SAASJ,MAAMI,SAAiB;IACrC,OAAOD,WAAWC,cAAcE,mBAAmBF;AACrD;AAEO,SAASL,WAAWK,SAAiB;IAC1C,IAAID,WAAWC,YAAY;QACzB,OAAO;IACT;IACA,IAAIE,mBAAmBF,YAAY;QACjC,OAAO;IACT;IACA,OAAOG;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/app-router-utils.ts"],"sourcesContent":["import { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addBasePath } from '../add-base-path'\n\nexport function isExternalURL(url: URL) {\n  return url.origin !== window.location.origin\n}\n\n/**\n * Given a link href, constructs the URL that should be prefetched. Returns null\n * in cases where prefetching should be disabled, like external URLs, or\n * during development.\n * @param href The href passed to <Link>, router.prefetch(), or similar\n * @returns A URL object to prefetch, or null if prefetching should be disabled\n */\nexport function createPrefetchURL(href: string): URL | null {\n  // Don't prefetch for bots as they don't navigate.\n  if (isBot(window.navigator.userAgent)) {\n    return null\n  }\n\n  let url: URL\n  try {\n    url = new URL(addBasePath(href), window.location.href)\n  } catch (_) {\n    // TODO: Does this need to throw or can we just console.error instead? Does\n    // anyone rely on this throwing? (Seems unlikely.)\n    throw new Error(\n      `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n    )\n  }\n\n  // Don't prefetch during development (improves compilation performance)\n  if (process.env.NODE_ENV === 'development') {\n    return null\n  }\n\n  // External urls can't be prefetched in the same way.\n  if (isExternalURL(url)) {\n    return null\n  }\n\n  return url\n}\n"],"names":["createPrefetchURL","isExternalURL","url","origin","window","location","href","isBot","navigator","userAgent","URL","addBasePath","_","Error","process","env","NODE_ENV"],"mappings":";;;;;;;;;;;;;;IAcgBA,iBAAiB,EAAA;eAAjBA;;IAXAC,aAAa,EAAA;eAAbA;;;uBAHM;6BACM;AAErB,SAASA,cAAcC,GAAQ;IACpC,OAAOA,IAAIC,MAAM,KAAKC,OAAOC,QAAQ,CAACF,MAAM;AAC9C;AASO,SAASH,kBAAkBM,IAAY;IAC5C,kDAAkD;IAClD,IAAIC,CAAAA,GAAAA,OAAAA,KAAK,EAACH,OAAOI,SAAS,CAACC,SAAS,GAAG;QACrC,OAAO;IACT;IAEA,IAAIP;IACJ,IAAI;QACFA,MAAM,IAAIQ,IAAIC,CAAAA,GAAAA,aAAAA,WAAW,EAACL,OAAOF,OAAOC,QAAQ,CAACC,IAAI;IACvD,EAAE,OAAOM,GAAG;QACV,2EAA2E;QAC3E,kDAAkD;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,CAAC,iBAAiB,EAAEP,KAAK,0CAA0C,CAAC,GADhE,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,uEAAuE;IACvE,IAAIQ,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAe;QAC1C,OAAO;IACT;;;AAQF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/cache-key.ts"],"sourcesContent":["// TypeScript trick to simulate opaque types, like in Flow.\ntype Opaque<K, T> = T & { __brand: K }\n\n// Only functions in this module should be allowed to create CacheKeys.\nexport type NormalizedHref = Opaque<'NormalizedHref', string>\nexport type NormalizedSearch = Opaque<'NormalizedSearch', string>\nexport type NormalizedNextUrl = Opaque<'NormalizedNextUrl', string>\n\nexport type RouteCacheKey = Opaque<\n  'RouteCacheKey',\n  {\n    href: NormalizedHref\n    search: NormalizedSearch\n    nextUrl: NormalizedNextUrl | null\n\n    // TODO: Eventually the dynamic params will be added here, too.\n  }\n>\n\nexport function createCacheKey(\n  originalHref: string,\n  nextUrl: string | null\n): RouteCacheKey {\n  // TODO: We should remove the hash from the href and track that separately.\n  // There's no reason to vary route entries by hash.\n  const originalUrl = new URL(originalHref)\n  const cacheKey = {\n    href: originalHref as NormalizedHref,\n    search: originalUrl.search as NormalizedSearch,\n    nextUrl: nextUrl as NormalizedNextUrl | null,\n  } as RouteCacheKey\n  return cacheKey\n}\n"],"names":["createCacheKey","originalHref","nextUrl","originalUrl","URL","cacheKey","href","search"],"mappings":"AAAA,2DAA2D;;;;+BAmB3CA,kBAAAA;;;eAAAA;;;AAAT,SAASA,eACdC,YAAoB,EACpBC,OAAsB;IAEtB,2EAA2E;IAC3E,mDAAmD;IACnD,MAAMC,cAAc,IAAIC,IAAIH;IAC5B,MAAMI,WAAW;QACfC,MAAML;QACNM,QAAQJ,YAAYI,MAAM;QAC1BL,SAASA;IACX;IACA,OAAOG;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 846, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/app-router-types.ts"],"sourcesContent":["/**\n * App Router types - Client-safe types for the Next.js App Router\n *\n * This file contains type definitions that can be safely imported\n * by both client-side and server-side code without circular dependencies.\n */\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type React from 'react'\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\n/** viewport metadata node */\nexport type HeadData = React.ReactNode\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  /**\n   * The timestamp of the navigation that last updated the CacheNode's data. If\n   * a CacheNode is reused from a previous navigation, this value is not\n   * updated. Used to track the staleness of the data.\n   */\n  navigatedAt: number\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  navigatedAt: number\n}\n\nexport type DynamicParamTypes =\n  | 'catchall'\n  | 'catchall-intercepted'\n  | 'optional-catchall'\n  | 'dynamic'\n  | 'dynamic-intercepted'\n\nexport type DynamicParamTypesShort = 'c' | 'ci' | 'oc' | 'd' | 'di'\n\nexport type Segment =\n  | string\n  | [\n      // Param name\n      paramName: string,\n      // Param cache key (almost the same as the value, but arrays are\n      // concatenated into strings)\n      // TODO: We should change this to just be the value. Currently we convert\n      // it back to a value when passing to useParams. It only needs to be\n      // a string when converted to a a cache key, but that doesn't mean we\n      // need to store it as that representation.\n      paramCacheKey: string,\n      // Dynamic param type\n      dynamicParamType: DynamicParamTypesShort,\n    ]\n\n/**\n * Router state\n */\nexport type FlightRouterState = [\n  segment: Segment,\n  parallelRoutes: { [parallelRouterKey: string]: FlightRouterState },\n  url?: string | null,\n  /**\n   * \"refresh\" and \"refetch\", despite being similarly named, have different\n   * semantics:\n   * - \"refetch\" is used during a request to inform the server where rendering\n   *   should start from.\n   *\n   * - \"refresh\" is used by the client to mark that a segment should re-fetch the\n   *   data from the server for the current segment. It uses the \"url\" property\n   *   above to determine where to fetch from.\n   *\n   * - \"inside-shared-layout\" is used during a prefetch request to inform the\n   *   server that even if the segment matches, it should be treated as if it's\n   *   within the \"new\" part of a navigation — inside the shared layout. If\n   *   the segment doesn't match, then it has no effect, since it would be\n   *   treated as new regardless. If it does match, though, the server does not\n   *   need to render it, because the client already has it.\n   *\n   * - \"metadata-only\" instructs the server to skip rendering the segments and\n   *   only send the head data.\n   *\n   *   A bit confusing, but that's because it has only one extremely narrow use\n   *   case — during a non-PPR prefetch, the server uses it to find the first\n   *   loading boundary beneath a shared layout.\n   *\n   *   TODO: We should rethink the protocol for dynamic requests. It might not\n   *   make sense for the client to send a FlightRouterState, since this type is\n   *   overloaded with concerns.\n   */\n  refresh?:\n    | 'refetch'\n    | 'refresh'\n    | 'inside-shared-layout'\n    | 'metadata-only'\n    | null,\n  isRootLayout?: boolean,\n  /**\n   * Only present when responding to a tree prefetch request. Indicates whether\n   * there is a loading boundary somewhere in the tree. The client cache uses\n   * this to determine if it can skip the data prefetch request.\n   */\n  hasLoadingBoundary?: HasLoadingBoundary,\n]\n\nexport const enum HasLoadingBoundary {\n  // There is a loading boundary in this particular segment\n  SegmentHasLoadingBoundary = 1,\n  // There is a loading boundary somewhere in the subtree (but not in\n  // this segment)\n  SubtreeHasLoadingBoundary = 2,\n  // There is no loading boundary in this segment or any of its descendants\n  SubtreeHasNoLoadingBoundary = 3,\n}\n\n/**\n * Individual Flight response path\n */\nexport type FlightSegmentPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n    ]\n\n/**\n * Represents a tree of segments and the Flight data (i.e. React nodes) that\n * correspond to each one. The tree is isomorphic to the FlightRouterState;\n * however in the future we want to be able to fetch arbitrary partial segments\n * without having to fetch all its children. So this response format will\n * likely change.\n */\nexport type CacheNodeSeedData = [\n  node: React.ReactNode | null,\n  parallelRoutes: {\n    [parallelRouterKey: string]: CacheNodeSeedData | null\n  },\n  loading: LoadingModuleData | Promise<LoadingModuleData>,\n  isPartial: boolean,\n  /** TODO: this doesn't feel like it belongs here, because it's only used during build, in `collectSegmentData` */\n  hasRuntimePrefetch: boolean,\n]\n\nexport type FlightDataSegment = [\n  /* segment of the rendered slice: */ Segment,\n  /* treePatch */ FlightRouterState,\n  /* cacheNodeSeedData */ CacheNodeSeedData | null, // Can be null during prefetch if there's no loading component\n  /* head: viewport */ HeadData,\n  /* isHeadPartial */ boolean,\n]\n\nexport type FlightDataPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      // Holds full path to the segment.\n      ...FlightSegmentPath[],\n      ...FlightDataSegment,\n    ]\n\n/**\n * The Flight response data\n */\nexport type FlightData = Array<FlightDataPath> | string\n\nexport type ActionResult = Promise<any>\n\nexport type InitialRSCPayload = {\n  /** buildId */\n  b: string\n  /** initialCanonicalUrlParts */\n  c: string[]\n  /** initialRenderedSearch */\n  q: string\n  /** couldBeIntercepted */\n  i: boolean\n  /** initialFlightData */\n  f: FlightDataPath[]\n  /** missingSlots */\n  m: Set<string> | undefined\n  /** GlobalError */\n  G: [React.ComponentType<any>, React.ReactNode | undefined]\n  /** postponed */\n  s: boolean\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for normal rendering\nexport type NavigationFlightResponse = {\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for server actions. Action's flight data can be null\nexport type ActionFlightResponse = {\n  /** actionResult */\n  a: ActionResult\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n}\n\nexport type RSCPayload =\n  | InitialRSCPayload\n  | NavigationFlightResponse\n  | ActionFlightResponse\n"],"names":["HasLoadingBoundary"],"mappings":"AAAA;;;;;CAKC;;;+BAwLiBA,sBAAAA;;;eAAAA;;;AAAX,IAAWA,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;IAChB,yDAAyD;;IAEzD,mEAAmE;IACnE,gBAAgB;;IAEhB,yEAAyE;;WANzDA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/match-segments.ts"],"sourcesContent":["import type { Segment } from '../../shared/lib/app-router-types'\n\nexport const matchSegment = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  // segment is either Array or string\n  if (typeof existingSegment === 'string') {\n    if (typeof segment === 'string') {\n      // Common case: segment is just a string\n      return existingSegment === segment\n    }\n    return false\n  }\n\n  if (typeof segment === 'string') {\n    return false\n  }\n  return existingSegment[0] === segment[0] && existingSegment[1] === segment[1]\n}\n"],"names":["matchSegment","existingSegment","segment"],"mappings":";;;+BAEaA,gBAAAA;;;eAAAA;;;AAAN,MAAMA,eAAe,CAC1BC,iBACAC;IAEA,oCAAoC;IACpC,IAAI,OAAOD,oBAAoB,UAAU;QACvC,IAAI,OAAOC,YAAY,UAAU;YAC/B,wCAAwC;YACxC,OAAOD,oBAAoBC;QAC7B;QACA,OAAO;IACT;IAEA,IAAI,OAAOA,YAAY,UAAU;QAC/B,OAAO;IACT;IACA,OAAOD,eAAe,CAAC,EAAE,KAAKC,OAAO,CAAC,EAAE,IAAID,eAAe,CAAC,EAAE,KAAKC,OAAO,CAAC,EAAE;AAC/E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/app-router-headers.ts"],"sourcesContent":["export const RSC_HEADER = 'rsc' as const\nexport const ACTION_HEADER = 'next-action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'next-router-state-tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'next-router-prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change next-router-state-tree to be a segment path, we can use\n// that instead. Then next-router-prefetch and next-router-segment-prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'next-router-segment-prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'next-hmr-refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'next-url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found' as const\nexport const NEXT_REQUEST_ID_HEADER = 'x-nextjs-request-id' as const\nexport const NEXT_HTML_REQUEST_ID_HEADER = 'x-nextjs-html-request-id' as const\n"],"names":["ACTION_HEADER","FLIGHT_HEADERS","NEXT_ACTION_NOT_FOUND_HEADER","NEXT_DID_POSTPONE_HEADER","NEXT_HMR_REFRESH_HASH_COOKIE","NEXT_HMR_REFRESH_HEADER","NEXT_HTML_REQUEST_ID_HEADER","NEXT_IS_PRERENDER_HEADER","NEXT_REQUEST_ID_HEADER","NEXT_REWRITTEN_PATH_HEADER","NEXT_REWRITTEN_QUERY_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_ROUTER_STALE_TIME_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_RSC_UNION_QUERY","NEXT_URL","RSC_CONTENT_TYPE_HEADER","RSC_HEADER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACaA,aAAa,EAAA;eAAbA;;IAiBAC,cAAc,EAAA;eAAdA;;IAeAC,4BAA4B,EAAA;eAA5BA;;IAJAC,wBAAwB,EAAA;eAAxBA;;IAfAC,4BAA4B,EAAA;eAA5BA;;IADAC,uBAAuB,EAAA;eAAvBA;;IAsBAC,2BAA2B,EAAA;eAA3BA;;IAHAC,wBAAwB,EAAA;eAAxBA;;IAEAC,sBAAsB,EAAA;eAAtBA;;IAJAC,0BAA0B,EAAA;eAA1BA;;IACAC,2BAA2B,EAAA;eAA3BA;;IAzBAC,2BAA2B,EAAA;eAA3BA;;IAKAC,mCAAmC,EAAA;eAAnCA;;IAiBAC,6BAA6B,EAAA;eAA7BA;;IAvBAC,6BAA6B,EAAA;eAA7BA;;IAqBAC,oBAAoB,EAAA;eAApBA;;IAXAC,QAAQ,EAAA;eAARA;;IACAC,uBAAuB,EAAA;eAAvBA;;IAhBAC,UAAU,EAAA;eAAVA;;;AAAN,MAAMA,aAAa;AACnB,MAAMlB,gBAAgB;AAItB,MAAMc,gCAAgC;AACtC,MAAMH,8BAA8B;AAKpC,MAAMC,sCACX;AACK,MAAMP,0BAA0B;AAChC,MAAMD,+BAA+B;AACrC,MAAMY,WAAW;AACjB,MAAMC,0BAA0B;AAEhC,MAAMhB,iBAAiB;IAC5BiB;IACAJ;IACAH;IACAN;IACAO;CACD;AAEM,MAAMG,uBAAuB;AAE7B,MAAMF,gCAAgC;AACtC,MAAMV,2BAA2B;AACjC,MAAMM,6BAA6B;AACnC,MAAMC,8BAA8B;AACpC,MAAMH,2BAA2B;AACjC,MAAML,+BAA+B;AACrC,MAAMM,yBAAyB;AAC/B,MAAMF,8BAA8B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactServerDOMTurbopackClient\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClient"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/router-reducer-types.ts"],"sourcesContent":["import type { CacheNode } from '../../../shared/lib/app-router-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../shared/lib/app-router-types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  navigatedAt,\n  previousTree,\n  serverResponse,\n}: {\n  navigatedAt: number\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  renderedSearch?: string\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n  collectedDebugInfo?: Array<unknown>\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n  didRevalidate?: boolean\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  historyState: AppHistoryState | undefined\n}\n\nexport type AppHistoryState = {\n  tree: FlightRouterState\n  renderedSearch: string\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  navigatedAt: number\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   */\n  cache: CacheNode\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  renderedSearch: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n\n  /**\n   * The previous next-url that was used previous to a dynamic navigation.\n   */\n  previousNextUrl: string | null\n\n  debugInfo: Array<unknown> | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState =\n  | (Promise<AppRouterState> & { _debugInfo?: Array<unknown> })\n  | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n"],"names":["ACTION_HMR_REFRESH","ACTION_NAVIGATE","ACTION_REFRESH","ACTION_RESTORE","ACTION_SERVER_ACTION","ACTION_SERVER_PATCH","PrefetchKind"],"mappings":";;;;;;;;;;;;;;;;;;;IAWaA,kBAAkB,EAAA;eAAlBA;;IAHAC,eAAe,EAAA;eAAfA;;IADAC,cAAc,EAAA;eAAdA;;IAEAC,cAAc,EAAA;eAAdA;;IAGAC,oBAAoB,EAAA;eAApBA;;IAFAC,mBAAmB,EAAA;eAAnBA;;IA8IDC,YAAY,EAAA;eAAZA;;;AAjJL,MAAMJ,iBAAiB;AACvB,MAAMD,kBAAkB;AACxB,MAAME,iBAAiB;AACvB,MAAME,sBAAsB;AAC5B,MAAML,qBAAqB;AAC3B,MAAMI,uBAAuB;AA4I7B,IAAKE,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1102, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/is-thenable.ts"],"sourcesContent":["/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n"],"names":["isThenable","promise","then"],"mappings":"AAAA;;;;;CAKC;;;+BACeA,cAAAA;;;eAAAA;;;AAAT,SAASA,WACdC,OAAuB;IAEvB,OACEA,YAAY,QACZ,OAAOA,YAAY,YACnB,UAAUA,WACV,OAAOA,QAAQC,IAAI,KAAK;AAE5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/next-devtools/dev-overlay.shim.ts"],"sourcesContent":["export function renderAppDevOverlay() {\n  throw new Error(\n    \"Next DevTools: Can't render in this environment. This is a bug in Next.js\"\n  )\n}\n\nexport function renderPagesDevOverlay() {\n  throw new Error(\n    \"Next DevTools: Can't render in this environment. This is a bug in Next.js\"\n  )\n}\n\n// TODO: Extract into separate functions that are imported\nexport const dispatcher = new Proxy(\n  {},\n  {\n    get: (_, prop) => {\n      return () => {\n        throw new Error(\n          `Next DevTools: Can't dispatch ${String(prop)} in this environment. This is a bug in Next.js`\n        )\n      }\n    },\n  }\n)\n"],"names":["dispatcher","renderAppDevOverlay","renderPagesDevOverlay","Error","Proxy","get","_","prop","String"],"mappings":";;;;;;;;;;;;;;;IAaaA,UAAU,EAAA;eAAVA;;IAbGC,mBAAmB,EAAA;eAAnBA;;IAMAC,qBAAqB,EAAA;eAArBA;;;AANT,SAASD;IACd,MAAM,OAAA,cAEL,CAFK,IAAIE,MACR,8EADI,qBAAA;eAAA;oBAAA;sBAAA;IAEN;AACF;AAEO,SAASD;IACd,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,8EADI,qBAAA;eAAA;oBAAA;sBAAA;IAEN;AACF;AAGO,MAAMH,aAAa,IAAII,MAC5B,CAAC,GACD;IACEC,KAAK,CAACC,GAAGC;QACP,OAAO;YACL,MAAM,OAAA,cAEL,CAFK,IAAIJ,MACR,CAAC,8BAA8B,EAAEK,OAAOD,MAAM,8CAA8C,CAAC,GADzF,qBAAA;uBAAA;4BAAA;8BAAA;YAEN;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/next-devtools/userspace/use-app-dev-rendering-indicator.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useTransition } from 'react'\nimport { dispatcher } from 'next/dist/compiled/next-devtools'\n\nexport const useAppDevRenderingIndicator = () => {\n  const [isPending, startTransition] = useTransition()\n\n  useEffect(() => {\n    if (isPending) {\n      dispatcher.renderingIndicatorShow()\n    } else {\n      dispatcher.renderingIndicatorHide()\n    }\n  }, [isPending])\n\n  return startTransition\n}\n"],"names":["useAppDevRenderingIndicator","isPending","startTransition","useTransition","useEffect","dispatcher","renderingIndicatorShow","renderingIndicatorHide"],"mappings":";;;+BAKaA,+BAAAA;;;eAAAA;;;uBAH4B;8BACd;AAEpB,MAAMA,8BAA8B;IACzC,MAAM,CAACC,WAAWC,gBAAgB,GAAGC,CAAAA,GAAAA,OAAAA,aAAa;IAElDC,CAAAA,GAAAA,OAAAA,SAAS,EAAC;QACR,IAAIH,WAAW;YACbI,cAAAA,UAAU,CAACC,sBAAsB;QACnC,OAAO;YACLD,cAAAA,UAAU,CAACE,sBAAsB;QACnC;IACF,GAAG;QAACN;KAAU;IAEd,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/use-action-queue.ts"],"sourcesContent":["import type { Dispatch } from 'react'\nimport React, { use, useMemo } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from './app-router-instance'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\n// The app router state lives outside of React, so we can import the dispatch\n// method directly wherever we need it, rather than passing it around via props\n// or context.\nlet dispatch: Dispatch<ReducerActions> | null = null\n\nexport function dispatchAppRouterAction(action: ReducerActions) {\n  if (dispatch === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  dispatch(action)\n}\n\nexport function useActionQueue(\n  actionQueue: AppRouterActionQueue\n): AppRouterState {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  // Because of a known issue that requires to decode Flight streams inside the\n  // render phase, we have to be a bit clever and assign the dispatch method to\n  // a module-level variable upon initialization. The useState hook in this\n  // module only exists to synchronize state that lives outside of React.\n  // Ideally, what we'd do instead is pass the state as a prop to root.render;\n  // this is conceptually how we're modeling the app router state, despite the\n  // weird implementation details.\n  if (process.env.NODE_ENV !== 'production') {\n    const { useAppDevRenderingIndicator } =\n      require('../../next-devtools/userspace/use-app-dev-rendering-indicator') as typeof import('../../next-devtools/userspace/use-app-dev-rendering-indicator')\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const appDevRenderingIndicator = useAppDevRenderingIndicator()\n\n    dispatch = (action: ReducerActions) => {\n      appDevRenderingIndicator(() => {\n        actionQueue.dispatch(action, setState)\n      })\n    }\n  } else {\n    dispatch = (action: ReducerActions) =>\n      actionQueue.dispatch(action, setState)\n  }\n\n  // When navigating to a non-prefetched route, then App Router state will be\n  // blocked until the server responds. We need to transfer the `_debugInfo`\n  // from the underlying Flight response onto the top-level promise that is\n  // passed to React (via `use`) so that the latency is accurately represented\n  // in the React DevTools.\n  const stateWithDebugInfo = useMemo(() => {\n    if (isThenable(state)) {\n      const debugInfo: Array<unknown> = []\n      const promiseWithDebugInfo = Promise.resolve(state).then((asyncState) => {\n        if (asyncState.debugInfo !== null) {\n          debugInfo.push(...asyncState.debugInfo)\n        }\n        return asyncState\n      }) as Promise<AppRouterState> & { _debugInfo?: Array<unknown> }\n      promiseWithDebugInfo._debugInfo = debugInfo\n      return promiseWithDebugInfo\n    }\n    return state\n  }, [state])\n\n  return isThenable(stateWithDebugInfo)\n    ? use(stateWithDebugInfo)\n    : stateWithDebugInfo\n}\n"],"names":["dispatchAppRouterAction","useActionQueue","dispatch","action","Error","actionQueue","state","setState","React","useState","process","env","NODE_ENV","useAppDevRenderingIndicator","require","appDevRenderingIndicator","stateWithDebugInfo","useMemo","isThenable","debugInfo","promiseWithDebugInfo","Promise","resolve","then","asyncState","push","_debugInfo","use"],"mappings":";;;;;;;;;;;;;;IAegBA,uBAAuB,EAAA;eAAvBA;;IASAC,cAAc,EAAA;eAAdA;;;;iEAvBoB;4BACT;AAQ3B,6EAA6E;AAC7E,+EAA+E;AAC/E,cAAc;AACd,IAAIC,WAA4C;AAEzC,SAASF,wBAAwBG,MAAsB;IAC5D,IAAID,aAAa,MAAM;QACrB,MAAM,OAAA,cAEL,CAFK,IAAIE,MACR,4EADI,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IACAF,SAASC;AACX;AAEO,SAASF,eACdI,WAAiC;IAEjC,MAAM,CAACC,OAAOC,SAAS,GAAGC,OAAAA,OAAK,CAACC,QAAQ,CAAeJ,YAAYC,KAAK;IAExE,6EAA6E;IAC7E,6EAA6E;IAC7E,yEAAyE;IACzE,uEAAuE;IACvE,4EAA4E;IAC5E,4EAA4E;IAC5E,gCAAgC;IAChC,IAAII,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAc;QACzC,MAAM,EAAEC,2BAA2B,EAAE,GACnCC,QAAQ;QACV,sDAAsD;QACtD,MAAMC,2BAA2BF;QAEjCX,WAAW,CAACC;YACVY,yBAAyB;gBACvBV,YAAYH,QAAQ,CAACC,QAAQI;YAC/B;QACF;IACF,OAAO;;IAKP,2EAA2E;IAC3E,0EAA0E;IAC1E,yEAAyE;IACzE,4EAA4E;IAC5E,yBAAyB;IACzB,MAAMS,qBAAqBC,CAAAA,GAAAA,OAAAA,OAAO,EAAC;QACjC,IAAIC,CAAAA,GAAAA,YAAAA,UAAU,EAACZ,QAAQ;YACrB,MAAMa,YAA4B,EAAE;YACpC,MAAMC,uBAAuBC,QAAQC,OAAO,CAAChB,OAAOiB,IAAI,CAAC,CAACC;gBACxD,IAAIA,WAAWL,SAAS,KAAK,MAAM;oBACjCA,UAAUM,IAAI,IAAID,WAAWL,SAAS;gBACxC;gBACA,OAAOK;YACT;YACAJ,qBAAqBM,UAAU,GAAGP;YAClC,OAAOC;QACT;QACA,OAAOd;IACT,GAAG;QAACA;KAAM;IAEV,OAAOY,CAAAA,GAAAA,YAAAA,UAAU,EAACF,sBACdW,CAAAA,GAAAA,OAAAA,GAAG,EAACX,sBACJA;AACN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/app-call-server.ts"],"sourcesContent":["import { startTransition } from 'react'\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types'\nimport { dispatchAppRouterAction } from './components/use-action-queue'\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  return new Promise((resolve, reject) => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_SERVER_ACTION,\n        actionId,\n        actionArgs,\n        resolve,\n        reject,\n      })\n    })\n  })\n}\n"],"names":["callServer","actionId","actionArgs","Promise","resolve","reject","startTransition","dispatchAppRouterAction","type","ACTION_SERVER_ACTION"],"mappings":";;;+BAIsBA,cAAAA;;;eAAAA;;;uBAJU;oCACK;gCACG;AAEjC,eAAeA,WAAWC,QAAgB,EAAEC,UAAiB;IAClE,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3BC,CAAAA,GAAAA,OAAAA,eAAe,EAAC;YACdC,CAAAA,GAAAA,gBAAAA,uBAAuB,EAAC;gBACtBC,MAAMC,oBAAAA,oBAAoB;gBAC1BR;gBACAC;gBACAE;gBACAC;YACF;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["findSourceMapURL","basePath","process","env","__NEXT_ROUTER_BASEPATH","pathname","NODE_ENV","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":";;;+BAGaA,oBAAAA;;;eAAAA;;;AAHb,MAAMC,WAAWC,QAAQC,GAAG,CAACC,sBAAsB,MAAI;AACvD,MAAMC,WAAW,GAAGJ,SAAS,oBAAoB,CAAC;AAE3C,MAAMD,mBACXE,QAAQC,GAAG,CAACG,QAAQ,KAAK,cACrB,SAASN,iBAAiBO,QAAgB;IACxC,IAAIA,aAAa,IAAI;QACnB,OAAO;IACT;IAEA,IACEA,SAASC,UAAU,CAACC,SAASC,QAAQ,CAACC,MAAM,KAC5CJ,SAASK,QAAQ,CAAC,kBAClB;QACA,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAO,GAAGL,SAAS,IAAI,CAAC;IAC1B;IAEA,MAAMM,MAAM,IAAIC,IAAIT,UAAUI,SAASC,QAAQ,CAACC,MAAM;IACtDE,IAAIE,YAAY,CAACC,GAAG,CAAC,YAAYT;IAEjC,OAAOM,IAAII,IAAI;AACjB,IACAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/segment.ts"],"sourcesContent":["import type { FlightRouterState, Segment } from './app-router-types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport function computeSelectedLayoutSegment(\n  segments: string[] | null,\n  parallelRouteKey: string\n): string | null {\n  if (!segments || segments.length === 0) {\n    return null\n  }\n\n  // For 'children', use first segment; for other parallel routes, use last segment\n  const rawSegment =\n    parallelRouteKey === 'children'\n      ? segments[0]\n      : segments[segments.length - 1]\n\n  // If the default slot is showing, return null since it's not technically \"selected\" (it's a fallback)\n  // Returning an internal value like `__DEFAULT__` would be confusing\n  return rawSegment === DEFAULT_SEGMENT_KEY ? null : rawSegment\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\nexport function getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n"],"names":["DEFAULT_SEGMENT_KEY","PAGE_SEGMENT_KEY","addSearchParamsIfPageSegment","computeSelectedLayoutSegment","getSegmentValue","getSelectedLayoutSegmentPath","isGroupSegment","isParallelRouteSegment","segment","Array","isArray","endsWith","startsWith","searchParams","isPageSegment","includes","stringifiedQuery","JSON","stringify","segments","parallelRouteKey","length","rawSegment","tree","first","segmentPath","node","parallelRoutes","children","Object","values","segmentValue","push"],"mappings":";;;;;;;;;;;;;;;;;;;;IAuFaA,mBAAmB,EAAA;eAAnBA;;IADAC,gBAAgB,EAAA;eAAhBA;;IAvEGC,4BAA4B,EAAA;eAA5BA;;IAgBAC,4BAA4B,EAAA;eAA5BA;;IA7BAC,eAAe,EAAA;eAAfA;;IAiDAC,4BAA4B,EAAA;eAA5BA;;IA7CAC,cAAc,EAAA;eAAdA;;IAKAC,sBAAsB,EAAA;eAAtBA;;;AATT,SAASH,gBAAgBI,OAAgB;IAC9C,OAAOC,MAAMC,OAAO,CAACF,WAAWA,OAAO,CAAC,EAAE,GAAGA;AAC/C;AAEO,SAASF,eAAeE,OAAe;IAC5C,sCAAsC;IACtC,OAAOA,OAAO,CAAC,EAAE,KAAK,OAAOA,QAAQG,QAAQ,CAAC;AAChD;AAEO,SAASJ,uBAAuBC,OAAe;IACpD,OAAOA,QAAQI,UAAU,CAAC,QAAQJ,YAAY;AAChD;AAEO,SAASN,6BACdM,OAAgB,EAChBK,YAA2D;IAE3D,MAAMC,gBAAgBN,QAAQO,QAAQ,CAACd;IAEvC,IAAIa,eAAe;QACjB,MAAME,mBAAmBC,KAAKC,SAAS,CAACL;QACxC,OAAOG,qBAAqB,OACxBf,mBAAmB,MAAMe,mBACzBf;IACN;IAEA,OAAOO;AACT;AAEO,SAASL,6BACdgB,QAAyB,EACzBC,gBAAwB;IAExB,IAAI,CAACD,YAAYA,SAASE,MAAM,KAAK,GAAG;QACtC,OAAO;IACT;IAEA,iFAAiF;IACjF,MAAMC,aACJF,qBAAqB,aACjBD,QAAQ,CAAC,EAAE,GACXA,QAAQ,CAACA,SAASE,MAAM,GAAG,EAAE;IAEnC,sGAAsG;IACtG,oEAAoE;IACpE,OAAOC,eAAetB,sBAAsB,OAAOsB;AACrD;AAGO,SAASjB,6BACdkB,IAAuB,EACvBH,gBAAwB,EACxBI,QAAQ,IAAI,EACZC,cAAwB,EAAE;IAE1B,IAAIC;IACJ,IAAIF,OAAO;QACT,kEAAkE;QAClEE,OAAOH,IAAI,CAAC,EAAE,CAACH,iBAAiB;IAClC,OAAO;QACL,oGAAoG;QACpG,MAAMO,iBAAiBJ,IAAI,CAAC,EAAE;QAC9BG,OAAOC,eAAeC,QAAQ,IAAIC,OAAOC,MAAM,CAACH,eAAe,CAAC,EAAE;IACpE;IAEA,IAAI,CAACD,MAAM,OAAOD;IAClB,MAAMjB,UAAUkB,IAAI,CAAC,EAAE;IAEvB,IAAIK,eAAe3B,gBAAgBI;IAEnC,IAAI,CAACuB,gBAAgBA,aAAanB,UAAU,CAACX,mBAAmB;QAC9D,OAAOwB;IACT;IAEAA,YAAYO,IAAI,CAACD;IAEjB,OAAO1B,6BACLqB,MACAN,kBACA,OACAK;AAEJ;AAEO,MAAMxB,mBAAmB;AACzB,MAAMD,sBAAsB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1485, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/segment-cache/segment-value-encoding.ts"],"sourcesContent":["import { PAGE_SEGMENT_KEY } from '../segment'\nimport type { Segment as FlightRouterStateSegment } from '../app-router-types'\n\n// TypeScript trick to simulate opaque types, like in Flow.\ntype Opaque<K, T> = T & { __brand: K }\n\nexport type SegmentRequestKeyPart = Opaque<'SegmentRequestKeyPart', string>\nexport type SegmentRequestKey = Opaque<'SegmentRequestKey', string>\nexport type SegmentCacheKeyPart = Opaque<'SegmentCacheKeyPart', string>\nexport type SegmentCacheKey = Opaque<'SegmentCacheKey', string>\n\nexport const ROOT_SEGMENT_REQUEST_KEY = '' as SegmentRequestKey\nexport const ROOT_SEGMENT_CACHE_KEY = '' as SegmentCacheKey\n\nexport function createSegmentRequestKeyPart(\n  segment: FlightRouterStateSegment\n): SegmentRequestKeyPart {\n  if (typeof segment === 'string') {\n    if (segment.startsWith(PAGE_SEGMENT_KEY)) {\n      // The Flight Router State type sometimes includes the search params in\n      // the page segment. However, the Segment Cache tracks this as a separate\n      // key. So, we strip the search params here, and then add them back when\n      // the cache entry is turned back into a FlightRouterState. This is an\n      // unfortunate consequence of the FlightRouteState being used both as a\n      // transport type and as a cache key; we'll address this once more of the\n      // Segment Cache implementation has settled.\n      // TODO: We should hoist the search params out of the FlightRouterState\n      // type entirely, This is our plan for dynamic route params, too.\n      return PAGE_SEGMENT_KEY as SegmentRequestKeyPart\n    }\n    const safeName =\n      // TODO: FlightRouterState encodes Not Found routes as \"/_not-found\".\n      // But params typically don't include the leading slash. We should use\n      // a different encoding to avoid this special case.\n      segment === '/_not-found'\n        ? '_not-found'\n        : encodeToFilesystemAndURLSafeString(segment)\n    // Since this is not a dynamic segment, it's fully encoded. It does not\n    // need to be \"hydrated\" with a param value.\n    return safeName as SegmentRequestKeyPart\n  }\n\n  const name = segment[0]\n  const paramType = segment[2]\n  const safeName = encodeToFilesystemAndURLSafeString(name)\n\n  const encodedName = '$' + paramType + '$' + safeName\n  return encodedName as SegmentRequestKeyPart\n}\n\nexport function appendSegmentRequestKeyPart(\n  parentRequestKey: SegmentRequestKey,\n  parallelRouteKey: string,\n  childRequestKeyPart: SegmentRequestKeyPart\n): SegmentRequestKey {\n  // Aside from being filesystem safe, segment keys are also designed so that\n  // each segment and parallel route creates its own subdirectory. Roughly in\n  // the same shape as the source app directory. This is mostly just for easier\n  // debugging (you can open up the build folder and navigate the output); if\n  // we wanted to do we could just use a flat structure.\n\n  // Omit the parallel route key for children, since this is the most\n  // common case. Saves some bytes (and it's what the app directory does).\n  const slotKey =\n    parallelRouteKey === 'children'\n      ? childRequestKeyPart\n      : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childRequestKeyPart}`\n  return (parentRequestKey + '/' + slotKey) as SegmentRequestKey\n}\n\nexport function createSegmentCacheKeyPart(\n  requestKeyPart: SegmentRequestKeyPart,\n  segment: FlightRouterStateSegment\n): SegmentCacheKeyPart {\n  if (typeof segment === 'string') {\n    return requestKeyPart as any as SegmentCacheKeyPart\n  }\n  const paramValue = segment[1]\n  const safeValue = encodeToFilesystemAndURLSafeString(paramValue)\n  return (requestKeyPart + '$' + safeValue) as SegmentCacheKeyPart\n}\n\nexport function appendSegmentCacheKeyPart(\n  parentSegmentKey: SegmentCacheKey,\n  parallelRouteKey: string,\n  childCacheKeyPart: SegmentCacheKeyPart\n): SegmentCacheKey {\n  const slotKey =\n    parallelRouteKey === 'children'\n      ? childCacheKeyPart\n      : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childCacheKeyPart}`\n  return (parentSegmentKey + '/' + slotKey) as SegmentCacheKey\n}\n\n// Define a regex pattern to match the most common characters found in a route\n// param. It excludes anything that might not be cross-platform filesystem\n// compatible, like |. It does not need to be precise because the fallback is to\n// just base64url-encode the whole parameter, which is fine; we just don't do it\n// by default for compactness, and for easier debugging.\nconst simpleParamValueRegex = /^[a-zA-Z0-9\\-_@]+$/\n\nfunction encodeToFilesystemAndURLSafeString(value: string) {\n  if (simpleParamValueRegex.test(value)) {\n    return value\n  }\n  // If there are any unsafe characters, base64url-encode the entire value.\n  // We also add a ! prefix so it doesn't collide with the simple case.\n  const base64url = btoa(value)\n    .replace(/\\+/g, '-') // Replace '+' with '-'\n    .replace(/\\//g, '_') // Replace '/' with '_'\n    .replace(/=+$/, '') // Remove trailing '='\n  return '!' + base64url\n}\n\nexport function convertSegmentPathToStaticExportFilename(\n  segmentPath: string\n): string {\n  return `__next${segmentPath.replace(/\\//g, '.')}.txt`\n}\n"],"names":["ROOT_SEGMENT_CACHE_KEY","ROOT_SEGMENT_REQUEST_KEY","appendSegmentCacheKeyPart","appendSegmentRequestKeyPart","convertSegmentPathToStaticExportFilename","createSegmentCacheKeyPart","createSegmentRequestKeyPart","segment","startsWith","PAGE_SEGMENT_KEY","safeName","encodeToFilesystemAndURLSafeString","name","paramType","encodedName","parentRequestKey","parallelRouteKey","childRequestKeyPart","slotKey","requestKeyPart","paramValue","safeValue","parentSegmentKey","childCacheKeyPart","simpleParamValueRegex","value","test","base64url","btoa","replace","segmentPath"],"mappings":";;;;;;;;;;;;;;;;;;;IAYaA,sBAAsB,EAAA;eAAtBA;;IADAC,wBAAwB,EAAA;eAAxBA;;IAuEGC,yBAAyB,EAAA;eAAzBA;;IAhCAC,2BAA2B,EAAA;eAA3BA;;IAgEAC,wCAAwC,EAAA;eAAxCA;;IA5CAC,yBAAyB,EAAA;eAAzBA;;IAxDAC,2BAA2B,EAAA;eAA3BA;;;yBAdiB;AAW1B,MAAML,2BAA2B;AACjC,MAAMD,yBAAyB;AAE/B,SAASM,4BACdC,OAAiC;IAEjC,IAAI,OAAOA,YAAY,UAAU;QAC/B,IAAIA,QAAQC,UAAU,CAACC,SAAAA,gBAAgB,GAAG;YACxC,uEAAuE;YACvE,yEAAyE;YACzE,wEAAwE;YACxE,sEAAsE;YACtE,uEAAuE;YACvE,yEAAyE;YACzE,4CAA4C;YAC5C,uEAAuE;YACvE,iEAAiE;YACjE,OAAOA,SAAAA,gBAAgB;QACzB;QACA,MAAMC,WACJ,AACA,qEADqE,CACC;QACtE,mDAAmD;QACnDH,YAAY,gBACR,eACAI,mCAAmCJ;QACzC,uEAAuE;QACvE,4CAA4C;QAC5C,OAAOG;IACT;IAEA,MAAME,OAAOL,OAAO,CAAC,EAAE;IACvB,MAAMM,YAAYN,OAAO,CAAC,EAAE;IAC5B,MAAMG,WAAWC,mCAAmCC;IAEpD,MAAME,cAAc,MAAMD,YAAY,MAAMH;IAC5C,OAAOI;AACT;AAEO,SAASX,4BACdY,gBAAmC,EACnCC,gBAAwB,EACxBC,mBAA0C;IAE1C,2EAA2E;IAC3E,2EAA2E;IAC3E,6EAA6E;IAC7E,2EAA2E;IAC3E,sDAAsD;IAEtD,mEAAmE;IACnE,wEAAwE;IACxE,MAAMC,UACJF,qBAAqB,aACjBC,sBACA,CAAC,CAAC,EAAEN,mCAAmCK,kBAAkB,CAAC,EAAEC,qBAAqB;IACvF,OAAQF,mBAAmB,MAAMG;AACnC;AAEO,SAASb,0BACdc,cAAqC,EACrCZ,OAAiC;IAEjC,IAAI,OAAOA,YAAY,UAAU;QAC/B,OAAOY;IACT;IACA,MAAMC,aAAab,OAAO,CAAC,EAAE;IAC7B,MAAMc,YAAYV,mCAAmCS;IACrD,OAAQD,iBAAiB,MAAME;AACjC;AAEO,SAASnB,0BACdoB,gBAAiC,EACjCN,gBAAwB,EACxBO,iBAAsC;IAEtC,MAAML,UACJF,qBAAqB,aACjBO,oBACA,CAAC,CAAC,EAAEZ,mCAAmCK,kBAAkB,CAAC,EAAEO,mBAAmB;IACrF,OAAQD,mBAAmB,MAAMJ;AACnC;AAEA,8EAA8E;AAC9E,0EAA0E;AAC1E,gFAAgF;AAChF,gFAAgF;AAChF,wDAAwD;AACxD,MAAMM,wBAAwB;AAE9B,SAASb,mCAAmCc,KAAa;IACvD,IAAID,sBAAsBE,IAAI,CAACD,QAAQ;QACrC,OAAOA;IACT;IACA,yEAAyE;IACzE,qEAAqE;IACrE,MAAME,YAAYC,KAAKH,OACpBI,OAAO,CAAC,OAAO,KAAK,uBAAuB;KAC3CA,OAAO,CAAC,OAAO,KAAK,uBAAuB;KAC3CA,OAAO,CAAC,OAAO,IAAI,sBAAsB;;IAC5C,OAAO,MAAMF;AACf;AAEO,SAASvB,yCACd0B,WAAmB;IAEnB,OAAO,CAAC,MAAM,EAAEA,YAAYD,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1604, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/route-params.ts"],"sourcesContent":["import type { DynamicParamTypesShort } from '../shared/lib/app-router-types'\nimport {\n  addSearchParamsIfPageSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../shared/lib/segment'\nimport { ROOT_SEGMENT_REQUEST_KEY } from '../shared/lib/segment-cache/segment-value-encoding'\nimport {\n  NEXT_REWRITTEN_PATH_HEADER,\n  NEXT_REWRITTEN_QUERY_HEADER,\n  NEXT_RSC_UNION_QUERY,\n} from './components/app-router-headers'\nimport type { NormalizedSearch } from './components/segment-cache'\nimport type { RSCResponse } from './components/router-reducer/fetch-server-response'\nimport type { ParsedUrlQuery } from 'querystring'\n\nexport type RouteParamValue = string | Array<string> | null\n\nexport type RouteParam = {\n  name: string\n  value: RouteParamValue\n  type: DynamicParamTypesShort\n}\n\nexport function getRenderedSearch(\n  response: RSCResponse<unknown> | Response\n): NormalizedSearch {\n  // If the server performed a rewrite, the search params used to render the\n  // page will be different from the params in the request URL. In this case,\n  // the response will include a header that gives the rewritten search query.\n  const rewrittenQuery = response.headers.get(NEXT_REWRITTEN_QUERY_HEADER)\n  if (rewrittenQuery !== null) {\n    return (\n      rewrittenQuery === '' ? '' : '?' + rewrittenQuery\n    ) as NormalizedSearch\n  }\n  // If the header is not present, there was no rewrite, so we use the search\n  // query of the response URL.\n  return urlToUrlWithoutFlightMarker(new URL(response.url))\n    .search as NormalizedSearch\n}\n\nexport function getRenderedPathname(\n  response: RSCResponse<unknown> | Response\n): string {\n  // If the server performed a rewrite, the pathname used to render the\n  // page will be different from the pathname in the request URL. In this case,\n  // the response will include a header that gives the rewritten pathname.\n  const rewrittenPath = response.headers.get(NEXT_REWRITTEN_PATH_HEADER)\n  return (\n    rewrittenPath ?? urlToUrlWithoutFlightMarker(new URL(response.url)).pathname\n  )\n}\n\nexport function parseDynamicParamFromURLPart(\n  paramType: DynamicParamTypesShort,\n  pathnameParts: Array<string>,\n  partIndex: number\n): RouteParamValue {\n  // This needs to match the behavior in get-dynamic-param.ts.\n  switch (paramType) {\n    // Catchalls\n    case 'c':\n    case 'ci': {\n      // Catchalls receive all the remaining URL parts. If there are no\n      // remaining pathname parts, return an empty array.\n      return partIndex < pathnameParts.length\n        ? pathnameParts.slice(partIndex).map((s) => encodeURIComponent(s))\n        : []\n    }\n    // Optional catchalls\n    case 'oc': {\n      // Optional catchalls receive all the remaining URL parts, unless this is\n      // the end of the pathname, in which case they return null.\n      return partIndex < pathnameParts.length\n        ? pathnameParts.slice(partIndex).map((s) => encodeURIComponent(s))\n        : null\n    }\n    // Dynamic\n    case 'd':\n    case 'di': {\n      if (partIndex >= pathnameParts.length) {\n        // The route tree expected there to be more parts in the URL than there\n        // actually are. This could happen if the x-nextjs-rewritten-path header\n        // is incorrectly set, or potentially due to bug in Next.js. TODO:\n        // Should this be a hard error? During a prefetch, we can just abort.\n        // During a client navigation, we could trigger a hard refresh. But if\n        // it happens during initial render, we don't really have any\n        // recovery options.\n        return ''\n      }\n      return encodeURIComponent(pathnameParts[partIndex])\n    }\n    default:\n      paramType satisfies never\n      return ''\n  }\n}\n\nexport function doesStaticSegmentAppearInURL(segment: string): boolean {\n  // This is not a parameterized segment; however, we need to determine\n  // whether or not this segment appears in the URL. For example, this route\n  // groups do not appear in the URL, so they should be skipped. Any other\n  // special cases must be handled here.\n  // TODO: Consider encoding this directly into the router tree instead of\n  // inferring it on the client based on the segment type. Something like\n  // a `doesAppearInURL` flag in FlightRouterState.\n  if (\n    segment === ROOT_SEGMENT_REQUEST_KEY ||\n    // For some reason, the loader tree sometimes includes extra __PAGE__\n    // \"layouts\" when part of a parallel route. But it's not a leaf node.\n    // Otherwise, we wouldn't need this special case because pages are\n    // always leaf nodes.\n    // TODO: Investigate why the loader produces these fake page segments.\n    segment.startsWith(PAGE_SEGMENT_KEY) ||\n    // Route groups.\n    (segment[0] === '(' && segment.endsWith(')')) ||\n    segment === DEFAULT_SEGMENT_KEY ||\n    segment === '/_not-found'\n  ) {\n    return false\n  } else {\n    // All other segment types appear in the URL\n    return true\n  }\n}\n\nexport function getCacheKeyForDynamicParam(\n  paramValue: RouteParamValue,\n  renderedSearch: NormalizedSearch\n): string {\n  // This needs to match the logic in get-dynamic-param.ts, until we're able to\n  // unify the various implementations so that these are always computed on\n  // the client.\n  if (typeof paramValue === 'string') {\n    // TODO: Refactor or remove this helper function to accept a string rather\n    // than the whole segment type. Also we can probably just append the\n    // search string instead of turning it into JSON.\n    const pageSegmentWithSearchParams = addSearchParamsIfPageSegment(\n      paramValue,\n      Object.fromEntries(new URLSearchParams(renderedSearch))\n    ) as string\n    return pageSegmentWithSearchParams\n  } else if (paramValue === null) {\n    return ''\n  } else {\n    return paramValue.join('/')\n  }\n}\n\nexport function urlToUrlWithoutFlightMarker(url: URL): URL {\n  const urlWithoutFlightParameters = new URL(url)\n  urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY)\n  if (process.env.NODE_ENV === 'production') {\n    if (\n      process.env.__NEXT_CONFIG_OUTPUT === 'export' &&\n      urlWithoutFlightParameters.pathname.endsWith('.txt')\n    ) {\n      const { pathname } = urlWithoutFlightParameters\n      const length = pathname.endsWith('/index.txt') ? 10 : 4\n      // Slice off `/index.txt` or `.txt` from the end of the pathname\n      urlWithoutFlightParameters.pathname = pathname.slice(0, -length)\n    }\n  }\n  return urlWithoutFlightParameters\n}\n\nexport function getParamValueFromCacheKey(\n  paramCacheKey: string,\n  paramType: DynamicParamTypesShort\n) {\n  // Turn the cache key string sent by the server (as part of FlightRouterState)\n  // into a value that can be passed to `useParams` and client components.\n  const isCatchAll = paramType === 'c' || paramType === 'oc'\n  if (isCatchAll) {\n    // Catch-all param keys are a concatenation of the path segments.\n    // See equivalent logic in `getSelectedParams`.\n    // TODO: We should just pass the array directly, rather than concatenate\n    // it to a string and then split it back to an array. It needs to be an\n    // array in some places, like when passing a key React, but we can convert\n    // it at runtime in those places.\n    return paramCacheKey.split('/')\n  }\n  return paramCacheKey\n}\n\nexport function urlSearchParamsToParsedUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  // Converts a URLSearchParams object to the same type used by the server when\n  // creating search params props, i.e. the type returned by Node's\n  // \"querystring\" module.\n  const result: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    if (result[key] === undefined) {\n      result[key] = value\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [result[key], value]\n    }\n  }\n  return result\n}\n"],"names":["doesStaticSegmentAppearInURL","getCacheKeyForDynamicParam","getParamValueFromCacheKey","getRenderedPathname","getRenderedSearch","parseDynamicParamFromURLPart","urlSearchParamsToParsedUrlQuery","urlToUrlWithoutFlightMarker","response","rewrittenQuery","headers","get","NEXT_REWRITTEN_QUERY_HEADER","URL","url","search","rewrittenPath","NEXT_REWRITTEN_PATH_HEADER","pathname","paramType","pathnameParts","partIndex","length","slice","map","s","encodeURIComponent","segment","ROOT_SEGMENT_REQUEST_KEY","startsWith","PAGE_SEGMENT_KEY","endsWith","DEFAULT_SEGMENT_KEY","paramValue","renderedSearch","pageSegmentWithSearchParams","addSearchParamsIfPageSegment","Object","fromEntries","URLSearchParams","join","urlWithoutFlightParameters","searchParams","delete","NEXT_RSC_UNION_QUERY","process","env","NODE_ENV","__NEXT_CONFIG_OUTPUT","paramCacheKey","isCatchAll","split","result","key","value","entries","undefined","Array","isArray","push"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1799, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/create-href-from-url.ts"],"sourcesContent":["export function createHrefFromUrl(\n  url: Pick<URL, 'pathname' | 'search' | 'hash'>,\n  includeHash: boolean = true\n): string {\n  return url.pathname + url.search + (includeHash ? url.hash : '')\n}\n"],"names":["createHrefFromUrl","url","includeHash","pathname","search","hash"],"mappings":";;;+BAAgBA,qBAAAA;;;eAAAA;;;AAAT,SAASA,kBACdC,GAA8C,EAC9CC,cAAuB,IAAI;IAE3B,OAAOD,IAAIE,QAAQ,GAAGF,IAAIG,MAAM,GAAIF,CAAAA,cAAcD,IAAII,IAAI,GAAG,EAAC;AAChE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1822, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/flight-data-helpers.ts"],"sourcesContent":["import type {\n  CacheNodeSeedData,\n  FlightData,\n  FlightDataPath,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n  HeadData,\n  InitialRSCPayload,\n} from '../shared/lib/app-router-types'\nimport { PAGE_SEGMENT_KEY } from '../shared/lib/segment'\nimport type { NormalizedSearch } from './components/segment-cache'\nimport {\n  getCacheKeyForDynamicParam,\n  parseDynamicParamFromURLPart,\n  doesStaticSegmentAppearInURL,\n  getRenderedPathname,\n  getRenderedSearch,\n} from './route-params'\nimport { createHrefFromUrl } from './components/router-reducer/create-href-from-url'\n\nexport type NormalizedFlightData = {\n  /**\n   * The full `FlightSegmentPath` inclusive of the final `Segment`\n   */\n  segmentPath: FlightSegmentPath\n  /**\n   * The `FlightSegmentPath` exclusive of the final `Segment`\n   */\n  pathToSegment: FlightSegmentPath\n  segment: Segment\n  tree: FlightRouterState\n  seedData: CacheNodeSeedData | null\n  head: HeadData\n  isHeadPartial: boolean\n  isRootRender: boolean\n}\n\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(\n  flightDataPath: FlightDataPath\n): NormalizedFlightData {\n  // Pick the last 4 items from the `FlightDataPath` to get the [tree, seedData, viewport, isHeadPartial].\n  const flightDataPathLength = 4\n  // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n  const [tree, seedData, head, isHeadPartial] =\n    flightDataPath.slice(-flightDataPathLength)\n  // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n  const segmentPath = flightDataPath.slice(0, -flightDataPathLength)\n\n  return {\n    // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n    // to the start of the segment path in some places which makes it hard to use solely the segment path.\n    // Look for \"// TODO-APP: remove ''\" in the codebase.\n    pathToSegment: segmentPath.slice(0, -1),\n    segmentPath,\n    // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n    // in which case we default to ''.\n    segment: segmentPath[segmentPath.length - 1] ?? '',\n    tree,\n    seedData,\n    head,\n    isHeadPartial,\n    isRootRender: flightDataPath.length === flightDataPathLength,\n  }\n}\n\nexport function createInitialRSCPayloadFromFallbackPrerender(\n  response: Response,\n  fallbackInitialRSCPayload: InitialRSCPayload\n): InitialRSCPayload {\n  // This is a static fallback page. In order to hydrate the page, we need to\n  // parse the client params from the URL, but to account for the possibility\n  // that the page was rewritten, we need to check the response headers\n  // for x-nextjs-rewritten-path or x-nextjs-rewritten-query headers. Since\n  // we can't access the headers of the initial document response, the client\n  // performs a fetch request to the current location. Since it's possible that\n  // the fetch request will be dynamically rewritten to a different path than\n  // the initial document, this fetch request delivers _all_ the hydration data\n  // for the page; it was not inlined into the document, like it normally\n  // would be.\n  //\n  // TODO: Consider treating the case where fetch is rewritten to a different\n  // path from the document as a special deopt case. We should optimistically\n  // assume this won't happen, inline the data into the document, and perform\n  // a minimal request (like a HEAD or range request) to verify that the\n  // response matches. Tricky to get right because we need to account for\n  // all the different deployment environments we support, like output:\n  // \"export\" mode, where we currently don't assume that custom response\n  // headers are present.\n\n  // Patch the Flight data sent by the server with the correct params parsed\n  // from the URL + response object.\n  const renderedPathname = getRenderedPathname(response)\n  const renderedSearch = getRenderedSearch(response)\n  const canonicalUrl = createHrefFromUrl(new URL(location.href))\n  const originalFlightDataPath = fallbackInitialRSCPayload.f[0]\n  const originalFlightRouterState = originalFlightDataPath[0]\n  return {\n    b: fallbackInitialRSCPayload.b,\n    c: canonicalUrl.split('/'),\n    q: renderedSearch,\n    i: fallbackInitialRSCPayload.i,\n    f: [\n      [\n        fillInFallbackFlightRouterState(\n          originalFlightRouterState,\n          renderedPathname,\n          renderedSearch as NormalizedSearch\n        ),\n        originalFlightDataPath[1],\n        originalFlightDataPath[2],\n        originalFlightDataPath[2],\n      ],\n    ],\n    m: fallbackInitialRSCPayload.m,\n    G: fallbackInitialRSCPayload.G,\n    s: fallbackInitialRSCPayload.s,\n    S: fallbackInitialRSCPayload.S,\n  }\n}\n\nfunction fillInFallbackFlightRouterState(\n  flightRouterState: FlightRouterState,\n  renderedPathname: string,\n  renderedSearch: NormalizedSearch\n): FlightRouterState {\n  const pathnameParts = renderedPathname.split('/').filter((p) => p !== '')\n  const index = 0\n  return fillInFallbackFlightRouterStateImpl(\n    flightRouterState,\n    renderedSearch,\n    pathnameParts,\n    index\n  )\n}\n\nfunction fillInFallbackFlightRouterStateImpl(\n  flightRouterState: FlightRouterState,\n  renderedSearch: NormalizedSearch,\n  pathnameParts: Array<string>,\n  pathnamePartsIndex: number\n): FlightRouterState {\n  const originalSegment = flightRouterState[0]\n  let newSegment: Segment\n  let doesAppearInURL: boolean\n  if (typeof originalSegment === 'string') {\n    newSegment = originalSegment\n    doesAppearInURL = doesStaticSegmentAppearInURL(originalSegment)\n  } else {\n    const paramName = originalSegment[0]\n    const paramType = originalSegment[2]\n    const paramValue = parseDynamicParamFromURLPart(\n      paramType,\n      pathnameParts,\n      pathnamePartsIndex\n    )\n    const cacheKey = getCacheKeyForDynamicParam(paramValue, renderedSearch)\n    newSegment = [paramName, cacheKey, paramType]\n    doesAppearInURL = true\n  }\n\n  // Only increment the index if the segment appears in the URL. If it's a\n  // \"virtual\" segment, like a route group, it remains the same.\n  const childPathnamePartsIndex = doesAppearInURL\n    ? pathnamePartsIndex + 1\n    : pathnamePartsIndex\n\n  const children = flightRouterState[1]\n  const newChildren: { [key: string]: FlightRouterState } = {}\n  for (let key in children) {\n    const childFlightRouterState = children[key]\n    newChildren[key] = fillInFallbackFlightRouterStateImpl(\n      childFlightRouterState,\n      renderedSearch,\n      pathnameParts,\n      childPathnamePartsIndex\n    )\n  }\n\n  const newState: FlightRouterState = [\n    newSegment,\n    newChildren,\n    null,\n    flightRouterState[3],\n    flightRouterState[4],\n  ]\n  return newState\n}\n\nexport function getNextFlightSegmentPath(\n  flightSegmentPath: FlightSegmentPath\n): FlightSegmentPath {\n  // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n  // to get the next segment path.\n  return flightSegmentPath.slice(2)\n}\n\nexport function normalizeFlightData(\n  flightData: FlightData\n): NormalizedFlightData[] | string {\n  // FlightData can be a string when the server didn't respond with a proper flight response,\n  // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n  if (typeof flightData === 'string') {\n    return flightData\n  }\n\n  return flightData.map((flightDataPath) =>\n    getFlightDataPartsFromPath(flightDataPath)\n  )\n}\n\n/**\n * This function is used to prepare the flight router state for the request.\n * It removes markers that are not needed by the server, and are purely used\n * for stashing state on the client.\n * @param flightRouterState - The flight router state to prepare.\n * @param isHmrRefresh - Whether this is an HMR refresh request.\n * @returns The prepared flight router state.\n */\nexport function prepareFlightRouterStateForRequest(\n  flightRouterState: FlightRouterState,\n  isHmrRefresh?: boolean\n): string {\n  // HMR requests need the complete, unmodified state for proper functionality\n  if (isHmrRefresh) {\n    return encodeURIComponent(JSON.stringify(flightRouterState))\n  }\n\n  return encodeURIComponent(\n    JSON.stringify(stripClientOnlyDataFromFlightRouterState(flightRouterState))\n  )\n}\n\n/**\n * Recursively strips client-only data from FlightRouterState while preserving\n * server-needed information for proper rendering decisions.\n */\nfunction stripClientOnlyDataFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): FlightRouterState {\n  const [\n    segment,\n    parallelRoutes,\n    _url, // Intentionally unused - URLs are client-only\n    refreshMarker,\n    isRootLayout,\n    hasLoadingBoundary,\n  ] = flightRouterState\n\n  // __PAGE__ segments are always fetched from the server, so there's\n  // no need to send them up\n  const cleanedSegment = stripSearchParamsFromPageSegment(segment)\n\n  // Recursively process parallel routes\n  const cleanedParallelRoutes: { [key: string]: FlightRouterState } = {}\n  for (const [key, childState] of Object.entries(parallelRoutes)) {\n    cleanedParallelRoutes[key] =\n      stripClientOnlyDataFromFlightRouterState(childState)\n  }\n\n  const result: FlightRouterState = [\n    cleanedSegment,\n    cleanedParallelRoutes,\n    null, // URLs omitted - server reconstructs paths from segments\n    shouldPreserveRefreshMarker(refreshMarker) ? refreshMarker : null,\n  ]\n\n  // Append optional fields if present\n  if (isRootLayout !== undefined) {\n    result[4] = isRootLayout\n  }\n  if (hasLoadingBoundary !== undefined) {\n    result[5] = hasLoadingBoundary\n  }\n\n  return result\n}\n\n/**\n * Strips search parameters from __PAGE__ segments to prevent sensitive\n * client-side data from being sent to the server.\n */\nfunction stripSearchParamsFromPageSegment(segment: Segment): Segment {\n  if (\n    typeof segment === 'string' &&\n    segment.startsWith(PAGE_SEGMENT_KEY + '?')\n  ) {\n    return PAGE_SEGMENT_KEY\n  }\n  return segment\n}\n\n/**\n * Determines whether the refresh marker should be sent to the server\n * Client-only markers like 'refresh' are stripped, while server-needed markers\n * like 'refetch' and 'inside-shared-layout' are preserved.\n */\nfunction shouldPreserveRefreshMarker(\n  refreshMarker: FlightRouterState[3]\n): boolean {\n  return Boolean(refreshMarker && refreshMarker !== 'refresh')\n}\n"],"names":["createInitialRSCPayloadFromFallbackPrerender","getFlightDataPartsFromPath","getNextFlightSegmentPath","normalizeFlightData","prepareFlightRouterStateForRequest","flightDataPath","flightDataPathLength","tree","seedData","head","isHeadPartial","slice","segmentPath","pathToSegment","segment","length","isRootRender","response","fallbackInitialRSCPayload","renderedPathname","getRenderedPathname","renderedSearch","getRenderedSearch","canonicalUrl","createHrefFromUrl","URL","location","href","originalFlightDataPath","f","originalFlightRouterState","b","c","split","q","i","fillInFallbackFlightRouterState","m","G","s","S","flightRouterState","pathnameParts","filter","p","index","fillInFallbackFlightRouterStateImpl","pathnamePartsIndex","originalSegment","newSegment","doesAppearInURL","doesStaticSegmentAppearInURL","paramName","paramType","paramValue","parseDynamicParamFromURLPart","cacheKey","getCacheKeyForDynamicParam","childPathnamePartsIndex","children","newChildren","key","childFlightRouterState","newState","flightSegmentPath","flightData","map","isHmrRefresh","encodeURIComponent","JSON","stringify","stripClientOnlyDataFromFlightRouterState","parallelRoutes","_url","refreshMarker","isRootLayout","hasLoadingBoundary","cleanedSegment","stripSearchParamsFromPageSegment","cleanedParallelRoutes","childState","Object","entries","result","shouldPreserveRefreshMarker","undefined","startsWith","PAGE_SEGMENT_KEY","Boolean"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/app-build-id.ts"],"sourcesContent":["// This gets assigned as a side-effect during app initialization. Because it\n// represents the build used to create the JS bundle, it should never change\n// after being set, so we store it in a global variable.\n//\n// When performing RSC requests, if the incoming data has a different build ID,\n// we perform an MPA navigation/refresh to load the updated build and ensure\n// that the client and server in sync.\n\n// Starts as an empty string. In practice, because setAppBuildId is called\n// during initialization before hydration starts, this will always get\n// reassigned to the actual build ID before it's ever needed by a navigation.\n// If for some reasons it didn't, due to a bug or race condition, then on\n// navigation the build comparision would fail and trigger an MPA navigation.\nlet globalBuildId: string = ''\n\nexport function setAppBuildId(buildId: string) {\n  globalBuildId = buildId\n}\n\nexport function getAppBuildId(): string {\n  return globalBuildId\n}\n"],"names":["getAppBuildId","setAppBuildId","globalBuildId","buildId"],"mappings":"AAAA,4EAA4E;AAC5E,4EAA4E;AAC5E,wDAAwD;AACxD,EAAE;AACF,+EAA+E;AAC/E,4EAA4E;AAC5E,sCAAsC;AAEtC,0EAA0E;AAC1E,sEAAsE;AACtE,6EAA6E;AAC7E,yEAAyE;AACzE,6EAA6E;;;;;;;;;;;;;;;IAO7DA,aAAa,EAAA;eAAbA;;IAJAC,aAAa,EAAA;eAAbA;;;AAFhB,IAAIC,gBAAwB;AAErB,SAASD,cAAcE,OAAe;IAC3CD,gBAAgBC;AAClB;AAEO,SAASH;IACd,OAAOE;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2095, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/hash.ts"],"sourcesContent":["// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str: string) {\n  let hash = 5381\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) + hash + char) & 0xffffffff\n  }\n  return hash >>> 0\n}\n\nexport function hexHash(str: string) {\n  return djb2Hash(str).toString(36).slice(0, 5)\n}\n"],"names":["djb2Hash","hexHash","str","hash","i","length","char","charCodeAt","toString","slice"],"mappings":"AAAA,wCAAwC;AACxC,4CAA4C;AAC5C,iHAAiH;AACjH,wFAAwF;AACxF,gGAAgG;AAChG,wHAAwH;AACxH,wDAAwD;;;;;;;;;;;;;;;IACxCA,QAAQ,EAAA;eAARA;;IASAC,OAAO,EAAA;eAAPA;;;AATT,SAASD,SAASE,GAAW;IAClC,IAAIC,OAAO;IACX,IAAK,IAAIC,IAAI,GAAGA,IAAIF,IAAIG,MAAM,EAAED,IAAK;QACnC,MAAME,OAAOJ,IAAIK,UAAU,CAACH;QAC5BD,OAASA,CAAAA,QAAQ,CAAA,IAAKA,OAAOG,OAAQ;IACvC;IACA,OAAOH,SAAS;AAClB;AAEO,SAASF,QAAQC,GAAW;IACjC,OAAOF,SAASE,KAAKM,QAAQ,CAAC,IAAIC,KAAK,CAAC,GAAG;AAC7C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/cache-busting-search-param.ts"],"sourcesContent":["import { hexHash } from '../../hash'\n\nexport function computeCacheBustingSearchParam(\n  prefetchHeader: '1' | '2' | '0' | undefined,\n  segmentPrefetchHeader: string | string[] | undefined,\n  stateTreeHeader: string | string[] | undefined,\n  nextUrlHeader: string | string[] | undefined\n): string {\n  if (\n    (prefetchHeader === undefined || prefetchHeader === '0') &&\n    segmentPrefetchHeader === undefined &&\n    stateTreeHeader === undefined &&\n    nextUrlHeader === undefined\n  ) {\n    return ''\n  }\n  return hexHash(\n    [\n      prefetchHeader || '0',\n      segmentPrefetchHeader || '0',\n      stateTreeHeader || '0',\n      nextUrlHeader || '0',\n    ].join(',')\n  )\n}\n"],"names":["computeCacheBustingSearchParam","prefetchHeader","segmentPrefetchHeader","stateTreeHeader","nextUrlHeader","undefined","hexHash","join"],"mappings":";;;+BAEgBA,kCAAAA;;;eAAAA;;;sBAFQ;AAEjB,SAASA,+BACdC,cAA2C,EAC3CC,qBAAoD,EACpDC,eAA8C,EAC9CC,aAA4C;IAE5C,IACGH,CAAAA,mBAAmBI,aAAaJ,mBAAmB,GAAE,KACtDC,0BAA0BG,aAC1BF,oBAAoBE,aACpBD,kBAAkBC,WAClB;QACA,OAAO;IACT;IACA,OAAOC,CAAAA,GAAAA,MAAAA,OAAO,EACZ;QACEL,kBAAkB;QAClBC,yBAAyB;QACzBC,mBAAmB;QACnBC,iBAAiB;KAClB,CAACG,IAAI,CAAC;AAEX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/set-cache-busting-search-param.ts"],"sourcesContent":["'use client'\n\nimport { computeCacheBustingSearchParam } from '../../../shared/lib/router/utils/cache-busting-search-param'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  NEXT_RSC_UNION_QUERY,\n} from '../app-router-headers'\nimport type { RequestHeaders } from './fetch-server-response'\n\n/**\n * Mutates the provided URL by adding a cache-busting search parameter for CDNs that don't\n * support custom headers. This helps avoid caching conflicts by making each request unique.\n *\n * Rather than relying on the Vary header which some CDNs ignore, we append a search param\n * to create a unique URL that forces a fresh request.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * Note: This function mutates the input URL directly and does not return anything.\n *\n * TODO: Since we need to use a search param anyway, we could simplify by removing the custom\n * headers approach entirely and just use search params.\n */\nexport const setCacheBustingSearchParam = (\n  url: URL,\n  headers: RequestHeaders\n): void => {\n  const uniqueCacheKey = computeCacheBustingSearchParam(\n    headers[NEXT_ROUTER_PREFETCH_HEADER],\n    headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER],\n    headers[NEXT_ROUTER_STATE_TREE_HEADER],\n    headers[NEXT_URL]\n  )\n  setCacheBustingSearchParamWithHash(url, uniqueCacheKey)\n}\n\n/**\n * Sets a cache-busting search parameter on a URL using a provided hash value.\n *\n * This function performs the same logic as `setCacheBustingSearchParam` but accepts\n * a pre-computed hash instead of computing it from headers.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * hash: \"abc123\"\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * If the hash is null, we will set `_rsc` search param without a value.\n * Like this: https://example.com/path?query=1&_rsc\n *\n * Note: This function mutates the input URL directly and does not return anything.\n */\nexport const setCacheBustingSearchParamWithHash = (\n  url: URL,\n  hash: string\n): void => {\n  /**\n   * Note that we intentionally do not use `url.searchParams.set` here:\n   *\n   * const url = new URL('https://example.com/search?q=custom%20spacing');\n   * url.searchParams.set('_rsc', 'abc123');\n   * console.log(url.toString()); // Outputs: https://example.com/search?q=custom+spacing&_rsc=abc123\n   *                                                                             ^ <--- this is causing confusion\n   * This is in fact intended based on https://url.spec.whatwg.org/#interface-urlsearchparams, but\n   * we want to preserve the %20 as %20 if that's what the user passed in, hence the custom\n   * logic below.\n   */\n  const existingSearch = url.search\n  const rawQuery = existingSearch.startsWith('?')\n    ? existingSearch.slice(1)\n    : existingSearch\n\n  // Always remove any existing cache busting param and add a fresh one to ensure\n  // we have the correct value based on current request headers\n  const pairs = rawQuery\n    .split('&')\n    .filter((pair) => pair && !pair.startsWith(`${NEXT_RSC_UNION_QUERY}=`))\n\n  if (hash.length > 0) {\n    pairs.push(`${NEXT_RSC_UNION_QUERY}=${hash}`)\n  } else {\n    pairs.push(`${NEXT_RSC_UNION_QUERY}`)\n  }\n  url.search = pairs.length ? `?${pairs.join('&')}` : ''\n}\n"],"names":["setCacheBustingSearchParam","setCacheBustingSearchParamWithHash","url","headers","uniqueCacheKey","computeCacheBustingSearchParam","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_URL","hash","existingSearch","search","rawQuery","startsWith","slice","pairs","split","filter","pair","NEXT_RSC_UNION_QUERY","length","push","join"],"mappings":";;;;;;;;;;;;;;IA4BaA,0BAA0B,EAAA;eAA1BA;;IA6BAC,kCAAkC,EAAA;eAAlCA;;;yCAvDkC;kCAOxC;AAmBA,MAAMD,6BAA6B,CACxCE,KACAC;IAEA,MAAMC,iBAAiBC,CAAAA,GAAAA,yBAAAA,8BAA8B,EACnDF,OAAO,CAACG,kBAAAA,2BAA2B,CAAC,EACpCH,OAAO,CAACI,kBAAAA,mCAAmC,CAAC,EAC5CJ,OAAO,CAACK,kBAAAA,6BAA6B,CAAC,EACtCL,OAAO,CAACM,kBAAAA,QAAQ,CAAC;IAEnBR,mCAAmCC,KAAKE;AAC1C;AAkBO,MAAMH,qCAAqC,CAChDC,KACAQ;IAEA;;;;;;;;;;GAUC,GACD,MAAMC,iBAAiBT,IAAIU,MAAM;IACjC,MAAMC,WAAWF,eAAeG,UAAU,CAAC,OACvCH,eAAeI,KAAK,CAAC,KACrBJ;IAEJ,+EAA+E;IAC/E,6DAA6D;IAC7D,MAAMK,QAAQH,SACXI,KAAK,CAAC,KACNC,MAAM,CAAC,CAACC,OAASA,QAAQ,CAACA,KAAKL,UAAU,CAAC,GAAGM,kBAAAA,oBAAoB,CAAC,CAAC,CAAC;IAEvE,IAAIV,KAAKW,MAAM,GAAG,GAAG;QACnBL,MAAMM,IAAI,CAAC,GAAGF,kBAAAA,oBAAoB,CAAC,CAAC,EAAEV,MAAM;IAC9C,OAAO;QACLM,MAAMM,IAAI,CAAC,GAAGF,kBAAAA,oBAAoB,EAAE;IACtC;IACAlB,IAAIU,MAAM,GAAGI,MAAMK,MAAM,GAAG,CAAC,CAAC,EAAEL,MAAMO,IAAI,CAAC,MAAM,GAAG;AACtD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2224, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/fetch-server-response.ts"],"sourcesContent":["'use client'\n\n// TODO: Explicitly import from client.browser\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  createFromReadableStream as createFromReadableStreamBrowser,\n  createFromFetch as createFromFetchBrowser,\n} from 'react-server-dom-webpack/client'\n\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../shared/lib/app-router-types'\n\nimport type { NEXT_ROUTER_SEGMENT_PREFETCH_HEADER } from '../app-router-headers'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_URL,\n  RSC_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n  NEXT_HTML_REQUEST_ID_HEADER,\n  NEXT_REQUEST_ID_HEADER,\n} from '../app-router-headers'\nimport { callServer } from '../../app-call-server'\nimport { findSourceMapURL } from '../../app-find-source-map-url'\nimport { PrefetchKind } from './router-reducer-types'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n  type NormalizedFlightData,\n} from '../../flight-data-helpers'\nimport { getAppBuildId } from '../../app-build-id'\nimport { setCacheBustingSearchParam } from './set-cache-busting-search-param'\nimport {\n  getRenderedSearch,\n  urlToUrlWithoutFlightMarker,\n} from '../../route-params'\nimport type { NormalizedSearch } from '../segment-cache'\n\nconst createFromReadableStream =\n  createFromReadableStreamBrowser as (typeof import('react-server-dom-webpack/client.browser'))['createFromReadableStream']\nconst createFromFetch =\n  createFromFetchBrowser as (typeof import('react-server-dom-webpack/client.browser'))['createFromFetch']\n\nlet createDebugChannel:\n  | typeof import('../../dev/debug-channel').createDebugChannel\n  | undefined\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  process.env.__NEXT_REACT_DEBUG_CHANNEL\n) {\n  createDebugChannel = (\n    require('../../dev/debug-channel') as typeof import('../../dev/debug-channel')\n  ).createDebugChannel\n}\n\nexport interface FetchServerResponseOptions {\n  readonly flightRouterState: FlightRouterState\n  readonly nextUrl: string | null\n  readonly prefetchKind?: PrefetchKind\n  readonly isHmrRefresh?: boolean\n}\n\ntype SpaFetchServerResponseResult = {\n  flightData: NormalizedFlightData[]\n  canonicalUrl: URL\n  renderedSearch: NormalizedSearch\n  couldBeIntercepted: boolean\n  prerendered: boolean\n  postponed: boolean\n  staleTime: number\n  debugInfo: Array<any> | null\n}\n\ntype MpaFetchServerResponseResult = string\n\nexport type FetchServerResponseResult =\n  | MpaFetchServerResponseResult\n  | SpaFetchServerResponseResult\n\nexport type RequestHeaders = {\n  [RSC_HEADER]?: '1'\n  [NEXT_ROUTER_STATE_TREE_HEADER]?: string\n  [NEXT_URL]?: string\n  [NEXT_ROUTER_PREFETCH_HEADER]?: '1' | '2'\n  [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]?: string\n  'x-deployment-id'?: string\n  [NEXT_HMR_REFRESH_HEADER]?: '1'\n  // A header that is only added in test mode to assert on fetch priority\n  'Next-Test-Fetch-Priority'?: RequestInit['priority']\n  [NEXT_HTML_REQUEST_ID_HEADER]?: string // dev-only\n  [NEXT_REQUEST_ID_HEADER]?: string // dev-only\n}\n\nfunction doMpaNavigation(url: string): FetchServerResponseResult {\n  return urlToUrlWithoutFlightMarker(new URL(url, location.origin)).toString()\n}\n\nlet abortController = new AbortController()\n\nif (typeof window !== 'undefined') {\n  // Abort any in-flight requests when the page is unloaded, e.g. due to\n  // reloading the page or performing hard navigations. This allows us to ignore\n  // what would otherwise be a thrown TypeError when the browser cancels the\n  // requests.\n  window.addEventListener('pagehide', () => {\n    abortController.abort()\n  })\n\n  // Use a fresh AbortController instance on pageshow, e.g. when navigating back\n  // and the JavaScript execution context is restored by the browser.\n  window.addEventListener('pageshow', () => {\n    abortController = new AbortController()\n  })\n}\n\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */\nexport async function fetchServerResponse(\n  url: URL,\n  options: FetchServerResponseOptions\n): Promise<FetchServerResponseResult> {\n  const { flightRouterState, nextUrl, prefetchKind } = options\n\n  const headers: RequestHeaders = {\n    // Enable flight response\n    [RSC_HEADER]: '1',\n    // Provide the current router state\n    [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(\n      flightRouterState,\n      options.isHmrRefresh\n    ),\n  }\n\n  /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */\n  if (prefetchKind === PrefetchKind.AUTO) {\n    headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n    headers[NEXT_HMR_REFRESH_HEADER] = '1'\n  }\n\n  if (nextUrl) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  // In static export mode, we need to modify the URL to request the .txt file,\n  // but we should preserve the original URL for the canonical URL and error handling.\n  const originalUrl = url\n\n  try {\n    // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n    // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n    // Otherwise, all other prefetches are sent with a \"low\" priority.\n    // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n    const fetchPriority = prefetchKind\n      ? prefetchKind === PrefetchKind.TEMPORARY\n        ? 'high'\n        : 'low'\n      : 'auto'\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        // In \"output: export\" mode, we can't rely on headers to distinguish\n        // between HTML and RSC requests. Instead, we append an extra prefix\n        // to the request.\n        url = new URL(url)\n        if (url.pathname.endsWith('/')) {\n          url.pathname += 'index.txt'\n        } else {\n          url.pathname += '.txt'\n        }\n      }\n    }\n\n    // Typically, during a navigation, we decode the response using Flight's\n    // `createFromFetch` API, which accepts a `fetch` promise.\n    // TODO: Remove this check once the old PPR flag is removed\n    const isLegacyPPR =\n      process.env.__NEXT_PPR && !process.env.__NEXT_CACHE_COMPONENTS\n    const shouldImmediatelyDecode = !isLegacyPPR\n    const res = await createFetch<NavigationFlightResponse>(\n      url,\n      headers,\n      fetchPriority,\n      shouldImmediatelyDecode,\n      abortController.signal\n    )\n\n    const responseUrl = urlToUrlWithoutFlightMarker(new URL(res.url))\n    const canonicalUrl = res.redirected ? responseUrl : originalUrl\n\n    const contentType = res.headers.get('content-type') || ''\n    const interception = !!res.headers.get('vary')?.includes(NEXT_URL)\n    const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER)\n    const staleTimeHeaderSeconds = res.headers.get(\n      NEXT_ROUTER_STALE_TIME_HEADER\n    )\n    const staleTime =\n      staleTimeHeaderSeconds !== null\n        ? parseInt(staleTimeHeaderSeconds, 10) * 1000\n        : -1\n    let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (!isFlightResponse) {\n          isFlightResponse = contentType.startsWith('text/plain')\n        }\n      }\n    }\n\n    // If fetch returns something different than flight response handle it like a mpa navigation\n    // If the fetch was not 200, we also handle it like a mpa navigation\n    if (!isFlightResponse || !res.ok || !res.body) {\n      // in case the original URL came with a hash, preserve it before redirecting to the new URL\n      if (url.hash) {\n        responseUrl.hash = url.hash\n      }\n\n      return doMpaNavigation(responseUrl.toString())\n    }\n\n    // We may navigate to a page that requires a different Webpack runtime.\n    // In prod, every page will have the same Webpack runtime.\n    // In dev, the Webpack runtime is minimal for each page.\n    // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n    // TODO: This needs to happen in the Flight Client.\n    // Or Webpack needs to include the runtime update in the Flight response as\n    // a blocking script.\n    if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n      await (\n        require('../../dev/hot-reloader/app/hot-reloader-app') as typeof import('../../dev/hot-reloader/app/hot-reloader-app')\n      ).waitForWebpackRuntimeHotUpdate()\n    }\n\n    let flightResponsePromise = res.flightResponse\n    if (flightResponsePromise === null) {\n      // Typically, `createFetch` would have already started decoding the\n      // Flight response. If it hasn't, though, we need to decode it now.\n      // TODO: This should only be reachable if legacy PPR is enabled (i.e. PPR\n      // without Cache Components). Remove this branch once legacy PPR\n      // is deleted.\n      const flightStream = postponed\n        ? createUnclosingPrefetchStream(res.body)\n        : res.body\n      flightResponsePromise =\n        createFromNextReadableStream<NavigationFlightResponse>(\n          flightStream,\n          headers\n        )\n    }\n\n    const flightResponse = await flightResponsePromise\n\n    if (getAppBuildId() !== flightResponse.b) {\n      return doMpaNavigation(res.url)\n    }\n\n    const normalizedFlightData = normalizeFlightData(flightResponse.f)\n    if (typeof normalizedFlightData === 'string') {\n      return doMpaNavigation(normalizedFlightData)\n    }\n\n    return {\n      flightData: normalizedFlightData,\n      canonicalUrl: canonicalUrl,\n      renderedSearch: getRenderedSearch(res),\n      couldBeIntercepted: interception,\n      prerendered: flightResponse.S,\n      postponed,\n      staleTime,\n      debugInfo: flightResponsePromise._debugInfo ?? null,\n    }\n  } catch (err) {\n    if (!abortController.signal.aborted) {\n      console.error(\n        `Failed to fetch RSC payload for ${originalUrl}. Falling back to browser navigation.`,\n        err\n      )\n    }\n\n    // If fetch fails handle it like a mpa navigation\n    // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n    // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n    return originalUrl.toString()\n  }\n}\n\n// This is a subset of the standard Response type. We use a custom type for\n// this so we can limit which details about the response leak into the rest of\n// the codebase. For example, there's some custom logic for manually following\n// redirects, so \"redirected\" in this type could be a composite of multiple\n// browser fetch calls; however, this fact should not leak to the caller.\nexport type RSCResponse<T> = {\n  ok: boolean\n  redirected: boolean\n  headers: Headers\n  body: ReadableStream<Uint8Array> | null\n  status: number\n  url: string\n  flightResponse: (Promise<T> & { _debugInfo?: Array<any> }) | null\n}\n\nexport async function createFetch<T>(\n  url: URL,\n  headers: RequestHeaders,\n  fetchPriority: 'auto' | 'high' | 'low' | null,\n  shouldImmediatelyDecode: boolean,\n  signal?: AbortSignal\n): Promise<RSCResponse<T>> {\n  // TODO: In output: \"export\" mode, the headers do nothing. Omit them (and the\n  // cache busting search param) from the request so they're\n  // maximally cacheable.\n\n  if (process.env.__NEXT_TEST_MODE && fetchPriority !== null) {\n    headers['Next-Test-Fetch-Priority'] = fetchPriority\n  }\n\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (self.__next_r) {\n      headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r\n    }\n\n    // Create a new request ID for the server action request. The server uses\n    // this to tag debug information sent via WebSocket to the client, which\n    // then routes those chunks to the debug channel associated with this ID.\n    headers[NEXT_REQUEST_ID_HEADER] = crypto\n      .getRandomValues(new Uint32Array(1))[0]\n      .toString(16)\n  }\n\n  const fetchOptions: RequestInit = {\n    // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n    credentials: 'same-origin',\n    headers,\n    priority: fetchPriority || undefined,\n    signal,\n  }\n  // `fetchUrl` is slightly different from `url` because we add a cache-busting\n  // search param to it. This should not leak outside of this function, so we\n  // track them separately.\n  let fetchUrl = new URL(url)\n  setCacheBustingSearchParam(fetchUrl, headers)\n  let fetchPromise = fetch(fetchUrl, fetchOptions)\n  // Immediately pass the fetch promise to the Flight client so that the debug\n  // info includes the latency from the client to the server. The internal timer\n  // in React starts as soon as `createFromFetch` is called.\n  //\n  // The only case where we don't do this is during a prefetch, because we have\n  // to do some extra processing of the response stream (see\n  // `createUnclosingPrefetchStream`). But this is fine, because a top-level\n  // prefetch response never blocks a navigation; if it hasn't already been\n  // written into the cache by the time the navigation happens, the router will\n  // go straight to a dynamic request.\n  let flightResponsePromise = shouldImmediatelyDecode\n    ? createFromNextFetch<T>(fetchPromise, headers)\n    : null\n  let browserResponse = await fetchPromise\n\n  // If the server responds with a redirect (e.g. 307), and the redirected\n  // location does not contain the cache busting search param set in the\n  // original request, the response is likely invalid — when following the\n  // redirect, the browser forwards the request headers, but since the cache\n  // busting search param is missing, the server will reject the request due to\n  // a mismatch.\n  //\n  // Ideally, we would be able to intercept the redirect response and perform it\n  // manually, instead of letting the browser automatically follow it, but this\n  // is not allowed by the fetch API.\n  //\n  // So instead, we must \"replay\" the redirect by fetching the new location\n  // again, but this time we'll append the cache busting search param to prevent\n  // a mismatch.\n  //\n  // TODO: We can optimize Next.js's built-in middleware APIs by returning a\n  // custom status code, to prevent the browser from automatically following it.\n  //\n  // This does not affect Server Action-based redirects; those are encoded\n  // differently, as part of the Flight body. It only affects redirects that\n  // occur in a middleware or a third-party proxy.\n\n  let redirected = browserResponse.redirected\n  if (process.env.__NEXT_CLIENT_VALIDATE_RSC_REQUEST_HEADERS) {\n    // This is to prevent a redirect loop. Same limit used by Chrome.\n    const MAX_REDIRECTS = 20\n    for (let n = 0; n < MAX_REDIRECTS; n++) {\n      if (!browserResponse.redirected) {\n        // The server did not perform a redirect.\n        break\n      }\n      const responseUrl = new URL(browserResponse.url, fetchUrl)\n      if (responseUrl.origin !== fetchUrl.origin) {\n        // The server redirected to an external URL. The rest of the logic below\n        // is not relevant, because it only applies to internal redirects.\n        break\n      }\n      if (\n        responseUrl.searchParams.get(NEXT_RSC_UNION_QUERY) ===\n        fetchUrl.searchParams.get(NEXT_RSC_UNION_QUERY)\n      ) {\n        // The redirected URL already includes the cache busting search param.\n        // This was probably intentional. Regardless, there's no reason to\n        // issue another request to this URL because it already has the param\n        // value that we would have added below.\n        break\n      }\n      // The RSC request was redirected. Assume the response is invalid.\n      //\n      // Append the cache busting search param to the redirected URL and\n      // fetch again.\n      // TODO: We should abort the previous request.\n      fetchUrl = new URL(responseUrl)\n      setCacheBustingSearchParam(fetchUrl, headers)\n      fetchPromise = fetch(fetchUrl, fetchOptions)\n      flightResponsePromise = shouldImmediatelyDecode\n        ? createFromNextFetch<T>(fetchPromise, headers)\n        : null\n      browserResponse = await fetchPromise\n      // We just performed a manual redirect, so this is now true.\n      redirected = true\n    }\n  }\n\n  // Remove the cache busting search param from the response URL, to prevent it\n  // from leaking outside of this function.\n  const responseUrl = new URL(browserResponse.url, fetchUrl)\n  responseUrl.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  const rscResponse: RSCResponse<T> = {\n    url: responseUrl.href,\n\n    // This is true if any redirects occurred, either automatically by the\n    // browser, or manually by us. So it's different from\n    // `browserResponse.redirected`, which only tells us whether the browser\n    // followed a redirect, and only for the last response in the chain.\n    redirected,\n\n    // These can be copied from the last browser response we received. We\n    // intentionally only expose the subset of fields that are actually used\n    // elsewhere in the codebase.\n    ok: browserResponse.ok,\n    headers: browserResponse.headers,\n    body: browserResponse.body,\n    status: browserResponse.status,\n\n    // This is the exact promise returned by `createFromFetch`. It contains\n    // debug information that we need to transfer to any derived promises that\n    // are later rendered by React.\n    flightResponse: flightResponsePromise,\n  }\n\n  return rscResponse\n}\n\nexport function createFromNextReadableStream<T>(\n  flightStream: ReadableStream<Uint8Array>,\n  requestHeaders: RequestHeaders\n): Promise<T> {\n  return createFromReadableStream(flightStream, {\n    callServer,\n    findSourceMapURL,\n    debugChannel: createDebugChannel && createDebugChannel(requestHeaders),\n  })\n}\n\nfunction createFromNextFetch<T>(\n  promiseForResponse: Promise<Response>,\n  requestHeaders: RequestHeaders\n): Promise<T> & { _debugInfo?: Array<any> } {\n  return createFromFetch(promiseForResponse, {\n    callServer,\n    findSourceMapURL,\n    debugChannel: createDebugChannel && createDebugChannel(requestHeaders),\n  })\n}\n\nfunction createUnclosingPrefetchStream(\n  originalFlightStream: ReadableStream<Uint8Array>\n): ReadableStream<Uint8Array> {\n  // When PPR is enabled, prefetch streams may contain references that never\n  // resolve, because that's how we encode dynamic data access. In the decoded\n  // object returned by the Flight client, these are reified into hanging\n  // promises that suspend during render, which is effectively what we want.\n  // The UI resolves when it switches to the dynamic data stream\n  // (via useDeferredValue(dynamic, static)).\n  //\n  // However, the Flight implementation currently errors if the server closes\n  // the response before all the references are resolved. As a cheat to work\n  // around this, we wrap the original stream in a new stream that never closes,\n  // and therefore doesn't error.\n  const reader = originalFlightStream.getReader()\n  return new ReadableStream({\n    async pull(controller) {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (!done) {\n          // Pass to the target stream and keep consuming the Flight response\n          // from the server.\n          controller.enqueue(value)\n          continue\n        }\n        // The server stream has closed. Exit, but intentionally do not close\n        // the target stream.\n        return\n      }\n    },\n  })\n}\n"],"names":["createFetch","createFromNextReadableStream","fetchServerResponse","createFromReadableStream","createFromReadableStreamBrowser","createFromFetch","createFromFetchBrowser","createDebugChannel","process","env","NODE_ENV","__NEXT_REACT_DEBUG_CHANNEL","require","doMpaNavigation","url","urlToUrlWithoutFlightMarker","URL","location","origin","toString","abortController","AbortController","window","addEventListener","abort","options","flightRouterState","nextUrl","prefetchKind","headers","RSC_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","prepareFlightRouterStateForRequest","isHmrRefresh","PrefetchKind","AUTO","NEXT_ROUTER_PREFETCH_HEADER","NEXT_HMR_REFRESH_HEADER","NEXT_URL","originalUrl","fetchPriority","TEMPORARY","__NEXT_CONFIG_OUTPUT","pathname","endsWith","isLegacyPPR","__NEXT_PPR","__NEXT_CACHE_COMPONENTS","shouldImmediatelyDecode","res","signal","responseUrl","canonicalUrl","redirected","contentType","get","interception","includes","postponed","NEXT_DID_POSTPONE_HEADER","staleTimeHeaderSeconds","NEXT_ROUTER_STALE_TIME_HEADER","staleTime","parseInt","isFlightResponse","startsWith","RSC_CONTENT_TYPE_HEADER","ok","body","hash","TURBOPACK","waitForWebpackRuntimeHotUpdate","flightResponsePromise","flightResponse","flightStream","createUnclosingPrefetchStream","getAppBuildId","b","normalizedFlightData","normalizeFlightData","f","flightData","renderedSearch","getRenderedSearch","couldBeIntercepted","prerendered","S","debugInfo","_debugInfo","err","aborted","console","error","__NEXT_TEST_MODE","NEXT_DEPLOYMENT_ID","self","__next_r","NEXT_HTML_REQUEST_ID_HEADER","NEXT_REQUEST_ID_HEADER","crypto","getRandomValues","Uint32Array","fetchOptions","credentials","priority","undefined","fetchUrl","setCacheBustingSearchParam","fetchPromise","fetch","createFromNextFetch","browserResponse","__NEXT_CLIENT_VALIDATE_RSC_REQUEST_HEADERS","MAX_REDIRECTS","n","searchParams","NEXT_RSC_UNION_QUERY","delete","rscResponse","href","status","requestHeaders","callServer","findSourceMapURL","debugChannel","promiseForResponse","originalFlightStream","reader","getReader","ReadableStream","pull","controller","done","value","read","enqueue"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2520, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/tuple-map.ts"],"sourcesContent":["// Utility type. Prefix<[A, B, C, D]> matches [A], [A, B], [A, B, C] etc.\nexport type Prefix<T extends any[]> = T extends [infer First, ...infer Rest]\n  ? [] | [First] | [First, ...Prefix<Rest>]\n  : []\n\nexport type TupleMap<Keypath extends Array<any>, V> = {\n  set(keys: Prefix<Keypath>, value: V): void\n  get(keys: Prefix<Keypath>): V | null\n  delete(keys: Prefix<Keypath>): void\n}\n\n/**\n * Creates a map whose keys are tuples. Tuples are compared per-element. This\n * is useful when a key has multiple parts, but you don't want to concatenate\n * them into a single string value.\n *\n * In the Segment Cache, we use this to store cache entries by both their href\n * and their Next-URL.\n *\n * Example:\n *   map.set(['https://localhost', 'foo/bar/baz'], 'yay');\n *   map.get(['https://localhost', 'foo/bar/baz']); // returns 'yay'\n */\nexport function createTupleMap<Keypath extends Array<any>, V>(): TupleMap<\n  Keypath,\n  V\n> {\n  type MapEntryShared = {\n    parent: MapEntry | null\n    key: any\n    map: Map<any, MapEntry> | null\n  }\n\n  type EmptyMapEntry = MapEntryShared & {\n    value: null\n    hasValue: false\n  }\n\n  type FullMapEntry = MapEntryShared & {\n    value: V\n    hasValue: true\n  }\n\n  type MapEntry = EmptyMapEntry | FullMapEntry\n\n  let rootEntry: MapEntry = {\n    parent: null,\n    key: null,\n    hasValue: false,\n    value: null,\n    map: null,\n  }\n\n  // To optimize successive lookups, we cache the last accessed keypath.\n  // Although it's not encoded in the type, these are both null or\n  // both non-null. It uses object equality, so to take advantage of this\n  // optimization, you must pass the same array instance to each successive\n  // method call, and you must also not mutate the array between calls.\n  let lastAccessedEntry: MapEntry | null = null\n  let lastAccessedKeys: Prefix<Keypath> | null = null\n\n  function getOrCreateEntry(keys: Prefix<Keypath>): MapEntry {\n    if (lastAccessedKeys === keys) {\n      return lastAccessedEntry!\n    }\n\n    // Go through each level of keys until we find the entry that matches,\n    // or create a new one if it doesn't already exist.\n    let entry = rootEntry\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      let map = entry.map\n      if (map !== null) {\n        const existingEntry = map.get(key)\n        if (existingEntry !== undefined) {\n          // Found a match. Keep going.\n          entry = existingEntry\n          continue\n        }\n      } else {\n        map = new Map()\n        entry.map = map\n      }\n      // No entry exists yet at this level. Create a new one.\n      const newEntry: MapEntry = {\n        parent: entry,\n        key,\n        value: null,\n        hasValue: false,\n        map: null,\n      }\n      map.set(key, newEntry)\n      entry = newEntry\n    }\n\n    lastAccessedKeys = keys\n    lastAccessedEntry = entry\n\n    return entry\n  }\n\n  function getEntryIfExists(keys: Prefix<Keypath>): MapEntry | null {\n    if (lastAccessedKeys === keys) {\n      return lastAccessedEntry\n    }\n\n    // Go through each level of keys until we find the entry that matches, or\n    // return null if no match exists.\n    let entry = rootEntry\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      let map = entry.map\n      if (map !== null) {\n        const existingEntry = map.get(key)\n        if (existingEntry !== undefined) {\n          // Found a match. Keep going.\n          entry = existingEntry\n          continue\n        }\n      }\n      // No entry exists at this level.\n      return null\n    }\n\n    lastAccessedKeys = keys\n    lastAccessedEntry = entry\n\n    return entry\n  }\n\n  function set(keys: Prefix<Keypath>, value: V): void {\n    const entry = getOrCreateEntry(keys)\n    entry.hasValue = true\n    entry.value = value\n  }\n\n  function get(keys: Prefix<Keypath>): V | null {\n    const entry = getEntryIfExists(keys)\n    if (entry === null || !entry.hasValue) {\n      return null\n    }\n    return entry.value\n  }\n\n  function deleteEntry(keys: Prefix<Keypath>): void {\n    const entry = getEntryIfExists(keys)\n    if (entry === null || !entry.hasValue) {\n      return\n    }\n\n    // Found a match. Delete it from the cache.\n    const deletedEntry: EmptyMapEntry = entry as any\n    deletedEntry.hasValue = false\n    deletedEntry.value = null\n\n    // Check if we can garbage collect the entry.\n    if (deletedEntry.map === null) {\n      // Since this entry has no value, and also no child entries, we can\n      // garbage collect it. Remove it from its parent, and keep garbage\n      // collecting the parents until we reach a non-empty entry.\n\n      // Unlike a `set` operation, these are no longer valid because the entry\n      // itself is being modified, not just the value it contains.\n      lastAccessedEntry = null\n      lastAccessedKeys = null\n\n      let parent = deletedEntry.parent\n      let key = deletedEntry.key\n      while (parent !== null) {\n        const parentMap = parent.map\n        if (parentMap !== null) {\n          parentMap.delete(key)\n          if (parentMap.size === 0) {\n            // We just removed the last entry in the parent map.\n            parent.map = null\n            if (parent.value === null) {\n              // The parent node has no child entries, nor does it have a value\n              // on itself. It can be garbage collected. Keep going.\n              key = parent.key\n              parent = parent.parent\n              continue\n            }\n          }\n        }\n        // The parent is not empty. Stop garbage collecting.\n        break\n      }\n    }\n  }\n\n  return {\n    set,\n    get,\n    delete: deleteEntry,\n  }\n}\n"],"names":["createTupleMap","rootEntry","parent","key","hasValue","value","map","lastAccessedEntry","lastAccessedKeys","getOrCreateEntry","keys","entry","i","length","existingEntry","get","undefined","Map","newEntry","set","getEntryIfExists","deleteEntry","deletedEntry","parentMap","delete","size"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2675, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/lru.ts"],"sourcesContent":["export type LRU<T extends LRUNode> = {\n  put(node: T): void\n  delete(node: T): void\n  updateSize(node: T, size: number): void\n}\n\n// Doubly-linked list\ntype LRUNode<T = any> = {\n  // Although it's not encoded in the type, these are both null if the node is\n  // not in the LRU; both non-null if it is.\n  prev: T | null\n  next: T | null\n  size: number\n}\n\n// Rather than create an internal LRU node, the passed-in type must conform\n// the LRUNode interface. This is just a memory optimization to avoid creating\n// another object; we only use this for Segment Cache entries so it doesn't need\n// to be general purpose.\nexport function createLRU<T extends LRUNode>(\n  // From the LRU's perspective, the size unit is arbitrary, but for our\n  // purposes this is the byte size.\n  maxLruSize: number,\n  onEviction: (node: T) => void\n): LRU<T> {\n  let head: T | null = null\n  let didScheduleCleanup: boolean = false\n  let lruSize: number = 0\n\n  function put(node: T) {\n    if (head === node) {\n      // Already at the head\n      return\n    }\n    const prev = node.prev\n    const next = node.next\n    if (next === null || prev === null) {\n      // This is an insertion\n      lruSize += node.size\n      // Whenever we add an entry, we need to check if we've exceeded the\n      // max size. We don't evict entries immediately; they're evicted later in\n      // an asynchronous task.\n      ensureCleanupIsScheduled()\n    } else {\n      // This is a move. Remove from its current position.\n      prev.next = next\n      next.prev = prev\n    }\n\n    // Move to the front of the list\n    if (head === null) {\n      // This is the first entry\n      node.prev = node\n      node.next = node\n    } else {\n      // Add to the front of the list\n      const tail = head.prev\n      node.prev = tail\n      tail.next = node\n      node.next = head\n      head.prev = node\n    }\n    head = node\n  }\n\n  function updateSize(node: T, newNodeSize: number) {\n    // This is a separate function from `put` so that we can resize the entry\n    // regardless of whether it's currently being tracked by the LRU.\n    const prevNodeSize = node.size\n    node.size = newNodeSize\n    if (node.next === null) {\n      // This entry is not currently being tracked by the LRU.\n      return\n    }\n    // Update the total LRU size\n    lruSize = lruSize - prevNodeSize + newNodeSize\n    ensureCleanupIsScheduled()\n  }\n\n  function deleteNode(deleted: T) {\n    const next = deleted.next\n    const prev = deleted.prev\n    if (next !== null && prev !== null) {\n      lruSize -= deleted.size\n\n      deleted.next = null\n      deleted.prev = null\n\n      // Remove from the list\n      if (head === deleted) {\n        // Update the head\n        if (next === head) {\n          // This was the last entry\n          head = null\n        } else {\n          head = next\n        }\n      } else {\n        prev.next = next\n        next.prev = prev\n      }\n    } else {\n      // Already deleted\n    }\n  }\n\n  function ensureCleanupIsScheduled() {\n    if (didScheduleCleanup || lruSize <= maxLruSize) {\n      return\n    }\n    didScheduleCleanup = true\n    requestCleanupCallback(cleanup)\n  }\n\n  function cleanup() {\n    didScheduleCleanup = false\n\n    // Evict entries until we're at 90% capacity. We can assume this won't\n    // infinite loop because even if `maxLruSize` were 0, eventually\n    // `deleteNode` sets `head` to `null` when we run out entries.\n    const ninetyPercentMax = maxLruSize * 0.9\n    while (lruSize > ninetyPercentMax && head !== null) {\n      const tail = head.prev\n      deleteNode(tail)\n      onEviction(tail)\n    }\n  }\n\n  return {\n    put,\n    delete: deleteNode,\n    updateSize,\n  }\n}\n\nconst requestCleanupCallback =\n  typeof requestIdleCallback === 'function'\n    ? requestIdleCallback\n    : (cb: () => void) => setTimeout(cb, 0)\n"],"names":["createLRU","maxLruSize","onEviction","head","didScheduleCleanup","lruSize","put","node","prev","next","size","ensureCleanupIsScheduled","tail","updateSize","newNodeSize","prevNodeSize","deleteNode","deleted","requestCleanupCallback","cleanup","ninetyPercentMax","delete","requestIdleCallback","cb","setTimeout"],"mappings":";;;+BAmBgBA,aAAAA;;;eAAAA;;;AAAT,SAASA,UACd,AACA,kCAAkC,oCADoC;AAEtEC,UAAkB,EAClBC,UAA6B;IAE7B,IAAIC,OAAiB;IACrB,IAAIC,qBAA8B;IAClC,IAAIC,UAAkB;IAEtB,SAASC,IAAIC,IAAO;QAClB,IAAIJ,SAASI,MAAM;YACjB,sBAAsB;YACtB;QACF;QACA,MAAMC,OAAOD,KAAKC,IAAI;QACtB,MAAMC,OAAOF,KAAKE,IAAI;QACtB,IAAIA,SAAS,QAAQD,SAAS,MAAM;YAClC,uBAAuB;YACvBH,WAAWE,KAAKG,IAAI;YACpB,mEAAmE;YACnE,yEAAyE;YACzE,wBAAwB;YACxBC;QACF,OAAO;YACL,oDAAoD;YACpDH,KAAKC,IAAI,GAAGA;YACZA,KAAKD,IAAI,GAAGA;QACd;QAEA,gCAAgC;QAChC,IAAIL,SAAS,MAAM;YACjB,0BAA0B;YAC1BI,KAAKC,IAAI,GAAGD;YACZA,KAAKE,IAAI,GAAGF;QACd,OAAO;YACL,+BAA+B;YAC/B,MAAMK,OAAOT,KAAKK,IAAI;YACtBD,KAAKC,IAAI,GAAGI;YACZA,KAAKH,IAAI,GAAGF;YACZA,KAAKE,IAAI,GAAGN;YACZA,KAAKK,IAAI,GAAGD;QACd;QACAJ,OAAOI;IACT;IAEA,SAASM,WAAWN,IAAO,EAAEO,WAAmB;QAC9C,yEAAyE;QACzE,iEAAiE;QACjE,MAAMC,eAAeR,KAAKG,IAAI;QAC9BH,KAAKG,IAAI,GAAGI;QACZ,IAAIP,KAAKE,IAAI,KAAK,MAAM;YACtB,wDAAwD;YACxD;QACF;QACA,4BAA4B;QAC5BJ,UAAUA,UAAUU,eAAeD;QACnCH;IACF;IAEA,SAASK,WAAWC,OAAU;QAC5B,MAAMR,OAAOQ,QAAQR,IAAI;QACzB,MAAMD,OAAOS,QAAQT,IAAI;QACzB,IAAIC,SAAS,QAAQD,SAAS,MAAM;YAClCH,WAAWY,QAAQP,IAAI;YAEvBO,QAAQR,IAAI,GAAG;YACfQ,QAAQT,IAAI,GAAG;YAEf,uBAAuB;YACvB,IAAIL,SAASc,SAAS;gBACpB,kBAAkB;gBAClB,IAAIR,SAASN,MAAM;oBACjB,0BAA0B;oBAC1BA,OAAO;gBACT,OAAO;oBACLA,OAAOM;gBACT;YACF,OAAO;gBACLD,KAAKC,IAAI,GAAGA;gBACZA,KAAKD,IAAI,GAAGA;YACd;QACF,OAAO;QACL,kBAAkB;QACpB;IACF;IAEA,SAASG;QACP,IAAIP,sBAAsBC,WAAWJ,YAAY;YAC/C;QACF;QACAG,qBAAqB;QACrBc,uBAAuBC;IACzB;IAEA,SAASA;QACPf,qBAAqB;QAErB,sEAAsE;QACtE,gEAAgE;QAChE,8DAA8D;QAC9D,MAAMgB,mBAAmBnB,aAAa;QACtC,MAAOI,UAAUe,oBAAoBjB,SAAS,KAAM;YAClD,MAAMS,OAAOT,KAAKK,IAAI;YACtBQ,WAAWJ;YACXV,WAAWU;QACb;IACF;IAEA,OAAO;QACLN;QACAe,QAAQL;QACRH;IACF;AACF;AAEA,MAAMK,yBACJ,OAAOI,wBAAwB,aAC3BA,sBACA,CAACC,KAAmBC,WAAWD,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2797, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/page-path/ensure-leading-slash.ts"],"sourcesContent":["/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n"],"names":["ensureLeadingSlash","path","startsWith"],"mappings":"AAAA;;;CAGC;;;+BACeA,sBAAAA;;;eAAAA;;;AAAT,SAASA,mBAAmBC,IAAY;IAC7C,OAAOA,KAAKC,UAAU,CAAC,OAAOD,OAAO,CAAC,CAAC,EAAEA,MAAM;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2816, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/app-paths.ts"],"sourcesContent":["import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n"],"names":["normalizeAppPath","normalizeRscURL","route","ensureLeadingSlash","split","reduce","pathname","segment","index","segments","isGroupSegment","length","url","replace"],"mappings":";;;;;;;;;;;;;;IAsBgBA,gBAAgB,EAAA;eAAhBA;;IAmCAC,eAAe,EAAA;eAAfA;;;oCAzDmB;yBACJ;AAqBxB,SAASD,iBAAiBE,KAAa;IAC5C,OAAOC,CAAAA,GAAAA,oBAAAA,kBAAkB,EACvBD,MAAME,KAAK,CAAC,KAAKC,MAAM,CAAC,CAACC,UAAUC,SAASC,OAAOC;QACjD,8BAA8B;QAC9B,IAAI,CAACF,SAAS;YACZ,OAAOD;QACT;QAEA,sBAAsB;QACtB,IAAII,CAAAA,GAAAA,SAAAA,cAAc,EAACH,UAAU;YAC3B,OAAOD;QACT;QAEA,iCAAiC;QACjC,IAAIC,OAAO,CAAC,EAAE,KAAK,KAAK;YACtB,OAAOD;QACT;QAEA,uDAAuD;QACvD,IACGC,CAAAA,YAAY,UAAUA,YAAY,OAAM,KACzCC,UAAUC,SAASE,MAAM,GAAG,GAC5B;YACA,OAAOL;QACT;QAEA,OAAO,GAAGA,SAAS,CAAC,EAAEC,SAAS;IACjC,GAAG;AAEP;AAMO,SAASN,gBAAgBW,GAAW;IACzC,OAAOA,IAAIC,OAAO,CAChB,eACA,AACA,8BAD8B;AAGlC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2867, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/interception-routes.ts"],"sourcesContent":["import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\ntype InterceptionRouteInformation = {\n  /**\n   * The intercepting route. This is the route that is being intercepted or the\n   * route that the user was coming from. This is matched by the Next-Url\n   * header.\n   */\n  interceptingRoute: string\n\n  /**\n   * The intercepted route. This is the route that is being intercepted or the\n   * route that the user is going to. This is matched by the request pathname.\n   */\n  interceptedRoute: string\n}\n\nexport function extractInterceptionRouteInformation(\n  path: string\n): InterceptionRouteInformation {\n  let interceptingRoute: string | undefined\n  let marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined\n  let interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n"],"names":["INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","path","split","find","segment","m","startsWith","undefined","interceptingRoute","marker","interceptedRoute","Error","normalizeAppPath","slice","concat","join","splitInterceptingRoute","length"],"mappings":";;;;;;;;;;;;;;;IAGaA,0BAA0B,EAAA;eAA1BA;;IAiCGC,mCAAmC,EAAA;eAAnCA;;IA1BAC,0BAA0B,EAAA;eAA1BA;;;0BAViB;AAG1B,MAAMF,6BAA6B;IACxC;IACA;IACA;IACA;CACD;AAEM,SAASE,2BAA2BC,IAAY;IACrD,wCAAwC;IACxC,OACEA,KACGC,KAAK,CAAC,KACNC,IAAI,CAAC,CAACC,UACLN,2BAA2BK,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD,SACtDE;AAEZ;AAiBO,SAASR,oCACdE,IAAY;IAEZ,IAAIO;IACJ,IAAIC;IACJ,IAAIC;IAEJ,KAAK,MAAMN,WAAWH,KAAKC,KAAK,CAAC,KAAM;QACrCO,SAASX,2BAA2BK,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD;QACnE,IAAII,QAAQ;;YACT,CAACD,mBAAmBE,iBAAiB,GAAGT,KAAKC,KAAK,CAACO,QAAQ;YAC5D;QACF;IACF;IAEA,IAAI,CAACD,qBAAqB,CAACC,UAAU,CAACC,kBAAkB;QACtD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,CAAC,4BAA4B,EAAEV,KAAK,iFAAiF,CAAC,GADlH,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEAO,oBAAoBI,CAAAA,GAAAA,UAAAA,gBAAgB,EAACJ,mBAAmB,iDAAiD;;IAEzG,OAAQC;QACN,KAAK;YACH,oIAAoI;YACpI,IAAID,sBAAsB,KAAK;gBAC7BE,mBAAmB,CAAC,CAAC,EAAEA,kBAAkB;YAC3C,OAAO;gBACLA,mBAAmBF,oBAAoB,MAAME;YAC/C;YACA;QACF,KAAK;YACH,uHAAuH;YACvH,IAAIF,sBAAsB,KAAK;gBAC7B,MAAM,OAAA,cAEL,CAFK,IAAIG,MACR,CAAC,4BAA4B,EAAEV,KAAK,4DAA4D,CAAC,GAD7F,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YACAS,mBAAmBF,kBAChBN,KAAK,CAAC,KACNW,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACJ,kBACPK,IAAI,CAAC;YACR;QACF,KAAK;YACH,kIAAkI;YAClIL,mBAAmB,MAAMA;YACzB;QACF,KAAK;YACH,iIAAiI;YAEjI,MAAMM,yBAAyBR,kBAAkBN,KAAK,CAAC;YACvD,IAAIc,uBAAuBC,MAAM,IAAI,GAAG;gBACtC,MAAM,OAAA,cAEL,CAFK,IAAIN,MACR,CAAC,4BAA4B,EAAEV,KAAK,+DAA+D,CAAC,GADhG,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YAEAS,mBAAmBM,uBAChBH,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACJ,kBACPK,IAAI,CAAC;YACR;QACF;YACE,MAAM,OAAA,cAAyC,CAAzC,IAAIJ,MAAM,iCAAV,qBAAA;uBAAA;4BAAA;8BAAA;YAAwC;IAClD;IAEA,OAAO;QAAEH;QAAmBE;IAAiB;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2976, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/compute-changed-path.ts"],"sourcesContent":["import type {\n  FlightRouterState,\n  Segment,\n} from '../../../shared/lib/app-router-types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n"],"names":["computeChangedPath","extractPathFromFlightRouterState","getSelectedParams","removeLeadingSlash","segment","slice","segmentToPathname","normalizeSegments","segments","reduce","acc","isGroupSegment","flightRouterState","Array","isArray","DEFAULT_SEGMENT_KEY","INTERCEPTION_ROUTE_MARKERS","some","m","startsWith","undefined","PAGE_SEGMENT_KEY","parallelRoutes","childrenPath","children","push","key","value","Object","entries","childPath","computeChangedPathImpl","treeA","treeB","segmentA","parallelRoutesA","segmentB","parallelRoutesB","normalizedSegmentA","normalizedSegmentB","matchSegment","parallelRouterKey","changedPath","split","currentTree","params","parallelRoute","values","isDynamicParameter","segmentValue","isCatchAll"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/handle-mutable.ts"],"sourcesContent":["import { computeChangedPath } from './compute-changed-path'\nimport type {\n  Mutable,\n  ReadonlyReducerState,\n  ReducerState,\n} from './router-reducer-types'\n\nfunction isNotUndefined<T>(value: T): value is Exclude<T, undefined> {\n  return typeof value !== 'undefined'\n}\n\nexport function handleMutable(\n  state: ReadonlyReducerState,\n  mutable: Mutable\n): ReducerState {\n  // shouldScroll is true by default, can override to false.\n  const shouldScroll = mutable.shouldScroll ?? true\n\n  let previousNextUrl = state.previousNextUrl\n  let nextUrl = state.nextUrl\n\n  if (isNotUndefined(mutable.patchedTree)) {\n    // If we received a patched tree, we need to compute the changed path.\n    const changedPath = computeChangedPath(state.tree, mutable.patchedTree)\n    if (changedPath) {\n      // If the tree changed, we need to update the nextUrl\n      previousNextUrl = nextUrl\n      nextUrl = changedPath\n    } else if (!nextUrl) {\n      // if the tree ends up being the same (ie, no changed path), and we don't have a nextUrl, then we should use the canonicalUrl\n      nextUrl = state.canonicalUrl\n    }\n    // otherwise this will be a no-op and continue to use the existing nextUrl\n  }\n\n  return {\n    // Set href.\n    canonicalUrl: mutable.canonicalUrl ?? state.canonicalUrl,\n    renderedSearch: mutable.renderedSearch ?? state.renderedSearch,\n    pushRef: {\n      pendingPush: isNotUndefined(mutable.pendingPush)\n        ? mutable.pendingPush\n        : state.pushRef.pendingPush,\n      mpaNavigation: isNotUndefined(mutable.mpaNavigation)\n        ? mutable.mpaNavigation\n        : state.pushRef.mpaNavigation,\n      preserveCustomHistoryState: isNotUndefined(\n        mutable.preserveCustomHistoryState\n      )\n        ? mutable.preserveCustomHistoryState\n        : state.pushRef.preserveCustomHistoryState,\n    },\n    // All navigation requires scroll and focus management to trigger.\n    focusAndScrollRef: {\n      apply: shouldScroll\n        ? isNotUndefined(mutable?.scrollableSegments)\n          ? true\n          : state.focusAndScrollRef.apply\n        : // If shouldScroll is false then we should not apply scroll and focus management.\n          false,\n      onlyHashChange: mutable.onlyHashChange || false,\n      hashFragment: shouldScroll\n        ? // Empty hash should trigger default behavior of scrolling layout into view.\n          // #top is handled in layout-router.\n          mutable.hashFragment && mutable.hashFragment !== ''\n          ? // Remove leading # and decode hash to make non-latin hashes work.\n            decodeURIComponent(mutable.hashFragment.slice(1))\n          : state.focusAndScrollRef.hashFragment\n        : // If shouldScroll is false then we should not apply scroll and focus management.\n          null,\n      segmentPaths: shouldScroll\n        ? (mutable?.scrollableSegments ?? state.focusAndScrollRef.segmentPaths)\n        : // If shouldScroll is false then we should not apply scroll and focus management.\n          [],\n    },\n    // Apply cache.\n    cache: mutable.cache ? mutable.cache : state.cache,\n    // Apply patched router state.\n    tree: isNotUndefined(mutable.patchedTree)\n      ? mutable.patchedTree\n      : state.tree,\n    nextUrl,\n    previousNextUrl: previousNextUrl,\n    debugInfo: mutable.collectedDebugInfo ?? null,\n  }\n}\n"],"names":["handleMutable","isNotUndefined","value","state","mutable","shouldScroll","previousNextUrl","nextUrl","patchedTree","changedPath","computeChangedPath","tree","canonicalUrl","renderedSearch","pushRef","pendingPush","mpaNavigation","preserveCustomHistoryState","focusAndScrollRef","apply","scrollableSegments","onlyHashChange","hashFragment","decodeURIComponent","slice","segmentPaths","cache","debugInfo","collectedDebugInfo"],"mappings":";;;+BAWgBA,iBAAAA;;;eAAAA;;;oCAXmB;AAOnC,SAASC,eAAkBC,KAAQ;IACjC,OAAO,OAAOA,UAAU;AAC1B;AAEO,SAASF,cACdG,KAA2B,EAC3BC,OAAgB;IAEhB,0DAA0D;IAC1D,MAAMC,eAAeD,QAAQC,YAAY,IAAI;IAE7C,IAAIC,kBAAkBH,MAAMG,eAAe;IAC3C,IAAIC,UAAUJ,MAAMI,OAAO;IAE3B,IAAIN,eAAeG,QAAQI,WAAW,GAAG;QACvC,sEAAsE;QACtE,MAAMC,cAAcC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAACP,MAAMQ,IAAI,EAAEP,QAAQI,WAAW;QACtE,IAAIC,aAAa;YACf,qDAAqD;YACrDH,kBAAkBC;YAClBA,UAAUE;QACZ,OAAO,IAAI,CAACF,SAAS;YACnB,6HAA6H;YAC7HA,UAAUJ,MAAMS,YAAY;QAC9B;IACA,0EAA0E;IAC5E;IAEA,OAAO;QACL,YAAY;QACZA,cAAcR,QAAQQ,YAAY,IAAIT,MAAMS,YAAY;QACxDC,gBAAgBT,QAAQS,cAAc,IAAIV,MAAMU,cAAc;QAC9DC,SAAS;YACPC,aAAad,eAAeG,QAAQW,WAAW,IAC3CX,QAAQW,WAAW,GACnBZ,MAAMW,OAAO,CAACC,WAAW;YAC7BC,eAAef,eAAeG,QAAQY,aAAa,IAC/CZ,QAAQY,aAAa,GACrBb,MAAMW,OAAO,CAACE,aAAa;YAC/BC,4BAA4BhB,eAC1BG,QAAQa,0BAA0B,IAEhCb,QAAQa,0BAA0B,GAClCd,MAAMW,OAAO,CAACG,0BAA0B;QAC9C;QACA,kEAAkE;QAClEC,mBAAmB;YACjBC,OAAOd,eACHJ,eAAeG,SAASgB,sBACtB,OACAjB,MAAMe,iBAAiB,CAACC,KAAK,GAE/B;YACJE,gBAAgBjB,QAAQiB,cAAc,IAAI;YAC1CC,cAAcjB,eAEV,AACAD,QAAQkB,YAAY,IAAIlB,QAAQkB,IADI,QACQ,KAAK,KAE/CC,mBAAmBnB,QAAQkB,YAAY,CAACE,KAAK,CAAC,MAC9CrB,MAAMe,iBAAiB,CAACI,YAAY,GAEtC;YACJG,cAAcpB,eACTD,SAASgB,sBAAsBjB,MAAMe,iBAAiB,CAACO,YAAY,GAEpE,EAAE;QACR;QACA,eAAe;QACfC,OAAOtB,QAAQsB,KAAK,GAAGtB,QAAQsB,KAAK,GAAGvB,MAAMuB,KAAK;QAClD,8BAA8B;QAC9Bf,MAAMV,eAAeG,QAAQI,WAAW,IACpCJ,QAAQI,WAAW,GACnBL,MAAMQ,IAAI;QACdJ;QACAD,iBAAiBA;QACjBqB,WAAWvB,QAAQwB,kBAAkB,IAAI;IAC3C;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/reducers/navigate-reducer.ts"],"sourcesContent":["import type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../../shared/lib/app-router-types'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport type {\n  Mutable,\n  NavigateAction,\n  ReadonlyReducerState,\n  ReducerState,\n} from '../router-reducer-types'\nimport { handleMutable } from '../handle-mutable'\n\nimport {\n  navigate as navigateUsingSegmentCache,\n  NavigationResultTag,\n  type NavigationResult,\n} from '../../segment-cache'\n\n// These values are set by `define-env-plugin` (based on `nextConfig.experimental.staleTimes`)\n// and default to 5 minutes (static) / 0 seconds (dynamic)\nexport const DYNAMIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME) * 1000\n\nexport const STATIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_STATIC_STALETIME) * 1000\n\nexport function handleExternalUrl(\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  url: string,\n  pendingPush: boolean\n) {\n  mutable.mpaNavigation = true\n  mutable.canonicalUrl = url\n  mutable.pendingPush = pendingPush\n  mutable.scrollableSegments = undefined\n\n  return handleMutable(state, mutable)\n}\n\nexport function generateSegmentsFromPatch(\n  flightRouterPatch: FlightRouterState\n): FlightSegmentPath[] {\n  const segments: FlightSegmentPath[] = []\n  const [segment, parallelRoutes] = flightRouterPatch\n\n  if (Object.keys(parallelRoutes).length === 0) {\n    return [[segment]]\n  }\n\n  for (const [parallelRouteKey, parallelRoute] of Object.entries(\n    parallelRoutes\n  )) {\n    for (const childSegment of generateSegmentsFromPatch(parallelRoute)) {\n      // If the segment is empty, it means we are at the root of the tree\n      if (segment === '') {\n        segments.push([parallelRouteKey, ...childSegment])\n      } else {\n        segments.push([segment, parallelRouteKey, ...childSegment])\n      }\n    }\n  }\n\n  return segments\n}\n\nfunction handleNavigationResult(\n  url: URL,\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  pendingPush: boolean,\n  result: NavigationResult\n): ReducerState {\n  switch (result.tag) {\n    case NavigationResultTag.MPA: {\n      // Perform an MPA navigation.\n      const newUrl = result.data\n      return handleExternalUrl(state, mutable, newUrl, pendingPush)\n    }\n    case NavigationResultTag.NoOp: {\n      // The server responded with no change to the current page. However, if\n      // the URL changed, we still need to update that.\n      const newCanonicalUrl = result.data.canonicalUrl\n      mutable.canonicalUrl = newCanonicalUrl\n\n      // Check if the only thing that changed was the hash fragment.\n      const oldUrl = new URL(state.canonicalUrl, url)\n      const onlyHashChange =\n        // We don't need to compare the origins, because client-driven\n        // navigations are always same-origin.\n        url.pathname === oldUrl.pathname &&\n        url.search === oldUrl.search &&\n        url.hash !== oldUrl.hash\n      if (onlyHashChange) {\n        // The only updated part of the URL is the hash.\n        mutable.onlyHashChange = true\n        mutable.shouldScroll = result.data.shouldScroll\n        mutable.hashFragment = url.hash\n        // Setting this to an empty array triggers a scroll for all new and\n        // updated segments. See `ScrollAndFocusHandler` for more details.\n        mutable.scrollableSegments = []\n      }\n\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Success: {\n      // Received a new result.\n      mutable.cache = result.data.cacheNode\n      mutable.patchedTree = result.data.flightRouterState\n      mutable.renderedSearch = result.data.renderedSearch\n      mutable.canonicalUrl = result.data.canonicalUrl\n      mutable.scrollableSegments = result.data.scrollableSegments\n      mutable.shouldScroll = result.data.shouldScroll\n      mutable.hashFragment = result.data.hash\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Async: {\n      return result.data.then(\n        (asyncResult) =>\n          handleNavigationResult(url, state, mutable, pendingPush, asyncResult),\n        // If the navigation failed, return the current state.\n        // TODO: This matches the current behavior but we need to do something\n        // better here if the network fails.\n        () => {\n          return state\n        }\n      )\n    }\n    default: {\n      result satisfies never\n      return state\n    }\n  }\n}\n\nexport function navigateReducer(\n  state: ReadonlyReducerState,\n  action: NavigateAction\n): ReducerState {\n  const { url, isExternalUrl, navigateType, shouldScroll } = action\n  const mutable: Mutable = {}\n  const href = createHrefFromUrl(url)\n  const pendingPush = navigateType === 'push'\n\n  mutable.preserveCustomHistoryState = false\n  mutable.pendingPush = pendingPush\n\n  if (isExternalUrl) {\n    return handleExternalUrl(state, mutable, url.toString(), pendingPush)\n  }\n\n  // Handles case where `<meta http-equiv=\"refresh\">` tag is present,\n  // which will trigger an MPA navigation.\n  if (document.getElementById('__next-page-redirect')) {\n    return handleExternalUrl(state, mutable, href, pendingPush)\n  }\n\n  // Temporary glue code between the router reducer and the new navigation\n  // implementation. Eventually we'll rewrite the router reducer to a\n  // state machine.\n  const currentUrl = new URL(state.canonicalUrl, location.origin)\n  const result = navigateUsingSegmentCache(\n    url,\n    currentUrl,\n    state.cache,\n    state.tree,\n    state.nextUrl,\n    shouldScroll,\n    mutable\n  )\n  return handleNavigationResult(url, state, mutable, pendingPush, result)\n}\n"],"names":["DYNAMIC_STALETIME_MS","STATIC_STALETIME_MS","generateSegmentsFromPatch","handleExternalUrl","navigateReducer","Number","process","env","__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME","__NEXT_CLIENT_ROUTER_STATIC_STALETIME","state","mutable","url","pendingPush","mpaNavigation","canonicalUrl","scrollableSegments","undefined","handleMutable","flightRouterPatch","segments","segment","parallelRoutes","Object","keys","length","parallelRouteKey","parallelRoute","entries","childSegment","push","handleNavigationResult","result","tag","NavigationResultTag","MPA","newUrl","data","NoOp","newCanonicalUrl","oldUrl","URL","onlyHashChange","pathname","search","hash","shouldScroll","hashFragment","Success","cache","cacheNode","patchedTree","flightRouterState","renderedSearch","Async","then","asyncResult","action","isExternalUrl","navigateType","href","createHrefFromUrl","preserveCustomHistoryState","toString","document","getElementById","currentUrl","location","origin","navigateUsingSegmentCache","tree","nextUrl"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/segment-cache/output-export-prefetch-encoding.ts"],"sourcesContent":["// In output: export mode, the build id is added to the start of the HTML\n// document, directly after the doctype declaration. During a prefetch, the\n// client performs a range request to get the build id, so it can check whether\n// the target page belongs to the same build.\n//\n// The first 64 bytes of the document are requested. The exact number isn't\n// too important; it must be larger than the build id + doctype + closing and\n// ending comment markers, but it doesn't need to match the end of the\n// comment exactly.\n//\n// Build ids are 21 bytes long in the default implementation, though this\n// can be overridden in the Next.js config. For the purposes of this check,\n// it's OK to only match the start of the id, so we'll truncate it if exceeds\n// a certain length.\n\nconst DOCTYPE_PREFIX = '<!DOCTYPE html>' // 15 bytes\nconst MAX_BUILD_ID_LENGTH = 24\n\n// Request the first 64 bytes. The Range header is inclusive of the end value.\nexport const DOC_PREFETCH_RANGE_HEADER_VALUE = 'bytes=0-63'\n\nfunction escapeBuildId(buildId: string) {\n  // If the build id is longer than the given limit, it's OK for our purposes\n  // to only match the beginning.\n  const truncated = buildId.slice(0, MAX_BUILD_ID_LENGTH)\n  // Replace hyphens with underscores so it doesn't break the HTML comment.\n  // (Unlikely, but if this did happen it would break the whole document.)\n  return truncated.replace(/-/g, '_')\n}\n\nexport function insertBuildIdComment(originalHtml: string, buildId: string) {\n  if (\n    // Skip if the build id contains a closing comment marker.\n    buildId.includes('-->') ||\n    // React always inserts a doctype at the start of the document. Skip if it\n    // isn't present. Shouldn't happen; suggests an issue elsewhere.\n    !originalHtml.startsWith(DOCTYPE_PREFIX)\n  ) {\n    // Return the original HTML unchanged. This means the document will not\n    // be prefetched.\n    // TODO: The build id comment is currently only used during prefetches, but\n    // if we eventually use this mechanism for regular navigations, we may need\n    // to error during build if we fail to insert it for some reason.\n    return originalHtml\n  }\n  // The comment must be inserted after the doctype.\n  return originalHtml.replace(\n    DOCTYPE_PREFIX,\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n\nexport function doesExportedHtmlMatchBuildId(\n  partialHtmlDocument: string,\n  buildId: string\n) {\n  // Check whether the document starts with the expected buildId.\n  return partialHtmlDocument.startsWith(\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n"],"names":["DOC_PREFETCH_RANGE_HEADER_VALUE","doesExportedHtmlMatchBuildId","insertBuildIdComment","DOCTYPE_PREFIX","MAX_BUILD_ID_LENGTH","escapeBuildId","buildId","truncated","slice","replace","originalHtml","includes","startsWith","partialHtmlDocument"],"mappings":"AAAA,yEAAyE;AACzE,2EAA2E;AAC3E,+EAA+E;AAC/E,6CAA6C;AAC7C,EAAE;AACF,2EAA2E;AAC3E,6EAA6E;AAC7E,sEAAsE;AACtE,mBAAmB;AACnB,EAAE;AACF,yEAAyE;AACzE,2EAA2E;AAC3E,6EAA6E;AAC7E,oBAAoB;;;;;;;;;;;;;;;;IAMPA,+BAA+B,EAAA;eAA/BA;;IAiCGC,4BAA4B,EAAA;eAA5BA;;IAtBAC,oBAAoB,EAAA;eAApBA;;;AAfhB,MAAMC,iBAAiB,kBAAkB,WAAW;;AACpD,MAAMC,sBAAsB;AAGrB,MAAMJ,kCAAkC;AAE/C,SAASK,cAAcC,OAAe;IACpC,2EAA2E;IAC3E,+BAA+B;IAC/B,MAAMC,YAAYD,QAAQE,KAAK,CAAC,GAAGJ;IACnC,yEAAyE;IACzE,wEAAwE;IACxE,OAAOG,UAAUE,OAAO,CAAC,MAAM;AACjC;AAEO,SAASP,qBAAqBQ,YAAoB,EAAEJ,OAAe;IACxE,IACE,AACAA,QAAQK,QAAQ,CAAC,UACjB,+BAF0D,2CAEgB;IAC1E,gEAAgE;IAChE,CAACD,aAAaE,UAAU,CAACT,iBACzB;QACA,uEAAuE;QACvE,iBAAiB;QACjB,2EAA2E;QAC3E,2EAA2E;QAC3E,iEAAiE;QACjE,OAAOO;IACT;IACA,kDAAkD;IAClD,OAAOA,aAAaD,OAAO,CACzBN,gBACAA,iBAAiB,SAASE,cAAcC,WAAW;AAEvD;AAEO,SAASL,6BACdY,mBAA2B,EAC3BP,OAAe;IAEf,+DAA+D;IAC/D,OAAOO,oBAAoBD,UAAU,CACnCT,iBAAiB,SAASE,cAAcC,WAAW;AAEvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3409, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/promise-with-resolvers.ts"],"sourcesContent":["export function createPromiseWithResolvers<T>(): PromiseWithResolvers<T> {\n  // Shim of Stage 4 Promise.withResolvers proposal\n  let resolve: (value: T | PromiseLike<T>) => void\n  let reject: (reason: any) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { resolve: resolve!, reject: reject!, promise }\n}\n"],"names":["createPromiseWithResolvers","resolve","reject","promise","Promise","res","rej"],"mappings":";;;+BAAgBA,8BAAAA;;;eAAAA;;;AAAT,SAASA;IACd,iDAAiD;IACjD,IAAIC;IACJ,IAAIC;IACJ,MAAMC,UAAU,IAAIC,QAAW,CAACC,KAAKC;QACnCL,UAAUI;QACVH,SAASI;IACX;IACA,OAAO;QAAEL,SAASA;QAAUC,QAAQA;QAASC;IAAQ;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3436, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/cache.ts"],"sourcesContent":["import type {\n  TreePrefetch,\n  RootTreePrefetch,\n  SegmentPrefetch,\n} from '../../../server/app-render/collect-segment-data'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../../shared/lib/app-router-types'\nimport type {\n  CacheNodeSeedData,\n  DynamicParamTypesShort,\n  Segment as FlightRouterStateSegment,\n} from '../../../shared/lib/app-router-types'\nimport { HasLoadingBoundary } from '../../../shared/lib/app-router-types'\nimport {\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  RSC_CONTENT_TYPE_HEADER,\n  RSC_HEADER,\n} from '../app-router-headers'\nimport {\n  createFetch,\n  createFromNextReadableStream,\n  type RSCResponse,\n  type RequestHeaders,\n} from '../router-reducer/fetch-server-response'\nimport {\n  pingPrefetchTask,\n  isPrefetchTaskDirty,\n  type PrefetchTask,\n  type PrefetchSubtaskResult,\n  startRevalidationCooldown,\n} from './scheduler'\nimport { getAppBuildId } from '../../app-build-id'\nimport { createHrefFromUrl } from '../router-reducer/create-href-from-url'\nimport type {\n  NormalizedHref,\n  NormalizedNextUrl,\n  NormalizedSearch,\n  RouteCacheKey,\n} from './cache-key'\n// TODO: Rename this module to avoid confusion with other types of cache keys\nimport { createCacheKey as createPrefetchRequestKey } from './cache-key'\nimport {\n  doesStaticSegmentAppearInURL,\n  getCacheKeyForDynamicParam,\n  getParamValueFromCacheKey,\n  getRenderedPathname,\n  getRenderedSearch,\n  parseDynamicParamFromURLPart,\n  type RouteParam,\n} from '../../route-params'\nimport { createTupleMap, type TupleMap, type Prefix } from './tuple-map'\nimport { createLRU } from './lru'\nimport {\n  appendSegmentCacheKeyPart,\n  appendSegmentRequestKeyPart,\n  convertSegmentPathToStaticExportFilename,\n  createSegmentCacheKeyPart,\n  createSegmentRequestKeyPart,\n  ROOT_SEGMENT_CACHE_KEY,\n  ROOT_SEGMENT_REQUEST_KEY,\n  type SegmentCacheKey,\n  type SegmentRequestKey,\n} from '../../../shared/lib/segment-cache/segment-value-encoding'\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../shared/lib/app-router-types'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n} from '../../flight-data-helpers'\nimport { STATIC_STALETIME_MS } from '../router-reducer/reducers/navigate-reducer'\nimport { pingVisibleLinks } from '../links'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport {\n  DOC_PREFETCH_RANGE_HEADER_VALUE,\n  doesExportedHtmlMatchBuildId,\n} from '../../../shared/lib/segment-cache/output-export-prefetch-encoding'\nimport { FetchStrategy } from '../segment-cache'\nimport { createPromiseWithResolvers } from '../../../shared/lib/promise-with-resolvers'\n\n// A note on async/await when working in the prefetch cache:\n//\n// Most async operations in the prefetch cache should *not* use async/await,\n// Instead, spawn a subtask that writes the results to a cache entry, and attach\n// a \"ping\" listener to notify the prefetch queue to try again.\n//\n// The reason is we need to be able to access the segment cache and traverse its\n// data structures synchronously. For example, if there's a synchronous update\n// we can take an immediate snapshot of the cache to produce something we can\n// render. Limiting the use of async/await also makes it easier to avoid race\n// conditions, which is especially important because is cache is mutable.\n//\n// Another reason is that while we're performing async work, it's possible for\n// existing entries to become stale, or for Link prefetches to be removed from\n// the queue. For optimal scheduling, we need to be able to \"cancel\" subtasks\n// that are no longer needed. So, when a segment is received from the server, we\n// restart from the root of the tree that's being prefetched, to confirm all the\n// parent segments are still cached. If the segment is no longer reachable from\n// the root, then it's effectively canceled. This is similar to the design of\n// Rust Futures, or React Suspense.\n\nexport type RouteTree = {\n  cacheKey: SegmentCacheKey\n  requestKey: SegmentRequestKey\n  // TODO: Remove the `segment` field, now that it can be reconstructed\n  // from `param`.\n  segment: FlightRouterStateSegment\n  param: RouteParam | null\n  slots: null | {\n    [parallelRouteKey: string]: RouteTree\n  }\n  isRootLayout: boolean\n\n  // If this is a dynamic route, indicates whether there is a loading boundary\n  // somewhere in the tree. If not, we can skip the prefetch for the data,\n  // because we know it would be an empty response. (For a static/PPR route,\n  // this value is disregarded, because in that model `loading.tsx` is treated\n  // like any other Suspense boundary.)\n  hasLoadingBoundary: HasLoadingBoundary\n\n  // Indicates whether this route has a runtime prefetch that we can request.\n  // This is determined by the server; it's not purely a user configuration\n  // because the server may determine that a route is fully static and doesn't\n  // need runtime prefetching regardless of the configuration.\n  hasRuntimePrefetch: boolean\n}\n\ntype RouteCacheEntryShared = {\n  staleAt: number\n  // This is false only if we're certain the route cannot be intercepted. It's\n  // true in all other cases, including on initialization when we haven't yet\n  // received a response from the server.\n  couldBeIntercepted: boolean\n\n  // See comment in scheduler.ts for context\n  TODO_metadataStatus: EntryStatus.Empty | EntryStatus.Fulfilled\n  TODO_isHeadDynamic: boolean\n\n  // LRU-related fields\n  keypath: null | Prefix<RouteCacheKeypath>\n  next: null | RouteCacheEntry\n  prev: null | RouteCacheEntry\n  size: number\n}\n\n/**\n * Tracks the status of a cache entry as it progresses from no data (Empty),\n * waiting for server data (Pending), and finished (either Fulfilled or\n * Rejected depending on the response from the server.\n */\nexport const enum EntryStatus {\n  Empty = 0,\n  Pending = 1,\n  Fulfilled = 2,\n  Rejected = 3,\n}\n\ntype PendingRouteCacheEntry = RouteCacheEntryShared & {\n  status: EntryStatus.Empty | EntryStatus.Pending\n  blockedTasks: Set<PrefetchTask> | null\n  canonicalUrl: null\n  renderedSearch: null\n  tree: null\n  head: HeadData | null\n  isHeadPartial: true\n  isPPREnabled: false\n}\n\ntype RejectedRouteCacheEntry = RouteCacheEntryShared & {\n  status: EntryStatus.Rejected\n  blockedTasks: Set<PrefetchTask> | null\n  canonicalUrl: null\n  renderedSearch: null\n  tree: null\n  head: null\n  isHeadPartial: true\n  isPPREnabled: boolean\n}\n\nexport type FulfilledRouteCacheEntry = RouteCacheEntryShared & {\n  status: EntryStatus.Fulfilled\n  blockedTasks: null\n  canonicalUrl: string\n  renderedSearch: NormalizedSearch\n  tree: RouteTree\n  head: HeadData\n  isHeadPartial: boolean\n  isPPREnabled: boolean\n}\n\nexport type RouteCacheEntry =\n  | PendingRouteCacheEntry\n  | FulfilledRouteCacheEntry\n  | RejectedRouteCacheEntry\n\ntype SegmentCacheEntryShared = {\n  staleAt: number\n  fetchStrategy: FetchStrategy\n  revalidating: SegmentCacheEntry | null\n\n  // LRU-related fields\n  keypath: null | Prefix<SegmentCacheKeypath>\n  next: null | SegmentCacheEntry\n  prev: null | SegmentCacheEntry\n  size: number\n}\n\nexport type EmptySegmentCacheEntry = SegmentCacheEntryShared & {\n  status: EntryStatus.Empty\n  rsc: null\n  loading: null\n  isPartial: true\n  promise: null\n}\n\nexport type PendingSegmentCacheEntry = SegmentCacheEntryShared & {\n  status: EntryStatus.Pending\n  rsc: null\n  loading: null\n  isPartial: true\n  promise: null | PromiseWithResolvers<FulfilledSegmentCacheEntry | null>\n}\n\ntype RejectedSegmentCacheEntry = SegmentCacheEntryShared & {\n  status: EntryStatus.Rejected\n  rsc: null\n  loading: null\n  isPartial: true\n  promise: null\n}\n\nexport type FulfilledSegmentCacheEntry = SegmentCacheEntryShared & {\n  status: EntryStatus.Fulfilled\n  rsc: React.ReactNode | null\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n  isPartial: boolean\n  promise: null\n}\n\nexport type SegmentCacheEntry =\n  | EmptySegmentCacheEntry\n  | PendingSegmentCacheEntry\n  | RejectedSegmentCacheEntry\n  | FulfilledSegmentCacheEntry\n\nexport type NonEmptySegmentCacheEntry = Exclude<\n  SegmentCacheEntry,\n  EmptySegmentCacheEntry\n>\n\nconst isOutputExportMode =\n  process.env.NODE_ENV === 'production' &&\n  process.env.__NEXT_CONFIG_OUTPUT === 'export'\n\n/**\n * Ensures a minimum stale time of 30s to avoid issues where the server sends a too\n * short-lived stale time, which would prevent anything from being prefetched.\n */\nfunction getStaleTimeMs(staleTimeSeconds: number): number {\n  return Math.max(staleTimeSeconds, 30) * 1000\n}\n\n// Route cache entries vary on multiple keys: the href and the Next-Url. Each of\n// these parts needs to be included in the internal cache key. Rather than\n// concatenate the keys into a single key, we use a multi-level map, where the\n// first level is keyed by href, the second level is keyed by Next-Url, and so\n// on (if were to add more levels).\ntype RouteCacheKeypath = [NormalizedHref, NormalizedNextUrl]\nlet routeCacheMap: TupleMap<RouteCacheKeypath, RouteCacheEntry> =\n  createTupleMap()\n\n// We use an LRU for memory management. We must update this whenever we add or\n// remove a new cache entry, or when an entry changes size.\n// TODO: I chose the max size somewhat arbitrarily. Consider setting this based\n// on navigator.deviceMemory, or some other heuristic. We should make this\n// customizable via the Next.js config, too.\nconst maxRouteLruSize = 10 * 1024 * 1024 // 10 MB\nlet routeCacheLru = createLRU<RouteCacheEntry>(\n  maxRouteLruSize,\n  onRouteLRUEviction\n)\n\ntype SegmentCacheKeypath = [string, NormalizedSearch]\nlet segmentCacheMap: TupleMap<SegmentCacheKeypath, SegmentCacheEntry> =\n  createTupleMap()\n// NOTE: Segments and Route entries are managed by separate LRUs. We could\n// combine them into a single LRU, but because they are separate types, we'd\n// need to wrap each one in an extra LRU node (to maintain monomorphism, at the\n// cost of additional memory).\nconst maxSegmentLruSize = 50 * 1024 * 1024 // 50 MB\nlet segmentCacheLru = createLRU<SegmentCacheEntry>(\n  maxSegmentLruSize,\n  onSegmentLRUEviction\n)\n\n// All invalidation listeners for the whole cache are tracked in single set.\n// Since we don't yet support tag or path-based invalidation, there's no point\n// tracking them any more granularly than this. Once we add granular\n// invalidation, that may change, though generally the model is to just notify\n// the listeners and allow the caller to poll the prefetch cache with a new\n// prefetch task if desired.\nlet invalidationListeners: Set<PrefetchTask> | null = null\n\n// Incrementing counter used to track cache invalidations.\nlet currentCacheVersion = 0\n\nexport function getCurrentCacheVersion(): number {\n  return currentCacheVersion\n}\n\n/**\n * Used to clear the client prefetch cache when a server action calls\n * revalidatePath or revalidateTag. Eventually we will support only clearing the\n * segments that were actually affected, but there's more work to be done on the\n * server before the client is able to do this correctly.\n */\nexport function revalidateEntireCache(\n  nextUrl: string | null,\n  tree: FlightRouterState\n) {\n  currentCacheVersion++\n\n  // Start a cooldown before re-prefetching to allow CDN cache propagation.\n  startRevalidationCooldown()\n\n  // Clearing the cache also effectively rejects any pending requests, because\n  // when the response is received, it gets written into a cache entry that is\n  // no longer reachable.\n  // TODO: There's an exception to this case that we don't currently handle\n  // correctly: background revalidations. See note in `upsertSegmentEntry`.\n  routeCacheMap = createTupleMap()\n  routeCacheLru = createLRU(maxRouteLruSize, onRouteLRUEviction)\n  segmentCacheMap = createTupleMap()\n  segmentCacheLru = createLRU(maxSegmentLruSize, onSegmentLRUEviction)\n\n  // Prefetch all the currently visible links again, to re-fill the cache.\n  pingVisibleLinks(nextUrl, tree)\n\n  // Similarly, notify all invalidation listeners (i.e. those passed to\n  // `router.prefetch(onInvalidate)`), so they can trigger a new prefetch\n  // if needed.\n  pingInvalidationListeners(nextUrl, tree)\n}\n\nfunction attachInvalidationListener(task: PrefetchTask): void {\n  // This function is called whenever a prefetch task reads a cache entry. If\n  // the task has an onInvalidate function associated with it — i.e. the one\n  // optionally passed to router.prefetch(onInvalidate) — then we attach that\n  // listener to the every cache entry that the task reads. Then, if an entry\n  // is invalidated, we call the function.\n  if (task.onInvalidate !== null) {\n    if (invalidationListeners === null) {\n      invalidationListeners = new Set([task])\n    } else {\n      invalidationListeners.add(task)\n    }\n  }\n}\n\nfunction notifyInvalidationListener(task: PrefetchTask): void {\n  const onInvalidate = task.onInvalidate\n  if (onInvalidate !== null) {\n    // Clear the callback from the task object to guarantee it's not called more\n    // than once.\n    task.onInvalidate = null\n\n    // This is a user-space function, so we must wrap in try/catch.\n    try {\n      onInvalidate()\n    } catch (error) {\n      if (typeof reportError === 'function') {\n        reportError(error)\n      } else {\n        console.error(error)\n      }\n    }\n  }\n}\n\nexport function pingInvalidationListeners(\n  nextUrl: string | null,\n  tree: FlightRouterState\n): void {\n  // The rough equivalent of pingVisibleLinks, but for onInvalidate callbacks.\n  // This is called when the Next-Url or the base tree changes, since those\n  // may affect the result of a prefetch task. It's also called after a\n  // cache invalidation.\n  if (invalidationListeners !== null) {\n    const tasks = invalidationListeners\n    invalidationListeners = null\n    for (const task of tasks) {\n      if (isPrefetchTaskDirty(task, nextUrl, tree)) {\n        notifyInvalidationListener(task)\n      }\n    }\n  }\n}\n\nexport function readExactRouteCacheEntry(\n  now: number,\n  href: NormalizedHref,\n  nextUrl: NormalizedNextUrl | null\n): RouteCacheEntry | null {\n  const keypath: Prefix<RouteCacheKeypath> =\n    nextUrl === null ? [href] : [href, nextUrl]\n  const existingEntry = routeCacheMap.get(keypath)\n  if (existingEntry !== null) {\n    // Check if the entry is stale\n    if (existingEntry.staleAt > now) {\n      // Reuse the existing entry.\n\n      // Since this is an access, move the entry to the front of the LRU.\n      routeCacheLru.put(existingEntry)\n\n      return existingEntry\n    } else {\n      // Evict the stale entry from the cache.\n      deleteRouteFromCache(existingEntry, keypath)\n    }\n  }\n  return null\n}\n\nexport function readRouteCacheEntry(\n  now: number,\n  key: RouteCacheKey\n): RouteCacheEntry | null {\n  // First check if there's a non-intercepted entry. Most routes cannot be\n  // intercepted, so this is the common case.\n  const nonInterceptedEntry = readExactRouteCacheEntry(now, key.href, null)\n  if (nonInterceptedEntry !== null && !nonInterceptedEntry.couldBeIntercepted) {\n    // Found a match, and the route cannot be intercepted. We can reuse it.\n    return nonInterceptedEntry\n  }\n  // There was no match. Check again but include the Next-Url this time.\n  return readExactRouteCacheEntry(now, key.href, key.nextUrl)\n}\n\nexport function getSegmentKeypath(\n  fetchStrategy: FetchStrategy,\n  route: FulfilledRouteCacheEntry,\n  cacheKey: SegmentCacheKey\n): Prefix<SegmentCacheKeypath> {\n  // When a prefetch includes dynamic data, the search params are included\n  // in the result, so we must include the search string in the segment\n  // cache key. (Note that this is true even if the search string is empty.)\n  //\n  // If we're fetching using PPR, we do not need to include the search params in\n  // the cache key, because the search params are treated as dynamic data. The\n  // cache entry is valid for all possible search param values.\n  const isDynamic =\n    fetchStrategy === FetchStrategy.Full ||\n    fetchStrategy === FetchStrategy.PPRRuntime ||\n    !route.isPPREnabled\n  return isDynamic && cacheKey.endsWith('/' + PAGE_SEGMENT_KEY)\n    ? [cacheKey, route.renderedSearch]\n    : [cacheKey]\n}\n\nexport function readSegmentCacheEntry(\n  now: number,\n  route: FulfilledRouteCacheEntry,\n  cacheKey: SegmentCacheKey\n): SegmentCacheEntry | null {\n  if (!cacheKey.endsWith('/' + PAGE_SEGMENT_KEY)) {\n    // Fast path. Search params only exist on page segments.\n    return readExactSegmentCacheEntry(now, [cacheKey])\n  }\n\n  const renderedSearch = route.renderedSearch\n  if (renderedSearch !== null) {\n    // Page segments may or may not contain search params. If they were prefetched\n    // using a dynamic request, then we will have an entry with search params.\n    // Check for that case first.\n    const entryWithSearchParams = readExactSegmentCacheEntry(now, [\n      cacheKey,\n      renderedSearch,\n    ])\n    if (entryWithSearchParams !== null) {\n      return entryWithSearchParams\n    }\n  }\n\n  // If we did not find an entry with the given search params, check for a\n  // \"fallback\" entry, where the search params are treated as dynamic data. This\n  // is the common case because PPR/static prerenders always treat search params\n  // as dynamic.\n  //\n  // See corresponding logic in `getSegmentKeypath`.\n  const entryWithoutSearchParams = readExactSegmentCacheEntry(now, [cacheKey])\n  return entryWithoutSearchParams\n}\n\nfunction readExactSegmentCacheEntry(\n  now: number,\n  keypath: Prefix<SegmentCacheKeypath>\n): SegmentCacheEntry | null {\n  const existingEntry = segmentCacheMap.get(keypath)\n  if (existingEntry !== null) {\n    // Check if the entry is stale\n    if (existingEntry.staleAt > now) {\n      // Reuse the existing entry.\n\n      // Since this is an access, move the entry to the front of the LRU.\n      segmentCacheLru.put(existingEntry)\n\n      return existingEntry\n    } else {\n      // This is a stale entry.\n      const revalidatingEntry = existingEntry.revalidating\n      if (revalidatingEntry !== null) {\n        // There's a revalidation in progress. Upsert it.\n        const upsertedEntry = upsertSegmentEntry(\n          now,\n          keypath,\n          revalidatingEntry\n        )\n        if (upsertedEntry !== null && upsertedEntry.staleAt > now) {\n          // We can use the upserted revalidation entry.\n          return upsertedEntry\n        }\n      } else {\n        // Evict the stale entry from the cache.\n        deleteSegmentFromCache(existingEntry, keypath)\n      }\n    }\n  }\n  return null\n}\n\nfunction readRevalidatingSegmentCacheEntry(\n  now: number,\n  owner: SegmentCacheEntry\n): SegmentCacheEntry | null {\n  const existingRevalidation = owner.revalidating\n  if (existingRevalidation !== null) {\n    if (existingRevalidation.staleAt > now) {\n      // There's already a revalidation in progress. Or a previous revalidation\n      // failed and it has not yet expired.\n      return existingRevalidation\n    } else {\n      // Clear the stale revalidation from its owner.\n      clearRevalidatingSegmentFromOwner(owner)\n    }\n  }\n  return null\n}\n\nexport function waitForSegmentCacheEntry(\n  pendingEntry: PendingSegmentCacheEntry\n): Promise<FulfilledSegmentCacheEntry | null> {\n  // Because the entry is pending, there's already a in-progress request.\n  // Attach a promise to the entry that will resolve when the server responds.\n  let promiseWithResolvers = pendingEntry.promise\n  if (promiseWithResolvers === null) {\n    promiseWithResolvers = pendingEntry.promise =\n      createPromiseWithResolvers<FulfilledSegmentCacheEntry | null>()\n  } else {\n    // There's already a promise we can use\n  }\n  return promiseWithResolvers.promise\n}\n\n/**\n * Checks if an entry for a route exists in the cache. If so, it returns the\n * entry, If not, it adds an empty entry to the cache and returns it.\n */\nexport function readOrCreateRouteCacheEntry(\n  now: number,\n  task: PrefetchTask,\n  key: RouteCacheKey\n): RouteCacheEntry {\n  attachInvalidationListener(task)\n\n  const existingEntry = readRouteCacheEntry(now, key)\n  if (existingEntry !== null) {\n    return existingEntry\n  }\n  // Create a pending entry and add it to the cache.\n  const pendingEntry: PendingRouteCacheEntry = {\n    canonicalUrl: null,\n    status: EntryStatus.Empty,\n    blockedTasks: null,\n    tree: null,\n    head: null,\n    isHeadPartial: true,\n    // Since this is an empty entry, there's no reason to ever evict it. It will\n    // be updated when the data is populated.\n    staleAt: Infinity,\n    // This is initialized to true because we don't know yet whether the route\n    // could be intercepted. It's only set to false once we receive a response\n    // from the server.\n    couldBeIntercepted: true,\n    // Similarly, we don't yet know if the route supports PPR.\n    isPPREnabled: false,\n    renderedSearch: null,\n\n    TODO_metadataStatus: EntryStatus.Empty,\n    TODO_isHeadDynamic: false,\n\n    // LRU-related fields\n    keypath: null,\n    next: null,\n    prev: null,\n    size: 0,\n  }\n  const keypath: Prefix<RouteCacheKeypath> =\n    key.nextUrl === null ? [key.href] : [key.href, key.nextUrl]\n  routeCacheMap.set(keypath, pendingEntry)\n  // Stash the keypath on the entry so we know how to remove it from the map\n  // if it gets evicted from the LRU.\n  pendingEntry.keypath = keypath\n  routeCacheLru.put(pendingEntry)\n  return pendingEntry\n}\n\nexport function requestOptimisticRouteCacheEntry(\n  now: number,\n  requestedUrl: URL,\n  nextUrl: string | null\n): FulfilledRouteCacheEntry | null {\n  // This function is called during a navigation when there was no matching\n  // route tree in the prefetch cache. Before de-opting to a blocking,\n  // unprefetched navigation, we will first attempt to construct an \"optimistic\"\n  // route tree by checking the cache for similar routes.\n  //\n  // Check if there's a route with the same pathname, but with different\n  // search params. We can then base our optimistic route tree on this entry.\n  //\n  // Conceptually, we are simulating what would happen if we did perform a\n  // prefetch the requested URL, under the assumption that the server will\n  // not redirect or rewrite the request in a different manner than the\n  // base route tree. This assumption might not hold, in which case we'll have\n  // to recover when we perform the dynamic navigation request. However, this\n  // is what would happen if a route were dynamically rewritten/redirected\n  // in between the prefetch and the navigation. So the logic needs to exist\n  // to handle this case regardless.\n\n  // Look for a route with the same pathname, but with an empty search string.\n  // TODO: There's nothing inherently special about the empty search string;\n  // it's chosen somewhat arbitrarily, with the rationale that it's the most\n  // likely one to exist. But we should update this to match _any_ search\n  // string. The plan is to generalize this logic alongside other improvements\n  // related to \"fallback\" cache entries.\n  const requestedSearch = requestedUrl.search as NormalizedSearch\n  if (requestedSearch === '') {\n    // The caller would have already checked if a route with an empty search\n    // string is in the cache. So we can bail out here.\n    return null\n  }\n  const urlWithoutSearchParams = new URL(requestedUrl)\n  urlWithoutSearchParams.search = ''\n  const routeWithNoSearchParams = readRouteCacheEntry(\n    now,\n    createPrefetchRequestKey(urlWithoutSearchParams.href, nextUrl)\n  )\n\n  if (\n    routeWithNoSearchParams === null ||\n    routeWithNoSearchParams.status !== EntryStatus.Fulfilled\n  ) {\n    // Bail out of constructing an optimistic route tree. This will result in\n    // a blocking, unprefetched navigation.\n    return null\n  }\n\n  // Now we have a base route tree we can \"patch\" with our optimistic values.\n\n  const TODO_isHeadDynamic = routeWithNoSearchParams.TODO_isHeadDynamic\n  let head\n  let isHeadPartial\n  let TODO_metadataStatus: EntryStatus.Empty | EntryStatus.Fulfilled\n  if (TODO_isHeadDynamic) {\n    // If the head was fetched via dynamic request, then we don't know\n    // whether it accessed search params. So we must be conservative — we\n    // cannot reuse it. The head will stream in during the dynamic navigation.\n    // TODO: When Cache Components is enabled, we should track whether the\n    // head varied on search params.\n    // TODO: Because we're rendering a `null` viewport as the partial state, the\n    // viewport will not block the navigation; it will stream in later,\n    // alongside the metadata. Viewport is supposed to be blocking. This is\n    // a subtle bug in the old implementation that we've preserved here. It's\n    // rare enough that we're not going to fix it for apps that don't enable\n    // Cache Components; when Cache Components is enabled, though, we should\n    // use an infinite promise here to block the navigation. But only if the\n    // entry actually varies on search params.\n    head = [null, null]\n    // Setting this to `true` ensures that on navigation, the head is requested.\n    isHeadPartial = true\n    TODO_metadataStatus = EntryStatus.Empty\n  } else {\n    // The head was fetched via a static/PPR request. So it's guaranteed to\n    // not contain search params. We can reuse it.\n    head = routeWithNoSearchParams.head\n    isHeadPartial = routeWithNoSearchParams.isHeadPartial\n    TODO_metadataStatus = EntryStatus.Empty\n  }\n\n  // Optimistically assume that redirects for the requested pathname do\n  // not vary on the search string. Therefore, if the base route was\n  // redirected to a different search string, then the optimistic route\n  // should be redirected to the same search string. Otherwise, we use\n  // the requested search string.\n  const canonicalUrlForRouteWithNoSearchParams = new URL(\n    routeWithNoSearchParams.canonicalUrl,\n    requestedUrl.origin\n  )\n  const optimisticCanonicalSearch =\n    canonicalUrlForRouteWithNoSearchParams.search !== ''\n      ? // Base route was redirected. Reuse the same redirected search string.\n        canonicalUrlForRouteWithNoSearchParams.search\n      : requestedSearch\n\n  // Similarly, optimistically assume that rewrites for the requested\n  // pathname do not vary on the search string. Therefore, if the base\n  // route was rewritten to a different search string, then the optimistic\n  // route should be rewritten to the same search string. Otherwise, we use\n  // the requested search string.\n  const optimisticRenderedSearch =\n    routeWithNoSearchParams.renderedSearch !== ''\n      ? // Base route was rewritten. Reuse the same rewritten search string.\n        routeWithNoSearchParams.renderedSearch\n      : requestedSearch\n\n  const optimisticUrl = new URL(\n    routeWithNoSearchParams.canonicalUrl,\n    location.origin\n  )\n  optimisticUrl.search = optimisticCanonicalSearch\n  const optimisticCanonicalUrl = createHrefFromUrl(optimisticUrl)\n\n  // Clone the base route tree, and override the relevant fields with our\n  // optimistic values.\n  const optimisticEntry: FulfilledRouteCacheEntry = {\n    canonicalUrl: optimisticCanonicalUrl,\n\n    status: EntryStatus.Fulfilled,\n    // This isn't cloned because it's instance-specific\n    blockedTasks: null,\n    tree: routeWithNoSearchParams.tree,\n    head,\n    isHeadPartial,\n    staleAt: routeWithNoSearchParams.staleAt,\n    couldBeIntercepted: routeWithNoSearchParams.couldBeIntercepted,\n    isPPREnabled: routeWithNoSearchParams.isPPREnabled,\n\n    // Override the rendered search with the optimistic value.\n    renderedSearch: optimisticRenderedSearch,\n\n    TODO_metadataStatus,\n    TODO_isHeadDynamic,\n\n    // LRU-related fields\n    keypath: null,\n    next: null,\n    prev: null,\n    size: 0,\n  }\n\n  // Do not insert this entry into the cache. It only exists so we can\n  // perform the current navigation. Just return it to the caller.\n  return optimisticEntry\n}\n\n/**\n * Checks if an entry for a segment exists in the cache. If so, it returns the\n * entry, If not, it adds an empty entry to the cache and returns it.\n */\nexport function readOrCreateSegmentCacheEntry(\n  now: number,\n  fetchStrategy: FetchStrategy,\n  route: FulfilledRouteCacheEntry,\n  cacheKey: SegmentCacheKey\n): SegmentCacheEntry {\n  const keypath = getSegmentKeypath(fetchStrategy, route, cacheKey)\n  const existingEntry = readExactSegmentCacheEntry(now, keypath)\n  if (existingEntry !== null) {\n    return existingEntry\n  }\n  // Create a pending entry and add it to the cache.\n  const pendingEntry = createDetachedSegmentCacheEntry(route.staleAt)\n  segmentCacheMap.set(keypath, pendingEntry)\n  // Stash the keypath on the entry so we know how to remove it from the map\n  // if it gets evicted from the LRU.\n  pendingEntry.keypath = keypath\n  segmentCacheLru.put(pendingEntry)\n  return pendingEntry\n}\n\nexport function readOrCreateRevalidatingSegmentEntry(\n  now: number,\n  prevEntry: SegmentCacheEntry\n): SegmentCacheEntry {\n  const existingRevalidation = readRevalidatingSegmentCacheEntry(now, prevEntry)\n  if (existingRevalidation !== null) {\n    return existingRevalidation\n  }\n  const pendingEntry = createDetachedSegmentCacheEntry(prevEntry.staleAt)\n\n  // Background revalidations are not stored directly in the cache map or LRU;\n  // they're stashed on the entry that they will (potentially) replace.\n  //\n  // Note that we don't actually ever clear this field, except when the entry\n  // expires. When the revalidation finishes, one of two things will happen:\n  //\n  //  1) the revalidation is successful, `prevEntry` is removed from the cache\n  //     and garbage collected (so there's no point clearing any of its fields)\n  //  2) the revalidation fails, and we'll use the `revalidating` field to\n  //     prevent subsequent revalidation attempts, until it expires.\n  prevEntry.revalidating = pendingEntry\n\n  return pendingEntry\n}\n\nexport function upsertSegmentEntry(\n  now: number,\n  keypath: Prefix<SegmentCacheKeypath>,\n  candidateEntry: SegmentCacheEntry\n): SegmentCacheEntry | null {\n  // We have a new entry that has not yet been inserted into the cache. Before\n  // we do so, we need to confirm whether it takes precedence over the existing\n  // entry (if one exists).\n  // TODO: We should not upsert an entry if its key was invalidated in the time\n  // since the request was made. We can do that by passing the \"owner\" entry to\n  // this function and confirming it's the same as `existingEntry`.\n  const existingEntry = readExactSegmentCacheEntry(now, keypath)\n  if (existingEntry !== null) {\n    // Don't replace a more specific segment with a less-specific one. A case where this\n    // might happen is if the existing segment was fetched via\n    // `<Link prefetch={true}>`.\n    if (\n      // We fetched the new segment using a different, less specific fetch strategy\n      // than the segment we already have in the cache, so it can't have more content.\n      (candidateEntry.fetchStrategy !== existingEntry.fetchStrategy &&\n        !canNewFetchStrategyProvideMoreContent(\n          existingEntry.fetchStrategy,\n          candidateEntry.fetchStrategy\n        )) ||\n      // The existing entry isn't partial, but the new one is.\n      // (TODO: can this be true if `candidateEntry.fetchStrategy >= existingEntry.fetchStrategy`?)\n      (!existingEntry.isPartial && candidateEntry.isPartial)\n    ) {\n      // We're going to leave the entry on the owner's `revalidating` field\n      // so that it doesn't get revalidated again unnecessarily. Downgrade the\n      // Fulfilled entry to Rejected and null out the data so it can be garbage\n      // collected. We leave `staleAt` intact to prevent subsequent revalidation\n      // attempts only until the entry expires.\n      const rejectedEntry: RejectedSegmentCacheEntry = candidateEntry as any\n      rejectedEntry.status = EntryStatus.Rejected\n      rejectedEntry.loading = null\n      rejectedEntry.rsc = null\n      return null\n    }\n\n    // Evict the existing entry from the cache.\n    deleteSegmentFromCache(existingEntry, keypath)\n  }\n  segmentCacheMap.set(keypath, candidateEntry)\n  // Stash the keypath on the entry so we know how to remove it from the map\n  // if it gets evicted from the LRU.\n  candidateEntry.keypath = keypath\n  segmentCacheLru.put(candidateEntry)\n  return candidateEntry\n}\n\nexport function createDetachedSegmentCacheEntry(\n  staleAt: number\n): EmptySegmentCacheEntry {\n  const emptyEntry: EmptySegmentCacheEntry = {\n    status: EntryStatus.Empty,\n    // Default to assuming the fetch strategy will be PPR. This will be updated\n    // when a fetch is actually initiated.\n    fetchStrategy: FetchStrategy.PPR,\n    revalidating: null,\n    rsc: null,\n    loading: null,\n    staleAt,\n    isPartial: true,\n    promise: null,\n\n    // LRU-related fields\n    keypath: null,\n    next: null,\n    prev: null,\n    size: 0,\n  }\n  return emptyEntry\n}\n\nexport function upgradeToPendingSegment(\n  emptyEntry: EmptySegmentCacheEntry,\n  fetchStrategy: FetchStrategy\n): PendingSegmentCacheEntry {\n  const pendingEntry: PendingSegmentCacheEntry = emptyEntry as any\n  pendingEntry.status = EntryStatus.Pending\n  pendingEntry.fetchStrategy = fetchStrategy\n  return pendingEntry\n}\n\nfunction deleteRouteFromCache(\n  entry: RouteCacheEntry,\n  keypath: Prefix<RouteCacheKeypath>\n): void {\n  pingBlockedTasks(entry)\n  routeCacheMap.delete(keypath)\n  routeCacheLru.delete(entry)\n}\n\nfunction deleteSegmentFromCache(\n  entry: SegmentCacheEntry,\n  keypath: Prefix<SegmentCacheKeypath>\n): void {\n  cancelEntryListeners(entry)\n  segmentCacheMap.delete(keypath)\n  segmentCacheLru.delete(entry)\n  clearRevalidatingSegmentFromOwner(entry)\n}\n\nfunction clearRevalidatingSegmentFromOwner(owner: SegmentCacheEntry): void {\n  // Revalidating segments are not stored in the cache directly; they're\n  // stored as a field on the entry that they will (potentially) replace. So\n  // to dispose of an existing revalidation, we just need to null out the field\n  // on the owner.\n  const revalidatingSegment = owner.revalidating\n  if (revalidatingSegment !== null) {\n    cancelEntryListeners(revalidatingSegment)\n    owner.revalidating = null\n  }\n}\n\nexport function resetRevalidatingSegmentEntry(\n  owner: SegmentCacheEntry\n): EmptySegmentCacheEntry {\n  clearRevalidatingSegmentFromOwner(owner)\n  const emptyEntry = createDetachedSegmentCacheEntry(owner.staleAt)\n  owner.revalidating = emptyEntry\n  return emptyEntry\n}\n\nfunction onRouteLRUEviction(entry: RouteCacheEntry): void {\n  // The LRU evicted this entry. Remove it from the map.\n  const keypath = entry.keypath\n  if (keypath !== null) {\n    entry.keypath = null\n    pingBlockedTasks(entry)\n    routeCacheMap.delete(keypath)\n  }\n}\n\nfunction onSegmentLRUEviction(entry: SegmentCacheEntry): void {\n  // The LRU evicted this entry. Remove it from the map.\n  const keypath = entry.keypath\n  if (keypath !== null) {\n    entry.keypath = null\n    cancelEntryListeners(entry)\n    segmentCacheMap.delete(keypath)\n  }\n}\n\nfunction cancelEntryListeners(entry: SegmentCacheEntry): void {\n  if (entry.status === EntryStatus.Pending && entry.promise !== null) {\n    // There were listeners for this entry. Resolve them with `null` to indicate\n    // that the prefetch failed. It's up to the listener to decide how to handle\n    // this case.\n    // NOTE: We don't currently propagate the reason the prefetch was canceled\n    // but we could by accepting a `reason` argument.\n    entry.promise.resolve(null)\n    entry.promise = null\n  }\n}\n\nfunction pingBlockedTasks(entry: {\n  blockedTasks: Set<PrefetchTask> | null\n}): void {\n  const blockedTasks = entry.blockedTasks\n  if (blockedTasks !== null) {\n    for (const task of blockedTasks) {\n      pingPrefetchTask(task)\n    }\n    entry.blockedTasks = null\n  }\n}\n\nfunction fulfillRouteCacheEntry(\n  entry: RouteCacheEntry,\n  tree: RouteTree,\n  head: HeadData,\n  isHeadPartial: boolean,\n  staleAt: number,\n  couldBeIntercepted: boolean,\n  canonicalUrl: string,\n  renderedSearch: NormalizedSearch,\n  isPPREnabled: boolean,\n  isHeadDynamic: boolean\n): FulfilledRouteCacheEntry {\n  const fulfilledEntry: FulfilledRouteCacheEntry = entry as any\n  fulfilledEntry.status = EntryStatus.Fulfilled\n  fulfilledEntry.tree = tree\n  fulfilledEntry.head = head\n  fulfilledEntry.isHeadPartial = isHeadPartial\n  fulfilledEntry.staleAt = staleAt\n  fulfilledEntry.couldBeIntercepted = couldBeIntercepted\n  fulfilledEntry.canonicalUrl = canonicalUrl\n  fulfilledEntry.renderedSearch = renderedSearch\n  fulfilledEntry.isPPREnabled = isPPREnabled\n  fulfilledEntry.TODO_isHeadDynamic = isHeadDynamic\n  pingBlockedTasks(entry)\n  return fulfilledEntry\n}\n\nfunction fulfillSegmentCacheEntry(\n  segmentCacheEntry: PendingSegmentCacheEntry,\n  rsc: React.ReactNode,\n  loading: LoadingModuleData | Promise<LoadingModuleData>,\n  staleAt: number,\n  isPartial: boolean\n): FulfilledSegmentCacheEntry {\n  const fulfilledEntry: FulfilledSegmentCacheEntry = segmentCacheEntry as any\n  fulfilledEntry.status = EntryStatus.Fulfilled\n  fulfilledEntry.rsc = rsc\n  fulfilledEntry.loading = loading\n  fulfilledEntry.staleAt = staleAt\n  fulfilledEntry.isPartial = isPartial\n  // Resolve any listeners that were waiting for this data.\n  if (segmentCacheEntry.promise !== null) {\n    segmentCacheEntry.promise.resolve(fulfilledEntry)\n    // Free the promise for garbage collection.\n    fulfilledEntry.promise = null\n  }\n  return fulfilledEntry\n}\n\nfunction rejectRouteCacheEntry(\n  entry: PendingRouteCacheEntry,\n  staleAt: number\n): void {\n  const rejectedEntry: RejectedRouteCacheEntry = entry as any\n  rejectedEntry.status = EntryStatus.Rejected\n  rejectedEntry.staleAt = staleAt\n  pingBlockedTasks(entry)\n}\n\nfunction rejectSegmentCacheEntry(\n  entry: PendingSegmentCacheEntry,\n  staleAt: number\n): void {\n  const rejectedEntry: RejectedSegmentCacheEntry = entry as any\n  rejectedEntry.status = EntryStatus.Rejected\n  rejectedEntry.staleAt = staleAt\n  if (entry.promise !== null) {\n    // NOTE: We don't currently propagate the reason the prefetch was canceled\n    // but we could by accepting a `reason` argument.\n    entry.promise.resolve(null)\n    entry.promise = null\n  }\n}\n\nfunction convertRootTreePrefetchToRouteTree(\n  rootTree: RootTreePrefetch,\n  renderedPathname: string\n) {\n  // Remove trailing and leading slashes\n  const pathnameParts = renderedPathname.split('/').filter((p) => p !== '')\n  const index = 0\n  const rootSegment = ROOT_SEGMENT_CACHE_KEY\n  return convertTreePrefetchToRouteTree(\n    rootTree.tree,\n    rootSegment,\n    null,\n    ROOT_SEGMENT_REQUEST_KEY,\n    ROOT_SEGMENT_CACHE_KEY,\n    pathnameParts,\n    index\n  )\n}\n\nfunction convertTreePrefetchToRouteTree(\n  prefetch: TreePrefetch,\n  segment: FlightRouterStateSegment,\n  param: RouteParam | null,\n  requestKey: SegmentRequestKey,\n  cacheKey: SegmentCacheKey,\n  pathnameParts: Array<string>,\n  pathnamePartsIndex: number\n): RouteTree {\n  // Converts the route tree sent by the server into the format used by the\n  // cache. The cached version of the tree includes additional fields, such as a\n  // cache key for each segment. Since this is frequently accessed, we compute\n  // it once instead of on every access. This same cache key is also used to\n  // request the segment from the server.\n\n  let slots: { [parallelRouteKey: string]: RouteTree } | null = null\n  const prefetchSlots = prefetch.slots\n  if (prefetchSlots !== null) {\n    slots = {}\n    for (let parallelRouteKey in prefetchSlots) {\n      const childPrefetch = prefetchSlots[parallelRouteKey]\n      const childParamName = childPrefetch.name\n      const childParamType = childPrefetch.paramType\n      const childServerSentParamKey = childPrefetch.paramKey\n\n      let childDoesAppearInURL: boolean\n      let childParam: RouteParam | null = null\n      let childSegment: FlightRouterStateSegment\n      if (childParamType !== null) {\n        // This segment is parameterized. Get the param from the pathname.\n        const childParamValue = parseDynamicParamFromURLPart(\n          childParamType,\n          pathnameParts,\n          pathnamePartsIndex\n        )\n\n        // Assign a cache key to the segment, based on the param value. In the\n        // pre-Segment Cache implementation, the server computes this and sends\n        // it in the body of the response. In the Segment Cache implementation,\n        // the server sends an empty string and we fill it in here.\n\n        // TODO: We're intentionally not adding the search param to page\n        // segments here; it's tracked separately and added back during a read.\n        // This would clearer if we waited to construct the segment until it's\n        // read from the cache, since that's effectively what we're\n        // doing anyway.\n        const renderedSearch = '' as NormalizedSearch\n        const childParamKey =\n          // The server omits this field from the prefetch response when\n          // cacheComponents is enabled.\n          childServerSentParamKey !== null\n            ? childServerSentParamKey\n            : // If no param key was sent, use the value parsed on the client.\n              getCacheKeyForDynamicParam(childParamValue, renderedSearch)\n\n        childParam = {\n          name: childParamName,\n          value: childParamValue,\n          type: childParamType,\n        }\n        childSegment = [childParamName, childParamKey, childParamType]\n        childDoesAppearInURL = true\n      } else {\n        childSegment = childParamName\n        childDoesAppearInURL = doesStaticSegmentAppearInURL(childParamName)\n      }\n\n      // Only increment the index if the segment appears in the URL. If it's a\n      // \"virtual\" segment, like a route group, it remains the same.\n      const childPathnamePartsIndex = childDoesAppearInURL\n        ? pathnamePartsIndex + 1\n        : pathnamePartsIndex\n\n      const childRequestKeyPart = createSegmentRequestKeyPart(childSegment)\n      const childRequestKey = appendSegmentRequestKeyPart(\n        requestKey,\n        parallelRouteKey,\n        childRequestKeyPart\n      )\n      const childCacheKey = appendSegmentCacheKeyPart(\n        cacheKey,\n        parallelRouteKey,\n        createSegmentCacheKeyPart(childRequestKeyPart, childSegment)\n      )\n      slots[parallelRouteKey] = convertTreePrefetchToRouteTree(\n        childPrefetch,\n        childSegment,\n        childParam,\n        childRequestKey,\n        childCacheKey,\n        pathnameParts,\n        childPathnamePartsIndex\n      )\n    }\n  }\n\n  return {\n    cacheKey,\n    requestKey,\n    segment,\n    param,\n    slots,\n    isRootLayout: prefetch.isRootLayout,\n    // This field is only relevant to dynamic routes. For a PPR/static route,\n    // there's always some partial loading state we can fetch.\n    hasLoadingBoundary: HasLoadingBoundary.SegmentHasLoadingBoundary,\n    hasRuntimePrefetch: prefetch.hasRuntimePrefetch,\n  }\n}\n\nfunction convertRootFlightRouterStateToRouteTree(\n  flightRouterState: FlightRouterState\n): RouteTree {\n  return convertFlightRouterStateToRouteTree(\n    flightRouterState,\n    ROOT_SEGMENT_CACHE_KEY,\n    ROOT_SEGMENT_REQUEST_KEY\n  )\n}\n\nfunction convertFlightRouterStateToRouteTree(\n  flightRouterState: FlightRouterState,\n  cacheKey: SegmentCacheKey,\n  requestKey: SegmentRequestKey\n): RouteTree {\n  let slots: { [parallelRouteKey: string]: RouteTree } | null = null\n\n  const parallelRoutes = flightRouterState[1]\n  for (let parallelRouteKey in parallelRoutes) {\n    const childRouterState = parallelRoutes[parallelRouteKey]\n    const childSegment = childRouterState[0]\n    // TODO: Eventually, the param values will not be included in the response\n    // from the server. We'll instead fill them in on the client by parsing\n    // the URL. This is where we'll do that.\n    const childRequestKeyPart = createSegmentRequestKeyPart(childSegment)\n    const childRequestKey = appendSegmentRequestKeyPart(\n      requestKey,\n      parallelRouteKey,\n      childRequestKeyPart\n    )\n    const childCacheKey = appendSegmentCacheKeyPart(\n      cacheKey,\n      parallelRouteKey,\n      createSegmentCacheKeyPart(childRequestKeyPart, childSegment)\n    )\n    const childTree = convertFlightRouterStateToRouteTree(\n      childRouterState,\n      childCacheKey,\n      childRequestKey\n    )\n    if (slots === null) {\n      slots = {\n        [parallelRouteKey]: childTree,\n      }\n    } else {\n      slots[parallelRouteKey] = childTree\n    }\n  }\n  const originalSegment = flightRouterState[0]\n\n  let segment: FlightRouterStateSegment\n  let param: RouteParam | null = null\n  if (Array.isArray(originalSegment)) {\n    const paramCacheKey = originalSegment[1]\n    const paramType = originalSegment[2]\n    const paramValue = getParamValueFromCacheKey(paramCacheKey, paramType)\n    param = {\n      name: originalSegment[0],\n      value: paramValue === undefined ? null : paramValue,\n      type: originalSegment[2] as DynamicParamTypesShort,\n    }\n    segment = originalSegment\n  } else {\n    // The navigation implementation expects the search params to be included\n    // in the segment. However, in the case of a static response, the search\n    // params are omitted. So the client needs to add them back in when reading\n    // from the Segment Cache.\n    //\n    // For consistency, we'll do this for dynamic responses, too.\n    //\n    // TODO: We should move search params out of FlightRouterState and handle\n    // them entirely on the client, similar to our plan for dynamic params.\n    segment =\n      typeof originalSegment === 'string' &&\n      originalSegment.startsWith(PAGE_SEGMENT_KEY)\n        ? PAGE_SEGMENT_KEY\n        : originalSegment\n  }\n\n  return {\n    cacheKey,\n    requestKey,\n    segment,\n    param,\n    slots,\n    isRootLayout: flightRouterState[4] === true,\n    hasLoadingBoundary:\n      flightRouterState[5] !== undefined\n        ? flightRouterState[5]\n        : HasLoadingBoundary.SubtreeHasNoLoadingBoundary,\n\n    // Non-static tree responses are only used by apps that haven't adopted\n    // Cache Components. So this is always false.\n    hasRuntimePrefetch: false,\n  }\n}\n\nexport function convertRouteTreeToFlightRouterState(\n  routeTree: RouteTree\n): FlightRouterState {\n  const parallelRoutes: Record<string, FlightRouterState> = {}\n  if (routeTree.slots !== null) {\n    for (const parallelRouteKey in routeTree.slots) {\n      parallelRoutes[parallelRouteKey] = convertRouteTreeToFlightRouterState(\n        routeTree.slots[parallelRouteKey]\n      )\n    }\n  }\n  const flightRouterState: FlightRouterState = [\n    routeTree.segment,\n    parallelRoutes,\n    null,\n    null,\n    routeTree.isRootLayout,\n  ]\n  return flightRouterState\n}\n\nexport async function fetchRouteOnCacheMiss(\n  entry: PendingRouteCacheEntry,\n  task: PrefetchTask,\n  key: RouteCacheKey\n): Promise<PrefetchSubtaskResult<null> | null> {\n  // This function is allowed to use async/await because it contains the actual\n  // fetch that gets issued on a cache miss. Notice it writes the result to the\n  // cache entry directly, rather than return data that is then written by\n  // the caller.\n  const href = key.href\n  const nextUrl = key.nextUrl\n  const segmentPath = '/_tree' as SegmentRequestKey\n\n  const headers: RequestHeaders = {\n    [RSC_HEADER]: '1',\n    [NEXT_ROUTER_PREFETCH_HEADER]: '1',\n    [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]: segmentPath,\n  }\n  if (nextUrl !== null) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  try {\n    let response\n    let urlAfterRedirects\n    if (isOutputExportMode) {\n      // In output: \"export\" mode, we can't use headers to request a particular\n      // segment. Instead, we encode the extra request information into the URL.\n      // This is not part of the \"public\" interface of the app; it's an internal\n      // Next.js implementation detail that the app developer should not need to\n      // concern themselves with.\n      //\n      // For example, to request a segment:\n      //\n      //   Path passed to <Link>:   /path/to/page\n      //   Path passed to fetch:    /path/to/page/__next-segments/_tree\n      //\n      //   (This is not the exact protocol, just an illustration.)\n      //\n      // Before we do that, though, we need to account for redirects. Even in\n      // output: \"export\" mode, a proxy might redirect the page to a different\n      // location, but we shouldn't assume or expect that they also redirect all\n      // the segment files, too.\n      //\n      // To check whether the page is redirected, we perform a range request of\n      // the first N bytes of the HTML document. The canonical URL is determined\n      // from the response.\n      //\n      // Then we can use the canonical URL to request the route tree.\n      //\n      // NOTE: We could embed the route tree into the HTML document, to avoid\n      // a second request. We're not doing that currently because it would make\n      // the HTML document larger and affect normal page loads.\n      const url = new URL(href)\n      const htmlResponse = await fetch(href, {\n        headers: {\n          Range: DOC_PREFETCH_RANGE_HEADER_VALUE,\n        },\n      })\n      const partialHtml = await htmlResponse.text()\n      if (!doesExportedHtmlMatchBuildId(partialHtml, getAppBuildId())) {\n        // The target page is not part of this app, or it belongs to a\n        // different build.\n        rejectRouteCacheEntry(entry, Date.now() + 10 * 1000)\n        return null\n      }\n      urlAfterRedirects = htmlResponse.redirected\n        ? new URL(htmlResponse.url)\n        : url\n      response = await fetchPrefetchResponse(\n        addSegmentPathToUrlInOutputExportMode(urlAfterRedirects, segmentPath),\n        headers\n      )\n    } else {\n      // \"Server\" mode. We can use request headers instead of the pathname.\n      // TODO: The eventual plan is to get rid of our custom request headers and\n      // encode everything into the URL, using a similar strategy to the\n      // \"output: export\" block above.\n      const url = new URL(href)\n      response = await fetchPrefetchResponse(url, headers)\n      urlAfterRedirects =\n        response !== null && response.redirected ? new URL(response.url) : url\n    }\n\n    if (\n      !response ||\n      !response.ok ||\n      // 204 is a Cache miss. Though theoretically this shouldn't happen when\n      // PPR is enabled, because we always respond to route tree requests, even\n      // if it needs to be blockingly generated on demand.\n      response.status === 204 ||\n      !response.body\n    ) {\n      // Server responded with an error, or with a miss. We should still cache\n      // the response, but we can try again after 10 seconds.\n      rejectRouteCacheEntry(entry, Date.now() + 10 * 1000)\n      return null\n    }\n\n    // TODO: The canonical URL is the href without the origin. I think\n    // historically the reason for this is because the initial canonical URL\n    // gets passed as a prop to the top-level React component, which means it\n    // needs to be computed during SSR. If it were to include the origin, it\n    // would need to always be same as location.origin on the client, to prevent\n    // a hydration mismatch. To sidestep this complexity, we omit the origin.\n    //\n    // However, since this is neither a native URL object nor a fully qualified\n    // URL string, we need to be careful about how we use it. To prevent subtle\n    // mistakes, we should create a special type for it, instead of just string.\n    // Or, we should just use a (readonly) URL object instead. The type of the\n    // prop that we pass to seed the initial state does not need to be the same\n    // type as the state itself.\n    const canonicalUrl = createHrefFromUrl(urlAfterRedirects)\n\n    // Check whether the response varies based on the Next-Url header.\n    const varyHeader = response.headers.get('vary')\n    const couldBeIntercepted =\n      varyHeader !== null && varyHeader.includes(NEXT_URL)\n\n    // Track when the network connection closes.\n    const closed = createPromiseWithResolvers<void>()\n\n    // This checks whether the response was served from the per-segment cache,\n    // rather than the old prefetching flow. If it fails, it implies that PPR\n    // is disabled on this route.\n    const routeIsPPREnabled =\n      response.headers.get(NEXT_DID_POSTPONE_HEADER) === '2' ||\n      // In output: \"export\" mode, we can't rely on response headers. But if we\n      // receive a well-formed response, we can assume it's a static response,\n      // because all data is static in this mode.\n      isOutputExportMode\n\n    // Regardless of the type of response, we will never receive dynamic\n    // metadata as part of this prefetch request.\n    const isHeadDynamic = false\n\n    if (routeIsPPREnabled) {\n      const prefetchStream = createPrefetchResponseStream(\n        response.body,\n        closed.resolve,\n        function onResponseSizeUpdate(size) {\n          routeCacheLru.updateSize(entry, size)\n        }\n      )\n      const serverData = await createFromNextReadableStream<RootTreePrefetch>(\n        prefetchStream,\n        headers\n      )\n      if (serverData.buildId !== getAppBuildId()) {\n        // The server build does not match the client. Treat as a 404. During\n        // an actual navigation, the router will trigger an MPA navigation.\n        // TODO: Consider moving the build ID to a response header so we can check\n        // it before decoding the response, and so there's one way of checking\n        // across all response types.\n        // TODO: We should cache the fact that this is an MPA navigation.\n        rejectRouteCacheEntry(entry, Date.now() + 10 * 1000)\n        return null\n      }\n\n      // Get the params that were used to render the target page. These may\n      // be different from the params in the request URL, if the page\n      // was rewritten.\n      const renderedPathname = getRenderedPathname(response)\n      const renderedSearch = getRenderedSearch(response)\n\n      const routeTree = convertRootTreePrefetchToRouteTree(\n        serverData,\n        renderedPathname\n      )\n\n      const staleTimeMs = getStaleTimeMs(serverData.staleTime)\n      fulfillRouteCacheEntry(\n        entry,\n        routeTree,\n        serverData.head,\n        serverData.isHeadPartial,\n        Date.now() + staleTimeMs,\n        couldBeIntercepted,\n        canonicalUrl,\n        renderedSearch,\n        routeIsPPREnabled,\n        isHeadDynamic\n      )\n    } else {\n      // PPR is not enabled for this route. The server responds with a\n      // different format (FlightRouterState) that we need to convert.\n      // TODO: We will unify the responses eventually. I'm keeping the types\n      // separate for now because FlightRouterState has so many\n      // overloaded concerns.\n      const prefetchStream = createPrefetchResponseStream(\n        response.body,\n        closed.resolve,\n        function onResponseSizeUpdate(size) {\n          routeCacheLru.updateSize(entry, size)\n        }\n      )\n      const serverData =\n        await createFromNextReadableStream<NavigationFlightResponse>(\n          prefetchStream,\n          headers\n        )\n      if (serverData.b !== getAppBuildId()) {\n        // The server build does not match the client. Treat as a 404. During\n        // an actual navigation, the router will trigger an MPA navigation.\n        // TODO: Consider moving the build ID to a response header so we can check\n        // it before decoding the response, and so there's one way of checking\n        // across all response types.\n        // TODO: We should cache the fact that this is an MPA navigation.\n        rejectRouteCacheEntry(entry, Date.now() + 10 * 1000)\n        return null\n      }\n\n      writeDynamicTreeResponseIntoCache(\n        Date.now(),\n        task,\n        // The non-PPR response format is what we'd get if we prefetched these segments\n        // using the LoadingBoundary fetch strategy, so mark their cache entries accordingly.\n        FetchStrategy.LoadingBoundary,\n        response as RSCResponse<NavigationFlightResponse>,\n        serverData,\n        entry,\n        couldBeIntercepted,\n        canonicalUrl,\n        routeIsPPREnabled\n      )\n    }\n\n    if (!couldBeIntercepted && nextUrl !== null) {\n      // This route will never be intercepted. So we can use this entry for all\n      // requests to this route, regardless of the Next-Url header. This works\n      // because when reading the cache we always check for a valid\n      // non-intercepted entry first.\n      //\n      // Re-key the entry. Since we're in an async task, we must first confirm\n      // that the entry hasn't been concurrently modified by a different task.\n      const currentKeypath: Prefix<RouteCacheKeypath> = [href, nextUrl]\n      const expectedEntry = routeCacheMap.get(currentKeypath)\n      if (expectedEntry === entry) {\n        routeCacheMap.delete(currentKeypath)\n        const newKeypath: Prefix<RouteCacheKeypath> = [href]\n        routeCacheMap.set(newKeypath, entry)\n        // We don't need to update the LRU because the entry is already in it.\n        // But since we changed the keypath, we do need to update that, so we\n        // know how to remove it from the map if it gets evicted from the LRU.\n        entry.keypath = newKeypath\n      } else {\n        // Something else modified this entry already. Since the re-keying is\n        // just a performance optimization, we can safely skip it.\n      }\n    }\n    // Return a promise that resolves when the network connection closes, so\n    // the scheduler can track the number of concurrent network connections.\n    return { value: null, closed: closed.promise }\n  } catch (error) {\n    // Either the connection itself failed, or something bad happened while\n    // decoding the response.\n    rejectRouteCacheEntry(entry, Date.now() + 10 * 1000)\n    return null\n  }\n}\n\nexport async function fetchSegmentOnCacheMiss(\n  route: FulfilledRouteCacheEntry,\n  segmentCacheEntry: PendingSegmentCacheEntry,\n  routeKey: RouteCacheKey,\n  tree: RouteTree\n): Promise<PrefetchSubtaskResult<FulfilledSegmentCacheEntry> | null> {\n  // This function is allowed to use async/await because it contains the actual\n  // fetch that gets issued on a cache miss. Notice it writes the result to the\n  // cache entry directly, rather than return data that is then written by\n  // the caller.\n  //\n  // Segment fetches are non-blocking so we don't need to ping the scheduler\n  // on completion.\n\n  // Use the canonical URL to request the segment, not the original URL. These\n  // are usually the same, but the canonical URL will be different if the route\n  // tree response was redirected. To avoid an extra waterfall on every segment\n  // request, we pass the redirected URL instead of the original one.\n  const url = new URL(route.canonicalUrl, routeKey.href)\n  const nextUrl = routeKey.nextUrl\n\n  const requestKey = tree.requestKey\n  const normalizedRequestKey =\n    requestKey === ROOT_SEGMENT_REQUEST_KEY\n      ? // The root segment is a special case. To simplify the server-side\n        // handling of these requests, we encode the root segment path as\n        // `_index` instead of as an empty string. This should be treated as\n        // an implementation detail and not as a stable part of the protocol.\n        // It just needs to match the equivalent logic that happens when\n        // prerendering the responses. It should not leak outside of Next.js.\n        ('/_index' as SegmentRequestKey)\n      : requestKey\n\n  const headers: RequestHeaders = {\n    [RSC_HEADER]: '1',\n    [NEXT_ROUTER_PREFETCH_HEADER]: '1',\n    [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]: normalizedRequestKey,\n  }\n  if (nextUrl !== null) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  const requestUrl = isOutputExportMode\n    ? // In output: \"export\" mode, we need to add the segment path to the URL.\n      addSegmentPathToUrlInOutputExportMode(url, normalizedRequestKey)\n    : url\n  try {\n    const response = await fetchPrefetchResponse(requestUrl, headers)\n    if (\n      !response ||\n      !response.ok ||\n      response.status === 204 || // Cache miss\n      // This checks whether the response was served from the per-segment cache,\n      // rather than the old prefetching flow. If it fails, it implies that PPR\n      // is disabled on this route. Theoretically this should never happen\n      // because we only issue requests for segments once we've verified that\n      // the route supports PPR.\n      (response.headers.get(NEXT_DID_POSTPONE_HEADER) !== '2' &&\n        // In output: \"export\" mode, we can't rely on response headers. But if\n        // we receive a well-formed response, we can assume it's a static\n        // response, because all data is static in this mode.\n        !isOutputExportMode) ||\n      !response.body\n    ) {\n      // Server responded with an error, or with a miss. We should still cache\n      // the response, but we can try again after 10 seconds.\n      rejectSegmentCacheEntry(segmentCacheEntry, Date.now() + 10 * 1000)\n      return null\n    }\n\n    // Track when the network connection closes.\n    const closed = createPromiseWithResolvers<void>()\n\n    // Wrap the original stream in a new stream that never closes. That way the\n    // Flight client doesn't error if there's a hanging promise.\n    const prefetchStream = createPrefetchResponseStream(\n      response.body,\n      closed.resolve,\n      function onResponseSizeUpdate(size) {\n        segmentCacheLru.updateSize(segmentCacheEntry, size)\n      }\n    )\n    const serverData = await (createFromNextReadableStream(\n      prefetchStream,\n      headers\n    ) as Promise<SegmentPrefetch>)\n    if (serverData.buildId !== getAppBuildId()) {\n      // The server build does not match the client. Treat as a 404. During\n      // an actual navigation, the router will trigger an MPA navigation.\n      // TODO: Consider moving the build ID to a response header so we can check\n      // it before decoding the response, and so there's one way of checking\n      // across all response types.\n      rejectSegmentCacheEntry(segmentCacheEntry, Date.now() + 10 * 1000)\n      return null\n    }\n    return {\n      value: fulfillSegmentCacheEntry(\n        segmentCacheEntry,\n        serverData.rsc,\n        serverData.loading,\n        // TODO: The server does not currently provide per-segment stale time.\n        // So we use the stale time of the route.\n        route.staleAt,\n        serverData.isPartial\n      ),\n      // Return a promise that resolves when the network connection closes, so\n      // the scheduler can track the number of concurrent network connections.\n      closed: closed.promise,\n    }\n  } catch (error) {\n    // Either the connection itself failed, or something bad happened while\n    // decoding the response.\n    rejectSegmentCacheEntry(segmentCacheEntry, Date.now() + 10 * 1000)\n    return null\n  }\n}\n\nexport async function fetchSegmentPrefetchesUsingDynamicRequest(\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  fetchStrategy:\n    | FetchStrategy.LoadingBoundary\n    | FetchStrategy.PPRRuntime\n    | FetchStrategy.Full,\n  dynamicRequestTree: FlightRouterState,\n  spawnedEntries: Map<SegmentCacheKey, PendingSegmentCacheEntry>\n): Promise<PrefetchSubtaskResult<null> | null> {\n  const url = new URL(route.canonicalUrl, task.key.href)\n  const nextUrl = task.key.nextUrl\n  const headers: RequestHeaders = {\n    [RSC_HEADER]: '1',\n    [NEXT_ROUTER_STATE_TREE_HEADER]:\n      prepareFlightRouterStateForRequest(dynamicRequestTree),\n  }\n  if (nextUrl !== null) {\n    headers[NEXT_URL] = nextUrl\n  }\n  switch (fetchStrategy) {\n    case FetchStrategy.Full: {\n      // We omit the prefetch header from a full prefetch because it's essentially\n      // just a navigation request that happens ahead of time — it should include\n      // all the same data in the response.\n      break\n    }\n    case FetchStrategy.PPRRuntime: {\n      headers[NEXT_ROUTER_PREFETCH_HEADER] = '2'\n      break\n    }\n    case FetchStrategy.LoadingBoundary: {\n      headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n      break\n    }\n    default: {\n      fetchStrategy satisfies never\n    }\n  }\n\n  try {\n    const response = await fetchPrefetchResponse(url, headers)\n    if (!response || !response.ok || !response.body) {\n      // Server responded with an error, or with a miss. We should still cache\n      // the response, but we can try again after 10 seconds.\n      rejectSegmentEntriesIfStillPending(spawnedEntries, Date.now() + 10 * 1000)\n      return null\n    }\n\n    const renderedSearch = getRenderedSearch(response)\n    if (renderedSearch !== route.renderedSearch) {\n      // The search params that were used to render the target page are\n      // different from the search params in the request URL. This only happens\n      // when there's a dynamic rewrite in between the tree prefetch and the\n      // data prefetch.\n      // TODO: For now, since this is an edge case, we reject the prefetch, but\n      // the proper way to handle this is to evict the stale route tree entry\n      // then fill the cache with the new response.\n      rejectSegmentEntriesIfStillPending(spawnedEntries, Date.now() + 10 * 1000)\n      return null\n    }\n\n    // Track when the network connection closes.\n    const closed = createPromiseWithResolvers<void>()\n\n    let fulfilledEntries: Array<FulfilledSegmentCacheEntry> | null = null\n    const prefetchStream = createPrefetchResponseStream(\n      response.body,\n      closed.resolve,\n      function onResponseSizeUpdate(totalBytesReceivedSoFar) {\n        // When processing a dynamic response, we don't know how large each\n        // individual segment is, so approximate by assiging each segment\n        // the average of the total response size.\n        if (fulfilledEntries === null) {\n          // Haven't received enough data yet to know which segments\n          // were included.\n          return\n        }\n        const averageSize = totalBytesReceivedSoFar / fulfilledEntries.length\n        for (const entry of fulfilledEntries) {\n          segmentCacheLru.updateSize(entry, averageSize)\n        }\n      }\n    )\n    const serverData = await (createFromNextReadableStream(\n      prefetchStream,\n      headers\n    ) as Promise<NavigationFlightResponse>)\n\n    const isResponsePartial =\n      fetchStrategy === FetchStrategy.PPRRuntime\n        ? // A runtime prefetch may have holes.\n          !!response.headers.get(NEXT_DID_POSTPONE_HEADER)\n        : // Full and LoadingBoundary prefetches cannot have holes.\n          // (even if we did set the prefetch header, we only use this codepath for non-PPR-enabled routes)\n          false\n\n    // Aside from writing the data into the cache, this function also returns\n    // the entries that were fulfilled, so we can streamingly update their sizes\n    // in the LRU as more data comes in.\n    fulfilledEntries = writeDynamicRenderResponseIntoCache(\n      Date.now(),\n      task,\n      fetchStrategy,\n      response as RSCResponse<NavigationFlightResponse>,\n      serverData,\n      isResponsePartial,\n      route,\n      spawnedEntries\n    )\n\n    // Return a promise that resolves when the network connection closes, so\n    // the scheduler can track the number of concurrent network connections.\n    return { value: null, closed: closed.promise }\n  } catch (error) {\n    rejectSegmentEntriesIfStillPending(spawnedEntries, Date.now() + 10 * 1000)\n    return null\n  }\n}\n\nfunction writeDynamicTreeResponseIntoCache(\n  now: number,\n  task: PrefetchTask,\n  fetchStrategy:\n    | FetchStrategy.LoadingBoundary\n    | FetchStrategy.PPRRuntime\n    | FetchStrategy.Full,\n  response: RSCResponse<NavigationFlightResponse>,\n  serverData: NavigationFlightResponse,\n  entry: PendingRouteCacheEntry,\n  couldBeIntercepted: boolean,\n  canonicalUrl: string,\n  routeIsPPREnabled: boolean\n) {\n  // Get the URL that was used to render the target page. This may be different\n  // from the URL in the request URL, if the page was rewritten.\n  const renderedSearch = getRenderedSearch(response)\n\n  const normalizedFlightDataResult = normalizeFlightData(serverData.f)\n  if (\n    // A string result means navigating to this route will result in an\n    // MPA navigation.\n    typeof normalizedFlightDataResult === 'string' ||\n    normalizedFlightDataResult.length !== 1\n  ) {\n    rejectRouteCacheEntry(entry, now + 10 * 1000)\n    return\n  }\n  const flightData = normalizedFlightDataResult[0]\n  if (!flightData.isRootRender) {\n    // Unexpected response format.\n    rejectRouteCacheEntry(entry, now + 10 * 1000)\n    return\n  }\n\n  const flightRouterState = flightData.tree\n  // TODO: Extract to function\n  const staleTimeHeaderSeconds = response.headers.get(\n    NEXT_ROUTER_STALE_TIME_HEADER\n  )\n  const staleTimeMs =\n    staleTimeHeaderSeconds !== null\n      ? getStaleTimeMs(parseInt(staleTimeHeaderSeconds, 10))\n      : STATIC_STALETIME_MS\n\n  // If the response contains dynamic holes, then we must conservatively assume\n  // that any individual segment might contain dynamic holes, and also the\n  // head. If it did not contain dynamic holes, then we can assume every segment\n  // and the head is completely static.\n  const isResponsePartial =\n    response.headers.get(NEXT_DID_POSTPONE_HEADER) === '1'\n\n  // Since this is a dynamic response, we must conservatively assume that the\n  // head responded with dynamic data.\n  const isHeadDynamic = true\n\n  const fulfilledEntry = fulfillRouteCacheEntry(\n    entry,\n    convertRootFlightRouterStateToRouteTree(flightRouterState),\n    flightData.head,\n    flightData.isHeadPartial,\n    now + staleTimeMs,\n    couldBeIntercepted,\n    canonicalUrl,\n    renderedSearch,\n    routeIsPPREnabled,\n    isHeadDynamic\n  )\n\n  // If the server sent segment data as part of the response, we should write\n  // it into the cache to prevent a second, redundant prefetch request.\n  //\n  // TODO: When `clientSegmentCache` is enabled, the server does not include\n  // segment data when responding to a route tree prefetch request. However,\n  // when `clientSegmentCache` is set to \"client-only\", and PPR is enabled (or\n  // the page is fully static), the normal check is bypassed and the server\n  // responds with the full page. This is a temporary situation until we can\n  // remove the \"client-only\" option. Then, we can delete this function call.\n  writeDynamicRenderResponseIntoCache(\n    now,\n    task,\n    fetchStrategy,\n    response,\n    serverData,\n    isResponsePartial,\n    fulfilledEntry,\n    null\n  )\n}\n\nfunction rejectSegmentEntriesIfStillPending(\n  entries: Map<SegmentCacheKey, SegmentCacheEntry>,\n  staleAt: number\n): Array<FulfilledSegmentCacheEntry> {\n  const fulfilledEntries = []\n  for (const entry of entries.values()) {\n    if (entry.status === EntryStatus.Pending) {\n      rejectSegmentCacheEntry(entry, staleAt)\n    } else if (entry.status === EntryStatus.Fulfilled) {\n      fulfilledEntries.push(entry)\n    }\n  }\n  return fulfilledEntries\n}\n\nfunction writeDynamicRenderResponseIntoCache(\n  now: number,\n  task: PrefetchTask,\n  fetchStrategy:\n    | FetchStrategy.LoadingBoundary\n    | FetchStrategy.PPRRuntime\n    | FetchStrategy.Full,\n  response: RSCResponse<NavigationFlightResponse>,\n  serverData: NavigationFlightResponse,\n  isResponsePartial: boolean,\n  route: FulfilledRouteCacheEntry,\n  spawnedEntries: Map<SegmentCacheKey, PendingSegmentCacheEntry> | null\n): Array<FulfilledSegmentCacheEntry> | null {\n  if (serverData.b !== getAppBuildId()) {\n    // The server build does not match the client. Treat as a 404. During\n    // an actual navigation, the router will trigger an MPA navigation.\n    // TODO: Consider moving the build ID to a response header so we can check\n    // it before decoding the response, and so there's one way of checking\n    // across all response types.\n    if (spawnedEntries !== null) {\n      rejectSegmentEntriesIfStillPending(spawnedEntries, now + 10 * 1000)\n    }\n    return null\n  }\n\n  const flightDatas = normalizeFlightData(serverData.f)\n  if (typeof flightDatas === 'string') {\n    // This means navigating to this route will result in an MPA navigation.\n    // TODO: We should cache this, too, so that the MPA navigation is immediate.\n    return null\n  }\n\n  const staleTimeHeaderSeconds = response.headers.get(\n    NEXT_ROUTER_STALE_TIME_HEADER\n  )\n  const staleTimeMs =\n    staleTimeHeaderSeconds !== null\n      ? getStaleTimeMs(parseInt(staleTimeHeaderSeconds, 10))\n      : STATIC_STALETIME_MS\n  const staleAt = now + staleTimeMs\n\n  for (const flightData of flightDatas) {\n    const seedData = flightData.seedData\n    if (seedData !== null) {\n      // The data sent by the server represents only a subtree of the app. We\n      // need to find the part of the task tree that matches the response.\n      //\n      // segmentPath represents the parent path of subtree. It's a repeating\n      // pattern of parallel route key and segment:\n      //\n      //   [string, Segment, string, Segment, string, Segment, ...]\n      const segmentPath = flightData.segmentPath\n      let requestKey = ROOT_SEGMENT_REQUEST_KEY\n      let cacheKey = ROOT_SEGMENT_CACHE_KEY\n      for (let i = 0; i < segmentPath.length; i += 2) {\n        const parallelRouteKey: string = segmentPath[i]\n        const segment: FlightRouterStateSegment = segmentPath[i + 1]\n        const requestKeyPart = createSegmentRequestKeyPart(segment)\n        requestKey = appendSegmentRequestKeyPart(\n          requestKey,\n          parallelRouteKey,\n          requestKeyPart\n        )\n        cacheKey = appendSegmentCacheKeyPart(\n          cacheKey,\n          parallelRouteKey,\n          createSegmentCacheKeyPart(requestKeyPart, segment)\n        )\n      }\n\n      writeSeedDataIntoCache(\n        now,\n        task,\n        fetchStrategy,\n        route,\n        staleAt,\n        flightData.tree,\n        seedData,\n        isResponsePartial,\n        cacheKey,\n        requestKey,\n        spawnedEntries\n      )\n    }\n\n    // During a dynamic request, the server sends back new head data for the\n    // page. Overwrite the existing head with the new one. Note that we're\n    // intentionally not taking into account whether the existing head is\n    // already complete, even though the incoming head might not have finished\n    // streaming in yet. This is to prioritize consistency of the head with\n    // the segment data (though it's still not a guarantee, since some of the\n    // segment data may be reused from a previous request).\n    route.head = flightData.head\n    route.isHeadPartial = flightData.isHeadPartial\n    route.TODO_isHeadDynamic = true\n\n    // TODO: Currently the stale time of the route tree represents the\n    // stale time of both the route tree *and* all the segment data. So we\n    // can't just overwrite this field; we have to use whichever value is\n    // lower. In the future, though, the plan is to track segment lifetimes\n    // separately from the route tree lifetime.\n    if (staleAt < route.staleAt) {\n      route.staleAt = staleAt\n    }\n  }\n  // Any entry that's still pending was intentionally not rendered by the\n  // server, because it was inside the loading boundary. Mark them as rejected\n  // so we know not to fetch them again.\n  // TODO: If PPR is enabled on some routes but not others, then it's possible\n  // that a different page is able to do a per-segment prefetch of one of the\n  // segments we're marking as rejected here. We should mark on the segment\n  // somehow that the reason for the rejection is because of a non-PPR prefetch.\n  // That way a per-segment prefetch knows to disregard the rejection.\n  if (spawnedEntries !== null) {\n    const fulfilledEntries = rejectSegmentEntriesIfStillPending(\n      spawnedEntries,\n      now + 10 * 1000\n    )\n    return fulfilledEntries\n  }\n  return null\n}\n\nfunction writeSeedDataIntoCache(\n  now: number,\n  task: PrefetchTask,\n  fetchStrategy:\n    | FetchStrategy.LoadingBoundary\n    | FetchStrategy.PPRRuntime\n    | FetchStrategy.Full,\n  route: FulfilledRouteCacheEntry,\n  staleAt: number,\n  flightRouterState: FlightRouterState,\n  seedData: CacheNodeSeedData,\n  isResponsePartial: boolean,\n  cacheKey: SegmentCacheKey,\n  requestKey: SegmentRequestKey,\n  entriesOwnedByCurrentTask: Map<\n    SegmentCacheKey,\n    PendingSegmentCacheEntry\n  > | null\n) {\n  // This function is used to write the result of a dynamic server request\n  // (CacheNodeSeedData) into the prefetch cache. It's used in cases where we\n  // want to treat a dynamic response as if it were static. The two examples\n  // where this happens are <Link prefetch={true}> (which implicitly opts\n  // dynamic data into being static) and when prefetching a PPR-disabled route\n  const rsc = seedData[0]\n  const loading = seedData[2]\n  const isPartial = rsc === null || isResponsePartial\n\n  // We should only write into cache entries that are owned by us. Or create\n  // a new one and write into that. We must never write over an entry that was\n  // created by a different task, because that causes data races.\n  const ownedEntry =\n    entriesOwnedByCurrentTask !== null\n      ? entriesOwnedByCurrentTask.get(cacheKey)\n      : undefined\n  if (ownedEntry !== undefined) {\n    fulfillSegmentCacheEntry(ownedEntry, rsc, loading, staleAt, isPartial)\n  } else {\n    // There's no matching entry. Attempt to create a new one.\n    const possiblyNewEntry = readOrCreateSegmentCacheEntry(\n      now,\n      fetchStrategy,\n      route,\n      cacheKey\n    )\n    if (possiblyNewEntry.status === EntryStatus.Empty) {\n      // Confirmed this is a new entry. We can fulfill it.\n      const newEntry = possiblyNewEntry\n      fulfillSegmentCacheEntry(\n        upgradeToPendingSegment(newEntry, fetchStrategy),\n        rsc,\n        loading,\n        staleAt,\n        isPartial\n      )\n    } else {\n      // There was already an entry in the cache. But we may be able to\n      // replace it with the new one from the server.\n      const newEntry = fulfillSegmentCacheEntry(\n        upgradeToPendingSegment(\n          createDetachedSegmentCacheEntry(staleAt),\n          fetchStrategy\n        ),\n        rsc,\n        loading,\n        staleAt,\n        isPartial\n      )\n      upsertSegmentEntry(\n        now,\n        getSegmentKeypath(fetchStrategy, route, cacheKey),\n        newEntry\n      )\n    }\n  }\n  // Recursively write the child data into the cache.\n  const flightRouterStateChildren = flightRouterState[1]\n  const seedDataChildren = seedData[1]\n  for (const parallelRouteKey in flightRouterStateChildren) {\n    const childFlightRouterState = flightRouterStateChildren[parallelRouteKey]\n    const childSeedData: CacheNodeSeedData | null | void =\n      seedDataChildren[parallelRouteKey]\n    if (childSeedData !== null && childSeedData !== undefined) {\n      const childSegment = childFlightRouterState[0]\n      const childRequestKeyPart = createSegmentRequestKeyPart(childSegment)\n      const childRequestKey = appendSegmentRequestKeyPart(\n        requestKey,\n        parallelRouteKey,\n        childRequestKeyPart\n      )\n      const childCacheKey = appendSegmentCacheKeyPart(\n        cacheKey,\n        parallelRouteKey,\n        createSegmentCacheKeyPart(childRequestKeyPart, childSegment)\n      )\n      writeSeedDataIntoCache(\n        now,\n        task,\n        fetchStrategy,\n        route,\n        staleAt,\n        childFlightRouterState,\n        childSeedData,\n        isResponsePartial,\n        childCacheKey,\n        childRequestKey,\n        entriesOwnedByCurrentTask\n      )\n    }\n  }\n}\n\nasync function fetchPrefetchResponse<T>(\n  url: URL,\n  headers: RequestHeaders\n): Promise<RSCResponse<T> | null> {\n  const fetchPriority = 'low'\n  // When issuing a prefetch request, don't immediately decode the response; we\n  // use the lower level `createFromResponse` API instead because we need to do\n  // some extra processing of the response stream. See\n  // `createPrefetchResponseStream` for more details.\n  const shouldImmediatelyDecode = false\n  const response = await createFetch<T>(\n    url,\n    headers,\n    fetchPriority,\n    shouldImmediatelyDecode\n  )\n  if (!response.ok) {\n    return null\n  }\n\n  // Check the content type\n  if (isOutputExportMode) {\n    // In output: \"export\" mode, we relaxed about the content type, since it's\n    // not Next.js that's serving the response. If the status is OK, assume the\n    // response is valid. If it's not a valid response, the Flight client won't\n    // be able to decode it, and we'll treat it as a miss.\n  } else {\n    const contentType = response.headers.get('content-type')\n    const isFlightResponse =\n      contentType && contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n    if (!isFlightResponse) {\n      return null\n    }\n  }\n  return response\n}\n\nfunction createPrefetchResponseStream(\n  originalFlightStream: ReadableStream<Uint8Array>,\n  onStreamClose: () => void,\n  onResponseSizeUpdate: (size: number) => void\n): ReadableStream<Uint8Array> {\n  // When PPR is enabled, prefetch streams may contain references that never\n  // resolve, because that's how we encode dynamic data access. In the decoded\n  // object returned by the Flight client, these are reified into hanging\n  // promises that suspend during render, which is effectively what we want.\n  // The UI resolves when it switches to the dynamic data stream\n  // (via useDeferredValue(dynamic, static)).\n  //\n  // However, the Flight implementation currently errors if the server closes\n  // the response before all the references are resolved. As a cheat to work\n  // around this, we wrap the original stream in a new stream that never closes,\n  // and therefore doesn't error.\n  //\n  // While processing the original stream, we also incrementally update the size\n  // of the cache entry in the LRU.\n  let totalByteLength = 0\n  const reader = originalFlightStream.getReader()\n  return new ReadableStream({\n    async pull(controller) {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (!done) {\n          // Pass to the target stream and keep consuming the Flight response\n          // from the server.\n          controller.enqueue(value)\n\n          // Incrementally update the size of the cache entry in the LRU.\n          // NOTE: Since prefetch responses are delivered in a single chunk,\n          // it's not really necessary to do this streamingly, but I'm doing it\n          // anyway in case this changes in the future.\n          totalByteLength += value.byteLength\n          onResponseSizeUpdate(totalByteLength)\n          continue\n        }\n        // The server stream has closed. Exit, but intentionally do not close\n        // the target stream. We do notify the caller, though.\n        onStreamClose()\n        return\n      }\n    },\n  })\n}\n\nfunction addSegmentPathToUrlInOutputExportMode(\n  url: URL,\n  segmentPath: SegmentRequestKey\n): URL {\n  if (isOutputExportMode) {\n    // In output: \"export\" mode, we cannot use a header to encode the segment\n    // path. Instead, we append it to the end of the pathname.\n    const staticUrl = new URL(url)\n    const routeDir = staticUrl.pathname.endsWith('/')\n      ? staticUrl.pathname.slice(0, -1)\n      : staticUrl.pathname\n    const staticExportFilename =\n      convertSegmentPathToStaticExportFilename(segmentPath)\n    staticUrl.pathname = `${routeDir}/${staticExportFilename}`\n    return staticUrl\n  }\n  return url\n}\n\n/**\n * Checks whether the new fetch strategy is likely to provide more content than the old one.\n *\n * Generally, when an app uses dynamic data, a \"more specific\" fetch strategy is expected to provide more content:\n * - `LoadingBoundary` only provides static layouts\n * - `PPR` can provide shells for each segment (even for segments that use dynamic data)\n * - `PPRRuntime` can additionally include content that uses searchParams, params, or cookies\n * - `Full` includes all the content, even if it uses dynamic data\n *\n * However, it's possible that a more specific fetch strategy *won't* give us more content if:\n * - a segment is fully static\n *   (then, `PPR`/`PPRRuntime`/`Full` will all yield equivalent results)\n * - providing searchParams/params/cookies doesn't reveal any more content, e.g. because of an `await connection()`\n *   (then, `PPR` and `PPRRuntime` will yield equivalent results, only `Full` will give us more)\n * Because of this, when comparing two segments, we should also check if the existing segment is partial.\n * If it's not partial, then there's no need to prefetch it again, even using a \"more specific\" strategy.\n * There's currently no way to know if `PPRRuntime` will yield more data that `PPR`, so we have to assume it will.\n *\n * Also note that, in practice, we don't expect to be comparing `LoadingBoundary` to `PPR`/`PPRRuntime`,\n * because a non-PPR-enabled route wouldn't ever use the latter strategies. It might however use `Full`.\n */\nexport function canNewFetchStrategyProvideMoreContent(\n  currentStrategy: FetchStrategy,\n  newStrategy: FetchStrategy\n): boolean {\n  return currentStrategy < newStrategy\n}\n"],"names":["EntryStatus","canNewFetchStrategyProvideMoreContent","convertRouteTreeToFlightRouterState","createDetachedSegmentCacheEntry","fetchRouteOnCacheMiss","fetchSegmentOnCacheMiss","fetchSegmentPrefetchesUsingDynamicRequest","getCurrentCacheVersion","getSegmentKeypath","pingInvalidationListeners","readExactRouteCacheEntry","readOrCreateRevalidatingSegmentEntry","readOrCreateRouteCacheEntry","readOrCreateSegmentCacheEntry","readRouteCacheEntry","readSegmentCacheEntry","requestOptimisticRouteCacheEntry","resetRevalidatingSegmentEntry","revalidateEntireCache","upgradeToPendingSegment","upsertSegmentEntry","waitForSegmentCacheEntry","isOutputExportMode","process","env","NODE_ENV","__NEXT_CONFIG_OUTPUT","getStaleTimeMs","staleTimeSeconds","Math","max","routeCacheMap","createTupleMap","maxRouteLruSize","routeCacheLru","createLRU","onRouteLRUEviction","segmentCacheMap","maxSegmentLruSize","segmentCacheLru","onSegmentLRUEviction","invalidationListeners","currentCacheVersion","nextUrl","tree","startRevalidationCooldown","pingVisibleLinks","attachInvalidationListener","task","onInvalidate","Set","add","notifyInvalidationListener","error","reportError","console","tasks","isPrefetchTaskDirty","now","href","keypath","existingEntry","get","staleAt","put","deleteRouteFromCache","key","nonInterceptedEntry","couldBeIntercepted","fetchStrategy","route","cacheKey","isDynamic","FetchStrategy","Full","PPRRuntime","isPPREnabled","endsWith","PAGE_SEGMENT_KEY","renderedSearch","readExactSegmentCacheEntry","entryWithSearchParams","entryWithoutSearchParams","revalidatingEntry","revalidating","upsertedEntry","deleteSegmentFromCache","readRevalidatingSegmentCacheEntry","owner","existingRevalidation","clearRevalidatingSegmentFromOwner","pendingEntry","promiseWithResolvers","promise","createPromiseWithResolvers","canonicalUrl","status","blockedTasks","head","isHeadPartial","Infinity","TODO_metadataStatus","TODO_isHeadDynamic","next","prev","size","set","requestedUrl","requestedSearch","search","urlWithoutSearchParams","URL","routeWithNoSearchParams","createPrefetchRequestKey","canonicalUrlForRouteWithNoSearchParams","origin","optimisticCanonicalSearch","optimisticRenderedSearch","optimisticUrl","location","optimisticCanonicalUrl","createHrefFromUrl","optimisticEntry","prevEntry","candidateEntry","isPartial","rejectedEntry","loading","rsc","emptyEntry","PPR","entry","pingBlockedTasks","delete","cancelEntryListeners","revalidatingSegment","resolve","pingPrefetchTask","fulfillRouteCacheEntry","isHeadDynamic","fulfilledEntry","fulfillSegmentCacheEntry","segmentCacheEntry","rejectRouteCacheEntry","rejectSegmentCacheEntry","convertRootTreePrefetchToRouteTree","rootTree","renderedPathname","pathnameParts","split","filter","p","index","rootSegment","ROOT_SEGMENT_CACHE_KEY","convertTreePrefetchToRouteTree","ROOT_SEGMENT_REQUEST_KEY","prefetch","segment","param","requestKey","pathnamePartsIndex","slots","prefetchSlots","parallelRouteKey","childPrefetch","childParamName","name","childParamType","paramType","childServerSentParamKey","paramKey","childDoesAppearInURL","childParam","childSegment","childParamValue","parseDynamicParamFromURLPart","childParamKey","getCacheKeyForDynamicParam","value","type","doesStaticSegmentAppearInURL","childPathnamePartsIndex","childRequestKeyPart","createSegmentRequestKeyPart","childRequestKey","appendSegmentRequestKeyPart","childCacheKey","appendSegmentCacheKeyPart","createSegmentCacheKeyPart","isRootLayout","hasLoadingBoundary","HasLoadingBoundary","SegmentHasLoadingBoundary","hasRuntimePrefetch","convertRootFlightRouterStateToRouteTree","flightRouterState","convertFlightRouterStateToRouteTree","parallelRoutes","childRouterState","childTree","originalSegment","Array","isArray","paramCacheKey","paramValue","getParamValueFromCacheKey","undefined","startsWith","SubtreeHasNoLoadingBoundary","routeTree","segmentPath","headers","RSC_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_URL","response","urlAfterRedirects","url","htmlResponse","fetch","Range","DOC_PREFETCH_RANGE_HEADER_VALUE","partialHtml","text","doesExportedHtmlMatchBuildId","getAppBuildId","Date","redirected","fetchPrefetchResponse","addSegmentPathToUrlInOutputExportMode","ok","body","varyHeader","includes","closed","routeIsPPREnabled","NEXT_DID_POSTPONE_HEADER","prefetchStream","createPrefetchResponseStream","onResponseSizeUpdate","updateSize","serverData","createFromNextReadableStream","buildId","getRenderedPathname","getRenderedSearch","staleTimeMs","staleTime","b","writeDynamicTreeResponseIntoCache","LoadingBoundary","currentKeypath","expectedEntry","newKeypath","routeKey","normalizedRequestKey","requestUrl","dynamicRequestTree","spawnedEntries","NEXT_ROUTER_STATE_TREE_HEADER","prepareFlightRouterStateForRequest","rejectSegmentEntriesIfStillPending","fulfilledEntries","totalBytesReceivedSoFar","averageSize","length","isResponsePartial","writeDynamicRenderResponseIntoCache","normalizedFlightDataResult","normalizeFlightData","f","flightData","isRootRender","staleTimeHeaderSeconds","NEXT_ROUTER_STALE_TIME_HEADER","parseInt","STATIC_STALETIME_MS","entries","values","push","flightDatas","seedData","i","requestKeyPart","writeSeedDataIntoCache","entriesOwnedByCurrentTask","ownedEntry","possiblyNewEntry","newEntry","flightRouterStateChildren","seedDataChildren","childFlightRouterState","childSeedData","fetchPriority","shouldImmediatelyDecode","createFetch","contentType","isFlightResponse","RSC_CONTENT_TYPE_HEADER","originalFlightStream","onStreamClose","totalByteLength","reader","getReader","ReadableStream","pull","controller","done","read","enqueue","byteLength","staticUrl","routeDir","pathname","slice","staticExportFilename","convertSegmentPathToStaticExportFilename","currentStrategy","newStrategy"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4895, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/scheduler.ts"],"sourcesContent":["import type {\n  FlightRouterState,\n  Segment as FlightRouterStateSegment,\n  Segment,\n} from '../../../shared/lib/app-router-types'\nimport { HasLoadingBoundary } from '../../../shared/lib/app-router-types'\nimport { matchSegment } from '../match-segments'\nimport {\n  readOrCreateRouteCacheEntry,\n  readOrCreateSegmentCacheEntry,\n  fetchRouteOnCacheMiss,\n  fetchSegmentOnCacheMiss,\n  EntryStatus,\n  type FulfilledRouteCacheEntry,\n  type RouteCacheEntry,\n  type SegmentCacheEntry,\n  type RouteTree,\n  fetchSegmentPrefetchesUsingDynamicRequest,\n  type PendingSegmentCacheEntry,\n  convertRouteTreeToFlightRouterState,\n  readOrCreateRevalidatingSegmentEntry,\n  upsertSegmentEntry,\n  type FulfilledSegmentCacheEntry,\n  upgradeToPendingSegment,\n  waitForSegmentCacheEntry,\n  resetRevalidatingSegmentEntry,\n  getSegmentKeypath,\n  canNewFetchStrategyProvideMoreContent,\n} from './cache'\nimport type { RouteCacheKey } from './cache-key'\nimport { createCacheKey } from './cache-key'\nimport {\n  FetchStrategy,\n  type PrefetchTaskFetchStrategy,\n  getCurrentCacheVersion,\n  PrefetchPriority,\n} from '../segment-cache'\nimport {\n  addSearchParamsIfPageSegment,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport type { SegmentCacheKey } from '../../../shared/lib/segment-cache/segment-value-encoding'\n\nconst scheduleMicrotask =\n  typeof queueMicrotask === 'function'\n    ? queueMicrotask\n    : (fn: () => unknown) =>\n        Promise.resolve()\n          .then(fn)\n          .catch((error) =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n\nexport type PrefetchTask = {\n  key: RouteCacheKey\n\n  /**\n   * The FlightRouterState at the time the task was initiated. This is needed\n   * when falling back to the non-PPR behavior, which only prefetches up to\n   * the first loading boundary.\n   */\n  treeAtTimeOfPrefetch: FlightRouterState\n\n  /**\n   * The cache version at the time the task was initiated. This is used to\n   * determine if the cache was invalidated since the task was initiated.\n   */\n  cacheVersion: number\n\n  /**\n   * Whether to prefetch dynamic data, in addition to static data. This is\n   * used by `<Link prefetch={true}>`.\n   *\n   * Note that a task with `FetchStrategy.PPR` might need to use\n   * `FetchStrategy.LoadingBoundary` instead if we find out that a route\n   * does not support PPR after doing the initial route prefetch.\n   */\n  fetchStrategy: PrefetchTaskFetchStrategy\n\n  /**\n   * sortId is an incrementing counter\n   *\n   * Newer prefetches are prioritized over older ones, so that as new links\n   * enter the viewport, they are not starved by older links that are no\n   * longer relevant. In the future, we can add additional prioritization\n   * heuristics, like removing prefetches once a link leaves the viewport.\n   *\n   * The sortId is assigned when the prefetch is initiated, and reassigned if\n   * the same task is prefetched again (effectively bumping it to the top of\n   * the queue).\n   *\n   * TODO: We can add additional fields here to indicate what kind of prefetch\n   * it is. For example, was it initiated by a link? Or was it an imperative\n   * call? If it was initiated by a link, we can remove it from the queue when\n   * the link leaves the viewport, but if it was an imperative call, then we\n   * should keep it in the queue until it's fulfilled.\n   *\n   * We can also add priority levels. For example, hovering over a link could\n   * increase the priority of its prefetch.\n   */\n  sortId: number\n\n  /**\n   * The priority of the task. Like sortId, this affects the task's position in\n   * the queue, so it must never be updated without resifting the heap.\n   */\n  priority: PrefetchPriority\n\n  /**\n   * The phase of the task. Tasks are split into multiple phases so that their\n   * priority can be adjusted based on what kind of work they're doing.\n   * Concretely, prefetching the route tree is higher priority than prefetching\n   * segment data.\n   */\n  phase: PrefetchPhase\n\n  /**\n   * These fields are temporary state for tracking the currently running task.\n   * They are reset after each iteration of the task queue.\n   */\n  hasBackgroundWork: boolean\n  spawnedRuntimePrefetches: Set<SegmentCacheKey> | null\n\n  /**\n   * True if the prefetch was cancelled.\n   */\n  isCanceled: boolean\n\n  /**\n   * The callback passed to `router.prefetch`, if given.\n   */\n  onInvalidate: null | (() => void)\n\n  /**\n   * The index of the task in the heap's backing array. Used to efficiently\n   * change the priority of a task by re-sifting it, which requires knowing\n   * where it is in the array. This is only used internally by the heap\n   * algorithm. The naive alternative is indexOf every time a task is queued,\n   * which has O(n) complexity.\n   *\n   * We also use this field to check whether a task is currently in the queue.\n   */\n  _heapIndex: number\n}\n\nconst enum PrefetchTaskExitStatus {\n  /**\n   * The task yielded because there are too many requests in progress.\n   */\n  InProgress,\n\n  /**\n   * The task is blocked. It needs more data before it can proceed.\n   *\n   * Currently the only reason this happens is we're still waiting to receive a\n   * route tree from the server, because we can't start prefetching the segments\n   * until we know what to prefetch.\n   */\n  Blocked,\n\n  /**\n   * There's nothing left to prefetch.\n   */\n  Done,\n}\n\n/**\n * Prefetch tasks are processed in two phases: first the route tree is fetched,\n * then the segments. We use this to priortize tasks that have not yet fetched\n * the route tree.\n */\nconst enum PrefetchPhase {\n  RouteTree = 1,\n  Segments = 0,\n}\n\nexport type PrefetchSubtaskResult<T> = {\n  /**\n   * A promise that resolves when the network connection is closed.\n   */\n  closed: Promise<void>\n  value: T\n}\n\nconst taskHeap: Array<PrefetchTask> = []\n\nlet inProgressRequests = 0\n\nlet sortIdCounter = 0\nlet didScheduleMicrotask = false\n\n// The most recently hovered (or touched, etc) link, i.e. the most recent task\n// scheduled at Intent priority. There's only ever a single task at Intent\n// priority at a time. We reserve special network bandwidth for this task only.\nlet mostRecentlyHoveredLink: PrefetchTask | null = null\n\n// CDN cache propagation delay after revalidation (in milliseconds)\nconst REVALIDATION_COOLDOWN_MS = 300\n\n// Timeout handle for the revalidation cooldown. When non-null, prefetch\n// requests are blocked to allow CDN cache propagation.\nlet revalidationCooldownTimeoutHandle: ReturnType<typeof setTimeout> | null =\n  null\n\n/**\n * Called by the cache when revalidation occurs. Starts a cooldown period\n * during which prefetch requests are blocked to allow CDN cache propagation.\n */\nexport function startRevalidationCooldown(): void {\n  // Clear any existing timeout in case multiple revalidations happen\n  // in quick succession.\n  if (revalidationCooldownTimeoutHandle !== null) {\n    clearTimeout(revalidationCooldownTimeoutHandle)\n  }\n\n  // Schedule the cooldown to expire after the delay.\n  revalidationCooldownTimeoutHandle = setTimeout(() => {\n    revalidationCooldownTimeoutHandle = null\n    // Retry the prefetch queue now that the cooldown has expired.\n    ensureWorkIsScheduled()\n  }, REVALIDATION_COOLDOWN_MS)\n}\n\nexport type IncludeDynamicData = null | 'full' | 'dynamic'\n\n/**\n * Initiates a prefetch task for the given URL. If a prefetch for the same URL\n * is already in progress, this will bump it to the top of the queue.\n *\n * This is not a user-facing function. By the time this is called, the href is\n * expected to be validated and normalized.\n *\n * @param key The RouteCacheKey to prefetch.\n * @param treeAtTimeOfPrefetch The app's current FlightRouterState\n * @param fetchStrategy Whether to prefetch dynamic data, in addition to\n * static data. This is used by `<Link prefetch={true}>`.\n */\nexport function schedulePrefetchTask(\n  key: RouteCacheKey,\n  treeAtTimeOfPrefetch: FlightRouterState,\n  fetchStrategy: PrefetchTaskFetchStrategy,\n  priority: PrefetchPriority,\n  onInvalidate: null | (() => void)\n): PrefetchTask {\n  // Spawn a new prefetch task\n  const task: PrefetchTask = {\n    key,\n    treeAtTimeOfPrefetch,\n    cacheVersion: getCurrentCacheVersion(),\n    priority,\n    phase: PrefetchPhase.RouteTree,\n    hasBackgroundWork: false,\n    spawnedRuntimePrefetches: null,\n    fetchStrategy,\n    sortId: sortIdCounter++,\n    isCanceled: false,\n    onInvalidate,\n    _heapIndex: -1,\n  }\n\n  trackMostRecentlyHoveredLink(task)\n\n  heapPush(taskHeap, task)\n\n  // Schedule an async task to process the queue.\n  //\n  // The main reason we process the queue in an async task is for batching.\n  // It's common for a single JS task/event to trigger multiple prefetches.\n  // By deferring to a microtask, we only process the queue once per JS task.\n  // If they have different priorities, it also ensures they are processed in\n  // the optimal order.\n  ensureWorkIsScheduled()\n\n  return task\n}\n\nexport function cancelPrefetchTask(task: PrefetchTask): void {\n  // Remove the prefetch task from the queue. If the task already completed,\n  // then this is a no-op.\n  //\n  // We must also explicitly mark the task as canceled so that a blocked task\n  // does not get added back to the queue when it's pinged by the network.\n  task.isCanceled = true\n  heapDelete(taskHeap, task)\n}\n\nexport function reschedulePrefetchTask(\n  task: PrefetchTask,\n  treeAtTimeOfPrefetch: FlightRouterState,\n  fetchStrategy: PrefetchTaskFetchStrategy,\n  priority: PrefetchPriority\n): void {\n  // Bump the prefetch task to the top of the queue, as if it were a fresh\n  // task. This is essentially the same as canceling the task and scheduling\n  // a new one, except it reuses the original object.\n  //\n  // The primary use case is to increase the priority of a Link-initated\n  // prefetch on hover.\n\n  // Un-cancel the task, in case it was previously canceled.\n  task.isCanceled = false\n  task.phase = PrefetchPhase.RouteTree\n\n  // Assign a new sort ID to move it ahead of all other tasks at the same\n  // priority level. (Higher sort IDs are processed first.)\n  task.sortId = sortIdCounter++\n  task.priority =\n    // If this task is the most recently hovered link, maintain its\n    // Intent priority, even if the rescheduled priority is lower.\n    task === mostRecentlyHoveredLink ? PrefetchPriority.Intent : priority\n\n  task.treeAtTimeOfPrefetch = treeAtTimeOfPrefetch\n  task.fetchStrategy = fetchStrategy\n\n  trackMostRecentlyHoveredLink(task)\n\n  if (task._heapIndex !== -1) {\n    // The task is already in the queue.\n    heapResift(taskHeap, task)\n  } else {\n    heapPush(taskHeap, task)\n  }\n  ensureWorkIsScheduled()\n}\n\nexport function isPrefetchTaskDirty(\n  task: PrefetchTask,\n  nextUrl: string | null,\n  tree: FlightRouterState\n): boolean {\n  // This is used to quickly bail out of a prefetch task if the result is\n  // guaranteed to not have changed since the task was initiated. This is\n  // strictly an optimization — theoretically, if it always returned true, no\n  // behavior should change because a full prefetch task will effectively\n  // perform the same checks.\n  const currentCacheVersion = getCurrentCacheVersion()\n  return (\n    task.cacheVersion !== currentCacheVersion ||\n    task.treeAtTimeOfPrefetch !== tree ||\n    task.key.nextUrl !== nextUrl\n  )\n}\n\nfunction trackMostRecentlyHoveredLink(task: PrefetchTask) {\n  // Track the mostly recently hovered link, i.e. the most recently scheduled\n  // task at Intent priority. There must only be one such task at a time.\n  if (\n    task.priority === PrefetchPriority.Intent &&\n    task !== mostRecentlyHoveredLink\n  ) {\n    if (mostRecentlyHoveredLink !== null) {\n      // Bump the previously hovered link's priority down to Default.\n      if (mostRecentlyHoveredLink.priority !== PrefetchPriority.Background) {\n        mostRecentlyHoveredLink.priority = PrefetchPriority.Default\n        heapResift(taskHeap, mostRecentlyHoveredLink)\n      }\n    }\n    mostRecentlyHoveredLink = task\n  }\n}\n\nfunction ensureWorkIsScheduled() {\n  if (didScheduleMicrotask) {\n    // Already scheduled a task to process the queue\n    return\n  }\n  didScheduleMicrotask = true\n  scheduleMicrotask(processQueueInMicrotask)\n}\n\n/**\n * Checks if we've exceeded the maximum number of concurrent prefetch requests,\n * to avoid saturating the browser's internal network queue. This is a\n * cooperative limit — prefetch tasks should check this before issuing\n * new requests.\n *\n * Also checks if we're within the revalidation cooldown window, during which\n * prefetch requests are delayed to allow CDN cache propagation.\n */\nfunction hasNetworkBandwidth(task: PrefetchTask): boolean {\n  // Check if we're within the revalidation cooldown window\n  if (revalidationCooldownTimeoutHandle !== null) {\n    // We're within the cooldown window. Return false to prevent prefetching.\n    // When the cooldown expires, the timeout will call ensureWorkIsScheduled()\n    // to retry the queue.\n    return false\n  }\n\n  // TODO: Also check if there's an in-progress navigation. We should never\n  // add prefetch requests to the network queue if an actual navigation is\n  // taking place, to ensure there's sufficient bandwidth for render-blocking\n  // data and resources.\n\n  // TODO: Consider reserving some amount of bandwidth for static prefetches.\n\n  if (task.priority === PrefetchPriority.Intent) {\n    // The most recently hovered link is allowed to exceed the default limit.\n    //\n    // The goal is to always have enough bandwidth to start a new prefetch\n    // request when hovering over a link.\n    //\n    // However, because we don't abort in-progress requests, it's still possible\n    // we'll run out of bandwidth. When links are hovered in quick succession,\n    // there could be multiple hover requests running simultaneously.\n    return inProgressRequests < 12\n  }\n\n  // The default limit is lower than the limit for a hovered link.\n  return inProgressRequests < 4\n}\n\nfunction spawnPrefetchSubtask<T>(\n  prefetchSubtask: Promise<PrefetchSubtaskResult<T> | null>\n): Promise<T | null> {\n  // When the scheduler spawns an async task, we don't await its result.\n  // Instead, the async task writes its result directly into the cache, then\n  // pings the scheduler to continue.\n  //\n  // We process server responses streamingly, so the prefetch subtask will\n  // likely resolve before we're finished receiving all the data. The subtask\n  // result includes a promise that resolves once the network connection is\n  // closed. The scheduler uses this to control network bandwidth by tracking\n  // and limiting the number of concurrent requests.\n  inProgressRequests++\n  return prefetchSubtask.then((result) => {\n    if (result === null) {\n      // The prefetch task errored before it could start processing the\n      // network stream. Assume the connection is closed.\n      onPrefetchConnectionClosed()\n      return null\n    }\n    // Wait for the connection to close before freeing up more bandwidth.\n    result.closed.then(onPrefetchConnectionClosed)\n    return result.value\n  })\n}\n\nfunction onPrefetchConnectionClosed(): void {\n  inProgressRequests--\n\n  // Notify the scheduler that we have more bandwidth, and can continue\n  // processing tasks.\n  ensureWorkIsScheduled()\n}\n\n/**\n * Notify the scheduler that we've received new data for an in-progress\n * prefetch. The corresponding task will be added back to the queue (unless the\n * task has been canceled in the meantime).\n */\nexport function pingPrefetchTask(task: PrefetchTask) {\n  // \"Ping\" a prefetch that's already in progress to notify it of new data.\n  if (\n    // Check if prefetch was canceled.\n    task.isCanceled ||\n    // Check if prefetch is already queued.\n    task._heapIndex !== -1\n  ) {\n    return\n  }\n  // Add the task back to the queue.\n  heapPush(taskHeap, task)\n  ensureWorkIsScheduled()\n}\n\nfunction processQueueInMicrotask() {\n  didScheduleMicrotask = false\n\n  // We aim to minimize how often we read the current time. Since nearly all\n  // functions in the prefetch scheduler are synchronous, we can read the time\n  // once and pass it as an argument wherever it's needed.\n  const now = Date.now()\n\n  // Process the task queue until we run out of network bandwidth.\n  let task = heapPeek(taskHeap)\n  while (task !== null && hasNetworkBandwidth(task)) {\n    task.cacheVersion = getCurrentCacheVersion()\n\n    const exitStatus = pingRoute(now, task)\n\n    // These fields are only valid for a single attempt. Reset them after each\n    // iteration of the task queue.\n    const hasBackgroundWork = task.hasBackgroundWork\n    task.hasBackgroundWork = false\n    task.spawnedRuntimePrefetches = null\n\n    switch (exitStatus) {\n      case PrefetchTaskExitStatus.InProgress:\n        // The task yielded because there are too many requests in progress.\n        // Stop processing tasks until we have more bandwidth.\n        return\n      case PrefetchTaskExitStatus.Blocked:\n        // The task is blocked. It needs more data before it can proceed.\n        // Keep the task out of the queue until the server responds.\n        heapPop(taskHeap)\n        // Continue to the next task\n        task = heapPeek(taskHeap)\n        continue\n      case PrefetchTaskExitStatus.Done:\n        if (task.phase === PrefetchPhase.RouteTree) {\n          // Finished prefetching the route tree. Proceed to prefetching\n          // the segments.\n          task.phase = PrefetchPhase.Segments\n          heapResift(taskHeap, task)\n        } else if (hasBackgroundWork) {\n          // The task spawned additional background work. Reschedule the task\n          // at background priority.\n          task.priority = PrefetchPriority.Background\n          heapResift(taskHeap, task)\n        } else {\n          // The prefetch is complete. Continue to the next task.\n          heapPop(taskHeap)\n        }\n        task = heapPeek(taskHeap)\n        continue\n      default:\n        exitStatus satisfies never\n    }\n  }\n}\n\n/**\n * Check this during a prefetch task to determine if background work can be\n * performed. If so, it evaluates to `true`. Otherwise, it returns `false`,\n * while also scheduling a background task to run later. Usage:\n *\n * @example\n * if (background(task)) {\n *   // Perform background-pri work\n * }\n */\nfunction background(task: PrefetchTask): boolean {\n  if (task.priority === PrefetchPriority.Background) {\n    return true\n  }\n  task.hasBackgroundWork = true\n  return false\n}\n\nfunction pingRoute(now: number, task: PrefetchTask): PrefetchTaskExitStatus {\n  const key = task.key\n  const route = readOrCreateRouteCacheEntry(now, task, key)\n  const exitStatus = pingRootRouteTree(now, task, route)\n\n  if (exitStatus !== PrefetchTaskExitStatus.InProgress && key.search !== '') {\n    // If the URL has a non-empty search string, also prefetch the pathname\n    // without the search string. We use the searchless route tree as a base for\n    // optimistic routing; see requestOptimisticRouteCacheEntry for details.\n    //\n    // Note that we don't need to prefetch any of the segment data. Just the\n    // route tree.\n    //\n    // TODO: This is a temporary solution; the plan is to replace this by adding\n    // a wildcard lookup method to the TupleMap implementation. This is\n    // non-trivial to implement because it needs to account for things like\n    // fallback route entries, hence this temporary workaround.\n    const url = new URL(key.href)\n    url.search = ''\n    const keyWithoutSearch = createCacheKey(url.href, key.nextUrl)\n    const routeWithoutSearch = readOrCreateRouteCacheEntry(\n      now,\n      task,\n      keyWithoutSearch\n    )\n    switch (routeWithoutSearch.status) {\n      case EntryStatus.Empty: {\n        if (background(task)) {\n          routeWithoutSearch.status = EntryStatus.Pending\n          spawnPrefetchSubtask(\n            fetchRouteOnCacheMiss(routeWithoutSearch, task, keyWithoutSearch)\n          )\n        }\n        break\n      }\n      case EntryStatus.Pending:\n      case EntryStatus.Fulfilled:\n      case EntryStatus.Rejected: {\n        // Either the route tree is already cached, or there's already a\n        // request in progress. Since we don't need to fetch any segment data\n        // for this route, there's nothing left to do.\n        break\n      }\n      default:\n        routeWithoutSearch satisfies never\n    }\n  }\n\n  return exitStatus\n}\n\nfunction pingRootRouteTree(\n  now: number,\n  task: PrefetchTask,\n  route: RouteCacheEntry\n): PrefetchTaskExitStatus {\n  switch (route.status) {\n    case EntryStatus.Empty: {\n      // Route is not yet cached, and there's no request already in progress.\n      // Spawn a task to request the route, load it into the cache, and ping\n      // the task to continue.\n\n      // TODO: There are multiple strategies in the <Link> API for prefetching\n      // a route. Currently we've only implemented the main one: per-segment,\n      // static-data only.\n      //\n      // There's also `<Link prefetch={true}>`\n      // which prefetch both static *and* dynamic data.\n      // Similarly, we need to fallback to the old, per-page\n      // behavior if PPR is disabled for a route (via the incremental opt-in).\n      //\n      // Those cases will be handled here.\n      spawnPrefetchSubtask(fetchRouteOnCacheMiss(route, task, task.key))\n\n      // If the request takes longer than a minute, a subsequent request should\n      // retry instead of waiting for this one. When the response is received,\n      // this value will be replaced by a new value based on the stale time sent\n      // from the server.\n      // TODO: We should probably also manually abort the fetch task, to reclaim\n      // server bandwidth.\n      route.staleAt = now + 60 * 1000\n\n      // Upgrade to Pending so we know there's already a request in progress\n      route.status = EntryStatus.Pending\n\n      // Intentional fallthrough to the Pending branch\n    }\n    case EntryStatus.Pending: {\n      // Still pending. We can't start prefetching the segments until the route\n      // tree has loaded. Add the task to the set of blocked tasks so that it\n      // is notified when the route tree is ready.\n      const blockedTasks = route.blockedTasks\n      if (blockedTasks === null) {\n        route.blockedTasks = new Set([task])\n      } else {\n        blockedTasks.add(task)\n      }\n      return PrefetchTaskExitStatus.Blocked\n    }\n    case EntryStatus.Rejected: {\n      // Route tree failed to load. Treat as a 404.\n      return PrefetchTaskExitStatus.Done\n    }\n    case EntryStatus.Fulfilled: {\n      if (task.phase !== PrefetchPhase.Segments) {\n        // Do not prefetch segment data until we've entered the segment phase.\n        return PrefetchTaskExitStatus.Done\n      }\n      // Recursively fill in the segment tree.\n      if (!hasNetworkBandwidth(task)) {\n        // Stop prefetching segments until there's more bandwidth.\n        return PrefetchTaskExitStatus.InProgress\n      }\n      const tree = route.tree\n\n      // A task's fetch strategy gets set to `PPR` for any \"auto\" prefetch.\n      // If it turned out that the route isn't PPR-enabled, we need to use `LoadingBoundary` instead.\n      // We don't need to do this for runtime prefetches, because those are only available in\n      // `cacheComponents`, where every route is PPR.\n      const fetchStrategy =\n        task.fetchStrategy === FetchStrategy.PPR\n          ? route.isPPREnabled\n            ? FetchStrategy.PPR\n            : FetchStrategy.LoadingBoundary\n          : task.fetchStrategy\n\n      switch (fetchStrategy) {\n        case FetchStrategy.PPR: {\n          // For Cache Components pages, each segment may be prefetched\n          // statically or using a runtime request, based on various\n          // configurations and heuristics. We'll do this in two passes: first\n          // traverse the tree and perform all the static prefetches.\n          //\n          // Then, if there are any segments that need a runtime request,\n          // do another pass to perform a runtime prefetch.\n          const exitStatus = pingSharedPartOfCacheComponentsTree(\n            now,\n            task,\n            route,\n            task.treeAtTimeOfPrefetch,\n            tree\n          )\n          if (exitStatus === PrefetchTaskExitStatus.InProgress) {\n            // Child yielded without finishing.\n            return PrefetchTaskExitStatus.InProgress\n          }\n          const spawnedRuntimePrefetches = task.spawnedRuntimePrefetches\n          if (spawnedRuntimePrefetches !== null) {\n            // During the first pass, we discovered segments that require a\n            // runtime prefetch. Do a second pass to construct a request tree.\n            const spawnedEntries = new Map<\n              SegmentCacheKey,\n              PendingSegmentCacheEntry\n            >()\n            const requestTree = pingRuntimePrefetches(\n              now,\n              task,\n              route,\n              tree,\n              spawnedRuntimePrefetches,\n              spawnedEntries\n            )\n            let needsDynamicRequest = spawnedEntries.size > 0\n            if (needsDynamicRequest) {\n              // Perform a dynamic prefetch request and populate the cache with\n              // the result.\n              spawnPrefetchSubtask(\n                fetchSegmentPrefetchesUsingDynamicRequest(\n                  task,\n                  route,\n                  FetchStrategy.PPRRuntime,\n                  requestTree,\n                  spawnedEntries\n                )\n              )\n            }\n          }\n          return PrefetchTaskExitStatus.Done\n        }\n        case FetchStrategy.Full:\n        case FetchStrategy.PPRRuntime:\n        case FetchStrategy.LoadingBoundary: {\n          // Prefetch multiple segments using a single dynamic request.\n          // TODO: We can consolidate this branch with previous one by modeling\n          // it as if the first segment in the new tree has runtime prefetching\n          // enabled. Will do this as a follow-up refactor. Might want to remove\n          // the special metatdata case below first. In the meantime, it's not\n          // really that much duplication, just would be nice to remove one of\n          // these codepaths.\n          const spawnedEntries = new Map<\n            SegmentCacheKey,\n            PendingSegmentCacheEntry\n          >()\n          const dynamicRequestTree = diffRouteTreeAgainstCurrent(\n            now,\n            task,\n            route,\n            task.treeAtTimeOfPrefetch,\n            tree,\n            spawnedEntries,\n            fetchStrategy\n          )\n\n          let needsDynamicRequest = spawnedEntries.size > 0\n\n          if (\n            !needsDynamicRequest &&\n            route.isHeadPartial &&\n            route.TODO_metadataStatus === EntryStatus.Empty\n          ) {\n            // All the segment data is already cached, however, we need to issue\n            // a request anyway so we can prefetch the head. Update the status\n            // field to prevent additional requests from being spawned while\n            // this one is in progress.\n            // TODO: This is a temporary, targeted solution to fix a regression\n            // we found. It exists to prevent the scheduler from sending a\n            // redundant request if there's already one in progress.\n            // Essentially, it will attempt once at most, then give up until the\n            // route entry expires or is evicted by other means. But because\n            // this doesn't have its own stale time separate from the route\n            // itself, there will be edge cases where the metadata fails to be\n            // fully prefetched. Consider caching metadata using a separate\n            // entry type so we can model this more cleanly. The circumstances\n            // that lead to this branch running in the first place are\n            // relatively rare, so it's not critical.\n            route.TODO_metadataStatus = EntryStatus.Fulfilled\n            needsDynamicRequest = true\n            // This instructs the server to only send the metadata.\n            dynamicRequestTree[3] = 'metadata-only'\n            // We can null out the children to reduce the request size, since\n            // they won't be needed.\n            dynamicRequestTree[1] = {}\n          }\n\n          if (needsDynamicRequest) {\n            // Perform a dynamic prefetch request and populate the cache with\n            // the result\n            spawnPrefetchSubtask(\n              fetchSegmentPrefetchesUsingDynamicRequest(\n                task,\n                route,\n                fetchStrategy,\n                dynamicRequestTree,\n                spawnedEntries\n              )\n            )\n          }\n          return PrefetchTaskExitStatus.Done\n        }\n        default:\n          fetchStrategy satisfies never\n      }\n      break\n    }\n    default: {\n      route satisfies never\n    }\n  }\n  return PrefetchTaskExitStatus.Done\n}\n\nfunction pingSharedPartOfCacheComponentsTree(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  oldTree: FlightRouterState,\n  newTree: RouteTree\n): PrefetchTaskExitStatus {\n  // When Cache Components is enabled (or PPR, or a fully static route when PPR\n  // is disabled; those cases are treated equivalently to Cache Components), we\n  // start by prefetching each segment individually. Once we reach the \"new\"\n  // part of the tree — the part that doesn't exist on the current page — we\n  // may choose to switch to a runtime prefetch instead, based on the\n  // information sent by the server in the route tree.\n  //\n  // The traversal starts in the \"shared\" part of the tree. Once we reach the\n  // \"new\" part of the tree, we switch to a different traversal,\n  // pingNewPartOfCacheComponentsTree.\n\n  // Prefetch this segment's static data.\n  const segment = readOrCreateSegmentCacheEntry(\n    now,\n    task.fetchStrategy,\n    route,\n    newTree.cacheKey\n  )\n  pingStaticSegmentData(now, task, route, segment, task.key, newTree)\n\n  // Recursively ping the children.\n  const oldTreeChildren = oldTree[1]\n  const newTreeChildren = newTree.slots\n  if (newTreeChildren !== null) {\n    for (const parallelRouteKey in newTreeChildren) {\n      if (!hasNetworkBandwidth(task)) {\n        // Stop prefetching segments until there's more bandwidth.\n        return PrefetchTaskExitStatus.InProgress\n      }\n      const newTreeChild = newTreeChildren[parallelRouteKey]\n      const newTreeChildSegment = newTreeChild.segment\n      const oldTreeChild: FlightRouterState | void =\n        oldTreeChildren[parallelRouteKey]\n      const oldTreeChildSegment: FlightRouterStateSegment | void =\n        oldTreeChild?.[0]\n      let childExitStatus\n      if (\n        oldTreeChildSegment !== undefined &&\n        doesCurrentSegmentMatchCachedSegment(\n          route,\n          newTreeChildSegment,\n          oldTreeChildSegment\n        )\n      ) {\n        // We're still in the \"shared\" part of the tree.\n        childExitStatus = pingSharedPartOfCacheComponentsTree(\n          now,\n          task,\n          route,\n          oldTreeChild,\n          newTreeChild\n        )\n      } else {\n        // We've entered the \"new\" part of the tree. Switch\n        // traversal functions.\n        childExitStatus = pingNewPartOfCacheComponentsTree(\n          now,\n          task,\n          route,\n          newTreeChild\n        )\n      }\n      if (childExitStatus === PrefetchTaskExitStatus.InProgress) {\n        // Child yielded without finishing.\n        return PrefetchTaskExitStatus.InProgress\n      }\n    }\n  }\n\n  return PrefetchTaskExitStatus.Done\n}\n\nfunction pingNewPartOfCacheComponentsTree(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  tree: RouteTree\n): PrefetchTaskExitStatus.InProgress | PrefetchTaskExitStatus.Done {\n  // We're now prefetching in the \"new\" part of the tree, the part that doesn't\n  // exist on the current page. (In other words, we're deeper than the\n  // shared layouts.) Segments in here default to being prefetched statically.\n  // However, if the server instructs us to, we may switch to a runtime\n  // prefetch instead. Traverse the tree and check at each segment.\n  if (tree.hasRuntimePrefetch) {\n    // This route has a runtime prefetch response. Since we're below the shared\n    // layout, everything from this point should be prefetched using a single,\n    // combined runtime request, rather than using per-segment static requests.\n    // This is true even if some of the child segments are known to be fully\n    // static — once we've decided to perform a runtime prefetch, we might as\n    // well respond with the static segments in the same roundtrip. (That's how\n    // regular navigations work, too.) We'll still skip over segments that are\n    // already cached, though.\n    //\n    // It's the server's responsibility to set a reasonable value of\n    // `hasRuntimePrefetch`. Currently it's user-defined, but eventually, the\n    // server may send a value of `false` even if the user opts in, if it\n    // determines during build that the route is always fully static. There are\n    // more optimizations we can do once we implement fallback param\n    // tracking, too.\n    //\n    // Use the task object to collect the segments that need a runtime prefetch.\n    // This will signal to the outer task queue that a second traversal is\n    // required to construct a request tree.\n    if (task.spawnedRuntimePrefetches === null) {\n      task.spawnedRuntimePrefetches = new Set([tree.cacheKey])\n    } else {\n      task.spawnedRuntimePrefetches.add(tree.cacheKey)\n    }\n    // Then exit the traversal without prefetching anything further.\n    return PrefetchTaskExitStatus.Done\n  }\n\n  // This segment should not be runtime prefetched. Prefetch its static data.\n  const segment = readOrCreateSegmentCacheEntry(\n    now,\n    task.fetchStrategy,\n    route,\n    tree.cacheKey\n  )\n  pingStaticSegmentData(now, task, route, segment, task.key, tree)\n  if (tree.slots !== null) {\n    if (!hasNetworkBandwidth(task)) {\n      // Stop prefetching segments until there's more bandwidth.\n      return PrefetchTaskExitStatus.InProgress\n    }\n    // Recursively ping the children.\n    for (const parallelRouteKey in tree.slots) {\n      const childTree = tree.slots[parallelRouteKey]\n      const childExitStatus = pingNewPartOfCacheComponentsTree(\n        now,\n        task,\n        route,\n        childTree\n      )\n      if (childExitStatus === PrefetchTaskExitStatus.InProgress) {\n        // Child yielded without finishing.\n        return PrefetchTaskExitStatus.InProgress\n      }\n    }\n  }\n  // This segment and all its children have finished prefetching.\n  return PrefetchTaskExitStatus.Done\n}\n\nfunction diffRouteTreeAgainstCurrent(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  oldTree: FlightRouterState,\n  newTree: RouteTree,\n  spawnedEntries: Map<string, PendingSegmentCacheEntry>,\n  fetchStrategy:\n    | FetchStrategy.Full\n    | FetchStrategy.PPRRuntime\n    | FetchStrategy.LoadingBoundary\n): FlightRouterState {\n  // This is a single recursive traversal that does multiple things:\n  // - Finds the parts of the target route (newTree) that are not part of\n  //   of the current page (oldTree) by diffing them, using the same algorithm\n  //   as a real navigation.\n  // - Constructs a request tree (FlightRouterState) that describes which\n  //   segments need to be prefetched and which ones are already cached.\n  // - Creates a set of pending cache entries for the segments that need to\n  //   be prefetched, so that a subsequent prefetch task does not request the\n  //   same segments again.\n  const oldTreeChildren = oldTree[1]\n  const newTreeChildren = newTree.slots\n  let requestTreeChildren: Record<string, FlightRouterState> = {}\n  if (newTreeChildren !== null) {\n    for (const parallelRouteKey in newTreeChildren) {\n      const newTreeChild = newTreeChildren[parallelRouteKey]\n      const newTreeChildSegment = newTreeChild.segment\n      const oldTreeChild: FlightRouterState | void =\n        oldTreeChildren[parallelRouteKey]\n      const oldTreeChildSegment: FlightRouterStateSegment | void =\n        oldTreeChild?.[0]\n      if (\n        oldTreeChildSegment !== undefined &&\n        doesCurrentSegmentMatchCachedSegment(\n          route,\n          newTreeChildSegment,\n          oldTreeChildSegment\n        )\n      ) {\n        // This segment is already part of the current route. Keep traversing.\n        const requestTreeChild = diffRouteTreeAgainstCurrent(\n          now,\n          task,\n          route,\n          oldTreeChild,\n          newTreeChild,\n          spawnedEntries,\n          fetchStrategy\n        )\n        requestTreeChildren[parallelRouteKey] = requestTreeChild\n      } else {\n        // This segment is not part of the current route. We're entering a\n        // part of the tree that we need to prefetch (unless everything is\n        // already cached).\n        switch (fetchStrategy) {\n          case FetchStrategy.LoadingBoundary: {\n            // When PPR is disabled, we can't prefetch per segment. We must\n            // fallback to the old prefetch behavior and send a dynamic request.\n            // Only routes that include a loading boundary can be prefetched in\n            // this way.\n            //\n            // This is simlar to a \"full\" prefetch, but we're much more\n            // conservative about which segments to include in the request.\n            //\n            // The server will only render up to the first loading boundary\n            // inside new part of the tree. If there's no loading boundary\n            // anywhere in the tree, the server will never return any data, so\n            // we can skip the request.\n            const subtreeHasLoadingBoundary =\n              newTreeChild.hasLoadingBoundary !==\n              HasLoadingBoundary.SubtreeHasNoLoadingBoundary\n            const requestTreeChild = subtreeHasLoadingBoundary\n              ? pingPPRDisabledRouteTreeUpToLoadingBoundary(\n                  now,\n                  task,\n                  route,\n                  newTreeChild,\n                  null,\n                  spawnedEntries\n                )\n              : // There's no loading boundary within this tree. Bail out.\n                convertRouteTreeToFlightRouterState(newTreeChild)\n            requestTreeChildren[parallelRouteKey] = requestTreeChild\n            break\n          }\n          case FetchStrategy.PPRRuntime: {\n            // This is a runtime prefetch. Fetch all cacheable data in the tree,\n            // not just the static PPR shell.\n            const requestTreeChild = pingRouteTreeAndIncludeDynamicData(\n              now,\n              task,\n              route,\n              newTreeChild,\n              false,\n              spawnedEntries,\n              fetchStrategy\n            )\n            requestTreeChildren[parallelRouteKey] = requestTreeChild\n            break\n          }\n          case FetchStrategy.Full: {\n            // This is a \"full\" prefetch. Fetch all the data in the tree, both\n            // static and dynamic. We issue roughly the same request that we\n            // would during a real navigation. The goal is that once the\n            // navigation occurs, the router should not have to fetch any\n            // additional data.\n            //\n            // Although the response will include dynamic data, opting into a\n            // Full prefetch — via <Link prefetch={true}> — implicitly\n            // instructs the cache to treat the response as \"static\", or non-\n            // dynamic, since the whole point is to cache it for\n            // future navigations.\n            //\n            // Construct a tree (currently a FlightRouterState) that represents\n            // which segments need to be prefetched and which ones are already\n            // cached. If the tree is empty, then we can exit. Otherwise, we'll\n            // send the request tree to the server and use the response to\n            // populate the segment cache.\n            const requestTreeChild = pingRouteTreeAndIncludeDynamicData(\n              now,\n              task,\n              route,\n              newTreeChild,\n              false,\n              spawnedEntries,\n              fetchStrategy\n            )\n            requestTreeChildren[parallelRouteKey] = requestTreeChild\n            break\n          }\n          default:\n            fetchStrategy satisfies never\n        }\n      }\n    }\n  }\n  const requestTree: FlightRouterState = [\n    newTree.segment,\n    requestTreeChildren,\n    null,\n    null,\n    newTree.isRootLayout,\n  ]\n  return requestTree\n}\n\nfunction pingPPRDisabledRouteTreeUpToLoadingBoundary(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  tree: RouteTree,\n  refetchMarkerContext: 'refetch' | 'inside-shared-layout' | null,\n  spawnedEntries: Map<string, PendingSegmentCacheEntry>\n): FlightRouterState {\n  // This function is similar to pingRouteTreeAndIncludeDynamicData, except the\n  // server is only going to return a minimal loading state — it will stop\n  // rendering at the first loading boundary. Whereas a Full prefetch is\n  // intentionally aggressive and tries to pretfetch all the data that will be\n  // needed for a navigation, a LoadingBoundary prefetch is much more\n  // conservative. For example, it will omit from the request tree any segment\n  // that is already cached, regardles of whether it's partial or full. By\n  // contrast, a Full prefetch will refetch partial segments.\n\n  // \"inside-shared-layout\" tells the server where to start looking for a\n  // loading boundary.\n  let refetchMarker: 'refetch' | 'inside-shared-layout' | null =\n    refetchMarkerContext === null ? 'inside-shared-layout' : null\n\n  const segment = readOrCreateSegmentCacheEntry(\n    now,\n    task.fetchStrategy,\n    route,\n    tree.cacheKey\n  )\n  switch (segment.status) {\n    case EntryStatus.Empty: {\n      // This segment is not cached. Add a refetch marker so the server knows\n      // to start rendering here.\n      // TODO: Instead of a \"refetch\" marker, we could just omit this subtree's\n      // FlightRouterState from the request tree. I think this would probably\n      // already work even without any updates to the server. For consistency,\n      // though, I'll send the full tree and we'll look into this later as part\n      // of a larger redesign of the request protocol.\n\n      // Add the pending cache entry to the result map.\n      spawnedEntries.set(\n        tree.cacheKey,\n        upgradeToPendingSegment(\n          segment,\n          // Set the fetch strategy to LoadingBoundary to indicate that the server\n          // might not include it in the pending response. If another route is able\n          // to issue a per-segment request, we'll do that in the background.\n          FetchStrategy.LoadingBoundary\n        )\n      )\n      if (refetchMarkerContext !== 'refetch') {\n        refetchMarker = refetchMarkerContext = 'refetch'\n      } else {\n        // There's already a parent with a refetch marker, so we don't need\n        // to add another one.\n      }\n      break\n    }\n    case EntryStatus.Fulfilled: {\n      // The segment is already cached.\n      const segmentHasLoadingBoundary =\n        tree.hasLoadingBoundary === HasLoadingBoundary.SegmentHasLoadingBoundary\n      if (segmentHasLoadingBoundary) {\n        // This segment has a loading boundary, which means the server won't\n        // render its children. So there's nothing left to prefetch along this\n        // path. We can bail out.\n        return convertRouteTreeToFlightRouterState(tree)\n      }\n      // NOTE: If the cached segment were fetched using PPR, then it might be\n      // partial. We could get a more complete version of the segment by\n      // including it in this non-PPR request.\n      //\n      // We're intentionally choosing not to, though, because it's generally\n      // better to avoid doing a full prefetch whenever possible.\n      break\n    }\n    case EntryStatus.Pending: {\n      // There's another prefetch currently in progress. Don't add the refetch\n      // marker yet, so the server knows it can skip rendering this segment.\n      break\n    }\n    case EntryStatus.Rejected: {\n      // The segment failed to load. We shouldn't issue another request until\n      // the stale time has elapsed.\n      break\n    }\n    default:\n      segment satisfies never\n  }\n  const requestTreeChildren: Record<string, FlightRouterState> = {}\n  if (tree.slots !== null) {\n    for (const parallelRouteKey in tree.slots) {\n      const childTree = tree.slots[parallelRouteKey]\n      requestTreeChildren[parallelRouteKey] =\n        pingPPRDisabledRouteTreeUpToLoadingBoundary(\n          now,\n          task,\n          route,\n          childTree,\n          refetchMarkerContext,\n          spawnedEntries\n        )\n    }\n  }\n  const requestTree: FlightRouterState = [\n    tree.segment,\n    requestTreeChildren,\n    null,\n    refetchMarker,\n    tree.isRootLayout,\n  ]\n  return requestTree\n}\n\nfunction pingRouteTreeAndIncludeDynamicData(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  tree: RouteTree,\n  isInsideRefetchingParent: boolean,\n  spawnedEntries: Map<string, PendingSegmentCacheEntry>,\n  fetchStrategy: FetchStrategy.Full | FetchStrategy.PPRRuntime\n): FlightRouterState {\n  // The tree we're constructing is the same shape as the tree we're navigating\n  // to. But even though this is a \"new\" tree, some of the individual segments\n  // may be cached as a result of other route prefetches.\n  //\n  // So we need to find the first uncached segment along each path add an\n  // explicit \"refetch\" marker so the server knows where to start rendering.\n  // Once the server starts rendering along a path, it keeps rendering the\n  // entire subtree.\n  const segment = readOrCreateSegmentCacheEntry(\n    now,\n    // Note that `fetchStrategy` might be different from `task.fetchStrategy`,\n    // and we have to use the former here.\n    // We can have a task with `FetchStrategy.PPR` where some of its segments are configured to\n    // always use runtime prefetching (via `export const prefetch`), and those should check for\n    // entries that include search params.\n    fetchStrategy,\n    route,\n    tree.cacheKey\n  )\n\n  let spawnedSegment: PendingSegmentCacheEntry | null = null\n\n  switch (segment.status) {\n    case EntryStatus.Empty: {\n      // This segment is not cached. Include it in the request.\n      spawnedSegment = upgradeToPendingSegment(segment, fetchStrategy)\n      break\n    }\n    case EntryStatus.Fulfilled: {\n      // The segment is already cached.\n      if (\n        segment.isPartial &&\n        canNewFetchStrategyProvideMoreContent(\n          segment.fetchStrategy,\n          fetchStrategy\n        )\n      ) {\n        // The cached segment contains dynamic holes, and was prefetched using a less specific strategy than the current one.\n        // This means we're in one of these cases:\n        //   - we have a static prefetch, and we're doing a runtime prefetch\n        //   - we have a static or runtime prefetch, and we're doing a Full prefetch (or a navigation).\n        // In either case, we need to include it in the request to get a more specific (or full) version.\n        spawnedSegment = pingFullSegmentRevalidation(\n          now,\n          route,\n          segment,\n          tree,\n          fetchStrategy\n        )\n      }\n      break\n    }\n    case EntryStatus.Pending:\n    case EntryStatus.Rejected: {\n      // There's either another prefetch currently in progress, or the previous\n      // attempt failed. If the new strategy can provide more content, fetch it again.\n      if (\n        canNewFetchStrategyProvideMoreContent(\n          segment.fetchStrategy,\n          fetchStrategy\n        )\n      ) {\n        spawnedSegment = pingFullSegmentRevalidation(\n          now,\n          route,\n          segment,\n          tree,\n          fetchStrategy\n        )\n      }\n      break\n    }\n    default:\n      segment satisfies never\n  }\n  const requestTreeChildren: Record<string, FlightRouterState> = {}\n  if (tree.slots !== null) {\n    for (const parallelRouteKey in tree.slots) {\n      const childTree = tree.slots[parallelRouteKey]\n      requestTreeChildren[parallelRouteKey] =\n        pingRouteTreeAndIncludeDynamicData(\n          now,\n          task,\n          route,\n          childTree,\n          isInsideRefetchingParent || spawnedSegment !== null,\n          spawnedEntries,\n          fetchStrategy\n        )\n    }\n  }\n\n  if (spawnedSegment !== null) {\n    // Add the pending entry to the result map.\n    spawnedEntries.set(tree.cacheKey, spawnedSegment)\n  }\n\n  // Don't bother to add a refetch marker if one is already present in a parent.\n  const refetchMarker =\n    !isInsideRefetchingParent && spawnedSegment !== null ? 'refetch' : null\n\n  const requestTree: FlightRouterState = [\n    tree.segment,\n    requestTreeChildren,\n    null,\n    refetchMarker,\n    tree.isRootLayout,\n  ]\n  return requestTree\n}\n\nfunction pingRuntimePrefetches(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  tree: RouteTree,\n  spawnedRuntimePrefetches: Set<SegmentCacheKey>,\n  spawnedEntries: Map<string, PendingSegmentCacheEntry>\n): FlightRouterState {\n  // Construct a request tree (FlightRouterState) for a runtime prefetch. If\n  // a segment is part of the runtime prefetch, the tree is constructed by\n  // diffing against what's already in the prefetch cache. Otherwise, we send\n  // a regular FlightRouterState with no special markers.\n  //\n  // See pingRouteTreeAndIncludeDynamicData for details.\n  if (spawnedRuntimePrefetches.has(tree.cacheKey)) {\n    // This segment needs a runtime prefetch.\n    return pingRouteTreeAndIncludeDynamicData(\n      now,\n      task,\n      route,\n      tree,\n      false,\n      spawnedEntries,\n      FetchStrategy.PPRRuntime\n    )\n  }\n  let requestTreeChildren: Record<string, FlightRouterState> = {}\n  const slots = tree.slots\n  if (slots !== null) {\n    for (const parallelRouteKey in slots) {\n      const childTree = slots[parallelRouteKey]\n      requestTreeChildren[parallelRouteKey] = pingRuntimePrefetches(\n        now,\n        task,\n        route,\n        childTree,\n        spawnedRuntimePrefetches,\n        spawnedEntries\n      )\n    }\n  }\n\n  // This segment is not part of the runtime prefetch. Clone the base tree.\n  const requestTree: FlightRouterState = [\n    tree.segment,\n    requestTreeChildren,\n    null,\n    null,\n  ]\n  return requestTree\n}\n\nfunction pingStaticSegmentData(\n  now: number,\n  task: PrefetchTask,\n  route: FulfilledRouteCacheEntry,\n  segment: SegmentCacheEntry,\n  routeKey: RouteCacheKey,\n  tree: RouteTree\n): void {\n  switch (segment.status) {\n    case EntryStatus.Empty:\n      // Upgrade to Pending so we know there's already a request in progress\n      spawnPrefetchSubtask(\n        fetchSegmentOnCacheMiss(\n          route,\n          upgradeToPendingSegment(segment, FetchStrategy.PPR),\n          routeKey,\n          tree\n        )\n      )\n      break\n    case EntryStatus.Pending: {\n      // There's already a request in progress. Depending on what kind of\n      // request it is, we may want to revalidate it.\n      switch (segment.fetchStrategy) {\n        case FetchStrategy.PPR:\n        case FetchStrategy.PPRRuntime:\n        case FetchStrategy.Full:\n          // There's already a request in progress. Don't do anything.\n          break\n        case FetchStrategy.LoadingBoundary:\n          // There's a pending request, but because it's using the old\n          // prefetching strategy, we can't be sure if it will be fulfilled by\n          // the response — it might be inside the loading boundary. Perform\n          // a revalidation, but because it's speculative, wait to do it at\n          // background priority.\n          if (background(task)) {\n            // TODO: Instead of speculatively revalidating, consider including\n            // `hasLoading` in the route tree prefetch response.\n            pingPPRSegmentRevalidation(\n              now,\n              task,\n              segment,\n              route,\n              routeKey,\n              tree\n            )\n          }\n          break\n        default:\n          segment.fetchStrategy satisfies never\n      }\n      break\n    }\n    case EntryStatus.Rejected: {\n      // The existing entry in the cache was rejected. Depending on how it\n      // was originally fetched, we may or may not want to revalidate it.\n      switch (segment.fetchStrategy) {\n        case FetchStrategy.PPR:\n        case FetchStrategy.PPRRuntime:\n        case FetchStrategy.Full:\n          // The previous attempt to fetch this entry failed. Don't attempt to\n          // fetch it again until the entry expires.\n          break\n        case FetchStrategy.LoadingBoundary:\n          // There's a rejected entry, but it was fetched using the loading\n          // boundary strategy. So the reason it wasn't returned by the server\n          // might just be because it was inside a loading boundary. Or because\n          // there was a dynamic rewrite. Revalidate it using the per-\n          // segment strategy.\n          //\n          // Because a rejected segment will definitely prevent the segment (and\n          // all of its children) from rendering, we perform this revalidation\n          // immediately instead of deferring it to a background task.\n          pingPPRSegmentRevalidation(now, task, segment, route, routeKey, tree)\n          break\n        default:\n          segment.fetchStrategy satisfies never\n      }\n      break\n    }\n    case EntryStatus.Fulfilled:\n      // Segment is already cached. There's nothing left to prefetch.\n      break\n    default:\n      segment satisfies never\n  }\n\n  // Segments do not have dependent tasks, so once the prefetch is initiated,\n  // there's nothing else for us to do (except write the server data into the\n  // entry, which is handled by `fetchSegmentOnCacheMiss`).\n}\n\nfunction pingPPRSegmentRevalidation(\n  now: number,\n  task: PrefetchTask,\n  currentSegment: SegmentCacheEntry,\n  route: FulfilledRouteCacheEntry,\n  routeKey: RouteCacheKey,\n  tree: RouteTree\n): void {\n  const revalidatingSegment = readOrCreateRevalidatingSegmentEntry(\n    now,\n    currentSegment\n  )\n  switch (revalidatingSegment.status) {\n    case EntryStatus.Empty:\n      // Spawn a prefetch request and upsert the segment into the cache\n      // upon completion.\n      upsertSegmentOnCompletion(\n        task.fetchStrategy,\n        route,\n        tree.cacheKey,\n        spawnPrefetchSubtask(\n          fetchSegmentOnCacheMiss(\n            route,\n            upgradeToPendingSegment(revalidatingSegment, FetchStrategy.PPR),\n            routeKey,\n            tree\n          )\n        )\n      )\n      break\n    case EntryStatus.Pending:\n      // There's already a revalidation in progress.\n      break\n    case EntryStatus.Fulfilled:\n    case EntryStatus.Rejected:\n      // A previous revalidation attempt finished, but we chose not to replace\n      // the existing entry in the cache. Don't try again until or unless the\n      // revalidation entry expires.\n      break\n    default:\n      revalidatingSegment satisfies never\n  }\n}\n\nfunction pingFullSegmentRevalidation(\n  now: number,\n  route: FulfilledRouteCacheEntry,\n  currentSegment: SegmentCacheEntry,\n  tree: RouteTree,\n  fetchStrategy: FetchStrategy.Full | FetchStrategy.PPRRuntime\n): PendingSegmentCacheEntry | null {\n  const revalidatingSegment = readOrCreateRevalidatingSegmentEntry(\n    now,\n    currentSegment\n  )\n  if (revalidatingSegment.status === EntryStatus.Empty) {\n    // During a Full/PPRRuntime prefetch, a single dynamic request is made for all the\n    // segments that we need. So we don't initiate a request here directly. By\n    // returning a pending entry from this function, it signals to the caller\n    // that this segment should be included in the request that's sent to\n    // the server.\n    const pendingSegment = upgradeToPendingSegment(\n      revalidatingSegment,\n      fetchStrategy\n    )\n    upsertSegmentOnCompletion(\n      fetchStrategy,\n      route,\n      tree.cacheKey,\n      waitForSegmentCacheEntry(pendingSegment)\n    )\n    return pendingSegment\n  } else {\n    // There's already a revalidation in progress.\n    const nonEmptyRevalidatingSegment = revalidatingSegment\n    if (\n      canNewFetchStrategyProvideMoreContent(\n        nonEmptyRevalidatingSegment.fetchStrategy,\n        fetchStrategy\n      )\n    ) {\n      // The existing revalidation was fetched using a less specific strategy.\n      // Reset it and start a new revalidation.\n      const emptySegment = resetRevalidatingSegmentEntry(\n        nonEmptyRevalidatingSegment\n      )\n      const pendingSegment = upgradeToPendingSegment(\n        emptySegment,\n        fetchStrategy\n      )\n      upsertSegmentOnCompletion(\n        fetchStrategy,\n        route,\n        tree.cacheKey,\n        waitForSegmentCacheEntry(pendingSegment)\n      )\n      return pendingSegment\n    }\n    switch (nonEmptyRevalidatingSegment.status) {\n      case EntryStatus.Pending:\n        // There's already an in-progress prefetch that includes this segment.\n        return null\n      case EntryStatus.Fulfilled:\n      case EntryStatus.Rejected:\n        // A previous revalidation attempt finished, but we chose not to replace\n        // the existing entry in the cache. Don't try again until or unless the\n        // revalidation entry expires.\n        return null\n      default:\n        nonEmptyRevalidatingSegment satisfies never\n        return null\n    }\n  }\n}\n\nconst noop = () => {}\n\nfunction upsertSegmentOnCompletion(\n  fetchStrategy: FetchStrategy,\n  route: FulfilledRouteCacheEntry,\n  cacheKey: SegmentCacheKey,\n  promise: Promise<FulfilledSegmentCacheEntry | null>\n) {\n  // Wait for a segment to finish loading, then upsert it into the cache\n  promise.then((fulfilled) => {\n    if (fulfilled !== null) {\n      // Received new data. Attempt to replace the existing entry in the cache.\n      const keypath = getSegmentKeypath(fetchStrategy, route, cacheKey)\n      upsertSegmentEntry(Date.now(), keypath, fulfilled)\n    }\n  }, noop)\n}\n\nfunction doesCurrentSegmentMatchCachedSegment(\n  route: FulfilledRouteCacheEntry,\n  currentSegment: Segment,\n  cachedSegment: Segment\n): boolean {\n  if (cachedSegment === PAGE_SEGMENT_KEY) {\n    // In the FlightRouterState stored by the router, the page segment has the\n    // rendered search params appended to the name of the segment. In the\n    // prefetch cache, however, this is stored separately. So, when comparing\n    // the router's current FlightRouterState to the cached FlightRouterState,\n    // we need to make sure we compare both parts of the segment.\n    // TODO: This is not modeled clearly. We use the same type,\n    // FlightRouterState, for both the CacheNode tree _and_ the prefetch cache\n    // _and_ the server response format, when conceptually those are three\n    // different things and treated in different ways. We should encode more of\n    // this information into the type design so mistakes are less likely.\n    return (\n      currentSegment ===\n      addSearchParamsIfPageSegment(\n        PAGE_SEGMENT_KEY,\n        Object.fromEntries(new URLSearchParams(route.renderedSearch))\n      )\n    )\n  }\n  // Non-page segments are compared using the same function as the server\n  return matchSegment(cachedSegment, currentSegment)\n}\n\n// -----------------------------------------------------------------------------\n// The remainder of the module is a MinHeap implementation. Try not to put any\n// logic below here unless it's related to the heap algorithm. We can extract\n// this to a separate module if/when we need multiple kinds of heaps.\n// -----------------------------------------------------------------------------\n\nfunction compareQueuePriority(a: PrefetchTask, b: PrefetchTask) {\n  // Since the queue is a MinHeap, this should return a positive number if b is\n  // higher priority than a, and a negative number if a is higher priority\n  // than b.\n\n  // `priority` is an integer, where higher numbers are higher priority.\n  const priorityDiff = b.priority - a.priority\n  if (priorityDiff !== 0) {\n    return priorityDiff\n  }\n\n  // If the priority is the same, check which phase the prefetch is in — is it\n  // prefetching the route tree, or the segments? Route trees are prioritized.\n  const phaseDiff = b.phase - a.phase\n  if (phaseDiff !== 0) {\n    return phaseDiff\n  }\n\n  // Finally, check the insertion order. `sortId` is an incrementing counter\n  // assigned to prefetches. We want to process the newest prefetches first.\n  return b.sortId - a.sortId\n}\n\nfunction heapPush(heap: Array<PrefetchTask>, node: PrefetchTask): void {\n  const index = heap.length\n  heap.push(node)\n  node._heapIndex = index\n  heapSiftUp(heap, node, index)\n}\n\nfunction heapPeek(heap: Array<PrefetchTask>): PrefetchTask | null {\n  return heap.length === 0 ? null : heap[0]\n}\n\nfunction heapPop(heap: Array<PrefetchTask>): PrefetchTask | null {\n  if (heap.length === 0) {\n    return null\n  }\n  const first = heap[0]\n  first._heapIndex = -1\n  const last = heap.pop() as PrefetchTask\n  if (last !== first) {\n    heap[0] = last\n    last._heapIndex = 0\n    heapSiftDown(heap, last, 0)\n  }\n  return first\n}\n\nfunction heapDelete(heap: Array<PrefetchTask>, node: PrefetchTask): void {\n  const index = node._heapIndex\n  if (index !== -1) {\n    node._heapIndex = -1\n    if (heap.length !== 0) {\n      const last = heap.pop() as PrefetchTask\n      if (last !== node) {\n        heap[index] = last\n        last._heapIndex = index\n        heapSiftDown(heap, last, index)\n      }\n    }\n  }\n}\n\nfunction heapResift(heap: Array<PrefetchTask>, node: PrefetchTask): void {\n  const index = node._heapIndex\n  if (index !== -1) {\n    if (index === 0) {\n      heapSiftDown(heap, node, 0)\n    } else {\n      const parentIndex = (index - 1) >>> 1\n      const parent = heap[parentIndex]\n      if (compareQueuePriority(parent, node) > 0) {\n        // The parent is larger. Sift up.\n        heapSiftUp(heap, node, index)\n      } else {\n        // The parent is smaller (or equal). Sift down.\n        heapSiftDown(heap, node, index)\n      }\n    }\n  }\n}\n\nfunction heapSiftUp(\n  heap: Array<PrefetchTask>,\n  node: PrefetchTask,\n  i: number\n): void {\n  let index = i\n  while (index > 0) {\n    const parentIndex = (index - 1) >>> 1\n    const parent = heap[parentIndex]\n    if (compareQueuePriority(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node\n      node._heapIndex = parentIndex\n      heap[index] = parent\n      parent._heapIndex = index\n\n      index = parentIndex\n    } else {\n      // The parent is smaller. Exit.\n      return\n    }\n  }\n}\n\nfunction heapSiftDown(\n  heap: Array<PrefetchTask>,\n  node: PrefetchTask,\n  i: number\n): void {\n  let index = i\n  const length = heap.length\n  const halfLength = length >>> 1\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1\n    const left = heap[leftIndex]\n    const rightIndex = leftIndex + 1\n    const right = heap[rightIndex]\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (compareQueuePriority(left, node) < 0) {\n      if (rightIndex < length && compareQueuePriority(right, left) < 0) {\n        heap[index] = right\n        right._heapIndex = index\n        heap[rightIndex] = node\n        node._heapIndex = rightIndex\n\n        index = rightIndex\n      } else {\n        heap[index] = left\n        left._heapIndex = index\n        heap[leftIndex] = node\n        node._heapIndex = leftIndex\n\n        index = leftIndex\n      }\n    } else if (rightIndex < length && compareQueuePriority(right, node) < 0) {\n      heap[index] = right\n      right._heapIndex = index\n      heap[rightIndex] = node\n      node._heapIndex = rightIndex\n\n      index = rightIndex\n    } else {\n      // Neither child is smaller. Exit.\n      return\n    }\n  }\n}\n"],"names":["cancelPrefetchTask","isPrefetchTaskDirty","pingPrefetchTask","reschedulePrefetchTask","schedulePrefetchTask","startRevalidationCooldown","scheduleMicrotask","queueMicrotask","fn","Promise","resolve","then","catch","error","setTimeout","taskHeap","inProgressRequests","sortIdCounter","didScheduleMicrotask","mostRecentlyHoveredLink","REVALIDATION_COOLDOWN_MS","revalidationCooldownTimeoutHandle","clearTimeout","ensureWorkIsScheduled","key","treeAtTimeOfPrefetch","fetchStrategy","priority","onInvalidate","task","cacheVersion","getCurrentCacheVersion","phase","hasBackgroundWork","spawnedRuntimePrefetches","sortId","isCanceled","_heapIndex","trackMostRecentlyHoveredLink","heapPush","heapDelete","PrefetchPriority","Intent","heapResift","nextUrl","tree","currentCacheVersion","Background","Default","processQueueInMicrotask","hasNetworkBandwidth","spawnPrefetchSubtask","prefetchSubtask","result","onPrefetchConnectionClosed","closed","value","now","Date","heapPeek","exitStatus","pingRoute","heapPop","background","route","readOrCreateRouteCacheEntry","pingRootRouteTree","search","url","URL","href","keyWithoutSearch","createCacheKey","routeWithoutSearch","status","EntryStatus","Empty","Pending","fetchRouteOnCacheMiss","Fulfilled","Rejected","staleAt","blockedTasks","Set","add","FetchStrategy","PPR","isPPREnabled","LoadingBoundary","pingSharedPartOfCacheComponentsTree","spawnedEntries","Map","requestTree","pingRuntimePrefetches","needsDynamicRequest","size","fetchSegmentPrefetchesUsingDynamicRequest","PPRRuntime","Full","dynamicRequestTree","diffRouteTreeAgainstCurrent","isHeadPartial","TODO_metadataStatus","oldTree","newTree","segment","readOrCreateSegmentCacheEntry","cacheKey","pingStaticSegmentData","oldTreeChildren","newTreeChildren","slots","parallelRouteKey","newTreeChild","newTreeChildSegment","oldTreeChild","oldTreeChildSegment","childExitStatus","undefined","doesCurrentSegmentMatchCachedSegment","pingNewPartOfCacheComponentsTree","hasRuntimePrefetch","childTree","requestTreeChildren","requestTreeChild","subtreeHasLoadingBoundary","hasLoadingBoundary","HasLoadingBoundary","SubtreeHasNoLoadingBoundary","pingPPRDisabledRouteTreeUpToLoadingBoundary","convertRouteTreeToFlightRouterState","pingRouteTreeAndIncludeDynamicData","isRootLayout","refetchMarkerContext","refetchMarker","set","upgradeToPendingSegment","segmentHasLoadingBoundary","SegmentHasLoadingBoundary","isInsideRefetchingParent","spawnedSegment","isPartial","canNewFetchStrategyProvideMoreContent","pingFullSegmentRevalidation","has","routeKey","fetchSegmentOnCacheMiss","pingPPRSegmentRevalidation","currentSegment","revalidatingSegment","readOrCreateRevalidatingSegmentEntry","upsertSegmentOnCompletion","pendingSegment","waitForSegmentCacheEntry","nonEmptyRevalidatingSegment","emptySegment","resetRevalidatingSegmentEntry","noop","promise","fulfilled","keypath","getSegmentKeypath","upsertSegmentEntry","cachedSegment","PAGE_SEGMENT_KEY","addSearchParamsIfPageSegment","Object","fromEntries","URLSearchParams","renderedSearch","matchSegment","compareQueuePriority","a","b","priorityDiff","phaseDiff","heap","node","index","length","push","heapSiftUp","first","last","pop","heapSiftDown","parentIndex","parent","i","halfLength","leftIndex","left","rightIndex","right"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6055, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/prefetch.ts"],"sourcesContent":["import type { FlightRouterState } from '../../../shared/lib/app-router-types'\nimport { createPrefetchURL } from '../app-router-utils'\nimport { createCacheKey } from './cache-key'\nimport { schedulePrefetchTask } from './scheduler'\nimport {\n  PrefetchPriority,\n  type PrefetchTaskFetchStrategy,\n} from '../segment-cache'\n\n/**\n * Entrypoint for prefetching a URL into the Segment Cache.\n * @param href - The URL to prefetch. Typically this will come from a <Link>,\n * or router.prefetch. It must be validated before we attempt to prefetch it.\n * @param nextUrl - A special header used by the server for interception routes.\n * Roughly corresponds to the current URL.\n * @param treeAtTimeOfPrefetch - The FlightRouterState at the time the prefetch\n * was requested. This is only used when PPR is disabled.\n * @param fetchStrategy - Whether to prefetch dynamic data, in addition to\n * static data. This is used by `<Link prefetch={true}>`.\n * @param onInvalidate - A callback that will be called when the prefetch cache\n * When called, it signals to the listener that the data associated with the\n * prefetch may have been invalidated from the cache. This is not a live\n * subscription — it's called at most once per `prefetch` call. The only\n * supported use case is to trigger a new prefetch inside the listener, if\n * desired. It also may be called even in cases where the associated data is\n * still cached. Prefetching is a poll-based (pull) operation, not an event-\n * based (push) one. Rather than subscribe to specific cache entries, you\n * occasionally poll the prefetch cache to check if anything is missing.\n */\nexport function prefetch(\n  href: string,\n  nextUrl: string | null,\n  treeAtTimeOfPrefetch: FlightRouterState,\n  fetchStrategy: PrefetchTaskFetchStrategy,\n  onInvalidate: null | (() => void)\n) {\n  const url = createPrefetchURL(href)\n  if (url === null) {\n    // This href should not be prefetched.\n    return\n  }\n  const cacheKey = createCacheKey(url.href, nextUrl)\n  schedulePrefetchTask(\n    cacheKey,\n    treeAtTimeOfPrefetch,\n    fetchStrategy,\n    PrefetchPriority.Default,\n    onInvalidate\n  )\n}\n"],"names":["prefetch","href","nextUrl","treeAtTimeOfPrefetch","fetchStrategy","onInvalidate","url","createPrefetchURL","cacheKey","createCacheKey","schedulePrefetchTask","PrefetchPriority","Default"],"mappings":";;;+BA6BgBA,YAAAA;;;eAAAA;;;gCA5BkB;0BACH;2BACM;8BAI9B;AAsBA,SAASA,SACdC,IAAY,EACZC,OAAsB,EACtBC,oBAAuC,EACvCC,aAAwC,EACxCC,YAAiC;IAEjC,MAAMC,MAAMC,CAAAA,GAAAA,gBAAAA,iBAAiB,EAACN;IAC9B,IAAIK,QAAQ,MAAM;QAChB,sCAAsC;QACtC;IACF;IACA,MAAME,WAAWC,CAAAA,GAAAA,UAAAA,cAAc,EAACH,IAAIL,IAAI,EAAEC;IAC1CQ,CAAAA,GAAAA,WAAAA,oBAAoB,EAClBF,UACAL,sBACAC,eACAO,cAAAA,gBAAgB,CAACC,OAAO,EACxBP;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6088, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/create-router-cache-key.ts"],"sourcesContent":["import type { Segment } from '../../../shared/lib/app-router-types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\nexport function createRouterCacheKey(\n  segment: Segment,\n  withoutSearchParameters: boolean = false\n) {\n  // if the segment is an array, it means it's a dynamic segment\n  // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n  if (Array.isArray(segment)) {\n    return `${segment[0]}|${segment[1]}|${segment[2]}`\n  }\n\n  // Page segments might have search parameters, ie __PAGE__?foo=bar\n  // When `withoutSearchParameters` is true, we only want to return the page segment\n  if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n    return PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n"],"names":["createRouterCacheKey","segment","withoutSearchParameters","Array","isArray","startsWith","PAGE_SEGMENT_KEY"],"mappings":";;;+BAGgBA,wBAAAA;;;eAAAA;;;yBAFiB;AAE1B,SAASA,qBACdC,OAAgB,EAChBC,0BAAmC,KAAK;IAExC,8DAA8D;IAC9D,uGAAuG;IACvG,IAAIC,MAAMC,OAAO,CAACH,UAAU;QAC1B,OAAO,GAAGA,OAAO,CAAC,EAAE,CAAC,CAAC,EAAEA,OAAO,CAAC,EAAE,CAAC,CAAC,EAAEA,OAAO,CAAC,EAAE,EAAE;IACpD;IAEA,kEAAkE;IAClE,kFAAkF;IAClF,IAAIC,2BAA2BD,QAAQI,UAAU,CAACC,SAAAA,gBAAgB,GAAG;QACnE,OAAOA,SAAAA,gBAAgB;IACzB;IAEA,OAAOL;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/is-navigating-to-new-root-layout.ts"],"sourcesContent":["import type { FlightRouterState } from '../../../shared/lib/app-router-types'\n\nexport function isNavigatingToNewRootLayout(\n  currentTree: FlightRouterState,\n  nextTree: FlightRouterState\n): boolean {\n  // Compare segments\n  const currentTreeSegment = currentTree[0]\n  const nextTreeSegment = nextTree[0]\n\n  // If any segment is different before we find the root layout, the root layout has changed.\n  // E.g. /same/(group1)/layout.js -> /same/(group2)/layout.js\n  // First segment is 'same' for both, keep looking. (group1) changed to (group2) before the root layout was found, it must have changed.\n  if (Array.isArray(currentTreeSegment) && Array.isArray(nextTreeSegment)) {\n    // Compare dynamic param name and type but ignore the value, different values would not affect the current root layout\n    // /[name] - /slug1 and /slug2, both values (slug1 & slug2) still has the same layout /[name]/layout.js\n    if (\n      currentTreeSegment[0] !== nextTreeSegment[0] ||\n      currentTreeSegment[2] !== nextTreeSegment[2]\n    ) {\n      return true\n    }\n  } else if (currentTreeSegment !== nextTreeSegment) {\n    return true\n  }\n\n  // Current tree root layout found\n  if (currentTree[4]) {\n    // If the next tree doesn't have the root layout flag, it must have changed.\n    return !nextTree[4]\n  }\n  // Current tree didn't have its root layout here, must have changed.\n  if (nextTree[4]) {\n    return true\n  }\n  // We can't assume it's `parallelRoutes.children` here in case the root layout is `app/@something/layout.js`\n  // But it's not possible to be more than one parallelRoutes before the root layout is found\n  // TODO-APP: change to traverse all parallel routes\n  const currentTreeChild = Object.values(currentTree[1])[0]\n  const nextTreeChild = Object.values(nextTree[1])[0]\n  if (!currentTreeChild || !nextTreeChild) return true\n  return isNavigatingToNewRootLayout(currentTreeChild, nextTreeChild)\n}\n"],"names":["isNavigatingToNewRootLayout","currentTree","nextTree","currentTreeSegment","nextTreeSegment","Array","isArray","currentTreeChild","Object","values","nextTreeChild"],"mappings":";;;+BAEgBA,+BAAAA;;;eAAAA;;;AAAT,SAASA,4BACdC,WAA8B,EAC9BC,QAA2B;IAE3B,mBAAmB;IACnB,MAAMC,qBAAqBF,WAAW,CAAC,EAAE;IACzC,MAAMG,kBAAkBF,QAAQ,CAAC,EAAE;IAEnC,2FAA2F;IAC3F,4DAA4D;IAC5D,uIAAuI;IACvI,IAAIG,MAAMC,OAAO,CAACH,uBAAuBE,MAAMC,OAAO,CAACF,kBAAkB;QACvE,sHAAsH;QACtH,uGAAuG;QACvG,IACED,kBAAkB,CAAC,EAAE,KAAKC,eAAe,CAAC,EAAE,IAC5CD,kBAAkB,CAAC,EAAE,KAAKC,eAAe,CAAC,EAAE,EAC5C;YACA,OAAO;QACT;IACF,OAAO,IAAID,uBAAuBC,iBAAiB;QACjD,OAAO;IACT;IAEA,iCAAiC;IACjC,IAAIH,WAAW,CAAC,EAAE,EAAE;QAClB,4EAA4E;QAC5E,OAAO,CAACC,QAAQ,CAAC,EAAE;IACrB;IACA,oEAAoE;IACpE,IAAIA,QAAQ,CAAC,EAAE,EAAE;QACf,OAAO;IACT;IACA,4GAA4G;IAC5G,2FAA2F;IAC3F,mDAAmD;IACnD,MAAMK,mBAAmBC,OAAOC,MAAM,CAACR,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE;IACzD,MAAMS,gBAAgBF,OAAOC,MAAM,CAACP,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,IAAI,CAACK,oBAAoB,CAACG,eAAe,OAAO;IAChD,OAAOV,4BAA4BO,kBAAkBG;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/router-reducer/ppr-navigations.ts"],"sourcesContent":["import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../../shared/lib/app-router-types'\nimport type {\n  CacheNode,\n  ChildSegmentMap,\n  ReadyCacheNode,\n} from '../../../shared/lib/app-router-types'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../../shared/lib/app-router-types'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { FetchServerResponseResult } from './fetch-server-response'\nimport { isNavigatingToNewRootLayout } from './is-navigating-to-new-root-layout'\nimport { DYNAMIC_STALETIME_MS } from './reducers/navigate-reducer'\n\n// This is yet another tree type that is used to track pending promises that\n// need to be fulfilled once the dynamic data is received. The terminal nodes of\n// this tree represent the new Cache Node trees that were created during this\n// request. We can't use the Cache Node tree or Route State tree directly\n// because those include reused nodes, too. This tree is discarded as soon as\n// the navigation response is received.\ntype SPANavigationTask = {\n  // The router state that corresponds to the tree that this Task represents.\n  route: FlightRouterState\n  // The CacheNode that corresponds to the tree that this Task represents. If\n  // `children` is null (i.e. if this is a terminal task node), then `node`\n  // represents a brand new Cache Node tree, which way or may not need to be\n  // filled with dynamic data from the server.\n  node: CacheNode | null\n  // The tree sent to the server during the dynamic request. This is the\n  // same as `route`, except with the `refetch` marker set on dynamic segments.\n  // If all the segments are static, then this will be null, and no server\n  // request is required.\n  dynamicRequestTree: FlightRouterState | null\n  children: Map<string, SPANavigationTask> | null\n}\n\n// A special type used to bail out and trigger a full-page navigation.\ntype MPANavigationTask = {\n  // MPA tasks are distinguised from SPA tasks by having a null `route`.\n  route: null\n  node: null\n  dynamicRequestTree: null\n  children: null\n}\n\nconst MPA_NAVIGATION_TASK: MPANavigationTask = {\n  route: null,\n  node: null,\n  dynamicRequestTree: null,\n  children: null,\n}\n\nexport type Task = SPANavigationTask | MPANavigationTask\n\n// Creates a new Cache Node tree (i.e. copy-on-write) that represents the\n// optimistic result of a navigation, using both the current Cache Node tree and\n// data that was prefetched prior to navigation.\n//\n// At the moment we call this function, we haven't yet received the navigation\n// response from the server. It could send back something completely different\n// from the tree that was prefetched — due to rewrites, default routes, parallel\n// routes, etc.\n//\n// But in most cases, it will return the same tree that we prefetched, just with\n// the dynamic holes filled in. So we optimistically assume this will happen,\n// and accept that the real result could be arbitrarily different.\n//\n// We'll reuse anything that was already in the previous tree, since that's what\n// the server does.\n//\n// New segments (ones that don't appear in the old tree) are assigned an\n// unresolved promise. The data for these promises will be fulfilled later, when\n// the navigation response is received.\n//\n// The tree can be rendered immediately after it is created (that's why this is\n// a synchronous function). Any new trees that do not have prefetch data will\n// suspend during rendering, until the dynamic data streams in.\n//\n// Returns a Task object, which contains both the updated Cache Node and a path\n// to the pending subtrees that need to be resolved by the navigation response.\n//\n// A return value of `null` means there were no changes, and the previous tree\n// can be reused without initiating a server request.\nexport function startPPRNavigation(\n  navigatedAt: number,\n  oldUrl: URL,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  const segmentPath: Array<FlightSegmentPath> = []\n  return updateCacheNodeOnNavigation(\n    navigatedAt,\n    oldUrl,\n    oldCacheNode,\n    oldRouterState,\n    newRouterState,\n    false,\n    prefetchData,\n    prefetchHead,\n    isPrefetchHeadPartial,\n    isSamePageNavigation,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction updateCacheNodeOnNavigation(\n  navigatedAt: number,\n  oldUrl: URL,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  // Diff the old and new trees to reuse the shared layouts.\n  const oldRouterStateChildren = oldRouterState[1]\n  const newRouterStateChildren = newRouterState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[1] : null\n\n  if (!didFindRootLayout) {\n    // We're currently traversing the part of the tree that was also part of\n    // the previous route. If we discover a root layout, then we don't need to\n    // trigger an MPA navigation. See beginRenderingNewRouteTree for context.\n    const isRootLayout = newRouterState[4] === true\n    if (isRootLayout) {\n      // Found a matching root layout.\n      didFindRootLayout = true\n    }\n  }\n\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n\n  // Clone the current set of segment children, even if they aren't active in\n  // the new tree.\n  // TODO: We currently retain all the inactive segments indefinitely, until\n  // there's an explicit refresh, or a parent layout is lazily refreshed. We\n  // rely on this for popstate navigations, which update the Router State Tree\n  // but do not eagerly perform a data fetch, because they expect the segment\n  // data to already be in the Cache Node tree. For highly static sites that\n  // are mostly read-only, this may happen only rarely, causing memory to\n  // leak. We should figure out a better model for the lifetime of inactive\n  // segments, so we can maintain instant back/forward navigations without\n  // leaking memory indefinitely.\n  const prefetchParallelRoutes = new Map(oldParallelRoutes)\n\n  // As we diff the trees, we may sometimes modify (copy-on-write, not mutate)\n  // the Route Tree that was returned by the server — for example, in the case\n  // of default parallel routes, we preserve the currently active segment. To\n  // avoid mutating the original tree, we clone the router state children along\n  // the return path.\n  let patchedRouterStateChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let taskChildren = null\n\n  // Most navigations require a request to fetch additional data from the\n  // server, either because the data was not already prefetched, or because the\n  // target route contains dynamic data that cannot be prefetched.\n  //\n  // However, if the target route is fully static, and it's already completely\n  // loaded into the segment cache, then we can skip the server request.\n  //\n  // This starts off as `false`, and is set to `true` if any of the child\n  // routes requires a dynamic request.\n  let needsDynamicRequest = false\n  // As we traverse the children, we'll construct a FlightRouterState that can\n  // be sent to the server to request the dynamic data. If it turns out that\n  // nothing in the subtree is dynamic (i.e. needsDynamicRequest is false at the\n  // end), then this will be discarded.\n  // TODO: We can probably optimize the format of this data structure to only\n  // include paths that are dynamic. Instead of reusing the\n  // FlightRouterState type.\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n\n  for (let parallelRouteKey in newRouterStateChildren) {\n    const newRouterStateChild: FlightRouterState =\n      newRouterStateChildren[parallelRouteKey]\n    const oldRouterStateChild: FlightRouterState | void =\n      oldRouterStateChildren[parallelRouteKey]\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    const prefetchDataChild: CacheNodeSeedData | void | null =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const newSegmentChild = newRouterStateChild[0]\n    const newSegmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      newSegmentChild,\n    ])\n    const newSegmentKeyChild = createRouterCacheKey(newSegmentChild)\n\n    const oldSegmentChild =\n      oldRouterStateChild !== undefined ? oldRouterStateChild[0] : undefined\n\n    const oldCacheNodeChild =\n      oldSegmentMapChild !== undefined\n        ? oldSegmentMapChild.get(newSegmentKeyChild)\n        : undefined\n\n    let taskChild: Task | null\n    if (newSegmentChild === DEFAULT_SEGMENT_KEY) {\n      // This is another kind of leaf segment — a default route.\n      //\n      // Default routes have special behavior. When there's no matching segment\n      // for a parallel route, Next.js preserves the currently active segment\n      // during a client navigation — but not for initial render. The server\n      // leaves it to the client to account for this. So we need to handle\n      // it here.\n      if (oldRouterStateChild !== undefined) {\n        // Reuse the existing Router State for this segment. We spawn a \"task\"\n        // just to keep track of the updated router state; unlike most, it's\n        // already fulfilled and won't be affected by the dynamic response.\n        taskChild = reuseActiveSegmentInDefaultSlot(oldUrl, oldRouterStateChild)\n      } else {\n        // There's no currently active segment. Switch to the \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else if (\n      isSamePageNavigation &&\n      // Check if this is a page segment.\n      // TODO: We're not consistent about how we do this check. Some places\n      // check if the segment starts with PAGE_SEGMENT_KEY, but most seem to\n      // check if there any any children, which is why I'm doing it here. We\n      // should probably encode an empty children set as `null` though. Either\n      // way, we should update all the checks to be consistent.\n      Object.keys(newRouterStateChild[1]).length === 0\n    ) {\n      // We special case navigations to the exact same URL as the current\n      // location. It's a common UI pattern for apps to refresh when you click a\n      // link to the current page. So when this happens, we refresh the dynamic\n      // data in the page segments.\n      //\n      // Note that this does not apply if the any part of the hash or search\n      // query has changed. This might feel a bit weird but it makes more sense\n      // when you consider that the way to trigger this behavior is to click\n      // the same link multiple times.\n      //\n      // TODO: We should probably refresh the *entire* route when this case\n      // occurs, not just the page segments. Essentially treating it the same as\n      // a refresh() triggered by an action, which is the more explicit way of\n      // modeling the UI pattern described above.\n      //\n      // Also note that this only refreshes the dynamic data, not static/\n      // cached data. If the page segment is fully static and prefetched, the\n      // request is skipped. (This is also how refresh() works.)\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    } else if (\n      oldRouterStateChild !== undefined &&\n      oldSegmentChild !== undefined &&\n      matchSegment(newSegmentChild, oldSegmentChild)\n    ) {\n      if (\n        oldCacheNodeChild !== undefined &&\n        oldRouterStateChild !== undefined\n      ) {\n        // This segment exists in both the old and new trees. Recursively update\n        // the children.\n        taskChild = updateCacheNodeOnNavigation(\n          navigatedAt,\n          oldUrl,\n          oldCacheNodeChild,\n          oldRouterStateChild,\n          newRouterStateChild,\n          didFindRootLayout,\n          prefetchDataChild,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          isSamePageNavigation,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      } else {\n        // There's no existing Cache Node for this segment. Switch to the\n        // \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else {\n      // This is a new tree. Switch to the \"create\" path.\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    }\n\n    if (taskChild !== null) {\n      // Recursively propagate up the child tasks.\n\n      if (taskChild.route === null) {\n        // One of the child tasks discovered a change to the root layout.\n        // Immediately unwind from this recursive traversal.\n        return MPA_NAVIGATION_TASK\n      }\n\n      if (taskChildren === null) {\n        taskChildren = new Map()\n      }\n      taskChildren.set(parallelRouteKey, taskChild)\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(newSegmentKeyChild, newCacheNodeChild)\n        prefetchParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n\n      // The child tree's route state may be different from the prefetched\n      // route sent by the server. We need to clone it as we traverse back up\n      // the tree.\n      const taskChildRoute = taskChild.route\n      patchedRouterStateChildren[parallelRouteKey] = taskChildRoute\n\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = taskChildRoute\n      }\n    } else {\n      // The child didn't change. We can use the prefetched router state.\n      patchedRouterStateChildren[parallelRouteKey] = newRouterStateChild\n      dynamicRequestTreeChildren[parallelRouteKey] = newRouterStateChild\n    }\n  }\n\n  if (taskChildren === null) {\n    // No new tasks were spawned.\n    return null\n  }\n\n  const newCacheNode: ReadyCacheNode = {\n    lazyData: null,\n    rsc: oldCacheNode.rsc,\n    // We intentionally aren't updating the prefetchRsc field, since this node\n    // is already part of the current tree, because it would be weird for\n    // prefetch data to be newer than the final data. It probably won't ever be\n    // observable anyway, but it could happen if the segment is unmounted then\n    // mounted again, because LayoutRouter will momentarily switch to rendering\n    // prefetchRsc, via useDeferredValue.\n    prefetchRsc: oldCacheNode.prefetchRsc,\n    head: oldCacheNode.head,\n    prefetchHead: oldCacheNode.prefetchHead,\n    loading: oldCacheNode.loading,\n\n    // Everything is cloned except for the children, which we computed above.\n    parallelRoutes: prefetchParallelRoutes,\n\n    navigatedAt,\n  }\n\n  return {\n    // Return a cloned copy of the router state with updated children.\n    route: patchRouterStateWithNewChildren(\n      newRouterState,\n      patchedRouterStateChildren\n    ),\n    node: newCacheNode,\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(\n          newRouterState,\n          dynamicRequestTreeChildren\n        )\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction beginRenderingNewRouteTree(\n  navigatedAt: number,\n  oldRouterState: FlightRouterState | void,\n  newRouterState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task {\n  if (!didFindRootLayout) {\n    // The route tree changed before we reached a layout. (The highest-level\n    // layout in a route tree is referred to as the \"root\" layout.) This could\n    // mean that we're navigating between two different root layouts. When this\n    // happens, we perform a full-page (MPA-style) navigation.\n    //\n    // However, the algorithm for deciding where to start rendering a route\n    // (i.e. the one performed in order to reach this function) is stricter\n    // than the one used to detect a change in the root layout. So just because\n    // we're re-rendering a segment outside of the root layout does not mean we\n    // should trigger a full-page navigation.\n    //\n    // Specifically, we handle dynamic parameters differently: two segments are\n    // considered the same even if their parameter values are different.\n    //\n    // Refer to isNavigatingToNewRootLayout for details.\n    //\n    // Note that we only have to perform this extra traversal if we didn't\n    // already discover a root layout in the part of the tree that is unchanged.\n    // In the common case, this branch is skipped completely.\n    if (\n      oldRouterState === undefined ||\n      isNavigatingToNewRootLayout(oldRouterState, newRouterState)\n    ) {\n      // The root layout changed. Perform a full-page navigation.\n      return MPA_NAVIGATION_TASK\n    }\n  }\n  return createCacheNodeOnNavigation(\n    navigatedAt,\n    newRouterState,\n    existingCacheNode,\n    prefetchData,\n    possiblyPartialPrefetchHead,\n    isPrefetchHeadPartial,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction createCacheNodeOnNavigation(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Same traversal as updateCacheNodeNavigation, but we switch to this path\n  // once we reach the part of the tree that was not in the previous route. We\n  // don't need to diff against the old tree, we just need to create a new one.\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const routerStateChildren = routerState[1]\n  const isLeafSegment = Object.keys(routerStateChildren).length === 0\n\n  // Even we're rendering inside the \"new\" part of the target tree, we may have\n  // a locally cached segment that we can reuse. This may come from either 1)\n  // the CacheNode tree, which lives in React state and is populated by previous\n  // navigations; or 2) the prefetch cache, which is a separate cache that is\n  // populated by prefetches.\n  let rsc: React.ReactNode\n  let loading: LoadingModuleData | Promise<LoadingModuleData>\n  let head: HeadData | null\n  let cacheNodeNavigatedAt: number\n  if (\n    existingCacheNode !== undefined &&\n    // DYNAMIC_STALETIME_MS defaults to 0, but it can be increased using\n    // the experimental.staleTimes.dynamic config. When set, we'll avoid\n    // refetching dynamic data if it was fetched within the given threshold.\n    existingCacheNode.navigatedAt + DYNAMIC_STALETIME_MS > navigatedAt\n  ) {\n    // We have an existing CacheNode for this segment, and it's not stale. We\n    // should reuse it rather than request a new one.\n    rsc = existingCacheNode.rsc\n    loading = existingCacheNode.loading\n    head = existingCacheNode.head\n\n    // Don't update the navigatedAt timestamp, since we're reusing stale data.\n    cacheNodeNavigatedAt = existingCacheNode.navigatedAt\n  } else if (prefetchData !== null) {\n    // There's no existing CacheNode for this segment, but we do have prefetch\n    // data. If the prefetch data is fully static (i.e. does not contain any\n    // dynamic holes), we don't need to request it from the server.\n    rsc = prefetchData[0]\n    loading = prefetchData[2]\n    head = isLeafSegment ? possiblyPartialPrefetchHead : null\n    // Even though we're accessing the data from the prefetch cache, this is\n    // conceptually a new segment, not a reused one. So we should update the\n    // navigatedAt timestamp.\n    cacheNodeNavigatedAt = navigatedAt\n    const isPrefetchRscPartial = prefetchData[3]\n    if (\n      // Check if the segment data is partial\n      isPrefetchRscPartial ||\n      // Check if the head is partial (only relevant if this is a leaf segment)\n      (isPrefetchHeadPartial && isLeafSegment)\n    ) {\n      // We only have partial data from this segment. Like missing segments, we\n      // must request the full data from the server.\n      return spawnPendingTask(\n        navigatedAt,\n        routerState,\n        prefetchData,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPath,\n        scrollableSegmentsResult\n      )\n    } else {\n      // The prefetch data is fully static, so we can omit it from the\n      // navigation request.\n    }\n  } else {\n    // There's no prefetch for this segment. Everything from this point will be\n    // requested from the server, even if there are static children below it.\n    // Create a terminal task node that will later be fulfilled by\n    // server response.\n    return spawnPendingTask(\n      navigatedAt,\n      routerState,\n      null,\n      possiblyPartialPrefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    )\n  }\n\n  // We already have a full segment we can render, so we don't need to request a\n  // new one from the server. Keep traversing down the tree until we reach\n  // something that requires a dynamic request.\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[1] : null\n  const taskChildren = new Map()\n  const existingCacheNodeChildren =\n    existingCacheNode !== undefined ? existingCacheNode.parallelRoutes : null\n  const cacheNodeChildren = new Map(existingCacheNodeChildren)\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let needsDynamicRequest = false\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  } else {\n    for (let parallelRouteKey in routerStateChildren) {\n      const routerStateChild: FlightRouterState =\n        routerStateChildren[parallelRouteKey]\n      const prefetchDataChild: CacheNodeSeedData | void | null =\n        prefetchDataChildren !== null\n          ? prefetchDataChildren[parallelRouteKey]\n          : null\n      const existingSegmentMapChild =\n        existingCacheNodeChildren !== null\n          ? existingCacheNodeChildren.get(parallelRouteKey)\n          : undefined\n      const segmentChild = routerStateChild[0]\n      const segmentPathChild = segmentPath.concat([\n        parallelRouteKey,\n        segmentChild,\n      ])\n      const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n      const existingCacheNodeChild =\n        existingSegmentMapChild !== undefined\n          ? existingSegmentMapChild.get(segmentKeyChild)\n          : undefined\n\n      const taskChild = createCacheNodeOnNavigation(\n        navigatedAt,\n        routerStateChild,\n        existingCacheNodeChild,\n        prefetchDataChild,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPathChild,\n        scrollableSegmentsResult\n      )\n      taskChildren.set(parallelRouteKey, taskChild)\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = routerStateChild\n      }\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map()\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        cacheNodeChildren.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  return {\n    // Since we're inside a new route tree, unlike the\n    // `updateCacheNodeOnNavigation` path, the router state on the children\n    // tasks is always the same as the router state we pass in. So we don't need\n    // to clone/modify it.\n    route: routerState,\n    node: {\n      lazyData: null,\n      // Since this segment is already full, we don't need to use the\n      // `prefetchRsc` field.\n      rsc,\n      prefetchRsc: null,\n      head,\n      prefetchHead: null,\n      loading,\n      parallelRoutes: cacheNodeChildren,\n      navigatedAt: cacheNodeNavigatedAt,\n    },\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(routerState, dynamicRequestTreeChildren)\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction patchRouterStateWithNewChildren(\n  baseRouterState: FlightRouterState,\n  newChildren: { [parallelRouteKey: string]: FlightRouterState }\n): FlightRouterState {\n  const clone: FlightRouterState = [baseRouterState[0], newChildren]\n  // Based on equivalent logic in apply-router-state-patch-to-tree, but should\n  // confirm whether we need to copy all of these fields. Not sure the server\n  // ever sends, e.g. the refetch marker.\n  if (2 in baseRouterState) {\n    clone[2] = baseRouterState[2]\n  }\n  if (3 in baseRouterState) {\n    clone[3] = baseRouterState[3]\n  }\n  if (4 in baseRouterState) {\n    clone[4] = baseRouterState[4]\n  }\n  return clone\n}\n\nfunction spawnPendingTask(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Create a task that will later be fulfilled by data from the server.\n\n  // Clone the prefetched route tree and the `refetch` marker to it. We'll send\n  // this to the server so it knows where to start rendering.\n  const dynamicRequestTree = patchRouterStateWithNewChildren(\n    routerState,\n    routerState[1]\n  )\n  dynamicRequestTree[3] = 'refetch'\n\n  const newTask: Task = {\n    route: routerState,\n\n    // Corresponds to the part of the route that will be rendered on the server.\n    node: createPendingCacheNode(\n      navigatedAt,\n      routerState,\n      prefetchData,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    ),\n    // Because this is non-null, and it gets propagated up through the parent\n    // tasks, the root task will know that it needs to perform a server request.\n    dynamicRequestTree,\n    children: null,\n  }\n  return newTask\n}\n\nfunction reuseActiveSegmentInDefaultSlot(\n  oldUrl: URL,\n  oldRouterState: FlightRouterState\n): Task {\n  // This is a \"default\" segment. These are never sent by the server during a\n  // soft navigation; instead, the client reuses whatever segment was already\n  // active in that slot on the previous route. This means if we later need to\n  // refresh the segment, it will have to be refetched from the previous route's\n  // URL. We store it in the Flight Router State.\n  //\n  // TODO: We also mark the segment with a \"refresh\" marker but I think we can\n  // get rid of that eventually by making sure we only add URLs to page segments\n  // that are reused. Then the presence of the URL alone is enough.\n  let reusedRouterState\n\n  const oldRefreshMarker = oldRouterState[3]\n  if (oldRefreshMarker === 'refresh') {\n    // This segment was already reused from an even older route. Keep its\n    // existing URL and refresh marker.\n    reusedRouterState = oldRouterState\n  } else {\n    // This segment was not previously reused, and it's not on the new route.\n    // So it must have been delivered in the old route.\n    reusedRouterState = patchRouterStateWithNewChildren(\n      oldRouterState,\n      oldRouterState[1]\n    )\n    reusedRouterState[2] = createHrefFromUrl(oldUrl)\n    reusedRouterState[3] = 'refresh'\n  }\n\n  return {\n    route: reusedRouterState,\n    node: null,\n    dynamicRequestTree: null,\n    children: null,\n  }\n}\n\n// Writes a dynamic server response into the tree created by\n// updateCacheNodeOnNavigation. All pending promises that were spawned by the\n// navigation will be resolved, either with dynamic data from the server, or\n// `null` to indicate that the data is missing.\n//\n// A `null` value will trigger a lazy fetch during render, which will then patch\n// up the tree using the same mechanism as the non-PPR implementation\n// (serverPatchReducer).\n//\n// Usually, the server will respond with exactly the subset of data that we're\n// waiting for — everything below the nearest shared layout. But technically,\n// the server can return anything it wants.\n//\n// This does _not_ create a new tree; it modifies the existing one in place.\n// Which means it must follow the Suspense rules of cache safety.\nexport function listenForDynamicRequest(\n  task: SPANavigationTask,\n  responsePromise: Promise<FetchServerResponseResult>\n) {\n  responsePromise.then(\n    (result: FetchServerResponseResult) => {\n      if (typeof result === 'string') {\n        // Happens when navigating to page in `pages` from `app`. We shouldn't\n        // get here because should have already handled this during\n        // the prefetch.\n        return\n      }\n      const { flightData, debugInfo } = result\n      for (const normalizedFlightData of flightData) {\n        const {\n          segmentPath,\n          tree: serverRouterState,\n          seedData: dynamicData,\n          head: dynamicHead,\n        } = normalizedFlightData\n\n        if (!dynamicData) {\n          // This shouldn't happen. PPR should always send back a response.\n          // However, `FlightDataPath` is a shared type and the pre-PPR handling of\n          // this might return null.\n          continue\n        }\n\n        writeDynamicDataIntoPendingTask(\n          task,\n          segmentPath,\n          serverRouterState,\n          dynamicData,\n          dynamicHead,\n          debugInfo\n        )\n      }\n\n      // Now that we've exhausted all the data we received from the server, if\n      // there are any remaining pending tasks in the tree, abort them now.\n      // If there's any missing data, it will trigger a lazy fetch.\n      abortTask(task, null, debugInfo)\n    },\n    (error: any) => {\n      // This will trigger an error during render\n      abortTask(task, error, null)\n    }\n  )\n}\n\nfunction writeDynamicDataIntoPendingTask(\n  rootTask: SPANavigationTask,\n  segmentPath: FlightSegmentPath,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData,\n  debugInfo: Array<any> | null\n) {\n  // The data sent by the server represents only a subtree of the app. We need\n  // to find the part of the task tree that matches the server response, and\n  // fulfill it using the dynamic data.\n  //\n  // segmentPath represents the parent path of subtree. It's a repeating pattern\n  // of parallel route key and segment:\n  //\n  //   [string, Segment, string, Segment, string, Segment, ...]\n  //\n  // Iterate through the path and finish any tasks that match this payload.\n  let task = rootTask\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n    const taskChildren = task.children\n    if (taskChildren !== null) {\n      const taskChild = taskChildren.get(parallelRouteKey)\n      if (taskChild !== undefined) {\n        const taskSegment = taskChild.route[0]\n        if (matchSegment(segment, taskSegment)) {\n          // Found a match for this task. Keep traversing down the task tree.\n          task = taskChild\n          continue\n        }\n      }\n    }\n    // We didn't find a child task that matches the server data. Exit. We won't\n    // abort the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n    return\n  }\n\n  finishTaskUsingDynamicDataPayload(\n    task,\n    serverRouterState,\n    dynamicData,\n    dynamicHead,\n    debugInfo\n  )\n}\n\nfunction finishTaskUsingDynamicDataPayload(\n  task: SPANavigationTask,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData,\n  debugInfo: Array<any> | null\n) {\n  if (task.dynamicRequestTree === null) {\n    // Everything in this subtree is already complete. Bail out.\n    return\n  }\n\n  // dynamicData may represent a larger subtree than the task. Before we can\n  // finish the task, we need to line them up.\n  const taskChildren = task.children\n  const taskNode = task.node\n  if (taskChildren === null) {\n    // We've reached the leaf node of the pending task. The server data tree\n    // lines up the pending Cache Node tree. We can now switch to the\n    // normal algorithm.\n    if (taskNode !== null) {\n      finishPendingCacheNode(\n        taskNode,\n        task.route,\n        serverRouterState,\n        dynamicData,\n        dynamicHead,\n        debugInfo\n      )\n      // Set this to null to indicate that this task is now complete.\n      task.dynamicRequestTree = null\n    }\n    return\n  }\n  // The server returned more data than we need to finish the task. Skip over\n  // the extra segments until we reach the leaf task node.\n  const serverChildren = serverRouterState[1]\n  const dynamicDataChildren = dynamicData[1]\n\n  for (const parallelRouteKey in serverRouterState) {\n    const serverRouterStateChild: FlightRouterState =\n      serverChildren[parallelRouteKey]\n    const dynamicDataChild: CacheNodeSeedData | null | void =\n      dynamicDataChildren[parallelRouteKey]\n\n    const taskChild = taskChildren.get(parallelRouteKey)\n    if (taskChild !== undefined) {\n      const taskSegment = taskChild.route[0]\n      if (\n        matchSegment(serverRouterStateChild[0], taskSegment) &&\n        dynamicDataChild !== null &&\n        dynamicDataChild !== undefined\n      ) {\n        // Found a match for this task. Keep traversing down the task tree.\n        return finishTaskUsingDynamicDataPayload(\n          taskChild,\n          serverRouterStateChild,\n          dynamicDataChild,\n          dynamicHead,\n          debugInfo\n        )\n      }\n    }\n    // We didn't find a child task that matches the server data. We won't abort\n    // the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n  }\n}\n\nfunction createPendingCacheNode(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): ReadyCacheNode {\n  const routerStateChildren = routerState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[1] : null\n\n  const parallelRoutes = new Map()\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const prefetchDataChild: CacheNodeSeedData | null | void =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const segmentChild = routerStateChild[0]\n    const segmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      segmentChild,\n    ])\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n    const newCacheNodeChild = createPendingCacheNode(\n      navigatedAt,\n      routerStateChild,\n      prefetchDataChild === undefined ? null : prefetchDataChild,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPathChild,\n      scrollableSegmentsResult\n    )\n\n    const newSegmentMapChild: ChildSegmentMap = new Map()\n    newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n    parallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n  }\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const isLeafSegment = parallelRoutes.size === 0\n\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  }\n\n  const maybePrefetchRsc = prefetchData !== null ? prefetchData[0] : null\n  return {\n    lazyData: null,\n    parallelRoutes: parallelRoutes,\n\n    prefetchRsc: maybePrefetchRsc !== undefined ? maybePrefetchRsc : null,\n    prefetchHead: isLeafSegment ? prefetchHead : [null, null],\n\n    // Create a deferred promise. This will be fulfilled once the dynamic\n    // response is received from the server.\n    rsc: createDeferredRsc() as React.ReactNode,\n    head: isLeafSegment ? (createDeferredRsc() as React.ReactNode) : null,\n\n    // TODO: Technically, a loading boundary could contain dynamic data. We must\n    // have separate `loading` and `prefetchLoading` fields to handle this, like\n    // we do for the segment data and head.\n    loading:\n      prefetchData !== null\n        ? (prefetchData[2] ?? null)\n        : // If we don't have a prefetch, then we don't know if there's a loading component.\n          // We'll fulfill it based on the dynamic response, just like `rsc` and `head`.\n          createDeferredRsc<LoadingModuleData>(),\n\n    navigatedAt,\n  }\n}\n\nfunction finishPendingCacheNode(\n  cacheNode: CacheNode,\n  taskState: FlightRouterState,\n  serverState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData,\n  debugInfo: Array<any> | null\n): void {\n  // Writes a dynamic response into an existing Cache Node tree. This does _not_\n  // create a new tree, it updates the existing tree in-place. So it must follow\n  // the Suspense rules of cache safety — it can resolve pending promises, but\n  // it cannot overwrite existing data. It can add segments to the tree (because\n  // a missing segment will cause the layout router to suspend).\n  // but it cannot delete them.\n  //\n  // We must resolve every promise in the tree, or else it will suspend\n  // indefinitely. If we did not receive data for a segment, we will resolve its\n  // data promise to `null` to trigger a lazy fetch during render.\n  const taskStateChildren = taskState[1]\n  const serverStateChildren = serverState[1]\n  const dataChildren = dynamicData[1]\n\n  // The router state that we traverse the tree with (taskState) is the same one\n  // that we used to construct the pending Cache Node tree. That way we're sure\n  // to resolve all the pending promises.\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in taskStateChildren) {\n    const taskStateChild: FlightRouterState =\n      taskStateChildren[parallelRouteKey]\n    const serverStateChild: FlightRouterState | void =\n      serverStateChildren[parallelRouteKey]\n    const dataChild: CacheNodeSeedData | null | void =\n      dataChildren[parallelRouteKey]\n\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    const taskSegmentChild = taskStateChild[0]\n    const taskSegmentKeyChild = createRouterCacheKey(taskSegmentChild)\n\n    const cacheNodeChild =\n      segmentMapChild !== undefined\n        ? segmentMapChild.get(taskSegmentKeyChild)\n        : undefined\n\n    if (cacheNodeChild !== undefined) {\n      if (\n        serverStateChild !== undefined &&\n        matchSegment(taskSegmentChild, serverStateChild[0])\n      ) {\n        if (dataChild !== undefined && dataChild !== null) {\n          // This is the happy path. Recursively update all the children.\n          finishPendingCacheNode(\n            cacheNodeChild,\n            taskStateChild,\n            serverStateChild,\n            dataChild,\n            dynamicHead,\n            debugInfo\n          )\n        } else {\n          // The server never returned data for this segment. Trigger a lazy\n          // fetch during render. This shouldn't happen because the Route Tree\n          // and the Seed Data tree sent by the server should always be the same\n          // shape when part of the same server response.\n          abortPendingCacheNode(taskStateChild, cacheNodeChild, null, debugInfo)\n        }\n      } else {\n        // The server never returned data for this segment. Trigger a lazy\n        // fetch during render.\n        abortPendingCacheNode(taskStateChild, cacheNodeChild, null, debugInfo)\n      }\n    } else {\n      // The server response matches what was expected to receive, but there's\n      // no matching Cache Node in the task tree. This is a bug in the\n      // implementation because we should have created a node for every\n      // segment in the tree that's associated with this task.\n    }\n  }\n\n  // Use the dynamic data from the server to fulfill the deferred RSC promise\n  // on the Cache Node.\n  const rsc = cacheNode.rsc\n  const dynamicSegmentData = dynamicData[0]\n  if (rsc === null) {\n    // This is a lazy cache node. We can overwrite it. This is only safe\n    // because we know that the LayoutRouter suspends if `rsc` is `null`.\n    cacheNode.rsc = dynamicSegmentData\n  } else if (isDeferredRsc(rsc)) {\n    // This is a deferred RSC promise. We can fulfill it with the data we just\n    // received from the server. If it was already resolved by a different\n    // navigation, then this does nothing because we can't overwrite data.\n    rsc.resolve(dynamicSegmentData, debugInfo)\n  } else {\n    // This is not a deferred RSC promise, nor is it empty, so it must have\n    // been populated by a different navigation. We must not overwrite it.\n  }\n\n  // If we navigated without a prefetch, then `loading` will be a deferred promise too.\n  // Fulfill it using the dynamic response so that we can display the loading boundary.\n  const loading = cacheNode.loading\n  if (isDeferredRsc(loading)) {\n    const dynamicLoading = dynamicData[2]\n    loading.resolve(dynamicLoading, debugInfo)\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved with the dynamic head from\n  // the server.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(dynamicHead, debugInfo)\n  }\n}\n\nexport function abortTask(\n  task: SPANavigationTask,\n  error: any,\n  debugInfo: Array<any> | null\n): void {\n  const cacheNode = task.node\n  if (cacheNode === null) {\n    // This indicates the task is already complete.\n    return\n  }\n\n  const taskChildren = task.children\n  if (taskChildren === null) {\n    // Reached the leaf task node. This is the root of a pending cache\n    // node tree.\n    abortPendingCacheNode(task.route, cacheNode, error, debugInfo)\n  } else {\n    // This is an intermediate task node. Keep traversing until we reach a\n    // task node with no children. That will be the root of the cache node tree\n    // that needs to be resolved.\n    for (const taskChild of taskChildren.values()) {\n      abortTask(taskChild, error, debugInfo)\n    }\n  }\n\n  // Set this to null to indicate that this task is now complete.\n  task.dynamicRequestTree = null\n}\n\nfunction abortPendingCacheNode(\n  routerState: FlightRouterState,\n  cacheNode: CacheNode,\n  error: any,\n  debugInfo: Array<any> | null\n): void {\n  // For every pending segment in the tree, resolve its `rsc` promise to `null`\n  // to trigger a lazy fetch during render.\n  //\n  // Or, if an error object is provided, it will error instead.\n  const routerStateChildren = routerState[1]\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    if (segmentMapChild === undefined) {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n      continue\n    }\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const cacheNodeChild = segmentMapChild.get(segmentKeyChild)\n    if (cacheNodeChild !== undefined) {\n      abortPendingCacheNode(routerStateChild, cacheNodeChild, error, debugInfo)\n    } else {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n    }\n  }\n\n  const rsc = cacheNode.rsc\n  if (isDeferredRsc(rsc)) {\n    if (error === null) {\n      // This will trigger a lazy fetch during render.\n      rsc.resolve(null, debugInfo)\n    } else {\n      // This will trigger an error during rendering.\n      rsc.reject(error, debugInfo)\n    }\n  }\n\n  const loading = cacheNode.loading\n  if (isDeferredRsc(loading)) {\n    loading.resolve(null, debugInfo)\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved. If an error was provided, we\n  // will not resolve it with an error, since this is rendered at the root of\n  // the app. We want the segment to error, not the entire app.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(null, debugInfo)\n  }\n}\n\nexport function updateCacheNodeOnPopstateRestoration(\n  oldCacheNode: CacheNode,\n  routerState: FlightRouterState\n): ReadyCacheNode {\n  // A popstate navigation reads data from the local cache. It does not issue\n  // new network requests (unless the cache entries have been evicted). So, we\n  // update the cache to drop the prefetch data for any segment whose dynamic\n  // data was already received. This prevents an unnecessary flash back to PPR\n  // state during a back/forward navigation.\n  //\n  // This function clones the entire cache node tree and sets the `prefetchRsc`\n  // field to `null` to prevent it from being rendered. We can't mutate the node\n  // in place because this is a concurrent data structure.\n\n  const routerStateChildren = routerState[1]\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n  const newParallelRoutes = new Map(oldParallelRoutes)\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    if (oldSegmentMapChild !== undefined) {\n      const oldCacheNodeChild = oldSegmentMapChild.get(segmentKeyChild)\n      if (oldCacheNodeChild !== undefined) {\n        const newCacheNodeChild = updateCacheNodeOnPopstateRestoration(\n          oldCacheNodeChild,\n          routerStateChild\n        )\n        const newSegmentMapChild = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        newParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  // Only show prefetched data if the dynamic data is still pending.\n  //\n  // Tehnically, what we're actually checking is whether the dynamic network\n  // response was received. But since it's a streaming response, this does not\n  // mean that all the dynamic data has fully streamed in. It just means that\n  // _some_ of the dynamic data was received. But as a heuristic, we assume that\n  // the rest dynamic data will stream in quickly, so it's still better to skip\n  // the prefetch state.\n  const rsc = oldCacheNode.rsc\n  const shouldUsePrefetch = isDeferredRsc(rsc) && rsc.status === 'pending'\n\n  return {\n    lazyData: null,\n    rsc,\n    head: oldCacheNode.head,\n\n    prefetchHead: shouldUsePrefetch ? oldCacheNode.prefetchHead : [null, null],\n    prefetchRsc: shouldUsePrefetch ? oldCacheNode.prefetchRsc : null,\n    loading: oldCacheNode.loading,\n\n    // These are the cloned children we computed above\n    parallelRoutes: newParallelRoutes,\n\n    navigatedAt: oldCacheNode.navigatedAt,\n  }\n}\n\nconst DEFERRED = Symbol()\n\ntype PendingDeferredRsc<T> = Promise<T> & {\n  status: 'pending'\n  resolve: (value: T, debugInfo: Array<any> | null) => void\n  reject: (error: any, debugInfo: Array<any> | null) => void\n  tag: Symbol\n  _debugInfo: Array<any>\n}\n\ntype FulfilledDeferredRsc<T> = Promise<T> & {\n  status: 'fulfilled'\n  value: T\n  resolve: (value: T, debugInfo: Array<any> | null) => void\n  reject: (error: any, debugInfo: Array<any> | null) => void\n  tag: Symbol\n  _debugInfo: Array<any>\n}\n\ntype RejectedDeferredRsc<T> = Promise<T> & {\n  status: 'rejected'\n  reason: any\n  resolve: (value: T, debugInfo: Array<any> | null) => void\n  reject: (error: any, debugInfo: Array<any> | null) => void\n  tag: Symbol\n  _debugInfo: Array<any>\n}\n\ntype DeferredRsc<T extends React.ReactNode = React.ReactNode> =\n  | PendingDeferredRsc<T>\n  | FulfilledDeferredRsc<T>\n  | RejectedDeferredRsc<T>\n\n// This type exists to distinguish a DeferredRsc from a Flight promise. It's a\n// compromise to avoid adding an extra field on every Cache Node, which would be\n// awkward because the pre-PPR parts of codebase would need to account for it,\n// too. We can remove it once type Cache Node type is more settled.\nfunction isDeferredRsc(value: any): value is DeferredRsc {\n  return value && typeof value === 'object' && value.tag === DEFERRED\n}\n\nfunction createDeferredRsc<\n  T extends React.ReactNode = React.ReactNode,\n>(): PendingDeferredRsc<T> {\n  // Create an unresolved promise that represents data derived from a Flight\n  // response. The promise will be resolved later as soon as we start receiving\n  // data from the server, i.e. as soon as the Flight client decodes and returns\n  // the top-level response object.\n\n  // The `_debugInfo` field contains profiling information. Promises that are\n  // created by Flight already have this info added by React; for any derived\n  // promise created by the router, we need to transfer the Flight debug info\n  // onto the derived promise.\n  //\n  // The debug info represents the latency between the start of the navigation\n  // and the start of rendering. (It does not represent the time it takes for\n  // whole stream to finish.)\n  const debugInfo: Array<any> = []\n\n  let resolve: any\n  let reject: any\n  const pendingRsc = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  }) as PendingDeferredRsc<T>\n  pendingRsc.status = 'pending'\n  pendingRsc.resolve = (value: T, responseDebugInfo: Array<any> | null) => {\n    if (pendingRsc.status === 'pending') {\n      const fulfilledRsc: FulfilledDeferredRsc<T> = pendingRsc as any\n      fulfilledRsc.status = 'fulfilled'\n      fulfilledRsc.value = value\n      if (responseDebugInfo !== null) {\n        // Transfer the debug info to the derived promise.\n        debugInfo.push.apply(debugInfo, responseDebugInfo)\n      }\n      resolve(value)\n    }\n  }\n  pendingRsc.reject = (error: any, responseDebugInfo: Array<any> | null) => {\n    if (pendingRsc.status === 'pending') {\n      const rejectedRsc: RejectedDeferredRsc<T> = pendingRsc as any\n      rejectedRsc.status = 'rejected'\n      rejectedRsc.reason = error\n      if (responseDebugInfo !== null) {\n        // Transfer the debug info to the derived promise.\n        debugInfo.push.apply(debugInfo, responseDebugInfo)\n      }\n      reject(error)\n    }\n  }\n  pendingRsc.tag = DEFERRED\n  pendingRsc._debugInfo = debugInfo\n\n  return pendingRsc\n}\n"],"names":["abortTask","listenForDynamicRequest","startPPRNavigation","updateCacheNodeOnPopstateRestoration","MPA_NAVIGATION_TASK","route","node","dynamicRequestTree","children","navigatedAt","oldUrl","oldCacheNode","oldRouterState","newRouterState","prefetchData","prefetchHead","isPrefetchHeadPartial","isSamePageNavigation","scrollableSegmentsResult","segmentPath","updateCacheNodeOnNavigation","didFindRootLayout","oldRouterStateChildren","newRouterStateChildren","prefetchDataChildren","isRootLayout","oldParallelRoutes","parallelRoutes","prefetchParallelRoutes","Map","patchedRouterStateChildren","taskChildren","needsDynamicRequest","dynamicRequestTreeChildren","parallelRouteKey","newRouterStateChild","oldRouterStateChild","oldSegmentMapChild","get","prefetchDataChild","newSegmentChild","newSegmentPathChild","concat","newSegmentKeyChild","createRouterCacheKey","oldSegmentChild","undefined","oldCacheNodeChild","taskChild","DEFAULT_SEGMENT_KEY","reuseActiveSegmentInDefaultSlot","beginRenderingNewRouteTree","Object","keys","length","matchSegment","set","newCacheNodeChild","newSegmentMapChild","taskChildRoute","dynamicRequestTreeChild","newCacheNode","lazyData","rsc","prefetchRsc","head","loading","patchRouterStateWithNewChildren","existingCacheNode","possiblyPartialPrefetchHead","isNavigatingToNewRootLayout","createCacheNodeOnNavigation","routerState","routerStateChildren","isLeafSegment","cacheNodeNavigatedAt","DYNAMIC_STALETIME_MS","isPrefetchRscPartial","spawnPendingTask","existingCacheNodeChildren","cacheNodeChildren","push","routerStateChild","existingSegmentMapChild","segmentChild","segmentPathChild","segmentKeyChild","existingCacheNodeChild","baseRouterState","newChildren","clone","newTask","createPendingCacheNode","reusedRouterState","oldRefreshMarker","createHrefFromUrl","task","responsePromise","then","result","flightData","debugInfo","normalizedFlightData","tree","serverRouterState","seedData","dynamicData","dynamicHead","writeDynamicDataIntoPendingTask","error","rootTask","i","segment","taskSegment","finishTaskUsingDynamicDataPayload","taskNode","finishPendingCacheNode","serverChildren","dynamicDataChildren","serverRouterStateChild","dynamicDataChild","size","maybePrefetchRsc","createDeferredRsc","cacheNode","taskState","serverState","taskStateChildren","serverStateChildren","dataChildren","taskStateChild","serverStateChild","dataChild","segmentMapChild","taskSegmentChild","taskSegmentKeyChild","cacheNodeChild","abortPendingCacheNode","dynamicSegmentData","isDeferredRsc","resolve","dynamicLoading","values","reject","newParallelRoutes","shouldUsePrefetch","status","DEFERRED","Symbol","value","tag","pendingRsc","Promise","res","rej","responseDebugInfo","fulfilledRsc","apply","rejectedRsc","reason","_debugInfo"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7050, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache-impl/navigation.ts"],"sourcesContent":["import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../shared/lib/app-router-types'\nimport type { CacheNode } from '../../../shared/lib/app-router-types'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../../shared/lib/app-router-types'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\nimport { fetchServerResponse } from '../router-reducer/fetch-server-response'\nimport {\n  startPPRNavigation,\n  listenForDynamicRequest,\n  type Task as PPRNavigationTask,\n} from '../router-reducer/ppr-navigations'\nimport { createHrefFromUrl } from '../router-reducer/create-href-from-url'\nimport {\n  EntryStatus,\n  readRouteCacheEntry,\n  readSegmentCacheEntry,\n  waitForSegmentCacheEntry,\n  requestOptimisticRouteCacheEntry,\n  type RouteTree,\n  type FulfilledRouteCacheEntry,\n} from './cache'\nimport { createCacheKey } from './cache-key'\nimport { addSearchParamsIfPageSegment } from '../../../shared/lib/segment'\nimport { NavigationResultTag } from '../segment-cache'\n\ntype MPANavigationResult = {\n  tag: NavigationResultTag.MPA\n  data: string\n}\n\ntype NoOpNavigationResult = {\n  tag: NavigationResultTag.NoOp\n  data: {\n    canonicalUrl: string\n    shouldScroll: boolean\n  }\n}\n\ntype SuccessfulNavigationResult = {\n  tag: NavigationResultTag.Success\n  data: {\n    flightRouterState: FlightRouterState\n    cacheNode: CacheNode\n    canonicalUrl: string\n    renderedSearch: string\n    scrollableSegments: Array<FlightSegmentPath>\n    shouldScroll: boolean\n    hash: string\n  }\n}\n\ntype AsyncNavigationResult = {\n  tag: NavigationResultTag.Async\n  data: Promise<\n    MPANavigationResult | NoOpNavigationResult | SuccessfulNavigationResult\n  >\n}\n\nexport type NavigationResult =\n  | MPANavigationResult\n  | SuccessfulNavigationResult\n  | NoOpNavigationResult\n  | AsyncNavigationResult\n\n/**\n * Navigate to a new URL, using the Segment Cache to construct a response.\n *\n * To allow for synchronous navigations whenever possible, this is not an async\n * function. It returns a promise only if there's no matching prefetch in\n * the cache. Otherwise it returns an immediate result and uses Suspense/RSC to\n * stream in any missing data.\n */\nexport function navigate(\n  url: URL,\n  currentUrl: URL,\n  currentCacheNode: CacheNode,\n  currentFlightRouterState: FlightRouterState,\n  nextUrl: string | null,\n  shouldScroll: boolean,\n  accumulation: { collectedDebugInfo?: Array<unknown> }\n): NavigationResult {\n  const now = Date.now()\n  const href = url.href\n\n  // We special case navigations to the exact same URL as the current location.\n  // It's a common UI pattern for apps to refresh when you click a link to the\n  // current page. So when this happens, we refresh the dynamic data in the page\n  // segments.\n  //\n  // Note that this does not apply if the any part of the hash or search query\n  // has changed. This might feel a bit weird but it makes more sense when you\n  // consider that the way to trigger this behavior is to click the same link\n  // multiple times.\n  //\n  // TODO: We should probably refresh the *entire* route when this case occurs,\n  // not just the page segments. Essentially treating it the same as a refresh()\n  // triggered by an action, which is the more explicit way of modeling the UI\n  // pattern described above.\n  //\n  // Also note that this only refreshes the dynamic data, not static/ cached\n  // data. If the page segment is fully static and prefetched, the request is\n  // skipped. (This is also how refresh() works.)\n  const isSamePageNavigation =\n    // TODO: This is not the only place we read from the location, but we should\n    // consider storing the current URL in the router state instead of reading\n    // from the location object. In practice I don't think this matters much\n    // since we keep them in sync anyway, but having two sources of truth can\n    // lead to subtle bugs and race conditions.\n    href === window.location.href\n\n  const cacheKey = createCacheKey(href, nextUrl)\n  const route = readRouteCacheEntry(now, cacheKey)\n  if (route !== null && route.status === EntryStatus.Fulfilled) {\n    // We have a matching prefetch.\n    const snapshot = readRenderSnapshotFromCache(now, route, route.tree)\n    const prefetchFlightRouterState = snapshot.flightRouterState\n    const prefetchSeedData = snapshot.seedData\n    const prefetchHead = route.head\n    const isPrefetchHeadPartial = route.isHeadPartial\n    const newCanonicalUrl = route.canonicalUrl\n    const renderedSearch = route.renderedSearch\n    return navigateUsingPrefetchedRouteTree(\n      now,\n      url,\n      currentUrl,\n      nextUrl,\n      isSamePageNavigation,\n      currentCacheNode,\n      currentFlightRouterState,\n      prefetchFlightRouterState,\n      prefetchSeedData,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      newCanonicalUrl,\n      renderedSearch,\n      shouldScroll,\n      url.hash\n    )\n  }\n\n  // There was no matching route tree in the cache. Let's see if we can\n  // construct an \"optimistic\" route tree.\n  //\n  // Do not construct an optimistic route tree if there was a cache hit, but\n  // the entry has a rejected status, since it may have been rejected due to a\n  // rewrite or redirect based on the search params.\n  //\n  // TODO: There are multiple reasons a prefetch might be rejected; we should\n  // track them explicitly and choose what to do here based on that.\n  if (route === null || route.status !== EntryStatus.Rejected) {\n    const optimisticRoute = requestOptimisticRouteCacheEntry(now, url, nextUrl)\n    if (optimisticRoute !== null) {\n      // We have an optimistic route tree. Proceed with the normal flow.\n      const snapshot = readRenderSnapshotFromCache(\n        now,\n        optimisticRoute,\n        optimisticRoute.tree\n      )\n      const prefetchFlightRouterState = snapshot.flightRouterState\n      const prefetchSeedData = snapshot.seedData\n      const prefetchHead = optimisticRoute.head\n      const isPrefetchHeadPartial = optimisticRoute.isHeadPartial\n      const newCanonicalUrl = optimisticRoute.canonicalUrl\n      const newRenderedSearch = optimisticRoute.renderedSearch\n      return navigateUsingPrefetchedRouteTree(\n        now,\n        url,\n        currentUrl,\n        nextUrl,\n        isSamePageNavigation,\n        currentCacheNode,\n        currentFlightRouterState,\n        prefetchFlightRouterState,\n        prefetchSeedData,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newCanonicalUrl,\n        newRenderedSearch,\n        shouldScroll,\n        url.hash\n      )\n    }\n  }\n\n  // There's no matching prefetch for this route in the cache.\n  let collectedDebugInfo = accumulation.collectedDebugInfo ?? []\n  if (accumulation.collectedDebugInfo === undefined) {\n    collectedDebugInfo = accumulation.collectedDebugInfo = []\n  }\n  return {\n    tag: NavigationResultTag.Async,\n    data: navigateDynamicallyWithNoPrefetch(\n      now,\n      url,\n      currentUrl,\n      nextUrl,\n      isSamePageNavigation,\n      currentCacheNode,\n      currentFlightRouterState,\n      shouldScroll,\n      url.hash,\n      collectedDebugInfo\n    ),\n  }\n}\n\nfunction navigateUsingPrefetchedRouteTree(\n  now: number,\n  url: URL,\n  currentUrl: URL,\n  nextUrl: string | null,\n  isSamePageNavigation: boolean,\n  currentCacheNode: CacheNode,\n  currentFlightRouterState: FlightRouterState,\n  prefetchFlightRouterState: FlightRouterState,\n  prefetchSeedData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  canonicalUrl: string,\n  renderedSearch: string,\n  shouldScroll: boolean,\n  hash: string\n): SuccessfulNavigationResult | NoOpNavigationResult | MPANavigationResult {\n  // Recursively construct a prefetch tree by reading from the Segment Cache. To\n  // maintain compatibility, we output the same data structures as the old\n  // prefetching implementation: FlightRouterState and CacheNodeSeedData.\n  // TODO: Eventually updateCacheNodeOnNavigation (or the equivalent) should\n  // read from the Segment Cache directly. It's only structured this way for now\n  // so we can share code with the old prefetching implementation.\n  const scrollableSegments: Array<FlightSegmentPath> = []\n  const task = startPPRNavigation(\n    now,\n    currentUrl,\n    currentCacheNode,\n    currentFlightRouterState,\n    prefetchFlightRouterState,\n    prefetchSeedData,\n    prefetchHead,\n    isPrefetchHeadPartial,\n    isSamePageNavigation,\n    scrollableSegments\n  )\n  if (task !== null) {\n    const dynamicRequestTree = task.dynamicRequestTree\n    if (dynamicRequestTree !== null) {\n      const promiseForDynamicServerResponse = fetchServerResponse(\n        new URL(canonicalUrl, url.origin),\n        {\n          flightRouterState: dynamicRequestTree,\n          nextUrl,\n        }\n      )\n      listenForDynamicRequest(task, promiseForDynamicServerResponse)\n    } else {\n      // The prefetched tree does not contain dynamic holes — it's\n      // fully static. We can skip the dynamic request.\n    }\n    return navigationTaskToResult(\n      task,\n      currentCacheNode,\n      canonicalUrl,\n      renderedSearch,\n      scrollableSegments,\n      shouldScroll,\n      hash\n    )\n  }\n  // The server sent back an empty tree patch. There's nothing to update, except\n  // possibly the URL.\n  return {\n    tag: NavigationResultTag.NoOp,\n    data: {\n      canonicalUrl,\n      shouldScroll,\n    },\n  }\n}\n\nfunction navigationTaskToResult(\n  task: PPRNavigationTask,\n  currentCacheNode: CacheNode,\n  canonicalUrl: string,\n  renderedSearch: string,\n  scrollableSegments: Array<FlightSegmentPath>,\n  shouldScroll: boolean,\n  hash: string\n): SuccessfulNavigationResult | MPANavigationResult {\n  const flightRouterState = task.route\n  if (flightRouterState === null) {\n    // When no router state is provided, it signals that we should perform an\n    // MPA navigation.\n    return {\n      tag: NavigationResultTag.MPA,\n      data: canonicalUrl,\n    }\n  }\n  const newCacheNode = task.node\n  return {\n    tag: NavigationResultTag.Success,\n    data: {\n      flightRouterState,\n      cacheNode: newCacheNode !== null ? newCacheNode : currentCacheNode,\n      canonicalUrl,\n      renderedSearch,\n      scrollableSegments,\n      shouldScroll,\n      hash,\n    },\n  }\n}\n\nfunction readRenderSnapshotFromCache(\n  now: number,\n  route: FulfilledRouteCacheEntry,\n  tree: RouteTree\n): { flightRouterState: FlightRouterState; seedData: CacheNodeSeedData } {\n  let childRouterStates: { [parallelRouteKey: string]: FlightRouterState } = {}\n  let childSeedDatas: {\n    [parallelRouteKey: string]: CacheNodeSeedData | null\n  } = {}\n  const slots = tree.slots\n  if (slots !== null) {\n    for (const parallelRouteKey in slots) {\n      const childTree = slots[parallelRouteKey]\n      const childResult = readRenderSnapshotFromCache(now, route, childTree)\n      childRouterStates[parallelRouteKey] = childResult.flightRouterState\n      childSeedDatas[parallelRouteKey] = childResult.seedData\n    }\n  }\n\n  let rsc: React.ReactNode | null = null\n  let loading: LoadingModuleData | Promise<LoadingModuleData> = null\n  let isPartial: boolean = true\n\n  const segmentEntry = readSegmentCacheEntry(now, route, tree.cacheKey)\n  if (segmentEntry !== null) {\n    switch (segmentEntry.status) {\n      case EntryStatus.Fulfilled: {\n        // Happy path: a cache hit\n        rsc = segmentEntry.rsc\n        loading = segmentEntry.loading\n        isPartial = segmentEntry.isPartial\n        break\n      }\n      case EntryStatus.Pending: {\n        // We haven't received data for this segment yet, but there's already\n        // an in-progress request. Since it's extremely likely to arrive\n        // before the dynamic data response, we might as well use it.\n        const promiseForFulfilledEntry = waitForSegmentCacheEntry(segmentEntry)\n        rsc = promiseForFulfilledEntry.then((entry) =>\n          entry !== null ? entry.rsc : null\n        )\n        loading = promiseForFulfilledEntry.then((entry) =>\n          entry !== null ? entry.loading : null\n        )\n        // Since we don't know yet whether the segment is partial or fully\n        // static, we must assume it's partial; we can't skip the\n        // dynamic request.\n        isPartial = true\n        break\n      }\n      case EntryStatus.Empty:\n      case EntryStatus.Rejected:\n        break\n      default:\n        segmentEntry satisfies never\n    }\n  }\n\n  // The navigation implementation expects the search params to be\n  // included in the segment. However, the Segment Cache tracks search\n  // params separately from the rest of the segment key. So we need to\n  // add them back here.\n  //\n  // See corresponding comment in convertFlightRouterStateToTree.\n  //\n  // TODO: What we should do instead is update the navigation diffing\n  // logic to compare search params explicitly. This is a temporary\n  // solution until more of the Segment Cache implementation has settled.\n  const segment = addSearchParamsIfPageSegment(\n    tree.segment,\n    Object.fromEntries(new URLSearchParams(route.renderedSearch))\n  )\n\n  // We don't need this information in a render snapshot, so this can just be a placeholder.\n  const hasRuntimePrefetch = false\n\n  return {\n    flightRouterState: [\n      segment,\n      childRouterStates,\n      null,\n      null,\n      tree.isRootLayout,\n    ],\n    seedData: [rsc, childSeedDatas, loading, isPartial, hasRuntimePrefetch],\n  }\n}\n\nasync function navigateDynamicallyWithNoPrefetch(\n  now: number,\n  url: URL,\n  currentUrl: URL,\n  nextUrl: string | null,\n  isSamePageNavigation: boolean,\n  currentCacheNode: CacheNode,\n  currentFlightRouterState: FlightRouterState,\n  shouldScroll: boolean,\n  hash: string,\n  collectedDebugInfo: Array<unknown>\n): Promise<\n  MPANavigationResult | SuccessfulNavigationResult | NoOpNavigationResult\n> {\n  // Runs when a navigation happens but there's no cached prefetch we can use.\n  // Don't bother to wait for a prefetch response; go straight to a full\n  // navigation that contains both static and dynamic data in a single stream.\n  // (This is unlike the old navigation implementation, which instead blocks\n  // the dynamic request until a prefetch request is received.)\n  //\n  // To avoid duplication of logic, we're going to pretend that the tree\n  // returned by the dynamic request is, in fact, a prefetch tree. Then we can\n  // use the same server response to write the actual data into the CacheNode\n  // tree. So it's the same flow as the \"happy path\" (prefetch, then\n  // navigation), except we use a single server response for both stages.\n\n  const promiseForDynamicServerResponse = fetchServerResponse(url, {\n    flightRouterState: currentFlightRouterState,\n    nextUrl,\n  })\n  const result = await promiseForDynamicServerResponse\n  if (typeof result === 'string') {\n    // This is an MPA navigation.\n    const newUrl = result\n    return {\n      tag: NavigationResultTag.MPA,\n      data: newUrl,\n    }\n  }\n\n  const {\n    flightData,\n    canonicalUrl,\n    renderedSearch,\n    debugInfo: debugInfoFromResponse,\n  } = result\n  if (debugInfoFromResponse !== null) {\n    collectedDebugInfo.push(...debugInfoFromResponse)\n  }\n\n  // Since the response format of dynamic requests and prefetches is slightly\n  // different, we'll need to massage the data a bit. Create FlightRouterState\n  // tree that simulates what we'd receive as the result of a prefetch.\n  const prefetchFlightRouterState = simulatePrefetchTreeUsingDynamicTreePatch(\n    currentFlightRouterState,\n    flightData\n  )\n\n  // In our simulated prefetch payload, we pretend that there's no seed data\n  // nor a prefetch head.\n  const prefetchSeedData = null\n  const prefetchHead = null\n  const isPrefetchHeadPartial = true\n\n  // Now we proceed exactly as we would for normal navigation.\n  const scrollableSegments: Array<FlightSegmentPath> = []\n  const task = startPPRNavigation(\n    now,\n    currentUrl,\n    currentCacheNode,\n    currentFlightRouterState,\n    prefetchFlightRouterState,\n    prefetchSeedData,\n    prefetchHead,\n    isPrefetchHeadPartial,\n    isSamePageNavigation,\n    scrollableSegments\n  )\n  if (task !== null) {\n    // In this case, we've already sent the dynamic request, so we don't\n    // actually use the request tree created by `startPPRNavigation`,\n    // except to check if it contains dynamic holes.\n    //\n    // This is almost always true, but it could be false if all the segment data\n    // was present in the cache, but the route tree was not. E.g. navigating\n    // to a URL that was not prefetched but rewrites to a different URL\n    // that was.\n    const hasDynamicHoles = task.dynamicRequestTree !== null\n    if (hasDynamicHoles) {\n      listenForDynamicRequest(task, promiseForDynamicServerResponse)\n    } else {\n      // The prefetched tree does not contain dynamic holes — it's\n      // fully static. We don't need to process the server response further.\n    }\n    return navigationTaskToResult(\n      task,\n      currentCacheNode,\n      createHrefFromUrl(canonicalUrl),\n      renderedSearch,\n      scrollableSegments,\n      shouldScroll,\n      hash\n    )\n  }\n  // The server sent back an empty tree patch. There's nothing to update, except\n  // possibly the URL.\n  return {\n    tag: NavigationResultTag.NoOp,\n    data: {\n      canonicalUrl: createHrefFromUrl(canonicalUrl),\n      shouldScroll,\n    },\n  }\n}\n\nfunction simulatePrefetchTreeUsingDynamicTreePatch(\n  currentTree: FlightRouterState,\n  flightData: Array<NormalizedFlightData>\n): FlightRouterState {\n  // Takes the current FlightRouterState and applies the router state patch\n  // received from the server, to create a full FlightRouterState tree that we\n  // can pretend was returned by a prefetch.\n  //\n  // (It sounds similar to what applyRouterStatePatch does, but it doesn't need\n  // to handle stuff like interception routes or diffing since that will be\n  // handled later.)\n  let baseTree = currentTree\n  for (const { segmentPath, tree: treePatch } of flightData) {\n    // If the server sends us multiple tree patches, we only need to clone the\n    // base tree when applying the first patch. After the first patch, we can\n    // apply the remaining patches in place without copying.\n    const canMutateInPlace = baseTree !== currentTree\n    baseTree = simulatePrefetchTreeUsingDynamicTreePatchImpl(\n      baseTree,\n      treePatch,\n      segmentPath,\n      canMutateInPlace,\n      0\n    )\n  }\n\n  return baseTree\n}\n\nfunction simulatePrefetchTreeUsingDynamicTreePatchImpl(\n  baseRouterState: FlightRouterState,\n  patch: FlightRouterState,\n  segmentPath: FlightSegmentPath,\n  canMutateInPlace: boolean,\n  index: number\n) {\n  if (index === segmentPath.length) {\n    // We reached the part of the tree that we need to patch.\n    return patch\n  }\n\n  // segmentPath represents the parent path of subtree. It's a repeating\n  // pattern of parallel route key and segment:\n  //\n  //   [string, Segment, string, Segment, string, Segment, ...]\n  //\n  // This path tells us which part of the base tree to apply the tree patch.\n  //\n  // NOTE: In the case of a fully dynamic request with no prefetch, we receive\n  // the FlightRouterState patch in the same request as the dynamic data.\n  // Therefore we don't need to worry about diffing the segment values; we can\n  // assume the server sent us a correct result.\n  const updatedParallelRouteKey: string = segmentPath[index]\n  // const segment: Segment = segmentPath[index + 1] <-- Not used, see note above\n\n  const baseChildren = baseRouterState[1]\n  const newChildren: { [parallelRouteKey: string]: FlightRouterState } = {}\n  for (const parallelRouteKey in baseChildren) {\n    if (parallelRouteKey === updatedParallelRouteKey) {\n      const childBaseRouterState = baseChildren[parallelRouteKey]\n      newChildren[parallelRouteKey] =\n        simulatePrefetchTreeUsingDynamicTreePatchImpl(\n          childBaseRouterState,\n          patch,\n          segmentPath,\n          canMutateInPlace,\n          // Advance the index by two and keep cloning until we reach\n          // the end of the segment path.\n          index + 2\n        )\n    } else {\n      // This child is not being patched. Copy it over as-is.\n      newChildren[parallelRouteKey] = baseChildren[parallelRouteKey]\n    }\n  }\n\n  if (canMutateInPlace) {\n    // We can mutate the base tree in place, because the base tree is already\n    // a clone.\n    baseRouterState[1] = newChildren\n    return baseRouterState\n  }\n\n  // Clone all the fields except the children.\n  //\n  // Based on equivalent logic in apply-router-state-patch-to-tree, but should\n  // confirm whether we need to copy all of these fields. Not sure the server\n  // ever sends, e.g. the refetch marker.\n  const clone: FlightRouterState = [baseRouterState[0], newChildren]\n  if (2 in baseRouterState) {\n    clone[2] = baseRouterState[2]\n  }\n  if (3 in baseRouterState) {\n    clone[3] = baseRouterState[3]\n  }\n  if (4 in baseRouterState) {\n    clone[4] = baseRouterState[4]\n  }\n  return clone\n}\n"],"names":["navigate","url","currentUrl","currentCacheNode","currentFlightRouterState","nextUrl","shouldScroll","accumulation","now","Date","href","isSamePageNavigation","window","location","cacheKey","createCacheKey","route","readRouteCacheEntry","status","EntryStatus","Fulfilled","snapshot","readRenderSnapshotFromCache","tree","prefetchFlightRouterState","flightRouterState","prefetchSeedData","seedData","prefetchHead","head","isPrefetchHeadPartial","isHeadPartial","newCanonicalUrl","canonicalUrl","renderedSearch","navigateUsingPrefetchedRouteTree","hash","Rejected","optimisticRoute","requestOptimisticRouteCacheEntry","newRenderedSearch","collectedDebugInfo","undefined","tag","NavigationResultTag","Async","data","navigateDynamicallyWithNoPrefetch","scrollableSegments","task","startPPRNavigation","dynamicRequestTree","promiseForDynamicServerResponse","fetchServerResponse","URL","origin","listenForDynamicRequest","navigationTaskToResult","NoOp","MPA","newCacheNode","node","Success","cacheNode","childRouterStates","childSeedDatas","slots","parallelRouteKey","childTree","childResult","rsc","loading","isPartial","segmentEntry","readSegmentCacheEntry","Pending","promiseForFulfilledEntry","waitForSegmentCacheEntry","then","entry","Empty","segment","addSearchParamsIfPageSegment","Object","fromEntries","URLSearchParams","hasRuntimePrefetch","isRootLayout","result","newUrl","flightData","debugInfo","debugInfoFromResponse","push","simulatePrefetchTreeUsingDynamicTreePatch","hasDynamicHoles","createHrefFromUrl","currentTree","baseTree","segmentPath","treePatch","canMutateInPlace","simulatePrefetchTreeUsingDynamicTreePatchImpl","baseRouterState","patch","index","length","updatedParallelRouteKey","baseChildren","newChildren","childBaseRouterState","clone"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7426, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/segment-cache.ts"],"sourcesContent":["/**\n * Entry point to the Segment Cache implementation.\n *\n * All code related to the Segment Cache lives `segment-cache-impl` directory.\n * Callers access it through this indirection.\n *\n * This is to ensure the code is dead code eliminated from the bundle if the\n * flag is disabled.\n *\n * TODO: This is super tedious. Since experimental flags are an essential part\n * of our workflow, we should establish a better pattern for dead code\n * elimination. Ideally it would be done at the bundler level, like how React's\n * build process works. In the React repo, you don't even need to add any extra\n * configuration per experiment — if the code is not reachable, it gets stripped\n * from the build automatically by Rollup. Or, shorter term, we could stub out\n * experimental modules at build time by updating the build config, i.e. a more\n * automated version of what I'm doing manually in this file.\n */\n\nexport type { NavigationResult } from './segment-cache-impl/navigation'\nexport type { PrefetchTask } from './segment-cache-impl/scheduler'\nexport type { NormalizedSearch } from './segment-cache-impl/cache-key'\n\nconst notEnabled: any = () => {\n  throw new Error(\n    'Segment Cache experiment is not enabled. This is a bug in Next.js.'\n  )\n}\n\nexport const prefetch: typeof import('./segment-cache-impl/prefetch').prefetch =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/prefetch') as typeof import('./segment-cache-impl/prefetch')\n        ).prefetch(...args)\n      }\n    : notEnabled\n\nexport const navigate: typeof import('./segment-cache-impl/navigation').navigate =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/navigation') as typeof import('./segment-cache-impl/navigation')\n        ).navigate(...args)\n      }\n    : notEnabled\n\nexport const revalidateEntireCache: typeof import('./segment-cache-impl/cache').revalidateEntireCache =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache') as typeof import('./segment-cache-impl/cache')\n        ).revalidateEntireCache(...args)\n      }\n    : notEnabled\n\nexport const getCurrentCacheVersion: typeof import('./segment-cache-impl/cache').getCurrentCacheVersion =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache') as typeof import('./segment-cache-impl/cache')\n        ).getCurrentCacheVersion(...args)\n      }\n    : notEnabled\n\nexport const schedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').schedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).schedulePrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const cancelPrefetchTask: typeof import('./segment-cache-impl/scheduler').cancelPrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).cancelPrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const reschedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').reschedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).reschedulePrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const isPrefetchTaskDirty: typeof import('./segment-cache-impl/scheduler').isPrefetchTaskDirty =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).isPrefetchTaskDirty(...args)\n      }\n    : notEnabled\n\nexport const createCacheKey: typeof import('./segment-cache-impl/cache-key').createCacheKey =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache-key') as typeof import('./segment-cache-impl/cache-key')\n        ).createCacheKey(...args)\n      }\n    : notEnabled\n\n/**\n * Below are public constants. They're small enough that we don't need to\n * DCE them.\n */\n\nexport const enum NavigationResultTag {\n  MPA,\n  Success,\n  NoOp,\n  Async,\n}\n\n/**\n * The priority of the prefetch task. Higher numbers are higher priority.\n */\nexport const enum PrefetchPriority {\n  /**\n   * Assigned to the most recently hovered/touched link. Special network\n   * bandwidth is reserved for this task only. There's only ever one Intent-\n   * priority task at a time; when a new Intent task is scheduled, the previous\n   * one is bumped down to Default.\n   */\n  Intent = 2,\n  /**\n   * The default priority for prefetch tasks.\n   */\n  Default = 1,\n  /**\n   * Assigned to tasks when they spawn non-blocking background work, like\n   * revalidating a partially cached entry to see if more data is available.\n   */\n  Background = 0,\n}\n\nexport const enum FetchStrategy {\n  // Deliberately ordered so we can easily compare two segments\n  // and determine if one segment is \"more specific\" than another\n  // (i.e. if it's likely that it contains more data)\n  LoadingBoundary = 0,\n  PPR = 1,\n  PPRRuntime = 2,\n  Full = 3,\n}\n\n/**\n * A subset of fetch strategies used for prefetch tasks.\n * A prefetch task can't know if it should use `PPR` or `LoadingBoundary`\n * until we complete the initial tree prefetch request, so we use `PPR` to signal both cases\n * and adjust it based on the route when actually fetching.\n * */\nexport type PrefetchTaskFetchStrategy =\n  | FetchStrategy.PPR\n  | FetchStrategy.PPRRuntime\n  | FetchStrategy.Full\n"],"names":["FetchStrategy","NavigationResultTag","PrefetchPriority","cancelPrefetchTask","createCacheKey","getCurrentCacheVersion","isPrefetchTaskDirty","navigate","prefetch","reschedulePrefetchTask","revalidateEntireCache","schedulePrefetchTask","notEnabled","Error","process","env","__NEXT_CLIENT_SEGMENT_CACHE","args","require"],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC;;;;;;;;;;;;;;;;;;;;;;;;IA+HiBA,aAAa,EAAA;eAAbA;;IA7BAC,mBAAmB,EAAA;eAAnBA;;IAUAC,gBAAgB,EAAA;eAAhBA;;IAnDLC,kBAAkB,EAAA;eAAlBA;;IA2BAC,cAAc,EAAA;eAAdA;;IA7CAC,sBAAsB,EAAA;eAAtBA;;IAoCAC,mBAAmB,EAAA;eAAnBA;;IAtDAC,QAAQ,EAAA;eAARA;;IATAC,QAAQ,EAAA;eAARA;;IAsDAC,sBAAsB,EAAA;eAAtBA;;IApCAC,qBAAqB,EAAA;eAArBA;;IAkBAC,oBAAoB,EAAA;eAApBA;;;AA1Cb,MAAMC,aAAkB;IACtB,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,uEADI,qBAAA;eAAA;oBAAA;sBAAA;IAEN;AACF;AAEO,MAAML,WACXM,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,4HACRV,QAAQ,IAAIS;AAChB,IACAL;AAEC,MAAML,WACXO,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,8HACRX,QAAQ,IAAIU;AAChB,IACAL;AAEC,MAAMF,wBACXI,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,yHACRR,qBAAqB,IAAIO;AAC7B,IACAL;AAEC,MAAMP,yBACXS,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,yHACRb,sBAAsB,IAAIY;AAC9B,IACAL;AAEC,MAAMD,uBACXG,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,6HACRP,oBAAoB,IAAIM;AAC5B,IACAL;AAEC,MAAMT,qBACXW,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,6HACRf,kBAAkB,IAAIc;AAC1B,IACAL;AAEC,MAAMH,yBACXK,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,6HACRT,sBAAsB,IAAIQ;AAC9B,IACAL;AAEC,MAAMN,sBACXQ,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,6HACRZ,mBAAmB,IAAIW;AAC3B,IACAL;AAEC,MAAMR,iBACXU,QAAQC,GAAG,CAACC,2BAA2B,AACnC,SAAU,GAAGC,IAAI;IACf,OACEC,QAAQ,6HACRd,cAAc,IAAIa;AACtB,IACAL;AAOC,IAAWX,sBAAAA,WAAAA,GAAAA,SAAAA,mBAAAA;;;;;WAAAA;;AAUX,IAAWC,mBAAAA,WAAAA,GAAAA,SAAAA,gBAAAA;IAChB;;;;;GAKC,GAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,GAAA,EAAA,GAAA;IAED;;GAEC,GAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,GAAA,EAAA,GAAA;IAED;;;GAGC,GAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,GAAA,EAAA,GAAA;WAfeA;;AAmBX,IAAWF,gBAAAA,WAAAA,GAAAA,SAAAA,aAAAA;IAChB,6DAA6D;IAC7D,+DAA+D;IAC/D,mDAAmD;;;;;WAHnCA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7582, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/invariant-error.ts"],"sourcesContent":["export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n"],"names":["InvariantError","Error","constructor","message","options","endsWith","name"],"mappings":";;;+BAAaA,kBAAAA;;;eAAAA;;;AAAN,MAAMA,uBAAuBC;IAClCC,YAAYC,OAAe,EAAEC,OAAsB,CAAE;QACnD,KAAK,CACH,CAAC,WAAW,EAAED,QAAQE,QAAQ,CAAC,OAAOF,UAAUA,UAAU,IAAI,0BAA0B,CAAC,EACzFC;QAEF,IAAI,CAACE,IAAI,GAAG;IACd;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7601, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/links.ts"],"sourcesContent":["import type { FlightRouterState } from '../../shared/lib/app-router-types'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  FetchStrategy,\n  isPrefetchTaskDirty,\n  type PrefetchTaskFetchStrategy,\n} from './segment-cache'\nimport { createCacheKey } from './segment-cache'\nimport {\n  type PrefetchTask,\n  PrefetchPriority,\n  schedulePrefetchTask as scheduleSegmentPrefetchTask,\n  cancelPrefetchTask,\n  reschedulePrefetchTask,\n} from './segment-cache'\nimport { startTransition } from 'react'\nimport { PrefetchKind } from './router-reducer/router-reducer-types'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype LinkElement = HTMLAnchorElement | SVGAElement\n\ntype Element = LinkElement | HTMLFormElement\n\n// Properties that are shared between Link and Form instances. We use the same\n// shape for both to prevent a polymorphic de-opt in the VM.\ntype LinkOrFormInstanceShared = {\n  router: AppRouterInstance\n  fetchStrategy: PrefetchTaskFetchStrategy\n\n  isVisible: boolean\n\n  // The most recently initiated prefetch task. It may or may not have\n  // already completed. The same prefetch task object can be reused across\n  // multiple prefetches of the same link.\n  prefetchTask: PrefetchTask | null\n}\n\nexport type FormInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: null\n}\n\ntype PrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype NonPrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: null\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype PrefetchableInstance = PrefetchableLinkInstance | FormInstance\n\nexport type LinkInstance =\n  | PrefetchableLinkInstance\n  | NonPrefetchableLinkInstance\n\n// Tracks the most recently navigated link instance. When null, indicates\n// the current navigation was not initiated by a link click.\nlet linkForMostRecentNavigation: LinkInstance | null = null\n\n// Status object indicating link is pending\nexport const PENDING_LINK_STATUS = { pending: true }\n\n// Status object indicating link is idle\nexport const IDLE_LINK_STATUS = { pending: false }\n\n// Updates the loading state when navigating between links\n// - Resets the previous link's loading state\n// - Sets the new link's loading state\n// - Updates tracking of current navigation\nexport function setLinkForCurrentNavigation(link: LinkInstance | null) {\n  startTransition(() => {\n    linkForMostRecentNavigation?.setOptimisticLinkStatus(IDLE_LINK_STATUS)\n    link?.setOptimisticLinkStatus(PENDING_LINK_STATUS)\n    linkForMostRecentNavigation = link\n  })\n}\n\n// Unmounts the current link instance from navigation tracking\nexport function unmountLinkForCurrentNavigation(link: LinkInstance) {\n  if (linkForMostRecentNavigation === link) {\n    linkForMostRecentNavigation = null\n  }\n}\n\n// Use a WeakMap to associate a Link instance with its DOM element. This is\n// used by the IntersectionObserver to track the link's visibility.\nconst prefetchable:\n  | WeakMap<Element, PrefetchableInstance>\n  | Map<Element, PrefetchableInstance> =\n  typeof WeakMap === 'function' ? new WeakMap() : new Map()\n\n// A Set of the currently visible links. We re-prefetch visible links after a\n// cache invalidation, or when the current URL changes. It's a separate data\n// structure from the WeakMap above because only the visible links need to\n// be enumerated.\nconst prefetchableAndVisible: Set<PrefetchableInstance> = new Set()\n\n// A single IntersectionObserver instance shared by all <Link> components.\nconst observer: IntersectionObserver | null =\n  typeof IntersectionObserver === 'function'\n    ? new IntersectionObserver(handleIntersect, {\n        rootMargin: '200px',\n      })\n    : null\n\nfunction observeVisibility(element: Element, instance: PrefetchableInstance) {\n  const existingInstance = prefetchable.get(element)\n  if (existingInstance !== undefined) {\n    // This shouldn't happen because each <Link> component should have its own\n    // anchor tag instance, but it's defensive coding to avoid a memory leak in\n    // case there's a logical error somewhere else.\n    unmountPrefetchableInstance(element)\n  }\n  // Only track prefetchable links that have a valid prefetch URL\n  prefetchable.set(element, instance)\n  if (observer !== null) {\n    observer.observe(element)\n  }\n}\n\nfunction coercePrefetchableUrl(href: string): URL | null {\n  if (typeof window !== 'undefined') {\n    const { createPrefetchURL } =\n      require('./app-router-utils') as typeof import('./app-router-utils')\n\n    try {\n      return createPrefetchURL(href)\n    } catch {\n      // createPrefetchURL sometimes throws an error if an invalid URL is\n      // provided, though I'm not sure if it's actually necessary.\n      // TODO: Consider removing the throw from the inner function, or change it\n      // to reportError. Or maybe the error isn't even necessary for automatic\n      // prefetches, just navigations.\n      const reportErrorFn =\n        typeof reportError === 'function' ? reportError : console.error\n      reportErrorFn(\n        `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n      )\n      return null\n    }\n  } else {\n    return null\n  }\n}\n\nexport function mountLinkInstance(\n  element: LinkElement,\n  href: string,\n  router: AppRouterInstance,\n  fetchStrategy: PrefetchTaskFetchStrategy,\n  prefetchEnabled: boolean,\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n): LinkInstance {\n  if (prefetchEnabled) {\n    const prefetchURL = coercePrefetchableUrl(href)\n    if (prefetchURL !== null) {\n      const instance: PrefetchableLinkInstance = {\n        router,\n        fetchStrategy,\n        isVisible: false,\n        prefetchTask: null,\n        prefetchHref: prefetchURL.href,\n        setOptimisticLinkStatus,\n      }\n      // We only observe the link's visibility if it's prefetchable. For\n      // example, this excludes links to external URLs.\n      observeVisibility(element, instance)\n      return instance\n    }\n  }\n  // If the link is not prefetchable, we still create an instance so we can\n  // track its optimistic state (i.e. useLinkStatus).\n  const instance: NonPrefetchableLinkInstance = {\n    router,\n    fetchStrategy,\n    isVisible: false,\n    prefetchTask: null,\n    prefetchHref: null,\n    setOptimisticLinkStatus,\n  }\n  return instance\n}\n\nexport function mountFormInstance(\n  element: HTMLFormElement,\n  href: string,\n  router: AppRouterInstance,\n  fetchStrategy: PrefetchTaskFetchStrategy\n): void {\n  const prefetchURL = coercePrefetchableUrl(href)\n  if (prefetchURL === null) {\n    // This href is not prefetchable, so we don't track it.\n    // TODO: We currently observe/unobserve a form every time its href changes.\n    // For Links, this isn't a big deal because the href doesn't usually change,\n    // but for forms it's extremely common. We should optimize this.\n    return\n  }\n  const instance: FormInstance = {\n    router,\n    fetchStrategy,\n    isVisible: false,\n    prefetchTask: null,\n    prefetchHref: prefetchURL.href,\n    setOptimisticLinkStatus: null,\n  }\n  observeVisibility(element, instance)\n}\n\nexport function unmountPrefetchableInstance(element: Element) {\n  const instance = prefetchable.get(element)\n  if (instance !== undefined) {\n    prefetchable.delete(element)\n    prefetchableAndVisible.delete(instance)\n    const prefetchTask = instance.prefetchTask\n    if (prefetchTask !== null) {\n      cancelPrefetchTask(prefetchTask)\n    }\n  }\n  if (observer !== null) {\n    observer.unobserve(element)\n  }\n}\n\nfunction handleIntersect(entries: Array<IntersectionObserverEntry>) {\n  for (const entry of entries) {\n    // Some extremely old browsers or polyfills don't reliably support\n    // isIntersecting so we check intersectionRatio instead. (Do we care? Not\n    // really. But whatever this is fine.)\n    const isVisible = entry.intersectionRatio > 0\n    onLinkVisibilityChanged(entry.target as HTMLAnchorElement, isVisible)\n  }\n}\n\nexport function onLinkVisibilityChanged(element: Element, isVisible: boolean) {\n  if (process.env.NODE_ENV !== 'production') {\n    // Prefetching on viewport is disabled in development for performance\n    // reasons, because it requires compiling the target page.\n    // TODO: Investigate re-enabling this.\n    return\n  }\n\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n\n  instance.isVisible = isVisible\n  if (isVisible) {\n    prefetchableAndVisible.add(instance)\n  } else {\n    prefetchableAndVisible.delete(instance)\n  }\n  rescheduleLinkPrefetch(instance, PrefetchPriority.Default)\n}\n\nexport function onNavigationIntent(\n  element: HTMLAnchorElement | SVGAElement,\n  unstable_upgradeToDynamicPrefetch: boolean\n) {\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n  // Prefetch the link on hover/touchstart.\n  if (instance !== undefined) {\n    if (\n      process.env.__NEXT_DYNAMIC_ON_HOVER &&\n      unstable_upgradeToDynamicPrefetch\n    ) {\n      // Switch to a full prefetch\n      instance.fetchStrategy = FetchStrategy.Full\n    }\n    rescheduleLinkPrefetch(instance, PrefetchPriority.Intent)\n  }\n}\n\nfunction rescheduleLinkPrefetch(\n  instance: PrefetchableInstance,\n  priority: PrefetchPriority.Default | PrefetchPriority.Intent\n) {\n  // Ensures that app-router-instance is not compiled in the server bundle\n  if (typeof window !== 'undefined') {\n    const existingPrefetchTask = instance.prefetchTask\n\n    if (!instance.isVisible) {\n      // Cancel any in-progress prefetch task. (If it already finished then this\n      // is a no-op.)\n      if (existingPrefetchTask !== null) {\n        cancelPrefetchTask(existingPrefetchTask)\n      }\n      // We don't need to reset the prefetchTask to null upon cancellation; an\n      // old task object can be rescheduled with reschedulePrefetchTask. This is a\n      // micro-optimization but also makes the code simpler (don't need to\n      // worry about whether an old task object is stale).\n      return\n    }\n\n    if (!process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n      // The old prefetch implementation does not have different priority levels.\n      // Just schedule a new prefetch task.\n      prefetchWithOldCacheImplementation(instance)\n      return\n    }\n\n    const { getCurrentAppRouterState } =\n      require('./app-router-instance') as typeof import('./app-router-instance')\n\n    const appRouterState = getCurrentAppRouterState()\n    if (appRouterState !== null) {\n      const treeAtTimeOfPrefetch = appRouterState.tree\n      if (existingPrefetchTask === null) {\n        // Initiate a prefetch task.\n        const nextUrl = appRouterState.nextUrl\n        const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n        instance.prefetchTask = scheduleSegmentPrefetchTask(\n          cacheKey,\n          treeAtTimeOfPrefetch,\n          instance.fetchStrategy,\n          priority,\n          null\n        )\n      } else {\n        // We already have an old task object that we can reschedule. This is\n        // effectively the same as canceling the old task and creating a new one.\n        reschedulePrefetchTask(\n          existingPrefetchTask,\n          treeAtTimeOfPrefetch,\n          instance.fetchStrategy,\n          priority\n        )\n      }\n    }\n  }\n}\n\nexport function pingVisibleLinks(\n  nextUrl: string | null,\n  tree: FlightRouterState\n) {\n  // For each currently visible link, cancel the existing prefetch task (if it\n  // exists) and schedule a new one. This is effectively the same as if all the\n  // visible links left and then re-entered the viewport.\n  //\n  // This is called when the Next-Url or the base tree changes, since those\n  // may affect the result of a prefetch task. It's also called after a\n  // cache invalidation.\n  for (const instance of prefetchableAndVisible) {\n    const task = instance.prefetchTask\n    if (task !== null && !isPrefetchTaskDirty(task, nextUrl, tree)) {\n      // The cache has not been invalidated, and none of the inputs have\n      // changed. Bail out.\n      continue\n    }\n    // Something changed. Cancel the existing prefetch task and schedule a\n    // new one.\n    if (task !== null) {\n      cancelPrefetchTask(task)\n    }\n    const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n    instance.prefetchTask = scheduleSegmentPrefetchTask(\n      cacheKey,\n      tree,\n      instance.fetchStrategy,\n      PrefetchPriority.Default,\n      null\n    )\n  }\n}\n\nfunction prefetchWithOldCacheImplementation(instance: PrefetchableInstance) {\n  // This is the path used when the Segment Cache is not enabled.\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  const doPrefetch = async () => {\n    // note that `appRouter.prefetch()` is currently sync,\n    // so we have to wrap this call in an async function to be able to catch() errors below.\n\n    let prefetchKind: PrefetchKind\n    switch (instance.fetchStrategy) {\n      case FetchStrategy.PPR: {\n        prefetchKind = PrefetchKind.AUTO\n        break\n      }\n      case FetchStrategy.Full: {\n        prefetchKind = PrefetchKind.FULL\n        break\n      }\n      case FetchStrategy.PPRRuntime: {\n        // We can only get here if Client Segment Cache is off, and in that case\n        // it shouldn't be possible for a link to request a runtime prefetch.\n        throw new InvariantError(\n          'FetchStrategy.PPRRuntime should never be used when `experimental.clientSegmentCache` is disabled'\n        )\n      }\n      default: {\n        instance.fetchStrategy satisfies never\n        // Unreachable, but otherwise typescript will consider the variable unassigned\n        prefetchKind = undefined!\n      }\n    }\n\n    return instance.router.prefetch(instance.prefetchHref, {\n      kind: prefetchKind,\n    })\n  }\n\n  // Prefetch the page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n"],"names":["IDLE_LINK_STATUS","PENDING_LINK_STATUS","mountFormInstance","mountLinkInstance","onLinkVisibilityChanged","onNavigationIntent","pingVisibleLinks","setLinkForCurrentNavigation","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","linkForMostRecentNavigation","pending","link","startTransition","setOptimisticLinkStatus","prefetchable","WeakMap","Map","prefetchableAndVisible","Set","observer","IntersectionObserver","handleIntersect","rootMargin","observeVisibility","element","instance","existingInstance","get","undefined","set","observe","coercePrefetchableUrl","href","window","createPrefetchURL","require","reportErrorFn","reportError","console","error","router","fetchStrategy","prefetchEnabled","prefetchURL","isVisible","prefetchTask","prefetchHref","delete","cancelPrefetchTask","unobserve","entries","entry","intersectionRatio","target","process","env","NODE_ENV","add","rescheduleLinkPrefetch","PrefetchPriority","Default","unstable_upgradeToDynamicPrefetch","__NEXT_DYNAMIC_ON_HOVER","FetchStrategy","Full","Intent","priority","existingPrefetchTask","__NEXT_CLIENT_SEGMENT_CACHE","prefetchWithOldCacheImplementation","getCurrentAppRouterState","appRouterState","treeAtTimeOfPrefetch","tree","nextUrl","cacheKey","createCacheKey","scheduleSegmentPrefetchTask","reschedulePrefetchTask","task","isPrefetchTaskDirty","doPrefetch","prefetchKind","PPR","PrefetchKind","AUTO","FULL","PPRRuntime","InvariantError","prefetch","kind","catch","err"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7854, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/path-has-prefix.ts"],"sourcesContent":["import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n"],"names":["pathHasPrefix","path","prefix","pathname","parsePath","startsWith"],"mappings":";;;+BASgBA,iBAAAA;;;eAAAA;;;2BATU;AASnB,SAASA,cAAcC,IAAY,EAAEC,MAAc;IACxD,IAAI,OAAOD,SAAS,UAAU;QAC5B,OAAO;IACT;IAEA,MAAM,EAAEE,QAAQ,EAAE,GAAGC,CAAAA,GAAAA,WAAAA,SAAS,EAACH;IAC/B,OAAOE,aAAaD,UAAUC,SAASE,UAAU,CAACH,SAAS;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7875, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/has-base-path.ts"],"sourcesContent":["import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n"],"names":["hasBasePath","basePath","process","env","__NEXT_ROUTER_BASEPATH","path","pathHasPrefix"],"mappings":";;;+BAIgBA,eAAAA;;;eAAAA;;;+BAJc;AAE9B,MAAMC,WAAYC,QAAQC,GAAG,CAACC,sBAAsB,MAAe;AAE5D,SAASJ,YAAYK,IAAY;IACtC,OAAOC,CAAAA,GAAAA,eAAAA,aAAa,EAACD,MAAMJ;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7900, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/router/utils/is-local-url.ts"],"sourcesContent":["import { isAbsoluteUrl, getLocationOrigin } from '../../utils'\nimport { hasBasePath } from '../../../../client/has-base-path'\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!isAbsoluteUrl(url)) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n"],"names":["isLocalURL","url","isAbsoluteUrl","locationOrigin","getLocationOrigin","resolved","URL","origin","hasBasePath","pathname","_"],"mappings":";;;+BAMgBA,cAAAA;;;eAAAA;;;uBANiC;6BACrB;AAKrB,SAASA,WAAWC,GAAW;IACpC,gEAAgE;IAChE,IAAI,CAACC,CAAAA,GAAAA,OAAAA,aAAa,EAACD,MAAM,OAAO;IAChC,IAAI;QACF,4DAA4D;QAC5D,MAAME,iBAAiBC,CAAAA,GAAAA,OAAAA,iBAAiB;QACxC,MAAMC,WAAW,IAAIC,IAAIL,KAAKE;QAC9B,OAAOE,SAASE,MAAM,KAAKJ,kBAAkBK,CAAAA,GAAAA,aAAAA,WAAW,EAACH,SAASI,QAAQ;IAC5E,EAAE,OAAOC,GAAG;QACV,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7927, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/utils/error-once.ts"],"sourcesContent":["let errorOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const errors = new Set<string>()\n  errorOnce = (msg: string) => {\n    if (!errors.has(msg)) {\n      console.error(msg)\n    }\n    errors.add(msg)\n  }\n}\n\nexport { errorOnce }\n"],"names":["errorOnce","_","process","env","NODE_ENV","errors","Set","msg","has","console","error","add"],"mappings":";;;+BAWSA,aAAAA;;;eAAAA;;;AAXT,IAAIA,YAAY,CAACC,KAAe;AAChC,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAc;IACzC,MAAMC,SAAS,IAAIC;IACnBN,YAAY,CAACO;QACX,IAAI,CAACF,OAAOG,GAAG,CAACD,MAAM;YACpBE,QAAQC,KAAK,CAACH;QAChB;QACAF,OAAOM,GAAG,CAACJ;IACb;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7950, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/app-dir/link.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport {\n  FetchStrategy,\n  type PrefetchTaskFetchStrategy,\n} from '../components/segment-cache'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref legacyBehavior>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `\"auto\"`, `null`, `undefined` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | 'auto' | null | 'unstable_forceStale'\n\n  /**\n   * (unstable) Switch to a full prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior.\n   *\n   * @deprecated This will be removed in a future version\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when type generation runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  if (typeof window !== 'undefined') {\n    const { nodeName } = e.currentTarget\n\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n    if (\n      (isAnchorNodeName && isModifiedEvent(e)) ||\n      e.currentTarget.hasAttribute('download')\n    ) {\n      // ignore click for browser’s default behavior\n      return\n    }\n\n    if (!isLocalURL(href)) {\n      if (replace) {\n        // browser default behavior does not replace the history state\n        // so we need to do it manually\n        e.preventDefault()\n        location.replace(href)\n      }\n\n      // ignore click for browser’s default behavior\n      return\n    }\n\n    e.preventDefault()\n\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    const { dispatchNavigateAction } =\n      require('../components/app-router-instance') as typeof import('../components/app-router-instance')\n\n    React.startTransition(() => {\n      dispatchNavigateAction(\n        as || href,\n        replace ? 'replace' : 'push',\n        scroll ?? true,\n        linkInstanceRef.current\n      )\n    })\n  }\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n\n  const fetchStrategy =\n    prefetchProp !== false\n      ? getFetchStrategyFromPrefetchProp(prefetchProp)\n      : // TODO: it makes no sense to assign a fetchStrategy when prefetching is disabled.\n        FetchStrategy.PPR\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'prefetch') {\n        if (\n          props[key] != null &&\n          valType !== 'boolean' &&\n          props[key] !== 'auto' &&\n          props[key] !== 'unstable_forceStale'\n        ) {\n          throw createPropError({\n            key,\n            expected: '`boolean | \"auto\" | \"unstable_forceStale\"`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if ((children as any)?.$$typeof === Symbol.for('react.lazy')) {\n      throw new Error(\n        `\\`<Link legacyBehavior>\\` received a direct child that is either a Server Component, or JSX that was loaded with React.lazy(). This is not supported. Either remove legacyBehavior, or make the direct child a Client Component that renders the Link's \\`<a>\\` tag.`\n      )\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          fetchStrategy,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, fetchStrategy, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n      if (e.defaultPrevented) {\n        return\n      }\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n\nfunction getFetchStrategyFromPrefetchProp(\n  prefetchProp: Exclude<LinkProps['prefetch'], undefined | false>\n): PrefetchTaskFetchStrategy {\n  if (\n    process.env.__NEXT_CACHE_COMPONENTS &&\n    process.env.__NEXT_CLIENT_SEGMENT_CACHE\n  ) {\n    // In the new implementation:\n    // - `prefetch={true}` is a runtime prefetch\n    //   (includes cached IO + params + cookies, with dynamic holes for uncached IO).\n    // - `unstable_forceStale` is a \"full\" prefetch\n    //   (forces inclusion of all dynamic data, i.e. the old behavior of `prefetch={true}`)\n    if (prefetchProp === true) {\n      return FetchStrategy.PPRRuntime\n    }\n    if (prefetchProp === 'unstable_forceStale') {\n      return FetchStrategy.Full\n    }\n\n    // `null` or `\"auto\"`: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport.\n    // This will also include invalid prop values that don't match the types specified here.\n    // (although those should've been filtered out by prop validation in dev)\n    prefetchProp satisfies null | 'auto'\n    // In `clientSegmentCache`, we default to PPR, and we'll discover whether or not the route supports it with the initial prefetch.\n    // If we're not using `clientSegmentCache`, this will be converted into a `PrefetchKind.AUTO`.\n    return FetchStrategy.PPR\n  } else {\n    return prefetchProp === null || prefetchProp === 'auto'\n      ? // In `clientSegmentCache`, we default to PPR, and we'll discover whether or not the route supports it with the initial prefetch.\n        // If we're not using `clientSegmentCache`, this will be converted into a `PrefetchKind.AUTO`.\n        FetchStrategy.PPR\n      : // In the old implementation without runtime prefetches, `prefetch={true}` forces all dynamic data to be prefetched.\n        // To preserve backwards-compatibility, anything other than `false`, `null`, or `\"auto\"` results in a full prefetch.\n        // (although invalid values should've been filtered out by prop validation in dev)\n        FetchStrategy.Full\n  }\n}\n"],"names":["LinkComponent","useLinkStatus","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","href","as","linkInstanceRef","replace","scroll","onNavigate","window","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","isLocalURL","preventDefault","location","isDefaultPrevented","dispatchNavigateAction","require","React","startTransition","current","formatStringOrUrl","urlObjOrString","formatUrl","props","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","children","useRef","hrefProp","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","ref","forwardedRef","unstable_dynamicOnHover","restProps","a","router","useContext","AppRouterContext","prefetchEnabled","fetchStrategy","getFetchStrategyFromPrefetchProp","FetchStrategy","PPR","process","env","NODE_ENV","createPropError","args","Error","key","expected","actual","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","locale","warnOnce","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","child","$$typeof","Symbol","for","console","warn","Children","only","err","type","childRef","observeLinkVisibilityOnMount","useCallback","element","mountLinkInstance","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","mergedRef","useMergedRef","childProps","defaultPrevented","upgradeToDynamicPrefetch","onNavigationIntent","__NEXT_LINK_NO_TOUCH_START","undefined","isAbsoluteUrl","addBasePath","link","errorOnce","cloneElement","LinkStatusContext","Provider","value","createContext","__NEXT_CACHE_COMPONENTS","__NEXT_CLIENT_SEGMENT_CACHE","PPRRuntime","Full"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8316, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n"],"names":["module","exports","require","vendored","HooksClientContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,WAAW,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/readonly-url-search-params.ts"],"sourcesContent":["/**\n * ReadonlyURLSearchParams implementation shared between client and server.\n * This file is intentionally not marked as 'use client' or 'use server'\n * so it can be imported by both environments.\n */\n\n/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\n/**\n * A read-only version of URLSearchParams that throws errors when mutation methods are called.\n * This ensures that the URLSearchParams returned by useSearchParams() cannot be mutated.\n */\nexport class ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n"],"names":["ReadonlyURLSearchParams","ReadonlyURLSearchParamsError","Error","constructor","URLSearchParams","append","delete","set","sort"],"mappings":"AAAA;;;;CAIC,GAED,cAAc;;;+BAaDA,2BAAAA;;;eAAAA;;;AAZb,MAAMC,qCAAqCC;IACzCC,aAAc;QACZ,KAAK,CACH;IAEJ;AACF;AAMO,MAAMH,gCAAgCI;IAC3C,wKAAwK,GACxKC,SAAS;QACP,MAAM,IAAIJ;IACZ;IACA,wKAAwK,GACxKK,SAAS;QACP,MAAM,IAAIL;IACZ;IACA,wKAAwK,GACxKM,MAAM;QACJ,MAAM,IAAIN;IACZ;IACA,wKAAwK,GACxKO,OAAO;QACL,MAAM,IAAIP;IACZ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8364, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n"],"names":["module","exports","require","vendored","ServerInsertedHtml"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,WAAW,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8369, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/unrecognized-action-error.ts"],"sourcesContent":["export class UnrecognizedActionError extends Error {\n  constructor(...args: ConstructorParameters<typeof Error>) {\n    super(...args)\n    this.name = 'UnrecognizedActionError'\n  }\n}\n\n/**\n * Check whether a server action call failed because the server action was not recognized by the server.\n * This can happen if the client and the server are not from the same deployment.\n *\n * Example usage:\n * ```ts\n * try {\n *   await myServerAction();\n * } catch (err) {\n *   if (unstable_isUnrecognizedActionError(err)) {\n *     // The client is from a different deployment than the server.\n *     // Reloading the page will fix this mismatch.\n *     window.alert(\"Please refresh the page and try again\");\n *     return;\n *   }\n * }\n * ```\n * */\nexport function unstable_isUnrecognizedActionError(\n  error: unknown\n): error is UnrecognizedActionError {\n  return !!(\n    error &&\n    typeof error === 'object' &&\n    error instanceof UnrecognizedActionError\n  )\n}\n"],"names":["UnrecognizedActionError","unstable_isUnrecognizedActionError","Error","constructor","args","name","error"],"mappings":";;;;;;;;;;;;;;IAAaA,uBAAuB,EAAA;eAAvBA;;IAyBGC,kCAAkC,EAAA;eAAlCA;;;AAzBT,MAAMD,gCAAgCE;IAC3CC,YAAY,GAAGC,IAAyC,CAAE;QACxD,KAAK,IAAIA;QACT,IAAI,CAACC,IAAI,GAAG;IACd;AACF;AAoBO,SAASJ,mCACdK,KAAc;IAEd,OAAO,CAAC,CACNA,CAAAA,SACA,OAAOA,UAAU,YACjBA,iBAAiBN,uBAAsB;AAE3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8410, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/redirect-status-code.ts"],"sourcesContent":["export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n"],"names":["RedirectStatusCode"],"mappings":";;;+BAAYA,sBAAAA;;;eAAAA;;;AAAL,IAAKA,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8436, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/redirect-error.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n"],"names":["REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","RedirectStatusCode"],"mappings":";;;;;;;;;;;;;;;IAEaA,mBAAmB,EAAA;eAAnBA;;IAEDC,YAAY,EAAA;eAAZA;;IAgBIC,eAAe,EAAA;eAAfA;;;oCApBmB;AAE5B,MAAMF,sBAAsB;AAE5B,IAAKC,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;WAAAA;;AAgBL,SAASC,gBAAgBC,KAAc;IAC5C,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IAEA,MAAMA,SAASD,MAAMC,MAAM,CAACC,KAAK,CAAC;IAClC,MAAM,CAACC,WAAWC,KAAK,GAAGH;IAC1B,MAAMI,cAAcJ,OAAOK,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;IAC7C,MAAMC,SAASP,OAAOQ,EAAE,CAAC,CAAC;IAE1B,MAAMC,aAAaC,OAAOH;IAE1B,OACEL,cAAcN,uBACbO,CAAAA,SAAS,aAAaA,SAAS,MAAK,KACrC,OAAOC,gBAAgB,YACvB,CAACO,MAAMF,eACPA,cAAcG,oBAAAA,kBAAkB;AAEpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8490, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/redirect.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n"],"names":["getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","type","statusCode","RedirectStatusCode","TemporaryRedirect","error","Error","REDIRECT_ERROR_CODE","digest","getStore","isAction","RedirectType","push","replace","PermanentRedirect","isRedirectError","split","slice","join","Number","at"],"mappings":";;;;;;;;;;;;;;;;;;IAegBA,gBAAgB,EAAA;eAAhBA;;IA6EAC,8BAA8B,EAAA;eAA9BA;;IARAC,wBAAwB,EAAA;eAAxBA;;IARAC,uBAAuB,EAAA;eAAvBA;;IAhBAC,iBAAiB,EAAA;eAAjBA;;IAvBAC,QAAQ,EAAA;eAARA;;;oCArCmB;+BAM5B;AAEP,MAAMC,qBACJ,OAAOC,WAAW,qBAEZC,QAAQ,2KACRF,kBAAkB,GACpBG;AAEC,SAAST,iBACdU,GAAW,EACXC,IAAkB,EAClBC,aAAiCC,oBAAAA,kBAAkB,CAACC,iBAAiB;IAErE,MAAMC,QAAQ,OAAA,cAA8B,CAA9B,IAAIC,MAAMC,eAAAA,mBAAmB,GAA7B,qBAAA;eAAA;oBAAA;sBAAA;IAA6B;IAC3CF,MAAMG,MAAM,GAAG,GAAGD,eAAAA,mBAAmB,CAAC,CAAC,EAAEN,KAAK,CAAC,EAAED,IAAI,CAAC,EAAEE,WAAW,CAAC,CAAC;IACrE,OAAOG;AACT;AAcO,SAASV,SACd,2BAA2B,GAC3BK,GAAW,EACXC,IAAmB;IAEnBA,SAASL,oBAAoBa,YAAYC,WACrCC,eAAAA,YAAY,CAACC,IAAI,GACjBD,eAAAA,YAAY,CAACE,OAAO;IAExB,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACC,iBAAiB;AACxE;AAaO,SAASV,kBACd,2BAA2B,GAC3BM,GAAW,EACXC,OAAqBU,eAAAA,YAAY,CAACE,OAAO;IAEzC,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACW,iBAAiB;AACxE;AAUO,SAASrB,wBAAwBY,KAAc;IACpD,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ,OAAO;IAEpC,wEAAwE;IACxE,kBAAkB;IAClB,OAAOA,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;AACnD;AAEO,SAAS1B,yBAAyBa,KAAoB;IAC3D,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOD,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE;AACtC;AAEO,SAASzB,+BAA+Bc,KAAoB;IACjE,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOa,OAAOd,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKI,EAAE,CAAC,CAAC;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8583, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts"],"sourcesContent":["export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n"],"names":["HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","error","digest","prefix","httpStatus","split","has","Number","status"],"mappings":";;;;;;;;;;;;;;;;;IAAaA,qBAAqB,EAAA;eAArBA;;IAQAC,8BAA8B,EAAA;eAA9BA;;IAuCGC,kCAAkC,EAAA;eAAlCA;;IAPAC,2BAA2B,EAAA;eAA3BA;;IAnBAC,yBAAyB,EAAA;eAAzBA;;;AArBT,MAAMJ,wBAAwB;IACnCK,WAAW;IACXC,WAAW;IACXC,cAAc;AAChB;AAEA,MAAMC,gBAAgB,IAAIC,IAAIC,OAAOC,MAAM,CAACX;AAErC,MAAMC,iCAAiC;AAavC,SAASG,0BACdQ,KAAc;IAEd,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IACA,MAAM,CAACC,QAAQC,WAAW,GAAGH,MAAMC,MAAM,CAACG,KAAK,CAAC;IAEhD,OACEF,WAAWb,kCACXO,cAAcS,GAAG,CAACC,OAAOH;AAE7B;AAEO,SAASZ,4BACdS,KAA8B;IAE9B,MAAMG,aAAaH,MAAMC,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;IAC7C,OAAOE,OAAOH;AAChB;AAEO,SAASb,mCACdiB,MAAc;IAEd,OAAQA;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE;IACJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8657, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/not-found.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n"],"names":["notFound","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","error","Error","digest"],"mappings":";;;+BAsBgBA,YAAAA;;;eAAAA;;;oCAnBT;AAEP;;;;;;;;;;;;;CAaC,GAED,MAAMC,SAAS,GAAGC,oBAAAA,8BAA8B,CAAC,IAAI,CAAC;AAE/C,SAASF;IACd,MAAMG,QAAQ,OAAA,cAAiB,CAAjB,IAAIC,MAAMH,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BE,MAAkCE,MAAM,GAAGJ;IAE7C,MAAME;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8701, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/forbidden.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["forbidden","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;+BAqBgBA,aAAAA;;;eAAAA;;;oCAlBT;AAEP,6BAA6B;AAC7B;;;;;;;;;;;CAWC,GAED,MAAMC,SAAS,GAAGC,oBAAAA,8BAA8B,CAAC,IAAI,CAAC;AAE/C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,CAAC,+GAA+G,CAAC,GAD7G,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8751, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/unauthorized.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["unauthorized","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;+BAsBgBA,gBAAAA;;;eAAAA;;;oCAnBT;AAEP,gCAAgC;AAChC;;;;;;;;;;;;CAYC,GAED,MAAMC,SAAS,GAAGC,oBAAAA,8BAA8B,CAAC,IAAI,CAAC;AAE/C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,CAAC,+GAA+G,CAAC,GAD7G,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8802, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/dynamic-rendering-utils.ts"],"sourcesContent":["import type { NonStaticRenderStage } from './app-render/staged-rendering'\nimport type { RequestStore } from './app-render/work-unit-async-storage.external'\n\nexport function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(\n  underlying: T,\n  requestStore: RequestStore,\n  stage: NonStaticRenderStage\n): Promise<T> {\n  if (requestStore.stagedRendering) {\n    // We resolve each stage in a timeout, so React DevTools will pick this up as IO.\n    return requestStore.stagedRendering.delayUntilStage(\n      stage,\n      undefined,\n      underlying\n    )\n  }\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n"],"names":["isHangingPromiseRejectionError","makeDevtoolsIOAwarePromise","makeHangingPromise","err","digest","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","Error","constructor","route","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","push","listeners","set","addEventListener","i","length","once","catch","ignoreReject","underlying","requestStore","stage","stagedRendering","delayUntilStage","undefined","resolve","setTimeout"],"mappings":";;;;;;;;;;;;;;;IAGgBA,8BAA8B,EAAA;eAA9BA;;IA2EAC,0BAA0B,EAAA;eAA1BA;;IAxCAC,kBAAkB,EAAA;eAAlBA;;;AAnCT,SAASF,+BACdG,GAAY;IAEZ,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAIC,MAAM,KAAKC;AACxB;AAEA,MAAMA,4BAA4B;AAElC,MAAMC,qCAAqCC;IAGzCC,YACkBC,KAAa,EACbC,UAAkB,CAClC;QACA,KAAK,CACH,CAAC,qBAAqB,EAAEA,WAAW,qGAAqG,EAAEA,WAAW,8KAA8K,EAAED,MAAM,EAAE,CAAC,GAAA,IAAA,CAJhUA,KAAAA,GAAAA,OAAAA,IAAAA,CACAC,UAAAA,GAAAA,YAAAA,IAAAA,CAJFN,MAAAA,GAASC;IASzB;AACF;AAGA,MAAMM,yBAAyB,IAAIC;AAS5B,SAASV,mBACdW,MAAmB,EACnBJ,KAAa,EACbC,UAAkB;IAElB,IAAIG,OAAOC,OAAO,EAAE;QAClB,OAAOC,QAAQC,MAAM,CAAC,IAAIV,6BAA6BG,OAAOC;IAChE,OAAO;QACL,MAAMO,iBAAiB,IAAIF,QAAW,CAACG,GAAGF;YACxC,MAAMG,iBAAiBH,OAAOI,IAAI,CAChC,MACA,IAAId,6BAA6BG,OAAOC;YAE1C,IAAIW,mBAAmBV,uBAAuBW,GAAG,CAACT;YAClD,IAAIQ,kBAAkB;gBACpBA,iBAAiBE,IAAI,CAACJ;YACxB,OAAO;gBACL,MAAMK,YAAY;oBAACL;iBAAe;gBAClCR,uBAAuBc,GAAG,CAACZ,QAAQW;gBACnCX,OAAOa,gBAAgB,CACrB,SACA;oBACE,IAAK,IAAIC,IAAI,GAAGA,IAAIH,UAAUI,MAAM,EAAED,IAAK;wBACzCH,SAAS,CAACG,EAAE;oBACd;gBACF,GACA;oBAAEE,MAAM;gBAAK;YAEjB;QACF;QACA,2GAA2G;QAC3G,6GAA6G;QAC7G,yFAAyF;QACzFZ,eAAea,KAAK,CAACC;QACrB,OAAOd;IACT;AACF;AAEA,SAASc,gBAAgB;AAElB,SAAS9B,2BACd+B,UAAa,EACbC,YAA0B,EAC1BC,KAA2B;IAE3B,IAAID,aAAaE,eAAe,EAAE;QAChC,iFAAiF;QACjF,OAAOF,aAAaE,eAAe,CAACC,eAAe,CACjDF,OACAG,WACAL;IAEJ;IACA,kEAAkE;IAClE,2EAA2E;IAC3E,OAAO,IAAIjB,QAAW,CAACuB;QACrB,sFAAsF;QACtFC,WAAW;YACTD,QAAQN;QACV,GAAG;IACL;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/lib/router-utils/is-postpone.ts"],"sourcesContent":["const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n"],"names":["isPostpone","REACT_POSTPONE_TYPE","Symbol","for","error","$$typeof"],"mappings":";;;+BAEgBA,cAAAA;;;eAAAA;;;AAFhB,MAAMC,sBAA8BC,OAAOC,GAAG,CAAC;AAExC,SAASH,WAAWI,KAAU;IACnC,OACE,OAAOA,UAAU,YACjBA,UAAU,QACVA,MAAMC,QAAQ,KAAKJ;AAEvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8906, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAC,CAAC,mCAAmC,EAAEA,QAAQ,GAAA,IAAA,CAD1BA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8944, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/is-next-router-error.ts"],"sourcesContent":["import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n"],"names":["isNextRouterError","error","isRedirectError","isHTTPAccessFallbackError"],"mappings":";;;+BAWgBA,qBAAAA;;;eAAAA;;;oCART;+BAC6C;AAO7C,SAASA,kBACdC,KAAc;IAEd,OAAOC,CAAAA,GAAAA,eAAAA,eAAe,EAACD,UAAUE,CAAAA,GAAAA,oBAAAA,yBAAyB,EAACF;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8969, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/hooks-server-context.ts"],"sourcesContent":["const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n"],"names":["DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","Error","constructor","description","digest","err"],"mappings":";;;;;;;;;;;;;;IAEaA,kBAAkB,EAAA;eAAlBA;;IAQGC,oBAAoB,EAAA;eAApBA;;;AAVhB,MAAMC,qBAAqB;AAEpB,MAAMF,2BAA2BG;IAGtCC,YAA4BC,WAAmB,CAAE;QAC/C,KAAK,CAAC,CAAC,sBAAsB,EAAEA,aAAa,GAAA,IAAA,CADlBA,WAAAA,GAAAA,aAAAA,IAAAA,CAF5BC,MAAAA,GAAoCJ;IAIpC;AACF;AAEO,SAASD,qBAAqBM,GAAY;IAC/C,IACE,OAAOA,QAAQ,YACfA,QAAQ,QACR,CAAE,CAAA,YAAYA,GAAE,KAChB,OAAOA,IAAID,MAAM,KAAK,UACtB;QACA,OAAO;IACT;IAEA,OAAOC,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9013, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/static-generation-bailout.ts"],"sourcesContent":["const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n"],"names":["StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","Error","code","error"],"mappings":";;;;;;;;;;;;;;IAEaA,qBAAqB,EAAA;eAArBA;;IAIGC,uBAAuB,EAAA;eAAvBA;;;AANhB,MAAMC,0BAA0B;AAEzB,MAAMF,8BAA8BG;;QAApC,KAAA,IAAA,OAAA,IAAA,CACWC,IAAAA,GAAOF;;AACzB;AAEO,SAASD,wBACdI,KAAc;IAEd,IAAI,OAAOA,UAAU,YAAYA,UAAU,QAAQ,CAAE,CAAA,UAAUA,KAAI,GAAI;QACrE,OAAO;IACT;IAEA,OAAOA,MAAMD,IAAI,KAAKF;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9057, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/lib/framework/boundary-constants.tsx"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__'\n"],"names":["METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME"],"mappings":";;;;;;;;;;;;;;;;IAAaA,sBAAsB,EAAA;eAAtBA;;IAEAC,oBAAoB,EAAA;eAApBA;;IACAC,yBAAyB,EAAA;eAAzBA;;IAFAC,sBAAsB,EAAA;eAAtBA;;;AADN,MAAMH,yBAAyB;AAC/B,MAAMG,yBAAyB;AAC/B,MAAMF,uBAAuB;AAC7B,MAAMC,4BAA4B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9094, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n"],"names":["atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","Promise","resolve","then","process","env","NEXT_RUNTIME","setTimeout","nextTick","setImmediate","r"],"mappings":";;;;;;;;;;;;;;;;IA4CgBA,cAAc,EAAA;eAAdA;;IAbHC,iBAAiB,EAAA;eAAjBA;;IAtBAC,kBAAkB,EAAA;eAAlBA;;IAgDGC,6BAA6B,EAAA;eAA7BA;;;AAhDT,MAAMD,qBAAqB,CAACE;IACjC,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrB,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;aAElC;YACLF,QAAQI,QAAQ,CAACR;QACnB;IACF;AACF;AAQO,MAAMH,oBAAoB,CAACG;IAChC,IAAII,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;SAElC;QACLG,aAAaT;IACf;AACF;AAOO,SAASJ;IACd,OAAO,IAAIK,QAAc,CAACC,UAAYL,kBAAkBK;AAC1D;AAWO,SAASH;IACd,IAAIK,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;SAElC;QACL,OAAO,IAAIL,QAAQ,CAACS,IAAMD,aAAaC;IACzC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9159, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/app-render/staged-rendering.ts"],"sourcesContent":["import { InvariantError } from '../../shared/lib/invariant-error'\nimport { createPromiseWithResolvers } from '../../shared/lib/promise-with-resolvers'\n\nexport enum RenderStage {\n  Static = 1,\n  Runtime = 2,\n  Dynamic = 3,\n}\n\nexport type NonStaticRenderStage = RenderStage.Runtime | RenderStage.Dynamic\n\nexport class StagedRenderingController {\n  currentStage: RenderStage = RenderStage.Static\n\n  private runtimeStagePromise = createPromiseWithResolvers<void>()\n  private dynamicStagePromise = createPromiseWithResolvers<void>()\n\n  constructor(private abortSignal: AbortSignal | null = null) {\n    if (abortSignal) {\n      abortSignal.addEventListener(\n        'abort',\n        () => {\n          const { reason } = abortSignal\n          if (this.currentStage < RenderStage.Runtime) {\n            this.runtimeStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n            this.runtimeStagePromise.reject(reason)\n          }\n          if (this.currentStage < RenderStage.Dynamic) {\n            this.dynamicStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n            this.dynamicStagePromise.reject(reason)\n          }\n        },\n        { once: true }\n      )\n    }\n  }\n\n  advanceStage(stage: NonStaticRenderStage) {\n    // If we're already at the target stage or beyond, do nothing.\n    // (this can happen e.g. if sync IO advanced us to the dynamic stage)\n    if (this.currentStage >= stage) {\n      return\n    }\n    this.currentStage = stage\n    // Note that we might be going directly from Static to Dynamic,\n    // so we need to resolve the runtime stage as well.\n    if (stage >= RenderStage.Runtime) {\n      this.runtimeStagePromise.resolve()\n    }\n    if (stage >= RenderStage.Dynamic) {\n      this.dynamicStagePromise.resolve()\n    }\n  }\n\n  private getStagePromise(stage: NonStaticRenderStage): Promise<void> {\n    switch (stage) {\n      case RenderStage.Runtime: {\n        return this.runtimeStagePromise.promise\n      }\n      case RenderStage.Dynamic: {\n        return this.dynamicStagePromise.promise\n      }\n      default: {\n        stage satisfies never\n        throw new InvariantError(`Invalid render stage: ${stage}`)\n      }\n    }\n  }\n\n  waitForStage(stage: NonStaticRenderStage) {\n    return this.getStagePromise(stage)\n  }\n\n  delayUntilStage<T>(\n    stage: NonStaticRenderStage,\n    displayName: string | undefined,\n    resolvedValue: T\n  ) {\n    const ioTriggerPromise = this.getStagePromise(stage)\n\n    const promise = makeDevtoolsIOPromiseFromIOTrigger(\n      ioTriggerPromise,\n      displayName,\n      resolvedValue\n    )\n\n    // Analogously to `makeHangingPromise`, we might reject this promise if the signal is invoked.\n    // (e.g. in the case where we don't want want the render to proceed to the dynamic stage and abort it).\n    // We shouldn't consider this an unhandled rejection, so we attach a noop catch handler here to suppress this warning.\n    if (this.abortSignal) {\n      promise.catch(ignoreReject)\n    }\n    return promise\n  }\n}\n\nfunction ignoreReject() {}\n\n// TODO(restart-on-cache-miss): the layering of `delayUntilStage`,\n// `makeDevtoolsIOPromiseFromIOTrigger` and and `makeDevtoolsIOAwarePromise`\n// is confusing, we should clean it up.\nfunction makeDevtoolsIOPromiseFromIOTrigger<T>(\n  ioTrigger: Promise<any>,\n  displayName: string | undefined,\n  resolvedValue: T\n): Promise<T> {\n  // If we create a `new Promise` and give it a displayName\n  // (with no userspace code above us in the stack)\n  // React Devtools will use it as the IO cause when determining \"suspended by\".\n  // In particular, it should shadow any inner IO that resolved/rejected the promise\n  // (in case of staged rendering, this will be the `setTimeout` that triggers the relevant stage)\n  const promise = new Promise<T>((resolve, reject) => {\n    ioTrigger.then(resolve.bind(null, resolvedValue), reject)\n  })\n  if (displayName !== undefined) {\n    // @ts-expect-error\n    promise.displayName = displayName\n  }\n  return promise\n}\n"],"names":["RenderStage","StagedRenderingController","constructor","abortSignal","currentStage","runtimeStagePromise","createPromiseWithResolvers","dynamicStagePromise","addEventListener","reason","promise","catch","ignoreReject","reject","once","advanceStage","stage","resolve","getStagePromise","InvariantError","waitForStage","delayUntilStage","displayName","resolvedValue","ioTriggerPromise","makeDevtoolsIOPromiseFromIOTrigger","ioTrigger","Promise","then","bind","undefined"],"mappings":";;;;;;;;;;;;;;IAGYA,WAAW,EAAA;eAAXA;;IAQCC,yBAAyB,EAAA;eAAzBA;;;gCAXkB;sCACY;AAEpC,IAAKD,cAAAA,WAAAA,GAAAA,SAAAA,WAAAA;;;;WAAAA;;AAQL,MAAMC;IAMXC,YAAoBC,cAAkC,IAAI,CAAE;aAAxCA,WAAAA,GAAAA;aALpBC,YAAAA,GAAAA;aAEQC,mBAAAA,GAAsBC,CAAAA,GAAAA,sBAAAA,0BAA0B;aAChDC,mBAAAA,GAAsBD,CAAAA,GAAAA,sBAAAA,0BAA0B;QAGtD,IAAIH,aAAa;YACfA,YAAYK,gBAAgB,CAC1B,SACA;gBACE,MAAM,EAAEC,MAAM,EAAE,GAAGN;gBACnB,IAAI,IAAI,CAACC,YAAY,GAAA,GAAwB;oBAC3C,IAAI,CAACC,mBAAmB,CAACK,OAAO,CAACC,KAAK,CAACC,cAAc,6BAA6B;;oBAClF,IAAI,CAACP,mBAAmB,CAACQ,MAAM,CAACJ;gBAClC;gBACA,IAAI,IAAI,CAACL,YAAY,GAAA,GAAwB;oBAC3C,IAAI,CAACG,mBAAmB,CAACG,OAAO,CAACC,KAAK,CAACC,cAAc,6BAA6B;;oBAClF,IAAI,CAACL,mBAAmB,CAACM,MAAM,CAACJ;gBAClC;YACF,GACA;gBAAEK,MAAM;YAAK;QAEjB;IACF;IAEAC,aAAaC,KAA2B,EAAE;QACxC,8DAA8D;QAC9D,qEAAqE;QACrE,IAAI,IAAI,CAACZ,YAAY,IAAIY,OAAO;YAC9B;QACF;QACA,IAAI,CAACZ,YAAY,GAAGY;QACpB,+DAA+D;QAC/D,mDAAmD;QACnD,IAAIA,SAAAA,GAA8B;YAChC,IAAI,CAACX,mBAAmB,CAACY,OAAO;QAClC;QACA,IAAID,SAAAA,GAA8B;YAChC,IAAI,CAACT,mBAAmB,CAACU,OAAO;QAClC;IACF;IAEQC,gBAAgBF,KAA2B,EAAiB;QAClE,OAAQA;YACN,KAAA;gBAA0B;oBACxB,OAAO,IAAI,CAACX,mBAAmB,CAACK,OAAO;gBACzC;YACA,KAAA;gBAA0B;oBACxB,OAAO,IAAI,CAACH,mBAAmB,CAACG,OAAO;gBACzC;YACA;gBAAS;oBACPM;oBACA,MAAM,OAAA,cAAoD,CAApD,IAAIG,gBAAAA,cAAc,CAAC,CAAC,sBAAsB,EAAEH,OAAO,GAAnD,qBAAA;+BAAA;oCAAA;sCAAA;oBAAmD;gBAC3D;QACF;IACF;IAEAI,aAAaJ,KAA2B,EAAE;QACxC,OAAO,IAAI,CAACE,eAAe,CAACF;IAC9B;IAEAK,gBACEL,KAA2B,EAC3BM,WAA+B,EAC/BC,aAAgB,EAChB;QACA,MAAMC,mBAAmB,IAAI,CAACN,eAAe,CAACF;QAE9C,MAAMN,UAAUe,mCACdD,kBACAF,aACAC;QAGF,8FAA8F;QAC9F,uGAAuG;QACvG,sHAAsH;QACtH,IAAI,IAAI,CAACpB,WAAW,EAAE;YACpBO,QAAQC,KAAK,CAACC;QAChB;QACA,OAAOF;IACT;AACF;AAEA,SAASE,gBAAgB;AAEzB,kEAAkE;AAClE,4EAA4E;AAC5E,uCAAuC;AACvC,SAASa,mCACPC,SAAuB,EACvBJ,WAA+B,EAC/BC,aAAgB;IAEhB,yDAAyD;IACzD,iDAAiD;IACjD,8EAA8E;IAC9E,kFAAkF;IAClF,gGAAgG;IAChG,MAAMb,UAAU,IAAIiB,QAAW,CAACV,SAASJ;QACvCa,UAAUE,IAAI,CAACX,QAAQY,IAAI,CAAC,MAAMN,gBAAgBV;IACpD;IACA,IAAIS,gBAAgBQ,WAAW;QAC7B,mBAAmB;QACnBpB,QAAQY,WAAW,GAAGA;IACxB;IACA,OAAOZ;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/server/app-render/dynamic-rendering.ts"],"sourcesContent":["/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  throwForMissingRequestStore,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { RenderStage } from './staged-rendering'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of the prerender stage\n  if (requestStore.stagedRendering) {\n    // TODO: error for sync IO in the runtime stage\n    // (which is not currently covered by the validation render in `spawnDynamicValidationInDev`)\n    requestStore.stagedRendering.advanceStage(RenderStage.Dynamic)\n  }\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nexport function useDynamicSearchParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (!workStore) {\n    // We assume pages router context and just return\n    return\n  }\n\n  if (!workUnitStore) {\n    throwForMissingRequestStore(expression)\n  }\n\n  switch (workUnitStore.type) {\n    case 'prerender-client': {\n      React.use(\n        makeHangingPromise(\n          workUnitStore.renderSignal,\n          workStore.route,\n          expression\n        )\n      )\n      break\n    }\n    case 'prerender-legacy':\n    case 'prerender-ppr': {\n      if (workStore.forceStatic) {\n        return\n      }\n      throw new BailoutToCSRError(expression)\n    }\n    case 'prerender':\n    case 'prerender-runtime':\n      throw new InvariantError(\n        `\\`${expression}\\` was called from a Server Component. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n      )\n    case 'cache':\n    case 'unstable-cache':\n    case 'private-cache':\n      throw new InvariantError(\n        `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n      )\n    case 'request':\n      return\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message =\n      `Route \"${workStore.route}\": Uncached data was accessed outside of ` +\n      '<Suspense>. This delays the entire page from rendering, resulting in a ' +\n      'slow user experience. Learn more: ' +\n      'https://nextjs.org/docs/messages/blocking-route'\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    logDisallowedDynamicError(\n      workStore,\n      serverDynamic.syncDynamicErrorWithStack\n    )\n    throw new StaticGenBailoutError()\n  }\n\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n"],"names":["Postpone","PreludeState","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createRenderInBrowserAbortSignal","delayUntilRuntimeStage","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","logDisallowedDynamicError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackSynchronousPlatformIOAccessInDev","useDynamicRouteParams","useDynamicSearchParams","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","trackingState","expression","store","workUnitStore","type","forceDynamic","forceStatic","dynamicShouldError","StaticGenBailoutError","route","dynamicTracking","revalidate","err","DynamicServerError","dynamicUsageDescription","dynamicUsageStack","stack","process","env","NODE_ENV","usedDynamic","prerenderStore","abortOnSynchronousDynamicDataAccess","reason","error","createPrerenderInterruptedError","controller","abort","push","Error","undefined","errorWithStack","requestStore","stagedRendering","advanceStage","RenderStage","Dynamic","prerenderSignal","signal","aborted","workUnitAsyncStorage","getStore","assertPostpone","createPostponeReason","message","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","digest","length","serverDynamic","clientDynamic","filter","access","map","split","slice","line","join","AbortController","BailoutToCSRError","cacheSignal","inputReady","then","runtimeStagePromise","getRuntimeStagePromise","scheduleOnNextTick","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","size","use","makeHangingPromise","renderSignal","InvariantError","throwForMissingRequestStore","hasSuspenseRegex","bodyAndImplicitTags","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","RegExp","ROOT_LAYOUT_BOUNDARY_NAME","hasMetadataRegex","METADATA_BOUNDARY_NAME","hasViewportRegex","VIEWPORT_BOUNDARY_NAME","hasOutletRegex","OUTLET_BOUNDARY_NAME","componentStack","dynamicValidation","test","createErrorWithComponentOrOwnerStack","ownerStack","captureOwnerStack","name","console","dev","hasReadableErrorStacks","prelude","i","result"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10003, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/unstable-rethrow.server.ts"],"sourcesContent":["import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport {\n  isDynamicPostpone,\n  isPrerenderInterruptedError,\n} from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error) ||\n    isPrerenderInterruptedError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n"],"names":["unstable_rethrow","error","isNextRouterError","isBailoutToCSRError","isDynamicServerError","isDynamicPostpone","isPostpone","isHangingPromiseRejectionError","isPrerenderInterruptedError","Error","cause"],"mappings":";;;+BAUgBA,oBAAAA;;;eAAAA;;;uCAV+B;4BACpB;8BACS;mCACF;kCAI3B;oCAC8B;AAE9B,SAASA,iBAAiBC,KAAc;IAC7C,IACEC,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACD,UAClBE,CAAAA,GAAAA,cAAAA,mBAAmB,EAACF,UACpBG,CAAAA,GAAAA,oBAAAA,oBAAoB,EAACH,UACrBI,CAAAA,GAAAA,kBAAAA,iBAAiB,EAACJ,UAClBK,CAAAA,GAAAA,YAAAA,UAAU,EAACL,UACXM,CAAAA,GAAAA,uBAAAA,8BAA8B,EAACN,UAC/BO,CAAAA,GAAAA,kBAAAA,2BAA2B,EAACP,QAC5B;QACA,MAAMA;IACR;IAEA,IAAIA,iBAAiBQ,SAAS,WAAWR,OAAO;QAC9CD,iBAAiBC,MAAMS,KAAK;IAC9B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10037, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/unstable-rethrow.ts"],"sourcesContent":["/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n"],"names":["unstable_rethrow","window","require"],"mappings":"AAAA;;;;;;CAMC;;;+BACYA,oBAAAA;;;eAAAA;;;AAAN,MAAMA,mBACX,OAAOC,WAAW,qBAEZC,QAAQ,wHACRF,gBAAgB,GAEhBE,QAAQ,8BACRF,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10064, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/navigation.react-server.ts"],"sourcesContent":["import { ReadonlyURLSearchParams } from './readonly-url-search-params'\n\nexport function unstable_isUnrecognizedActionError(): boolean {\n  throw new Error(\n    '`unstable_isUnrecognizedActionError` can only be used on the client.'\n  )\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n"],"names":["ReadonlyURLSearchParams","RedirectType","forbidden","notFound","permanentRedirect","redirect","unauthorized","unstable_isUnrecognizedActionError","unstable_rethrow","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAcSA,uBAAuB,EAAA;eAAvBA,yBAAAA,uBAAuB;;IALvBC,YAAY,EAAA;eAAZA,eAAAA,YAAY;;IAEZC,SAAS,EAAA;eAATA,WAAAA,SAAS;;IADTC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAFEC,iBAAiB,EAAA;eAAjBA,UAAAA,iBAAiB;;IAA3BC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAIRC,YAAY,EAAA;eAAZA,cAAAA,YAAY;;IAVLC,kCAAkC,EAAA;eAAlCA;;IAWPC,gBAAgB,EAAA;eAAhBA,iBAAAA,gBAAgB;;;yCAbe;0BAQI;+BACf;0BACJ;2BACC;8BACG;iCACI;AAX1B,SAASD;IACd,MAAM,OAAA,cAEL,CAFK,IAAIE,MACR,yEADI,qBAAA;eAAA;oBAAA;sBAAA;IAEN;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/src/client/components/navigation.ts"],"sourcesContent":["import type { Params } from '../../server/request/params'\n\nimport React, { useContext, useMemo, use } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n  NavigationPromisesContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport {\n  computeSelectedLayoutSegment,\n  getSelectedLayoutSegmentPath,\n} from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './readonly-url-search-params'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\nconst useDynamicSearchParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicSearchParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  useDynamicSearchParams?.('useSearchParams()')\n\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  // Instrument with Suspense DevTools (dev-only)\n  if (process.env.NODE_ENV !== 'production' && 'use' in React) {\n    const navigationPromises = use(NavigationPromisesContext)\n    if (navigationPromises) {\n      return use(navigationPromises.searchParams)\n    }\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  const pathname = useContext(PathnameContext) as string\n\n  // Instrument with Suspense DevTools (dev-only)\n  if (process.env.NODE_ENV !== 'production' && 'use' in React) {\n    const navigationPromises = use(NavigationPromisesContext)\n    if (navigationPromises) {\n      return use(navigationPromises.pathname)\n    }\n  }\n\n  return pathname\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  const params = useContext(PathParamsContext) as T\n\n  // Instrument with Suspense DevTools (dev-only)\n  if (process.env.NODE_ENV !== 'production' && 'use' in React) {\n    const navigationPromises = use(NavigationPromisesContext)\n    if (navigationPromises) {\n      return use(navigationPromises.params) as T\n    }\n  }\n\n  return params\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  // Instrument with Suspense DevTools (dev-only)\n  if (process.env.NODE_ENV !== 'production' && 'use' in React) {\n    const navigationPromises = use(NavigationPromisesContext)\n    if (navigationPromises) {\n      const promise =\n        navigationPromises.selectedLayoutSegmentsPromises?.get(parallelRouteKey)\n      if (promise) {\n        // We should always have a promise here, but if we don't, it's not worth erroring over.\n        // We just won't be able to instrument it, but can still provide the value.\n        return use(promise)\n      }\n    }\n  }\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n  const navigationPromises = useContext(NavigationPromisesContext)\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  // Instrument with Suspense DevTools (dev-only)\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    navigationPromises &&\n    'use' in React\n  ) {\n    const promise =\n      navigationPromises.selectedLayoutSegmentPromises?.get(parallelRouteKey)\n    if (promise) {\n      // We should always have a promise here, but if we don't, it's not worth erroring over.\n      // We just won't be able to instrument it, but can still provide the value.\n      return use(promise)\n    }\n  }\n\n  return computeSelectedLayoutSegment(selectedLayoutSegments, parallelRouteKey)\n}\n\nexport { unstable_isUnrecognizedActionError } from './unrecognized-action-error'\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n"],"names":["ReadonlyURLSearchParams","RedirectType","ServerInsertedHTMLContext","forbidden","notFound","permanentRedirect","redirect","unauthorized","unstable_isUnrecognizedActionError","unstable_rethrow","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","useServerInsertedHTML","useDynamicRouteParams","window","require","undefined","useDynamicSearchParams","searchParams","useContext","SearchParamsContext","readonlySearchParams","useMemo","process","env","NODE_ENV","React","navigationPromises","use","NavigationPromisesContext","pathname","PathnameContext","router","AppRouterContext","Error","params","PathParamsContext","parallelRouteKey","context","LayoutRouterContext","promise","selectedLayoutSegmentsPromises","get","getSelectedLayoutSegmentPath","parentTree","selectedLayoutSegments","selectedLayoutSegmentPromises","computeSelectedLayoutSegment"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10341, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/%40kurkle/color/dist/color.esm.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11017, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/chart.js/dist/chunks/helpers.dataset.js","sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.core.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.math.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.collection.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.extras.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.easing.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.color.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.animations.defaults.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.layouts.defaults.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.intl.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.ticks.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.scale.defaults.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.defaults.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.canvas.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.options.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.config.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.curve.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.dom.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.interpolation.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.rtl.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.segment.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/helpers/helpers.dataset.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = round1(chart.height * pixelRatio);\n  const deviceWidth = round1(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = round1(chart.height);\n  (chart as PrivateChart).width = round1(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n"],"names":["noop","uid","id","isNullOrUndef","value","undefined","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","_getKeyResolver","obj","resolveObjectKey","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","n","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","constructor","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled"],"mappings":"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","debugId":null}},
    {"offset": {"line": 14036, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/chart.js/dist/chart.js","sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.animator.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.animation.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.animations.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.datasetController.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.bar.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.bubble.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.doughnut.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.line.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.polarArea.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.pie.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.radar.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/controllers/controller.scatter.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.adapters.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.interaction.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.layouts.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/platform/platform.base.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/platform/platform.basic.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/platform/platform.dom.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/platform/index.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.element.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.scale.autoskip.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.scale.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.typedRegistry.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.registry.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.plugins.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.config.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/core/core.controller.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/elements/element.arc.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/elements/element.line.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/elements/element.point.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/elements/element.bar.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.colors.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.decimation.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.filler/index.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.legend.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.title.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.subtitle.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/plugins/plugin.tooltip.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.category.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.linearbase.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.linear.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.logarithmic.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.radialLinear.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.time.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/scales/scale.timeseries.js","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/chart.js/src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            const {labels: {pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  fontColor: color,\n                  hidden: !chart.getDataVisibility(i),\n                  lineDash: style.borderDash,\n                  lineDashOffset: style.borderDashOffset,\n                  lineJoin: style.borderJoinStyle,\n                  lineWidth: style.borderWidth,\n                  strokeStyle: style.borderColor,\n                  textAlign: textAlign,\n                  pointStyle: pointStyle,\n                  borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = undefined;\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    if (this._init === undefined) { // Do not trigger events before install\n      return;\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n      this._init = undefined; // Do not trigger events after uninstall\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of a segment -> need to add another point before this,\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of a segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  let fillColor = below;\n  if (below !== above) {\n    if (property === 'x') {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {line, target, color: above, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    } else if (property === 'y') {\n      clipHorizontal(ctx, target, area.left);\n      fill(ctx, {line, target, color: below, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipHorizontal(ctx, target, area.right);\n      fillColor = above;\n    }\n  }\n  fill(ctx, {line, target, color: fillColor, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction clipHorizontal(ctx, target, clipX) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(clipX, firstPoint.y);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(clipX, lastPoint.y);\n    }\n  }\n\n  ctx.lineTo(clipX, target.first().y);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","axisID","axisNumber","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","textAlign","useBorderRadius","borderRadius","map","style","text","fillStyle","backgroundColor","fontColor","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","dash","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getDatasetClipArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipSelf","outerAngleClip","_normalizeAngle","innerAngleClip","clipWidth","closePath","rect","clipArc","pixelMargin","angleMargin","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","selfJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWO,MAAMA,QAAAA,CAAAA;IACXC,WAAc,EAAA;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAA;QACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAAA,EAAAA,CAAAA;QACnB,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAA;QACrB,IAAI,CAACC,SAAS,GAAGC,SAAAA,CAAAA;IACnB,CAAA;IAKAC,OAAAA,CAAQC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;QAChC,MAAMC,SAAYH,GAAAA,KAAAA,CAAMI,SAAS,CAACF,IAAK,CAAA,CAAA;QACvC,MAAMG,QAAAA,GAAWL,MAAMM,QAAQ,CAAA;QAE/BH,SAAAA,CAAUI,OAAO,CAACC,CAAAA,EAAAA,GAAMA,EAAG,CAAA;gBACzBT,KAAAA;gBACAU,OAAAA,EAAST,MAAMS,OAAO;gBACtBJ,QAAAA;gBACAK,WAAAA,EAAaC,KAAKC,GAAG,CAACX,IAAOD,GAAAA,KAAAA,CAAMa,KAAK,EAAER,QAAAA,CAAAA;YAC5C,CAAA,CAAA,CAAA,CAAA;IACF,CAAA;IAKAS,QAAW,GAAA;QACT,IAAI,IAAI,CAACtB,QAAQ,EAAE;YACjB,OAAA;SACD;QACD,IAAI,CAACG,QAAQ,GAAG,IAAI,CAAA;QAEpB,IAAI,CAACH,QAAQ,GAAGuB,wKAAAA,CAAiBC,IAAI,CAACC,QAAQ,IAAM;YAClD,IAAI,CAACC,OAAO,EAAA,CAAA;YACZ,IAAI,CAAC1B,QAAQ,GAAG,IAAI,CAAA;YAEpB,IAAI,IAAI,CAACG,QAAQ,EAAE;gBACjB,IAAI,CAACmB,QAAQ,EAAA,CAAA;aACd;QACH,CAAA,CAAA,CAAA;IACF,CAAA;IAKAI,OAAQjB,CAAAA,IAAAA,GAAOkB,IAAKC,CAAAA,GAAG,EAAE,EAAE;QACzB,IAAIC,SAAY,GAAA,CAAA,CAAA;QAEhB,IAAI,CAAC5B,OAAO,CAACc,OAAO,CAAC,CAACP,OAAOD,KAAU,GAAA;YACrC,IAAI,CAACC,MAAMsB,OAAO,IAAI,CAACtB,KAAMuB,CAAAA,KAAK,CAACC,MAAM,EAAE;gBACzC,OAAA;aACD;YACD,MAAMD,KAAAA,GAAQvB,MAAMuB,KAAK,CAAA;YACzB,IAAIE,CAAAA,GAAIF,KAAMC,CAAAA,MAAM,GAAG,CAAA,CAAA;YACvB,IAAIE,OAAO,KAAK,CAAA;YAChB,IAAIC,IAAAA,CAAAA;YAEJ,MAAOF,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;gBAClBE,IAAOJ,GAAAA,KAAK,CAACE,CAAE,CAAA,CAAA;gBAEf,IAAIE,IAAAA,CAAKC,OAAO,EAAE;oBAChB,IAAID,IAAKE,CAAAA,MAAM,GAAG7B,KAAAA,CAAMM,QAAQ,EAAE;wBAGhCN,KAAMM,CAAAA,QAAQ,GAAGqB,IAAAA,CAAKE,MAAM,CAAA;qBAC7B;oBACDF,IAAAA,CAAKG,IAAI,CAAC7B,IAAAA,CAAAA,CAAAA;oBACVyB,IAAAA,GAAO,IAAI,CAAA;iBACN,MAAA;oBAGLH,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACA,KAAMC,CAAAA,MAAM,GAAG,CAAE,CAAA,CAAA;oBAClCD,KAAAA,CAAMQ,GAAG,EAAA,CAAA;iBACV;YACH,CAAA;YAEA,IAAIL,IAAM,EAAA;gBACR3B,KAAAA,CAAM2B,IAAI,EAAA,CAAA;gBACV,IAAI,CAAC5B,OAAO,CAACC,KAAAA,EAAOC,OAAOC,IAAM,EAAA,UAAA,CAAA,CAAA;aAClC;YAED,IAAI,CAACsB,KAAMC,CAAAA,MAAM,EAAE;gBACjBxB,KAAMsB,CAAAA,OAAO,GAAG,KAAK,CAAA;gBACrB,IAAI,CAACxB,OAAO,CAACC,KAAAA,EAAOC,OAAOC,IAAM,EAAA,UAAA,CAAA,CAAA;gBACjCD,KAAMS,CAAAA,OAAO,GAAG,KAAK,CAAA;aACtB;YAEDY,SAAAA,IAAaE,MAAMC,MAAM,CAAA;QAC3B,CAAA,CAAA,CAAA;QAEA,IAAI,CAAC5B,SAAS,GAAGK,IAAAA,CAAAA;QAEjB,IAAIoB,cAAc,CAAG,EAAA;YACnB,IAAI,CAAC1B,QAAQ,GAAG,KAAK,CAAA;SACtB;IACH,CAAA;IAKAqC,SAAAA,CAAUjC,KAAK,EAAE;QACf,MAAMkC,MAAAA,GAAS,IAAI,CAACxC,OAAO,CAAA;QAC3B,IAAIO,KAAAA,GAAQiC,MAAOC,CAAAA,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QACvB,IAAI,CAACC,KAAO,EAAA;YACVA,KAAQ,GAAA;gBACNsB,OAAAA,EAAS,KAAK;gBACdb,OAAAA,EAAS,IAAI;gBACbc,KAAAA,EAAO,EAAE;gBACTnB,SAAW,EAAA;oBACT+B,QAAAA,EAAU,EAAE;oBACZC,QAAAA,EAAU,EAAE;gBACd,CAAA;YACF,CAAA,CAAA;YACAH,MAAOI,CAAAA,GAAG,CAACtC,KAAOC,EAAAA,KAAAA,CAAAA,CAAAA;SACnB;QACD,OAAOA,KAAAA,CAAAA;IACT,CAAA;IAOAsC,OAAOvC,KAAK,EAAEwC,KAAK,EAAEC,EAAE,EAAE;QACvB,IAAI,CAACR,SAAS,CAACjC,KAAAA,CAAAA,CAAOK,SAAS,CAACmC,KAAAA,CAAM,CAACE,IAAI,CAACD,EAAAA,CAAAA,CAAAA;IAC9C,CAAA;IAOAE,GAAI3C,CAAAA,KAAK,EAAEwB,KAAK,EAAE;QAChB,IAAI,CAACA,KAAAA,IAAS,CAACA,KAAAA,CAAMC,MAAM,EAAE;YAC3B,OAAA;SACD;QACD,IAAI,CAACQ,SAAS,CAACjC,OAAOwB,KAAK,CAACkB,IAAI,CAAIlB,GAAAA,KAAAA,CAAAA,CAAAA;IACtC,CAAA;IAMAoB,GAAAA,CAAI5C,KAAK,EAAE;QACT,OAAO,IAAI,CAACiC,SAAS,CAACjC,OAAOwB,KAAK,CAACC,MAAM,GAAG,CAAA,CAAA;IAC9C,CAAA;IAMAX,KAAAA,CAAMd,KAAK,EAAE;QACX,MAAMC,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QAC/B,IAAI,CAACC,KAAO,EAAA;YACV,OAAA;SACD;QACDA,KAAMsB,CAAAA,OAAO,GAAG,IAAI,CAAA;QACpBtB,KAAMa,CAAAA,KAAK,GAAGM,IAAAA,CAAKC,GAAG,EAAA,CAAA;QACtBpB,KAAAA,CAAMM,QAAQ,GAAGN,KAAAA,CAAMuB,KAAK,CAACqB,MAAM,CAAC,CAACC,GAAKC,EAAAA,GAAAA,GAAQnC,KAAKoC,GAAG,CAACF,GAAKC,EAAAA,GAAAA,CAAIE,SAAS,CAAG,EAAA,CAAA,CAAA,CAAA;QAChF,IAAI,CAAClC,QAAQ,EAAA,CAAA;IACf,CAAA;IAEAQ,OAAAA,CAAQvB,KAAK,EAAE;QACb,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;YAClB,OAAO,KAAK,CAAA;SACb;QACD,MAAMK,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QAC/B,IAAI,CAACC,KAAS,IAAA,CAACA,KAAMsB,CAAAA,OAAO,IAAI,CAACtB,KAAMuB,CAAAA,KAAK,CAACC,MAAM,EAAE;YACnD,OAAO,KAAK,CAAA;SACb;QACD,OAAO,IAAI,CAAA;IACb,CAAA;IAMAyB,IAAAA,CAAKlD,KAAK,EAAE;QACV,MAAMC,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QAC/B,IAAI,CAACC,KAAS,IAAA,CAACA,MAAMuB,KAAK,CAACC,MAAM,EAAE;YACjC,OAAA;SACD;QACD,MAAMD,KAAAA,GAAQvB,MAAMuB,KAAK,CAAA;QACzB,IAAIE,CAAAA,GAAIF,KAAMC,CAAAA,MAAM,GAAG,CAAA,CAAA;QAEvB,MAAOC,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;YAClBF,KAAK,CAACE,CAAE,CAAA,CAACyB,MAAM,EAAA,CAAA;QACjB,CAAA;QACAlD,KAAMuB,CAAAA,KAAK,GAAG,EAAE,CAAA;QAChB,IAAI,CAACzB,OAAO,CAACC,OAAOC,KAAOmB,EAAAA,IAAAA,CAAKC,GAAG,EAAI,EAAA,UAAA,CAAA,CAAA;IACzC,CAAA;IAMA+B,MAAAA,CAAOpD,KAAK,EAAE;QACZ,OAAO,IAAI,CAACN,OAAO,CAAC2D,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;IAC7B,CAAA;AACF,CAAC;AAGD,IAAA,WAAe,aAAA,GAAgB,IAAIT,QAAW,EAAA;ACjN9C,MAAM+D,WAAc,GAAA,aAAA,CAAA;AACpB,MAAMC,aAAgB,GAAA;IACpBC,OAAAA,CAAAA,CAAQC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;QACxB,OAAOA,MAAAA,GAAS,GAAMD,GAAAA,EAAAA,GAAKD,IAAI,CAAA;IACjC,CAAA;IAMAG,OAAMH,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;QACtB,MAAME,EAAAA,OAAKC,wKAAAA,EAAaL,IAAQH,IAAAA,WAAAA,CAAAA,CAAAA;QAChC,MAAMS,EAAKF,GAAAA,EAAAA,CAAGG,KAAK,QAAIF,wKAAAA,EAAaJ,EAAMJ,IAAAA,WAAAA,CAAAA,CAAAA;QAC1C,OAAOS,EAAAA,IAAMA,EAAGC,CAAAA,KAAK,GACjBD,EAAAA,CAAGE,GAAG,CAACJ,EAAIF,EAAAA,MAAAA,CAAAA,CAAQO,SAAS,EAAA,GAC5BR,EAAE,CAAA;IACR,CAAA;IACAS,MAAAA,CAAAA,CAAOV,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;QACvB,OAAOF,IAAO,GAACC,CAAAA,EAAAA,GAAKD,IAAG,IAAKE,MAAAA,CAAAA;IAC9B,CAAA;AACF,CAAA,CAAA;AAEe,MAAMS,SAAAA,CAAAA;IACnB5E,WAAAA,CAAY6E,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEb,EAAE,CAAE;QACjC,MAAMc,YAAAA,GAAeF,MAAM,CAACC,IAAK,CAAA,CAAA;QAEjCb,EAAAA,OAAKe,wKAAQ,EAAA;YAACJ,GAAAA,CAAIX,EAAE;YAAEA,EAAAA;YAAIc,YAAAA;YAAcH,GAAAA,CAAIZ,IAAI;SAAC,CAAA,CAAA;QACjD,MAAMA,WAAOgB,wKAAQ,EAAA;YAACJ,GAAAA,CAAIZ,IAAI;YAAEe,YAAAA;YAAcd,EAAAA;SAAG,CAAA,CAAA;QAEjD,IAAI,CAAC7B,OAAO,GAAG,IAAI,CAAA;QACnB,IAAI,CAAC6C,GAAG,GAAGL,GAAAA,CAAI5D,EAAE,IAAI8C,aAAa,CAACc,GAAIlE,CAAAA,IAAI,IAAI,OAAOsD,IAAK,CAAA,CAAA;QAC3D,IAAI,CAACkB,OAAO,GAAGC,wKAAO,CAACP,IAAIQ,MAAM,CAAC,IAAID,wKAAAA,CAAQE,MAAM,CAAA;QACpD,IAAI,CAACC,MAAM,GAAGnE,IAAAA,CAAKoE,KAAK,CAAC5D,IAAKC,CAAAA,GAAG,EAAMgD,GAAAA,CAAAA,GAAIY,CAAAA,KAAK,IAAI,CAAA,CAAA,CAAA,CAAA;QACpD,IAAI,CAAChC,SAAS,GAAG,IAAI,CAACnB,MAAM,GAAGlB,IAAKoE,CAAAA,KAAK,CAACX,GAAAA,CAAI9D,QAAQ,CAAA,CAAA;QACtD,IAAI,CAAC2E,KAAK,GAAG,CAAC,CAACb,IAAIc,IAAI,CAAA;QACvB,IAAI,CAACC,OAAO,GAAGd,MAAAA,CAAAA;QACf,IAAI,CAACe,KAAK,GAAGd,IAAAA,CAAAA;QACb,IAAI,CAACe,KAAK,GAAG7B,IAAAA,CAAAA;QACb,IAAI,CAAC8B,GAAG,GAAG7B,EAAAA,CAAAA;QACX,IAAI,CAAC8B,SAAS,GAAG1F,SAAAA,CAAAA;IACnB,CAAA;IAEA2F,MAAS,GAAA;QACP,OAAO,IAAI,CAAC5D,OAAO,CAAA;IACrB,CAAA;IAEA6D,MAAAA,CAAOrB,GAAG,EAAEX,EAAE,EAAExD,IAAI,EAAE;QACpB,IAAI,IAAI,CAAC2B,OAAO,EAAE;YAChB,IAAI,CAAC9B,OAAO,CAAC,KAAK,CAAA,CAAA;YAElB,MAAMyE,YAAAA,GAAe,IAAI,CAACY,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,CAAA;YAC7C,MAAMM,OAAUzF,GAAAA,IAAAA,GAAO,IAAI,CAAC6E,MAAM,CAAA;YAClC,MAAMa,MAAS,GAAA,IAAI,CAAC3C,SAAS,GAAG0C,OAAAA,CAAAA;YAChC,IAAI,CAACZ,MAAM,GAAG7E,IAAAA,CAAAA;YACd,IAAI,CAAC+C,SAAS,GAAGrC,IAAKoE,CAAAA,KAAK,CAACpE,IAAAA,CAAKoC,GAAG,CAAC4C,MAAQvB,EAAAA,GAAAA,CAAI9D,QAAQ,CAAA,CAAA,CAAA;YACzD,IAAI,CAACuB,MAAM,IAAI6D,OAAAA,CAAAA;YACf,IAAI,CAACT,KAAK,GAAG,CAAC,CAACb,IAAIc,IAAI,CAAA;YACvB,IAAI,CAACI,GAAG,OAAGd,wKAAQ,EAAA;gBAACJ,GAAAA,CAAIX,EAAE;gBAAEA,EAAAA;gBAAIc,YAAAA;gBAAcH,GAAAA,CAAIZ,IAAI;aAAC,CAAA,CAAA;YACvD,IAAI,CAAC6B,KAAK,OAAGb,wKAAQ,EAAA;gBAACJ,GAAAA,CAAIZ,IAAI;gBAAEe,YAAAA;gBAAcd,EAAAA;aAAG,CAAA,CAAA;SAClD;IACH,CAAA;IAEAP,MAAS,GAAA;QACP,IAAI,IAAI,CAACtB,OAAO,EAAE;YAEhB,IAAI,CAACE,IAAI,CAACX,IAAAA,CAAKC,GAAG,EAAA,CAAA,CAAA;YAClB,IAAI,CAACQ,OAAO,GAAG,KAAK,CAAA;YACpB,IAAI,CAAC9B,OAAO,CAAC,KAAK,CAAA,CAAA;SACnB;IACH,CAAA;IAEAgC,IAAAA,CAAK7B,IAAI,EAAE;QACT,MAAMyF,OAAUzF,GAAAA,IAAAA,GAAO,IAAI,CAAC6E,MAAM,CAAA;QAClC,MAAMxE,QAAAA,GAAW,IAAI,CAAC0C,SAAS,CAAA;QAC/B,MAAMsB,IAAAA,GAAO,IAAI,CAACc,KAAK,CAAA;QACvB,MAAM5B,IAAAA,GAAO,IAAI,CAAC6B,KAAK,CAAA;QACvB,MAAMH,IAAAA,GAAO,IAAI,CAACD,KAAK,CAAA;QACvB,MAAMxB,EAAAA,GAAK,IAAI,CAAC6B,GAAG,CAAA;QACnB,IAAI5B,MAAAA,CAAAA;QAEJ,IAAI,CAAC9B,OAAO,GAAG4B,IAAAA,KAASC,MAAAA,CAAOyB,IAAAA,IAASQ,UAAUpF,QAAQ,CAAA,CAAA;QAE1D,IAAI,CAAC,IAAI,CAACsB,OAAO,EAAE;YACjB,IAAI,CAACuD,OAAO,CAACb,IAAAA,CAAK,GAAGb,EAAAA,CAAAA;YACrB,IAAI,CAAC3D,OAAO,CAAC,IAAI,CAAA,CAAA;YACjB,OAAA;SACD;QAED,IAAI4F,UAAU,CAAG,EAAA;YACf,IAAI,CAACP,OAAO,CAACb,IAAAA,CAAK,GAAGd,IAAAA,CAAAA;YACrB,OAAA;SACD;QAEDE,MAAS,GAACgC,UAAUpF,QAAY,GAAA,CAAA,CAAA;QAChCoD,MAAAA,GAASwB,IAAQxB,IAAAA,MAAAA,GAAS,CAAI,GAAA,CAAA,GAAIA,SAASA,MAAM,CAAA;QACjDA,MAAS,GAAA,IAAI,CAACgB,OAAO,CAAC/D,IAAAA,CAAKC,GAAG,CAAC,CAAGD,EAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAGW,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA;QAE9C,IAAI,CAACyB,OAAO,CAACb,IAAK,CAAA,GAAG,IAAI,CAACG,GAAG,CAACjB,IAAAA,EAAMC,EAAIC,EAAAA,MAAAA,CAAAA,CAAAA;IAC1C,CAAA;IAEAkC,IAAO,GAAA;QACL,MAAMC,QAAAA,GAAW,IAAI,CAACN,SAAS,IAAA,CAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAD,CAAA;QACtD,OAAO,IAAIO,OAAAA,CAAQ,CAACC,GAAAA,EAAKC,GAAQ,GAAA;YAC/BH,QAAAA,CAASpD,IAAI,CAAC;gBAACsD,GAAAA;gBAAKC,GAAAA;YAAG,CAAA,CAAA,CAAA;QACzB,CAAA,CAAA,CAAA;IACF,CAAA;IAEAlG,OAAAA,CAAQmG,QAAQ,EAAE;QAChB,MAAMC,MAAAA,GAASD,QAAW,GAAA,KAAA,GAAQ,KAAK,CAAA;QACvC,MAAMJ,QAAW,GAAA,IAAI,CAACN,SAAS,IAAI,EAAE,CAAA;QACrC,IAAK,IAAI9D,CAAI,GAAA,CAAA,EAAGA,IAAIoE,QAASrE,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;YACxCoE,QAAQ,CAACpE,CAAE,CAAA,CAACyE,MAAO,CAAA,EAAA,CAAA;QACrB,CAAA;IACF,CAAA;AACF;ACjHe,MAAMC,UAAAA,CAAAA;IACnB5G,WAAYQ,CAAAA,KAAK,EAAEqG,MAAM,CAAE;QACzB,IAAI,CAACC,MAAM,GAAGtG,KAAAA,CAAAA;QACd,IAAI,CAACuG,WAAW,GAAG,IAAI5G,GAAAA,EAAAA,CAAAA;QACvB,IAAI,CAAC6G,SAAS,CAACH,MAAAA,CAAAA,CAAAA;IACjB,CAAA;IAEAG,SAAAA,CAAUH,MAAM,EAAE;QAChB,IAAI,KAACI,wKAAAA,EAASJ,MAAS,CAAA,EAAA;YACrB,OAAA;SACD;QAED,MAAMK,gBAAmBC,GAAAA,MAAAA,CAAOC,IAAI,CAACC,wKAAAA,CAASC,SAAS,CAAA,CAAA;QACvD,MAAMC,aAAAA,GAAgB,IAAI,CAACR,WAAW,CAAA;QAEtCI,MAAAA,CAAOK,mBAAmB,CAACX,MAAAA,CAAAA,CAAQ7F,OAAO,CAACyG,CAAAA,GAAO,GAAA;YAChD,MAAM5C,GAAAA,GAAMgC,MAAM,CAACY,GAAI,CAAA,CAAA;YACvB,IAAI,KAACR,wKAAAA,EAASpC,GAAM,CAAA,EAAA;gBAClB,OAAA;aACD;YACD,MAAM6B,WAAW,CAAA,CAAC,CAAA;YAClB,KAAK,MAAMgB,UAAUR,gBAAkB,CAAA;gBACrCR,QAAQ,CAACgB,MAAAA,CAAO,GAAG7C,GAAG,CAAC6C,MAAO,CAAA,CAAA;YAChC,CAAA;YAECC,KAAAA,wKAAAA,EAAQ9C,GAAI+C,CAAAA,UAAU,CAAK/C,IAAAA,GAAAA,CAAI+C,UAAU,IAAI;gBAACH,GAAAA;aAAG,EAAGzG,OAAO,CAAC,CAAC+D,IAAS,GAAA;gBACrE,IAAIA,SAAS0C,GAAO,IAAA,CAACF,aAAcnE,CAAAA,GAAG,CAAC2B,IAAO,CAAA,EAAA;oBAC5CwC,aAAczE,CAAAA,GAAG,CAACiC,IAAM2B,EAAAA,QAAAA,CAAAA,CAAAA;iBACzB;YACH,CAAA,CAAA,CAAA;QACF,CAAA,CAAA,CAAA;IACF,CAAA;IAMAmB,eAAgB/C,CAAAA,MAAM,EAAEgD,MAAM,EAAE;QAC9B,MAAMC,UAAAA,GAAaD,OAAOE,OAAO,CAAA;QACjC,MAAMA,OAAAA,GAAUC,qBAAqBnD,MAAQiD,EAAAA,UAAAA,CAAAA,CAAAA;QAC7C,IAAI,CAACC,OAAS,EAAA;YACZ,OAAO,EAAE,CAAA;SACV;QAED,MAAME,UAAa,GAAA,IAAI,CAACC,iBAAiB,CAACH,OAASD,EAAAA,UAAAA,CAAAA,CAAAA;QACnD,IAAIA,UAAAA,CAAWK,OAAO,EAAE;YAItBC,QAASvD,CAAAA,MAAAA,CAAOkD,OAAO,CAACM,WAAW,EAAEP,UAAYQ,CAAAA,CAAAA,IAAI,CAAC,IAAM;gBAC1DzD,MAAAA,CAAOkD,OAAO,GAAGD,UAAAA,CAAAA;YACnB,CAAA,EAAG,IAAM,CAET,CAAA,CAAA,CAAA;SACD;QAED,OAAOG,UAAAA,CAAAA;IACT,CAAA;IAKAC,iBAAkBrD,CAAAA,MAAM,EAAEgD,MAAM,EAAE;QAChC,MAAMP,aAAAA,GAAgB,IAAI,CAACR,WAAW,CAAA;QACtC,MAAMmB,aAAa,EAAE,CAAA;QACrB,MAAMnG,OAAAA,GAAU+C,OAAOwD,WAAW,IAAA,CAAKxD,MAAOwD,CAAAA,WAAW,GAAG,CAAA,CAAC,CAAA,CAAA;QAC7D,MAAME,KAAAA,GAAQrB,MAAOC,CAAAA,IAAI,CAACU,MAAAA,CAAAA,CAAAA;QAC1B,MAAMpH,IAAAA,GAAOkB,KAAKC,GAAG,EAAA,CAAA;QACrB,IAAIK,CAAAA,CAAAA;QAEJ,IAAKA,CAAAA,GAAIsG,MAAMvG,MAAM,GAAG,GAAGC,CAAK,IAAA,CAAA,EAAG,EAAEA,CAAG,CAAA;YACtC,MAAM6C,IAAAA,GAAOyD,KAAK,CAACtG,CAAE,CAAA,CAAA;YACrB,IAAI6C,IAAK0D,CAAAA,MAAM,CAAC,CAAA,CAAA,KAAO,GAAK,EAAA;gBAC1B,SAAS;aACV;YAED,IAAI1D,SAAS,SAAW,EAAA;gBACtBmD,UAAAA,CAAWhF,IAAI,CAAI,GAAA,IAAI,CAAC2E,eAAe,CAAC/C,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;gBAChD,SAAS;aACV;YACD,MAAMY,KAAAA,GAAQZ,MAAM,CAAC/C,IAAK,CAAA,CAAA;YAC1B,IAAIuC,SAAAA,GAAYvF,OAAO,CAACgD,IAAK,CAAA,CAAA;YAC7B,MAAMF,GAAAA,GAAM0C,aAAc5E,CAAAA,GAAG,CAACoC,IAAAA,CAAAA,CAAAA;YAE9B,IAAIuC,SAAW,EAAA;gBACb,IAAIzC,GAAAA,IAAOyC,SAAUrB,CAAAA,MAAM,EAAI,EAAA;oBAE7BqB,SAAUpB,CAAAA,MAAM,CAACrB,GAAAA,EAAK6D,KAAOhI,EAAAA,IAAAA,CAAAA,CAAAA;oBAC7B,SAAS;iBACJ,MAAA;oBACL4G,SAAAA,CAAU3D,MAAM,EAAA,CAAA;iBACjB;aACF;YACD,IAAI,CAACkB,GAAAA,IAAO,CAACA,GAAAA,CAAI9D,QAAQ,EAAE;gBAEzB+D,MAAM,CAACC,KAAK,GAAG2D,KAAAA,CAAAA;gBACf,SAAS;aACV;YAED3G,OAAO,CAACgD,KAAK,GAAGuC,SAAAA,GAAY,IAAI1C,SAAUC,CAAAA,GAAAA,EAAKC,QAAQC,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;YAC7DR,UAAAA,CAAWhF,IAAI,CAACoE,SAAAA,CAAAA,CAAAA;QAClB,CAAA;QACA,OAAOY,UAAAA,CAAAA;IACT,CAAA;IASAhC,MAAOpB,CAAAA,MAAM,EAAEgD,MAAM,EAAE;QACrB,IAAI,IAAI,CAACf,WAAW,CAAC4B,IAAI,KAAK,CAAG,EAAA;YAE/BxB,MAAOyB,CAAAA,MAAM,CAAC9D,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA;YACtB,OAAA;SACD;QAED,MAAMI,UAAa,GAAA,IAAI,CAACC,iBAAiB,CAACrD,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA;QAElD,IAAII,UAAAA,CAAWjG,MAAM,EAAE;YACrB4G,QAAAA,CAAS1F,GAAG,CAAC,IAAI,CAAC2D,MAAM,EAAEoB,UAAAA,CAAAA,CAAAA;YAC1B,OAAO,IAAI,CAAA;SACZ;IACH,CAAA;AACF,CAAC;AAED,SAASG,QAASH,CAAAA,UAAU,EAAEN,UAAU,EAAE;IACxC,MAAM7F,UAAU,EAAE,CAAA;IAClB,MAAMqF,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACQ,UAAAA,CAAAA,CAAAA;IACzB,IAAK,IAAI1F,CAAI,GAAA,CAAA,EAAGA,IAAIkF,IAAKnF,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACpC,MAAM4G,OAAOZ,UAAU,CAACd,IAAI,CAAClF,EAAE,CAAC,CAAA;QAChC,IAAI4G,IAAAA,IAAQA,IAAK7C,CAAAA,MAAM,EAAI,EAAA;YACzBlE,OAAQmB,CAAAA,IAAI,CAAC4F,IAAAA,CAAKzC,IAAI,EAAA,CAAA,CAAA;SACvB;IACH,CAAA;IAEA,OAAOE,OAAAA,CAAQwC,GAAG,CAAChH,OAAAA,CAAAA,CAAAA;AACrB,CAAA;AAEA,SAASkG,oBAAqBnD,CAAAA,MAAM,EAAEiD,UAAU,EAAE;IAChD,IAAI,CAACA,UAAY,EAAA;QACf,OAAA;KACD;IACD,IAAIC,OAAAA,GAAUlD,OAAOkD,OAAO,CAAA;IAC5B,IAAI,CAACA,OAAS,EAAA;QACZlD,MAAAA,CAAOkD,OAAO,GAAGD,UAAAA,CAAAA;QACjB,OAAA;KACD;IACD,IAAIC,OAAAA,CAAQI,OAAO,EAAE;QAGnBtD,MAAOkD,CAAAA,OAAO,GAAGA,OAAUb,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,CAAA,GAAIZ,OAAS,EAAA;YAACI,OAAAA,EAAS,KAAK;YAAEE,WAAAA,EAAa,CAAA,CAAC;QAAC,CAAA,CAAA,CAAA;KACvF;IACD,OAAON,OAAAA,CAAAA;AACT;ACtJA,SAASgB,SAAAA,CAAUC,KAAK,EAAEC,eAAe,EAAE;IACzC,MAAMC,IAAOF,GAAAA,KAAAA,IAASA,KAAMjB,CAAAA,OAAO,IAAI,CAAA,CAAC,CAAA;IACxC,MAAMoB,OAAAA,GAAUD,KAAKC,OAAO,CAAA;IAC5B,MAAM/H,MAAM8H,IAAK9H,CAAAA,GAAG,KAAKf,SAAAA,GAAY4I,kBAAkB,CAAC,CAAA;IACxD,MAAM1F,MAAM2F,IAAK3F,CAAAA,GAAG,KAAKlD,SAAAA,GAAY4I,kBAAkB,CAAC,CAAA;IACxD,OAAO;QACL5H,KAAO8H,EAAAA,OAAAA,GAAU5F,MAAMnC,GAAG;QAC1BgI,GAAKD,EAAAA,OAAAA,GAAU/H,MAAMmC,GAAG;IAC1B,CAAA,CAAA;AACF,CAAA;AAEA,SAAS8F,YAAYC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;IACpD,IAAIA,eAAAA,KAAoB,KAAK,EAAE;QAC7B,OAAO,KAAK,CAAA;KACb;IACD,MAAMO,CAAAA,GAAIT,UAAUO,MAAQL,EAAAA,eAAAA,CAAAA,CAAAA;IAC5B,MAAMQ,CAAAA,GAAIV,UAAUQ,MAAQN,EAAAA,eAAAA,CAAAA,CAAAA;IAE5B,OAAO;QACLS,GAAAA,EAAKD,EAAEL,GAAG;QACVO,KAAAA,EAAOH,EAAEJ,GAAG;QACZQ,MAAAA,EAAQH,EAAEpI,KAAK;QACfwI,IAAAA,EAAML,EAAEnI,KAAK;IACf,CAAA,CAAA;AACF,CAAA;AAEA,SAASyI,MAAAA,CAAOrB,KAAK,EAAE;IACrB,IAAIsB,CAAAA,EAAGC,GAAGC,CAAGC,EAAAA,CAAAA,CAAAA;IAEb,QAAIlD,wKAAAA,EAASyB,KAAQ,CAAA,EAAA;QACnBsB,CAAAA,GAAItB,MAAMiB,GAAG,CAAA;QACbM,CAAAA,GAAIvB,MAAMkB,KAAK,CAAA;QACfM,CAAAA,GAAIxB,MAAMmB,MAAM,CAAA;QAChBM,CAAAA,GAAIzB,MAAMoB,IAAI,CAAA;KACT,MAAA;QACLE,CAAIC,GAAAA,CAAAA,GAAIC,IAAIC,CAAIzB,GAAAA,KAAAA,CAAAA;KACjB;IAED,OAAO;QACLiB,GAAKK,EAAAA,CAAAA;QACLJ,KAAOK,EAAAA,CAAAA;QACPJ,MAAQK,EAAAA,CAAAA;QACRJ,IAAMK,EAAAA,CAAAA;QACNC,QAAAA,EAAU1B,UAAU,KAAK;IAC3B,CAAA,CAAA;AACF,CAAA;AAEA,SAAS2B,uBAAwB7J,CAAAA,KAAK,EAAE8J,aAAa,EAAE;IACrD,MAAMlD,OAAO,EAAE,CAAA;IACf,MAAMmD,QAAAA,GAAW/J,KAAMgK,CAAAA,sBAAsB,CAACF,aAAAA,CAAAA,CAAAA;IAC9C,IAAIpI,CAAGuI,EAAAA,IAAAA,CAAAA;IAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QACjDkF,IAAAA,CAAKlE,IAAI,CAACqH,QAAQ,CAACrI,CAAAA,CAAE,CAACwI,KAAK,CAAA,CAAA;IAC7B,CAAA;IACA,OAAOtD,IAAAA,CAAAA;AACT,CAAA;AAEA,SAASuD,UAAAA,CAAWC,KAAK,EAAElC,KAAK,EAAEmC,OAAO,EAAE7C,OAAAA,GAAU,CAAA,CAAE,EAAE;IACvD,MAAMZ,IAAAA,GAAOwD,MAAMxD,IAAI,CAAA;IACvB,MAAM0D,UAAAA,GAAa9C,OAAQ+C,CAAAA,IAAI,KAAK,QAAA,CAAA;IACpC,IAAI7I,CAAAA,EAAGuI,MAAMO,YAAcC,EAAAA,UAAAA,CAAAA;IAE3B,IAAIvC,KAAAA,KAAU,IAAI,EAAE;QAClB,OAAA;KACD;IAED,IAAIwC,QAAQ,KAAK,CAAA;IACjB,IAAKhJ,CAAAA,GAAI,GAAGuI,IAAOrD,GAAAA,IAAAA,CAAKnF,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QAC7C8I,YAAe,GAAA,CAAC5D,IAAI,CAAClF,CAAE,CAAA,CAAA;QACvB,IAAI8I,iBAAiBH,OAAS,EAAA;YAC5BK,KAAAA,GAAQ,IAAI,CAAA;YACZ,IAAIlD,OAAAA,CAAQe,GAAG,EAAE;gBACf,SAAS;aACV;YACD,MAAM;SACP;QACDkC,UAAaL,GAAAA,KAAAA,CAAM9C,MAAM,CAACkD,YAAa,CAAA,CAAA;QACvC,QAAIG,wKAAAA,EAASF,UAAgBH,CAAAA,IAAAA,CAAAA,UAAepC,IAAAA,KAAAA,KAAU,SAAK0C,wKAAK1C,EAAAA,KAAAA,CAAAA,SAAW0C,wKAAKH,EAAAA,UAAAA,CAAW,CAAI,EAAA;YAC7FvC,KAASuC,IAAAA,UAAAA,CAAAA;SACV;IACH,CAAA;IAEA,IAAI,CAACC,KAAAA,IAAS,CAAClD,OAAAA,CAAQe,GAAG,EAAE;QAC1B,OAAO,CAAA,CAAA;KACR;IAED,OAAOL,KAAAA,CAAAA;AACT,CAAA;AAEA,SAAS2C,wBAAyBC,CAAAA,IAAI,EAAEC,IAAI,EAAE;IAC5C,MAAM,EAACC,MAAAA,EAAQC,MAAAA,EAAO,GAAGF,IAAAA,CAAAA;IACzB,MAAMG,WAAWF,MAAOG,CAAAA,IAAI,KAAK,GAAA,GAAM,MAAM,GAAG,CAAA;IAChD,MAAMC,WAAWH,MAAOE,CAAAA,IAAI,KAAK,GAAA,GAAM,MAAM,GAAG,CAAA;IAChD,MAAMvE,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACkE,IAAAA,CAAAA,CAAAA;IACzB,MAAMO,KAAQ,GAAA,IAAIC,KAAM1E,CAAAA,IAAAA,CAAKnF,MAAM,CAAA,CAAA;IACnC,IAAIC,GAAGuI,IAAMhD,EAAAA,GAAAA,CAAAA;IACb,IAAKvF,CAAAA,GAAI,GAAGuI,IAAOrD,GAAAA,IAAAA,CAAKnF,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QAC7CuF,GAAML,GAAAA,IAAI,CAAClF,CAAE,CAAA,CAAA;QACb2J,KAAK,CAAC3J,EAAE,GAAG;YACT,CAACwJ,SAAAA,EAAWjE,GAAAA;YACZ,CAACmE,QAAS,CAAA,EAAEN,IAAI,CAAC7D,GAAI,CAAA;QACvB,CAAA,CAAA;IACF,CAAA;IACA,OAAOoE,KAAAA,CAAAA;AACT,CAAA;AAEA,SAASE,SAAU9C,CAAAA,KAAK,EAAEsC,IAAI,EAAE;IAC9B,MAAMS,OAAU/C,GAAAA,KAAAA,IAASA,KAAMjB,CAAAA,OAAO,CAACgE,OAAO,CAAA;IAC9C,OAAOA,OAAYA,IAAAA,OAAAA,KAAY1L,SAAaiL,IAAAA,IAAAA,CAAKX,KAAK,KAAKtK,SAAAA,CAAAA;AAC7D,CAAA;AAEA,SAAS2L,YAAYC,UAAU,EAAEC,UAAU,EAAEZ,IAAI,EAAE;IACjD,OAAO,CAAC,EAAEW,UAAAA,CAAWE,EAAE,CAAC,CAAC,EAAED,UAAWC,CAAAA,EAAE,CAAC,CAAC,EAAEb,IAAKX,CAAAA,KAAK,IAAIW,IAAK5K,CAAAA,IAAI,CAAC,CAAC,CAAA;AACvE,CAAA;AAEA,SAAS0L,aAAAA,CAAcpD,KAAK,EAAE;IAC5B,MAAM,EAAC5H,GAAG,EAAEmC,GAAG,EAAE8I,UAAU,EAAEC,UAAU,EAAC,GAAGtD,KAAAA,CAAMoD,aAAa,EAAA,CAAA;IAC9D,OAAO;QACLhL,GAAKiL,EAAAA,UAAAA,GAAajL,GAAMmL,GAAAA,MAAAA,CAAOC,iBAAiB;QAChDjJ,GAAK+I,EAAAA,UAAAA,GAAa/I,GAAMgJ,GAAAA,MAAAA,CAAOE,iBAAiB;IAClD,CAAA,CAAA;AACF,CAAA;AAEA,SAASC,iBAAiBC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IACtD,MAAMC,QAAAA,GAAWH,MAAM,CAACC,QAAS,CAAA,IAAA,CAAKD,MAAM,CAACC,QAAAA,CAAS,GAAG,CAAA,CAAC,CAAA,CAAA;IAC1D,OAAOE,QAAQ,CAACD,UAAAA,CAAW,IAAA,CAAKC,QAAQ,CAACD,UAAAA,CAAW,GAAG,CAAA,CAAC,CAAA,CAAA;AAC1D,CAAA;AAEA,SAASE,mBAAAA,CAAoBpC,KAAK,EAAEa,MAAM,EAAEwB,QAAQ,EAAEtM,IAAI,EAAE;IAC1D,KAAK,MAAM4K,IAAQE,IAAAA,MAAAA,CAAOyB,uBAAuB,CAACvM,IAAAA,CAAAA,CAAMyI,OAAO,EAAI,CAAA;QACjE,MAAMV,KAAQkC,GAAAA,KAAK,CAACW,IAAAA,CAAKb,KAAK,CAAC,CAAA;QAC/B,IAAI,QAAahC,IAAAA,KAAAA,GAAQ,KAAO,CAACuE,QAAAA,IAAYvE,QAAQ,CAAI,EAAA;YACvD,OAAO6C,KAAKb,KAAK,CAAA;SAClB;IACH,CAAA;IAEA,OAAO,IAAI,CAAA;AACb,CAAA;AAEA,SAASyC,YAAaC,CAAAA,UAAU,EAAEC,MAAM,EAAE;IACxC,MAAM,EAAC7M,KAAK,EAAE8M,WAAa/B,EAAAA,IAAAA,EAAK,GAAG6B,UAAAA,CAAAA;IACnC,MAAMR,MAAAA,GAASpM,KAAM+M,CAAAA,OAAO,IAAA,CAAK/M,KAAM+M,CAAAA,OAAO,GAAG,CAAA,CAAC,CAAA,CAAA;IAClD,MAAM,EAAC/B,MAAAA,EAAQC,MAAAA,EAAQf,KAAOM,EAAAA,YAAAA,EAAa,GAAGO,IAAAA,CAAAA;IAC9C,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;IACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI,CAAA;IACzB,MAAMlE,GAAAA,GAAMwE,WAAYT,CAAAA,MAAAA,EAAQC,MAAQF,EAAAA,IAAAA,CAAAA,CAAAA;IACxC,MAAMd,IAAAA,GAAO4C,OAAOpL,MAAM,CAAA;IAC1B,IAAI2I,KAAAA,CAAAA;IAEJ,IAAK,IAAI1I,CAAI,GAAA,CAAA,EAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QAC7B,MAAME,IAAAA,GAAOiL,MAAM,CAACnL,CAAE,CAAA,CAAA;QACtB,MAAM,EAAC,CAACsL,KAAAA,CAAAA,EAAQ9C,KAAAA,EAAO,CAAC+C,KAAM,CAAA,EAAE/E,KAAK,EAAC,GAAGtG,IAAAA,CAAAA;QACzC,MAAMsL,UAAAA,GAAatL,KAAKmL,OAAO,IAAA,CAAKnL,IAAKmL,CAAAA,OAAO,GAAG,CAAA,CAAC,CAAA,CAAA;QACpD3C,KAAAA,GAAQ8C,UAAU,CAACD,KAAAA,CAAM,GAAGd,gBAAAA,CAAiBC,QAAQnF,GAAKiD,EAAAA,KAAAA,CAAAA,CAAAA;QAC1DE,KAAK,CAACI,aAAa,GAAGtC,KAAAA,CAAAA;QAEtBkC,KAAM+C,CAAAA,IAAI,GAAGX,mBAAoBpC,CAAAA,KAAAA,EAAOa,QAAQ,IAAI,EAAEF,KAAK5K,IAAI,CAAA,CAAA;QAC/DiK,KAAMgD,CAAAA,OAAO,GAAGZ,mBAAoBpC,CAAAA,KAAAA,EAAOa,QAAQ,KAAK,EAAEF,KAAK5K,IAAI,CAAA,CAAA;QAEnE,MAAMkN,YAAAA,GAAejD,MAAMkD,aAAa,IAAA,CAAKlD,KAAMkD,CAAAA,aAAa,GAAG,CAAA,CAAC,CAAA,CAAA;QACpED,YAAY,CAAC7C,aAAa,GAAGtC,KAAAA,CAAAA;IAC/B,CAAA;AACF,CAAA;AAEA,SAASqF,eAAgBvN,CAAAA,KAAK,EAAEmL,IAAI,EAAE;IACpC,MAAMqC,MAAAA,GAASxN,MAAMwN,MAAM,CAAA;IAC3B,OAAO7G,MAAOC,CAAAA,IAAI,CAAC4G,MAAAA,CAAAA,CAAQC,MAAM,CAACxG,CAAAA,GAAOuG,GAAAA,MAAM,CAACvG,GAAI,CAAA,CAACkE,IAAI,KAAKA,MAAMuC,KAAK,EAAA,CAAA;AAC3E,CAAA;AAEA,SAASC,oBAAqBC,CAAAA,MAAM,EAAE1D,KAAK,EAAE;IAC3C,WAAO2D,wKAAAA,EAAcD,MACnB,EAAA;QACEnI,MAAAA,EAAQ,KAAK;QACbqI,OAAShO,EAAAA,SAAAA;QACT0K,YAAcN,EAAAA,KAAAA;QACdA,KAAAA;QACAK,IAAM,EAAA,SAAA;QACNpK,IAAM,EAAA,SAAA;IACR,CAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,SAAS4N,kBAAkBH,MAAM,EAAE1D,KAAK,EAAE8D,OAAO,EAAE;IACjD,WAAOH,wKAAAA,EAAcD,MAAQ,EAAA;QAC3BnI,MAAAA,EAAQ,KAAK;QACbwI,SAAW/D,EAAAA,KAAAA;QACX2C,MAAQ/M,EAAAA,SAAAA;QACRoO,GAAKpO,EAAAA,SAAAA;QACLkO,OAAAA;QACA9D,KAAAA;QACAK,IAAM,EAAA,SAAA;QACNpK,IAAM,EAAA,MAAA;IACR,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAASgO,WAAYpD,CAAAA,IAAI,EAAEvJ,KAAK,EAAE;IAEhC,MAAMgJ,YAAeO,GAAAA,IAAAA,CAAK6B,UAAU,CAAC1C,KAAK,CAAA;IAC1C,MAAMiB,OAAOJ,IAAKE,CAAAA,MAAM,IAAIF,IAAKE,CAAAA,MAAM,CAACE,IAAI,CAAA;IAC5C,IAAI,CAACA,IAAM,EAAA;QACT,OAAA;KACD;IAED3J,KAAQA,GAAAA,KAAAA,IAASuJ,KAAKqD,OAAO,CAAA;IAC7B,KAAK,MAAMvB,UAAUrL,KAAO,CAAA;QAC1B,MAAM4K,MAAAA,GAASS,OAAOE,OAAO,CAAA;QAC7B,IAAI,CAACX,MAAAA,IAAUA,MAAM,CAACjB,IAAK,CAAA,KAAKrL,SAAasM,IAAAA,MAAM,CAACjB,IAAAA,CAAK,CAACX,YAAAA,CAAa,KAAK1K,SAAW,EAAA;YACrF,OAAA;SACD;QACD,OAAOsM,MAAM,CAACjB,IAAK,CAAA,CAACX,YAAa,CAAA,CAAA;QACjC,IAAI4B,MAAM,CAACjB,IAAK,CAAA,CAACmC,aAAa,KAAKxN,SAAAA,IAAasM,MAAM,CAACjB,KAAK,CAACmC,aAAa,CAAC9C,YAAAA,CAAa,KAAK1K,SAAW,EAAA;YACtG,OAAOsM,MAAM,CAACjB,IAAAA,CAAK,CAACmC,aAAa,CAAC9C,YAAa,CAAA,CAAA;SAChD;IACH,CAAA;AACF,CAAA;AAEA,MAAM6D,kBAAqB,GAAA,CAAC9D,IAASA,GAAAA,IAAAA,KAAS,WAAWA,IAAS,KAAA,MAAA,CAAA;AAClE,MAAM+D,gBAAAA,GAAmB,CAACC,MAAAA,EAAQC,MAAWA,GAAAA,MAAAA,GAASD,MAAS5H,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,CAAA,CAAC,EAAGmG,MAAO,CAAA,CAAA;AACxF,MAAME,WAAc,GAAA,CAACC,QAAU3D,EAAAA,IAAAA,EAAM/K,KAAU0O,GAAAA,QAAAA,IAAY,CAAC3D,IAAAA,CAAK4D,MAAM,IAAI5D,IAAK6D,CAAAA,QAAQ,IACnF;QAAChI,IAAMiD,EAAAA,uBAAAA,CAAwB7J,OAAO,IAAI,CAAA;QAAGsH,MAAAA,EAAQ,IAAI;IAAA,CAAA,CAAA;AAE/C,MAAMuH,iBAAAA,CAAAA;IAKnB,OAAOhI,QAAW,GAAA,CAAA,CAAG,CAAA;IAKrB,OAAOiI,kBAAqB,GAAA,IAAI,CAAC;IAKjC,OAAOC,eAAkB,GAAA,IAAI,CAAC;IAM9BvP,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;QAC/B,IAAI,CAACxK,KAAK,GAAGA,KAAAA,CAAAA;QACb,IAAI,CAACgP,IAAI,GAAGhP,KAAAA,CAAMiP,GAAG,CAAA;QACrB,IAAI,CAAC/E,KAAK,GAAGM,YAAAA,CAAAA;QACb,IAAI,CAAC0E,eAAe,GAAG,CAAA,CAAC,CAAA;QACxB,IAAI,CAACpC,WAAW,GAAG,IAAI,CAACqC,OAAO,EAAA,CAAA;QAC/B,IAAI,CAACC,KAAK,GAAG,IAAI,CAACtC,WAAW,CAAC3M,IAAI,CAAA;QAClC,IAAI,CAACqH,OAAO,GAAG1H,SAAAA,CAAAA;QAEf,IAAI,CAACuP,QAAQ,GAAG,KAAK,CAAA;QACrB,IAAI,CAACC,KAAK,GAAGxP,SAAAA,CAAAA;QACb,IAAI,CAACyP,WAAW,GAAGzP,SAAAA,CAAAA;QACnB,IAAI,CAAC0P,cAAc,GAAG1P,SAAAA,CAAAA;QACtB,IAAI,CAAC2P,UAAU,GAAG3P,SAAAA,CAAAA;QAClB,IAAI,CAAC4P,UAAU,GAAG5P,SAAAA,CAAAA;QAClB,IAAI,CAAC6P,mBAAmB,GAAG,KAAK,CAAA;QAChC,IAAI,CAACC,kBAAkB,GAAG,KAAK,CAAA;QAC/B,IAAI,CAACC,QAAQ,GAAG/P,SAAAA,CAAAA;QAChB,IAAI,CAACgQ,SAAS,GAAG,EAAE,CAAA;QACnB,IAAI,CAAChB,kBAAkB,GAAG,GAAA,CAAA,MAAA,CAAWA,kBAAkB,CAAA;QACvD,IAAI,CAACC,eAAe,GAAG,GAAA,CAAA,MAAA,CAAWA,eAAe,CAAA;QAEjD,IAAI,CAACgB,UAAU,EAAA,CAAA;IACjB,CAAA;IAEAA,UAAa,GAAA;QACX,MAAMhF,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAI,CAACtG,SAAS,EAAA,CAAA;QACd,IAAI,CAACwJ,UAAU,EAAA,CAAA;QACfjF,IAAAA,CAAK6D,QAAQ,GAAGrD,SAAUR,CAAAA,IAAAA,CAAKE,MAAM,EAAEF,IAAAA,CAAAA,CAAAA;QACvC,IAAI,CAACkF,WAAW,EAAA,CAAA;QAEhB,IAAI,IAAI,CAACzI,OAAO,CAAC0I,IAAI,IAAI,CAAC,IAAI,CAAClQ,KAAK,CAACmQ,eAAe,CAAC,QAAW,CAAA,EAAA;YAC9DC,OAAAA,CAAQC,IAAI,CAAC,oKAAA,CAAA,CAAA;SACd;IACH,CAAA;IAEAC,WAAAA,CAAY9F,YAAY,EAAE;QACxB,IAAI,IAAI,CAACN,KAAK,KAAKM,YAAc,EAAA;YAC/B2D,WAAY,CAAA,IAAI,CAACrB,WAAW,CAAA,CAAA;SAC7B;QACD,IAAI,CAAC5C,KAAK,GAAGM,YAAAA,CAAAA;IACf,CAAA;IAEAwF,UAAa,GAAA;QACX,MAAMhQ,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM+K,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMgB,OAAAA,GAAU,IAAI,CAACyC,UAAU,EAAA,CAAA;QAE/B,MAAMC,QAAW,GAAA,CAACrF,IAAMlC,EAAAA,CAAAA,EAAGC,CAAGO,EAAAA,CAAAA,GAAM0B,IAAS,KAAA,GAAA,GAAMlC,CAAIkC,GAAAA,IAAAA,KAAS,GAAM1B,GAAAA,CAAAA,GAAIP,CAAC,CAAA;QAE3E,MAAMuH,GAAAA,GAAM1F,KAAK2F,OAAO,OAAGC,wKAAAA,EAAe7C,OAAQ4C,CAAAA,OAAO,EAAEnD,eAAAA,CAAgBvN,KAAO,EAAA,GAAA,CAAA,CAAA,CAAA;QAClF,MAAM4Q,GAAAA,GAAM7F,KAAK8F,OAAO,OAAGF,wKAAAA,EAAe7C,OAAQ+C,CAAAA,OAAO,EAAEtD,eAAAA,CAAgBvN,KAAO,EAAA,GAAA,CAAA,CAAA,CAAA;QAClF,MAAM8Q,GAAAA,GAAM/F,KAAKgG,OAAO,OAAGJ,wKAAAA,EAAe7C,OAAQiD,CAAAA,OAAO,EAAExD,eAAAA,CAAgBvN,KAAO,EAAA,GAAA,CAAA,CAAA,CAAA;QAClF,MAAMgR,SAAAA,GAAYjG,KAAKiG,SAAS,CAAA;QAChC,MAAMC,MAAMlG,IAAKmG,CAAAA,OAAO,GAAGV,QAASQ,CAAAA,SAAAA,EAAWP,KAAKG,GAAKE,EAAAA,GAAAA,CAAAA,CAAAA;QACzD,MAAMK,MAAMpG,IAAKqG,CAAAA,OAAO,GAAGZ,QAASQ,CAAAA,SAAAA,EAAWJ,KAAKH,GAAKK,EAAAA,GAAAA,CAAAA,CAAAA;QACzD/F,IAAAA,CAAKhC,MAAM,GAAG,IAAI,CAACsI,aAAa,CAACZ,GAAAA,CAAAA,CAAAA;QACjC1F,IAAAA,CAAK/B,MAAM,GAAG,IAAI,CAACqI,aAAa,CAACT,GAAAA,CAAAA,CAAAA;QACjC7F,IAAAA,CAAKuG,MAAM,GAAG,IAAI,CAACD,aAAa,CAACP,GAAAA,CAAAA,CAAAA;QACjC/F,IAAAA,CAAKC,MAAM,GAAG,IAAI,CAACqG,aAAa,CAACJ,GAAAA,CAAAA,CAAAA;QACjClG,IAAAA,CAAKE,MAAM,GAAG,IAAI,CAACoG,aAAa,CAACF,GAAAA,CAAAA,CAAAA;IACnC,CAAA;IAEAZ,UAAa,GAAA;QACX,OAAO,IAAI,CAACvQ,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAC,IAAI,CAACrH,KAAK,CAAC,CAAA;IAC7C,CAAA;IAEAiF,OAAU,GAAA;QACR,OAAO,IAAI,CAACnP,KAAK,CAACwR,cAAc,CAAC,IAAI,CAACtH,KAAK,CAAA,CAAA;IAC7C,CAAA;IAMAmH,aAAAA,CAAcI,OAAO,EAAE;QACrB,OAAO,IAAI,CAACzR,KAAK,CAACwN,MAAM,CAACiE,OAAQ,CAAA,CAAA;IACnC,CAAA;IAKAC,cAAAA,CAAejJ,KAAK,EAAE;QACpB,MAAMsC,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,OAAOrE,KAAAA,KAAUsC,KAAKC,MAAM,GACxBD,KAAKE,MAAM,GACXF,KAAKC,MAAM,CAAA;IACjB,CAAA;IAEA2G,KAAQ,GAAA;QACN,IAAI,CAACxQ,OAAO,CAAC,OAAA,CAAA,CAAA;IACf,CAAA;IAKAyQ,QAAW,GAAA;QACT,MAAM7G,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAI,IAAI,CAACwC,KAAK,EAAE;gBACduC,wKAAAA,EAAoB,IAAI,CAACvC,KAAK,EAAE,IAAI,CAAA,CAAA;SACrC;QACD,IAAIvE,IAAAA,CAAK6D,QAAQ,EAAE;YACjBT,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;SACb;IACH,CAAA;IAKA+G,UAAa,GAAA;QACX,MAAMhE,OAAAA,GAAU,IAAI,CAACyC,UAAU,EAAA,CAAA;QAC/B,MAAMzF,IAAAA,GAAOgD,QAAQhD,IAAI,IAAA,CAAKgD,OAAQhD,CAAAA,IAAI,GAAG,EAAE,CAAD,CAAA;QAC9C,MAAMwE,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QAMxB,QAAI7I,wKAAAA,EAASqE,IAAO,CAAA,EAAA;YAClB,MAAMC,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;YAC7B,IAAI,CAACwC,KAAK,GAAGzE,wBAAAA,CAAyBC,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;SACvC,MAAA,IAAIuE,UAAUxE,IAAM,EAAA;YACzB,IAAIwE,KAAO,EAAA;oBAETuC,wKAAAA,EAAoBvC,OAAO,IAAI,CAAA,CAAA;gBAE/B,MAAMvE,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;gBAC7BqB,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;gBACZA,IAAKqD,CAAAA,OAAO,GAAG,EAAE,CAAA;aAClB;YACD,IAAItD,IAAQnE,IAAAA,MAAAA,CAAOoL,YAAY,CAACjH,IAAO,CAAA,EAAA;oBACrCkH,wKAAAA,EAAkBlH,MAAM,IAAI,CAAA,CAAA;aAC7B;YACD,IAAI,CAACgF,SAAS,GAAG,EAAE,CAAA;YACnB,IAAI,CAACR,KAAK,GAAGxE,IAAAA,CAAAA;SACd;IACH,CAAA;IAEAmF,WAAc,GAAA;QACZ,MAAMlF,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAE7B,IAAI,CAACgF,UAAU,EAAA,CAAA;QAEf,IAAI,IAAI,CAAChD,kBAAkB,EAAE;YAC3B/D,IAAAA,CAAK+C,OAAO,GAAG,IAAI,IAAI,CAACgB,kBAAkB,EAAA,CAAA;SAC3C;IACH,CAAA;IAEAmD,qBAAAA,CAAsBC,gBAAgB,EAAE;QACtC,MAAMnH,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMgB,OAAAA,GAAU,IAAI,CAACyC,UAAU,EAAA,CAAA;QAC/B,IAAI4B,eAAe,KAAK,CAAA;QAExB,IAAI,CAACL,UAAU,EAAA,CAAA;QAGf,MAAMM,UAAAA,GAAarH,KAAK6D,QAAQ,CAAA;QAChC7D,IAAAA,CAAK6D,QAAQ,GAAGrD,SAAUR,CAAAA,IAAAA,CAAKE,MAAM,EAAEF,IAAAA,CAAAA,CAAAA;QAGvC,IAAIA,IAAKX,CAAAA,KAAK,KAAK0D,OAAAA,CAAQ1D,KAAK,EAAE;YAChC+H,YAAAA,GAAe,IAAI,CAAA;YAEnBhE,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;YACZA,IAAKX,CAAAA,KAAK,GAAG0D,OAAAA,CAAQ1D,KAAK,CAAA;SAC3B;QAID,IAAI,CAACiI,eAAe,CAACH,gBAAAA,CAAAA,CAAAA;QAGrB,IAAIC,YAAgBC,IAAAA,UAAAA,KAAerH,IAAK6D,CAAAA,QAAQ,EAAE;YAChDjC,YAAa,CAAA,IAAI,EAAE5B,IAAAA,CAAKqD,OAAO,CAAA,CAAA;YAC/BrD,IAAAA,CAAK6D,QAAQ,GAAGrD,SAAUR,CAAAA,IAAAA,CAAKE,MAAM,EAAEF,IAAAA,CAAAA,CAAAA;SACxC;IACH,CAAA;IAMAvE,SAAY,GAAA;QACV,MAAMH,MAAS,GAAA,IAAI,CAACrG,KAAK,CAACqG,MAAM,CAAA;QAChC,MAAMiM,YAAYjM,MAAOkM,CAAAA,gBAAgB,CAAC,IAAI,CAACnD,KAAK,CAAA,CAAA;QACpD,MAAMoD,MAAAA,GAASnM,OAAOoM,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,EAAW,IAAI,CAAA,CAAA;QACxE,IAAI,CAAC9K,OAAO,GAAGnB,MAAAA,CAAOqM,cAAc,CAACF,MAAAA,EAAQ,IAAI,CAACG,UAAU,EAAA,CAAA,CAAA;QAC5D,IAAI,CAACtD,QAAQ,GAAG,IAAI,CAAC7H,OAAO,CAACoL,OAAO,CAAA;QACpC,IAAI,CAAC1D,eAAe,GAAG,CAAA,CAAC,CAAA;IAC1B,CAAA;IAMA2D,KAAM/R,CAAAA,KAAK,EAAEgS,KAAK,EAAE;QAClB,MAAM,EAAChG,aAAa/B,IAAI,EAAEuE,OAAOxE,IAAI,EAAC,GAAG,IAAI,CAAA;QAC7C,MAAM,EAACE,MAAAA,EAAQ4D,QAAAA,EAAS,GAAG7D,IAAAA,CAAAA;QAC3B,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;QAEzB,IAAI4H,MAAAA,GAASjS,KAAU,KAAA,CAAA,IAAKgS,KAAUhI,KAAAA,IAAAA,CAAKrJ,MAAM,GAAG,IAAI,GAAGsJ,IAAAA,CAAKiI,OAAO,CAAA;QACvE,IAAIC,OAAOnS,KAAQ,GAAA,CAAA,IAAKiK,KAAKqD,OAAO,CAACtN,QAAQ,CAAE,CAAA,CAAA;QAC/C,IAAIY,GAAGqB,GAAK8J,EAAAA,MAAAA,CAAAA;QAEZ,IAAI,IAAI,CAACwC,QAAQ,KAAK,KAAK,EAAE;YAC3BtE,IAAAA,CAAKqD,OAAO,GAAGtD,IAAAA,CAAAA;YACfC,IAAKiI,CAAAA,OAAO,GAAG,IAAI,CAAA;YACnBnG,MAAS/B,GAAAA,IAAAA,CAAAA;SACJ,MAAA;YACL,QAAI3D,wKAAQ2D,EAAAA,IAAI,CAAChK,KAAAA,CAAM,CAAG,EAAA;gBACxB+L,MAAAA,GAAS,IAAI,CAACqG,cAAc,CAACnI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;YAClD,CAAA,MAAO,QAAIrM,wKAAAA,EAASqE,IAAI,CAAChK,MAAM,CAAG,EAAA;gBAChC+L,MAAAA,GAAS,IAAI,CAACsG,eAAe,CAACpI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;aAC5C,MAAA;gBACLjG,MAAAA,GAAS,IAAI,CAACuG,kBAAkB,CAACrI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;aACrD;YAED,MAAMO,0BAA6B,GAAA,IAAMtQ,GAAG,CAACiK,MAAM,KAAK,IAAI,IAAKiG,IAAAA,IAAQlQ,GAAG,CAACiK,KAAAA,CAAM,GAAGiG,IAAI,CAACjG,KAAM,CAAA,CAAA;YACjG,IAAKtL,CAAI,GAAA,CAAA,EAAGA,CAAIoR,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;gBAC1BqJ,IAAKqD,CAAAA,OAAO,CAAC1M,CAAIZ,GAAAA,KAAAA,CAAM,GAAGiC,GAAM8J,GAAAA,MAAM,CAACnL,CAAE,CAAA,CAAA;gBACzC,IAAIqR,MAAQ,EAAA;oBACV,IAAIM,0BAA8B,EAAA,EAAA;wBAChCN,MAAAA,GAAS,KAAK,CAAA;qBACf;oBACDE,IAAOlQ,GAAAA,GAAAA,CAAAA;iBACR;YACH,CAAA;YACAgI,IAAAA,CAAKiI,OAAO,GAAGD,MAAAA,CAAAA;SAChB;QAED,IAAInE,QAAU,EAAA;YACZjC,YAAAA,CAAa,IAAI,EAAEE,MAAAA,CAAAA,CAAAA;SACpB;IACH,CAAA;IAaAuG,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QAC3C,MAAM,EAAC9H,MAAAA,EAAQC,MAAAA,EAAO,GAAGF,IAAAA,CAAAA;QACzB,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI,CAAA;QACzB,MAAMmI,MAAAA,GAAStI,OAAOuI,SAAS,EAAA,CAAA;QAC/B,MAAMC,cAAcxI,MAAWC,KAAAA,MAAAA,CAAAA;QAC/B,MAAM4B,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAIpR,GAAGuI,IAAMC,EAAAA,KAAAA,CAAAA;QAEb,IAAKxI,CAAAA,GAAI,GAAGuI,IAAO6I,GAAAA,KAAK,EAAEpR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YACvCwI,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZ+L,MAAM,CAACnL,EAAE,GAAG;gBACV,CAACsL,KAAAA,CAAAA,EAAQwG,WAAexI,IAAAA,MAAAA,CAAO6H,KAAK,CAACS,MAAM,CAACpJ,KAAAA,CAAM,EAAEA,KAAAA,CAAAA;gBACpD,CAAC+C,KAAAA,CAAAA,EAAQhC,MAAO4H,CAAAA,KAAK,CAAC/H,IAAI,CAACZ,MAAM,EAAEA,KAAAA,CAAAA;YACrC,CAAA,CAAA;QACF,CAAA;QACA,OAAO2C,MAAAA,CAAAA;IACT,CAAA;IAaAqG,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACvC,MAAM,EAAC/J,MAAAA,EAAQC,MAAAA,EAAO,GAAG+B,IAAAA,CAAAA;QACzB,MAAM8B,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAIpR,CAAAA,EAAGuI,MAAMC,KAAOtI,EAAAA,IAAAA,CAAAA;QAEpB,IAAKF,CAAAA,GAAI,GAAGuI,IAAO6I,GAAAA,KAAK,EAAEpR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YACvCwI,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZc,IAAOkJ,GAAAA,IAAI,CAACZ,KAAM,CAAA,CAAA;YAClB2C,MAAM,CAACnL,EAAE,GAAG;gBACVuH,CAAAA,EAAGF,OAAO8J,KAAK,CAACjR,IAAI,CAAC,EAAE,EAAEsI,KAAAA,CAAAA;gBACzBhB,CAAAA,EAAGF,OAAO6J,KAAK,CAACjR,IAAI,CAAC,EAAE,EAAEsI,KAAAA,CAAAA;YAC3B,CAAA,CAAA;QACF,CAAA;QACA,OAAO2C,MAAAA,CAAAA;IACT,CAAA;IAaAsG,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACxC,MAAM,EAAC/J,MAAAA,EAAQC,MAAAA,EAAO,GAAG+B,IAAAA,CAAAA;QACzB,MAAM,EAAC0I,QAAW,GAAA,GAAA,EAAKC,QAAAA,GAAW,GAAA,EAAI,GAAG,IAAI,CAACrE,QAAQ,CAAA;QACtD,MAAMxC,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAIpR,CAAAA,EAAGuI,MAAMC,KAAOtI,EAAAA,IAAAA,CAAAA;QAEpB,IAAKF,CAAAA,GAAI,GAAGuI,IAAO6I,GAAAA,KAAK,EAAEpR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YACvCwI,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZc,IAAOkJ,GAAAA,IAAI,CAACZ,KAAM,CAAA,CAAA;YAClB2C,MAAM,CAACnL,EAAE,GAAG;gBACVuH,CAAAA,EAAGF,MAAO8J,CAAAA,KAAK,KAACc,wKAAAA,EAAiB/R,MAAM6R,QAAWvJ,CAAAA,EAAAA,KAAAA,CAAAA;gBAClDhB,CAAAA,EAAGF,MAAO6J,CAAAA,KAAK,KAACc,wKAAAA,EAAiB/R,MAAM8R,QAAWxJ,CAAAA,EAAAA,KAAAA,CAAAA;YACpD,CAAA,CAAA;QACF,CAAA;QACA,OAAO2C,MAAAA,CAAAA;IACT,CAAA;IAKA+G,SAAAA,CAAU1J,KAAK,EAAE;QACf,OAAO,IAAI,CAAC4C,WAAW,CAACsB,OAAO,CAAClE,KAAM,CAAA,CAAA;IACxC,CAAA;IAKA2J,cAAAA,CAAe3J,KAAK,EAAE;QACpB,OAAO,IAAI,CAAC4C,WAAW,CAAChC,IAAI,CAACZ,KAAM,CAAA,CAAA;IACrC,CAAA;IAKAC,WAAW1B,KAAK,EAAEoE,MAAM,EAAEtC,IAAI,EAAE;QAC9B,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM+K,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM5E,KAAQ2E,GAAAA,MAAM,CAACpE,KAAAA,CAAM0C,IAAI,CAAC,CAAA;QAChC,MAAMf,KAAQ,GAAA;YACZxD,IAAMiD,EAAAA,uBAAAA,CAAwB7J,OAAO,IAAI,CAAA;YACzCsH,MAAAA,EAAQuF,OAAOE,OAAO,CAACtE,MAAM0C,IAAI,CAAC,CAACmC,aAAa;QAClD,CAAA,CAAA;QACA,OAAOnD,UAAWC,CAAAA,KAAAA,EAAOlC,KAAO6C,EAAAA,IAAAA,CAAKb,KAAK,EAAE;YAACK,IAAAA;QAAI,CAAA,CAAA,CAAA;IACnD,CAAA;IAKAuJ,qBAAAA,CAAsBC,KAAK,EAAEtL,KAAK,EAAEoE,MAAM,EAAEzC,KAAK,EAAE;QACjD,MAAM4J,WAAcnH,GAAAA,MAAM,CAACpE,KAAAA,CAAM0C,IAAI,CAAC,CAAA;QACtC,IAAIjD,KAAQ8L,GAAAA,WAAAA,KAAgB,IAAI,GAAGC,MAAMD,WAAW,CAAA;QACpD,MAAM1M,SAAS8C,KAASyC,IAAAA,MAAAA,CAAOE,OAAO,CAACtE,KAAAA,CAAM0C,IAAI,CAAC,CAAA;QAClD,IAAIf,SAAS9C,MAAQ,EAAA;YACnB8C,KAAAA,CAAM9C,MAAM,GAAGA,MAAAA,CAAAA;YACfY,KAAAA,GAAQiC,WAAWC,KAAO4J,EAAAA,WAAAA,EAAa,IAAI,CAAClH,WAAW,CAAC5C,KAAK,CAAA,CAAA;SAC9D;QACD6J,KAAAA,CAAMlT,GAAG,GAAGD,IAAAA,CAAKC,GAAG,CAACkT,KAAAA,CAAMlT,GAAG,EAAEqH,KAAAA,CAAAA,CAAAA;QAChC6L,KAAAA,CAAM/Q,GAAG,GAAGpC,IAAAA,CAAKoC,GAAG,CAAC+Q,KAAAA,CAAM/Q,GAAG,EAAEkF,KAAAA,CAAAA,CAAAA;IAClC,CAAA;IAKAgM,SAAUzL,CAAAA,KAAK,EAAEiG,QAAQ,EAAE;QACzB,MAAM3D,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMsB,OAAAA,GAAUrD,KAAKqD,OAAO,CAAA;QAC5B,MAAM2E,SAAShI,IAAKiI,CAAAA,OAAO,IAAIvK,KAAAA,KAAUsC,KAAKC,MAAM,CAAA;QACpD,MAAMf,IAAAA,GAAOmE,QAAQ3M,MAAM,CAAA;QAC3B,MAAM0S,UAAa,GAAA,IAAI,CAACzC,cAAc,CAACjJ,KAAAA,CAAAA,CAAAA;QACvC,MAAM2B,QAAQqE,WAAYC,CAAAA,QAAAA,EAAU3D,IAAM,EAAA,IAAI,CAAC/K,KAAK,CAAA,CAAA;QACpD,MAAM+T,KAAQ,GAAA;YAAClT,GAAAA,EAAKmL,OAAOE,iBAAiB;YAAElJ,GAAAA,EAAKgJ,OAAOC,iBAAiB;QAAA,CAAA,CAAA;QAC3E,MAAM,EAACpL,KAAKuT,QAAQ,EAAEpR,KAAKqR,QAAQ,EAAC,GAAGxI,aAAcsI,CAAAA,UAAAA,CAAAA,CAAAA;QACrD,IAAIzS,CAAGmL,EAAAA,MAAAA,CAAAA;QAEP,SAASyH,KAAQ,GAAA;YACfzH,MAASuB,GAAAA,OAAO,CAAC1M,CAAE,CAAA,CAAA;YACnB,MAAM+I,UAAaoC,GAAAA,MAAM,CAACsH,UAAAA,CAAWhJ,IAAI,CAAC,CAAA;YAC1C,OAAO,KAACR,wKAASkC,EAAAA,MAAM,CAACpE,KAAAA,CAAM0C,IAAI,CAAC,CAAA,IAAKiJ,QAAW3J,GAAAA,UAAAA,IAAc4J,QAAW5J,GAAAA,UAAAA,CAAAA;QAC9E,CAAA;QAEA,IAAK/I,CAAI,GAAA,CAAA,EAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YACzB,IAAI4S,KAAS,EAAA,EAAA;gBACX,SAAS;aACV;YACD,IAAI,CAACR,qBAAqB,CAACC,KAAAA,EAAOtL,OAAOoE,MAAQzC,EAAAA,KAAAA,CAAAA,CAAAA;YACjD,IAAI2I,MAAQ,EAAA;gBAEV,MAAM;aACP;QACH,CAAA;QACA,IAAIA,MAAQ,EAAA;YAEV,IAAKrR,IAAIuI,IAAO,GAAA,CAAA,EAAGvI,CAAK,IAAA,CAAA,EAAG,EAAEA,CAAG,CAAA;gBAC9B,IAAI4S,KAAS,EAAA,EAAA;oBACX,SAAS;iBACV;gBACD,IAAI,CAACR,qBAAqB,CAACC,KAAAA,EAAOtL,OAAOoE,MAAQzC,EAAAA,KAAAA,CAAAA,CAAAA;gBACjD,MAAM;YACR,CAAA;SACD;QACD,OAAO2J,KAAAA,CAAAA;IACT,CAAA;IAEAQ,kBAAAA,CAAmB9L,KAAK,EAAE;QACxB,MAAMoE,MAAS,GAAA,IAAI,CAACC,WAAW,CAACsB,OAAO,CAAA;QACvC,MAAM9G,SAAS,EAAE,CAAA;QACjB,IAAI5F,GAAGuI,IAAM/B,EAAAA,KAAAA,CAAAA;QAEb,IAAKxG,CAAAA,GAAI,GAAGuI,IAAO4C,GAAAA,MAAAA,CAAOpL,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC/CwG,KAAAA,GAAQ2E,MAAM,CAACnL,CAAAA,CAAE,CAAC+G,KAAAA,CAAM0C,IAAI,CAAC,CAAA;YAC7B,QAAIR,wKAAAA,EAASzC,KAAQ,CAAA,EAAA;gBACnBZ,MAAAA,CAAO5E,IAAI,CAACwF,KAAAA,CAAAA,CAAAA;aACb;QACH,CAAA;QACA,OAAOZ,MAAAA,CAAAA;IACT,CAAA;IAMAkN,cAAiB,GAAA;QACf,OAAO,KAAK,CAAA;IACd,CAAA;IAKAC,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM9B,MAAAA,GAASD,KAAKC,MAAM,CAAA;QAC1B,MAAMC,MAAAA,GAASF,KAAKE,MAAM,CAAA;QAC1B,MAAM4B,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,OAAO;YACLwK,KAAO1J,EAAAA,MAAAA,GAAS,EAAKA,GAAAA,MAAAA,CAAO2J,gBAAgB,CAAC9H,MAAM,CAAC7B,MAAOG,CAAAA,IAAI,CAAC,CAAA,GAAI,EAAE;YACtEjD,KAAO+C,EAAAA,MAAAA,GAAS,EAAKA,GAAAA,MAAAA,CAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAOE,CAAAA,IAAI,CAAC,CAAA,GAAI,EAAE;QACxE,CAAA,CAAA;IACF,CAAA;IAKAhK,OAAAA,CAAQoJ,IAAI,EAAE;QACZ,MAAMQ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAI,CAACpH,MAAM,CAAC6E,IAAQ,IAAA,SAAA,CAAA,CAAA;QACpBQ,IAAAA,CAAK6J,KAAK,GAAGrL,MAAAA,KAAOoH,wKAAAA,EAAe,IAAI,CAACnJ,OAAO,CAACqN,IAAI,EAAE/L,WAAYiC,CAAAA,IAAAA,CAAKhC,MAAM,EAAEgC,IAAAA,CAAK/B,MAAM,EAAE,IAAI,CAACwL,cAAc,EAAA,CAAA,CAAA,CAAA,CAAA;IACjH,CAAA;IAKA9O,MAAAA,CAAO6E,IAAI,EAAE,CAAA,CAAC;IAEd5I,IAAO,GAAA;QACL,MAAMsN,GAAAA,GAAM,IAAI,CAACD,IAAI,CAAA;QACrB,MAAMhP,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM+K,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMgI,QAAW/J,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE,CAAA;QAChC,MAAMiK,IAAAA,GAAO/U,MAAMgV,SAAS,CAAA;QAC5B,MAAMvP,SAAS,EAAE,CAAA;QACjB,MAAM3E,KAAQ,GAAA,IAAI,CAAC2O,UAAU,IAAI,CAAA,CAAA;QACjC,MAAMqD,QAAQ,IAAI,CAACpD,UAAU,IAAKoF,QAAAA,CAASrT,MAAM,GAAGX,KAAAA,CAAAA;QACpD,MAAMmU,uBAA0B,GAAA,IAAI,CAACzN,OAAO,CAACyN,uBAAuB,CAAA;QACpE,IAAIvT,CAAAA,CAAAA;QAEJ,IAAIqJ,IAAAA,CAAK+C,OAAO,EAAE;YAChB/C,IAAAA,CAAK+C,OAAO,CAACnM,IAAI,CAACsN,GAAAA,EAAK8F,MAAMjU,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;SACrC;QAED,IAAKpR,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQgS,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;YACtC,MAAMsM,OAAAA,GAAU8G,QAAQ,CAACpT,CAAE,CAAA,CAAA;YAC3B,IAAIsM,OAAAA,CAAQW,MAAM,EAAE;gBAClB,SAAS;aACV;YACD,IAAIX,OAAAA,CAAQvI,MAAM,IAAIwP,uBAAyB,EAAA;gBAC7CxP,MAAAA,CAAO/C,IAAI,CAACsL,OAAAA,CAAAA,CAAAA;aACP,MAAA;gBACLA,OAAQrM,CAAAA,IAAI,CAACsN,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;aACnB;QACH,CAAA;QAEA,IAAKrT,IAAI,CAAGA,EAAAA,CAAAA,GAAI+D,OAAOhE,MAAM,EAAE,EAAEC,CAAG,CAAA;YAClC+D,MAAM,CAAC/D,CAAAA,CAAE,CAACC,IAAI,CAACsN,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;QACtB,CAAA;IACF,CAAA;IASAG,QAAShL,CAAAA,KAAK,EAAEzE,MAAM,EAAE;QACtB,MAAM8E,IAAAA,GAAO9E,MAAS,GAAA,QAAA,GAAW,SAAS,CAAA;QAC1C,OAAOyE,UAAUpK,SAAa,IAAA,IAAI,CAACgN,WAAW,CAACgB,OAAO,GAClD,IAAI,CAACqH,4BAA4B,CAAC5K,QAClC,IAAI,CAAC6K,yBAAyB,CAAClL,KAAAA,IAAS,GAAGK,IAAK,CAAA,CAAA;IACtD,CAAA;IAKAoI,WAAWzI,KAAK,EAAEzE,MAAM,EAAE8E,IAAI,EAAE;QAC9B,MAAMuD,OAAAA,GAAU,IAAI,CAACyC,UAAU,EAAA,CAAA;QAC/B,IAAI8E,OAAAA,CAAAA;QACJ,IAAInL,KAAAA,IAAS,CAAKA,IAAAA,KAAAA,GAAQ,IAAI,CAAC4C,WAAW,CAAChC,IAAI,CAACrJ,MAAM,EAAE;YACtD,MAAMuM,UAAU,IAAI,CAAClB,WAAW,CAAChC,IAAI,CAACZ,KAAM,CAAA,CAAA;YAC5CmL,OAAAA,GAAUrH,OAAQ6B,CAAAA,QAAQ,IAAA,CACvB7B,OAAQ6B,CAAAA,QAAQ,GAAG9B,iBAAAA,CAAkB,IAAI,CAAC4E,UAAU,EAAA,EAAIzI,OAAO8D,OAAO,CAAA,CAAA,CAAA;YACzEqH,OAAAA,CAAQxI,MAAM,GAAG,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;YAChCmL,OAAAA,CAAQnH,GAAG,GAAGJ,OAAQhD,CAAAA,IAAI,CAACZ,KAAM,CAAA,CAAA;YACjCmL,OAAAA,CAAQnL,KAAK,GAAGmL,OAAQpH,CAAAA,SAAS,GAAG/D,KAAAA,CAAAA;SAC/B,MAAA;YACLmL,OAAAA,GAAU,IAAI,CAACxF,QAAQ,IAAA,CACpB,IAAI,CAACA,QAAQ,GAAGlC,qBAAqB,IAAI,CAAC3N,KAAK,CAAC2S,UAAU,IAAI,IAAI,CAACzI,KAAK,CAAA,CAAA,CAAA;YAC3EmL,OAAAA,CAAQvH,OAAO,GAAGA,OAAAA,CAAAA;YAClBuH,OAAAA,CAAQnL,KAAK,GAAGmL,OAAAA,CAAQ7K,YAAY,GAAG,IAAI,CAACN,KAAK,CAAA;SAClD;QAEDmL,OAAQ5P,CAAAA,MAAM,GAAG,CAAC,CAACA,MAAAA,CAAAA;QACnB4P,OAAAA,CAAQ9K,IAAI,GAAGA,IAAAA,CAAAA;QACf,OAAO8K,OAAAA,CAAAA;IACT,CAAA;IAMAF,4BAAAA,CAA6B5K,IAAI,EAAE;QACjC,OAAO,IAAI,CAAC+K,sBAAsB,CAAC,IAAI,CAACxG,kBAAkB,CAAClD,EAAE,EAAErB,IAAAA,CAAAA,CAAAA;IACjE,CAAA;IAOA6K,yBAA0BlL,CAAAA,KAAK,EAAEK,IAAI,EAAE;QACrC,OAAO,IAAI,CAAC+K,sBAAsB,CAAC,IAAI,CAACvG,eAAe,CAACnD,EAAE,EAAErB,IAAML,EAAAA,KAAAA,CAAAA,CAAAA;IACpE,CAAA;IAKAoL,uBAAuBC,WAAW,EAAEhL,OAAO,SAAS,EAAEL,KAAK,EAAE;QAC3D,MAAMzE,SAAS8E,IAAS,KAAA,QAAA,CAAA;QACxB,MAAMiL,KAAAA,GAAQ,IAAI,CAACtG,eAAe,CAAA;QAClC,MAAMuG,QAAAA,GAAWF,cAAc,GAAMhL,GAAAA,IAAAA,CAAAA;QACrC,MAAMgE,MAAAA,GAASiH,KAAK,CAACC,QAAS,CAAA,CAAA;QAC9B,MAAMC,OAAU,GAAA,IAAI,CAAC/F,mBAAmB,QAAIgG,wKAAQzL,EAAAA,KAAAA,CAAAA,CAAAA;QACpD,IAAIqE,MAAQ,EAAA;YACV,OAAOD,iBAAiBC,MAAQmH,EAAAA,OAAAA,CAAAA,CAAAA;SACjC;QACD,MAAMrP,MAAS,GAAA,IAAI,CAACrG,KAAK,CAACqG,MAAM,CAAA;QAChC,MAAMiM,YAAYjM,MAAOuP,CAAAA,uBAAuB,CAAC,IAAI,CAACxG,KAAK,EAAEmG,WAAAA,CAAAA,CAAAA;QAC7D,MAAMM,WAAWpQ,MAAS,GAAA;YAAC,CAAC,EAAE8P,WAAY,CAAA,KAAK,CAAC;YAAE,OAAA;YAASA,WAAAA;YAAa,EAAA;SAAG,GAAG;YAACA,WAAAA;YAAa,EAAA;SAAG,CAAA;QAC/F,MAAM/C,SAASnM,MAAOoM,CAAAA,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,CAAAA,CAAAA;QACzD,MAAMwD,QAAQnP,MAAOC,CAAAA,IAAI,CAACC,wKAASiO,CAAAA,QAAQ,CAACS,WAAY,CAAA,CAAA,CAAA;QAGxD,MAAMF,UAAU,IAAM,IAAI,CAAC1C,UAAU,CAACzI,OAAOzE,MAAQ8E,EAAAA,IAAAA,CAAAA,CAAAA;QACrD,MAAMjD,SAASjB,MAAO0P,CAAAA,mBAAmB,CAACvD,MAAAA,EAAQsD,OAAOT,OAASQ,EAAAA,QAAAA,CAAAA,CAAAA;QAElE,IAAIvO,MAAAA,CAAOM,OAAO,EAAE;YAGlBN,MAAAA,CAAOM,OAAO,GAAG8N,OAAAA,CAAAA;YAKjBF,KAAK,CAACC,QAAS,CAAA,GAAG9O,OAAOqP,MAAM,CAAC1H,iBAAiBhH,MAAQoO,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA;SAC1D;QAED,OAAOpO,MAAAA,CAAAA;IACT,CAAA;IAMA2O,mBAAmB/L,KAAK,EAAEgM,UAAU,EAAEzQ,MAAM,EAAE;QAC5C,MAAMzF,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMwV,KAAAA,GAAQ,IAAI,CAACtG,eAAe,CAAA;QAClC,MAAMuG,QAAW,GAAA,CAAC,UAAU,EAAES,WAAW,CAAC,CAAA;QAC1C,MAAM3H,MAAAA,GAASiH,KAAK,CAACC,QAAS,CAAA,CAAA;QAC9B,IAAIlH,MAAQ,EAAA;YACV,OAAOA,MAAAA,CAAAA;SACR;QACD,IAAI/G,OAAAA,CAAAA;QACJ,IAAIxH,MAAMwH,OAAO,CAACV,SAAS,KAAK,KAAK,EAAE;YACrC,MAAMT,MAAS,GAAA,IAAI,CAACrG,KAAK,CAACqG,MAAM,CAAA;YAChC,MAAMiM,YAAYjM,MAAO8P,CAAAA,yBAAyB,CAAC,IAAI,CAAC/G,KAAK,EAAE8G,UAAAA,CAAAA,CAAAA;YAC/D,MAAM1D,SAASnM,MAAOoM,CAAAA,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,CAAAA,CAAAA;YACzD9K,OAAUnB,GAAAA,MAAAA,CAAOqM,cAAc,CAACF,MAAAA,EAAQ,IAAI,CAACG,UAAU,CAACzI,KAAAA,EAAOzE,MAAQyQ,EAAAA,UAAAA,CAAAA,CAAAA,CAAAA;SACxE;QACD,MAAMxO,aAAa,IAAItB,UAAAA,CAAWpG,KAAOwH,EAAAA,OAAAA,IAAWA,QAAQE,UAAU,CAAA,CAAA;QACtE,IAAIF,OAAAA,IAAWA,OAAQ4O,CAAAA,UAAU,EAAE;YACjCZ,KAAK,CAACC,QAAAA,CAAS,GAAG9O,MAAAA,CAAOqP,MAAM,CAACtO,UAAAA,CAAAA,CAAAA;SACjC;QACD,OAAOA,UAAAA,CAAAA;IACT,CAAA;IAMA2O,gBAAAA,CAAiB7O,OAAO,EAAE;QACxB,IAAI,CAACA,OAAQI,CAAAA,OAAO,EAAE;YACpB,OAAA;SACD;QACD,OAAO,IAAI,CAAC4H,cAAc,IAAA,CAAK,IAAI,CAACA,cAAc,GAAG7I,MAAOyB,CAAAA,MAAM,CAAC,CAAA,GAAIZ,OAAO,CAAA,CAAA,CAAA;IAChF,CAAA;IAMA8O,cAAe/L,CAAAA,IAAI,EAAEgM,aAAa,EAAE;QAClC,OAAO,CAACA,iBAAiBlI,kBAAmB9D,CAAAA,IAAAA,CAAAA,IAAS,IAAI,CAACvK,KAAK,CAACwW,mBAAmB,CAAA;IACrF,CAAA;IAKAC,iBAAkB3V,CAAAA,KAAK,EAAEyJ,IAAI,EAAE;QAC7B,MAAMmM,SAAY,GAAA,IAAI,CAACtB,yBAAyB,CAACtU,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACxD,MAAMoM,uBAAAA,GAA0B,IAAI,CAACnH,cAAc,CAAA;QACnD,MAAM+G,aAAgB,GAAA,IAAI,CAACF,gBAAgB,CAACK,SAAAA,CAAAA,CAAAA;QAC5C,MAAMJ,iBAAiB,IAAI,CAACA,cAAc,CAAC/L,IAAAA,EAAMgM,kBAAmBA,aAAkBI,KAAAA,uBAAAA,CAAAA;QACtF,IAAI,CAACC,mBAAmB,CAACL,aAAAA,EAAehM,IAAMmM,EAAAA,SAAAA,CAAAA,CAAAA;QAC9C,OAAO;YAACH,aAAAA;YAAeD,cAAAA;QAAc,CAAA,CAAA;IACvC,CAAA;IAMAO,aAAAA,CAAc7I,OAAO,EAAE9D,KAAK,EAAE9C,UAAU,EAAEmD,IAAI,EAAE;QAC9C,IAAI8D,mBAAmB9D,IAAO,CAAA,EAAA;YAC5B5D,MAAOyB,CAAAA,MAAM,CAAC4F,OAAS5G,EAAAA,UAAAA,CAAAA,CAAAA;SAClB,MAAA;YACL,IAAI,CAAC6O,kBAAkB,CAAC/L,OAAOK,IAAM7E,CAAAA,CAAAA,MAAM,CAACsI,OAAS5G,EAAAA,UAAAA,CAAAA,CAAAA;SACtD;IACH,CAAA;IAMAwP,oBAAoBL,aAAa,EAAEhM,IAAI,EAAEhD,UAAU,EAAE;QACnD,IAAIgP,aAAAA,IAAiB,CAAClI,kBAAAA,CAAmB9D,IAAO,CAAA,EAAA;YAC9C,IAAI,CAAC0L,kBAAkB,CAACnW,WAAWyK,IAAM7E,CAAAA,CAAAA,MAAM,CAAC6Q,aAAehP,EAAAA,UAAAA,CAAAA,CAAAA;SAChE;IACH,CAAA;IAKAuP,SAAAA,CAAU9I,OAAO,EAAE9D,KAAK,EAAEK,IAAI,EAAE9E,MAAM,EAAE;QACtCuI,OAAAA,CAAQvI,MAAM,GAAGA,MAAAA,CAAAA;QACjB,MAAM+B,OAAU,GAAA,IAAI,CAAC0N,QAAQ,CAAChL,KAAOzE,EAAAA,MAAAA,CAAAA,CAAAA;QACrC,IAAI,CAACwQ,kBAAkB,CAAC/L,KAAAA,EAAOK,MAAM9E,MAAQC,CAAAA,CAAAA,MAAM,CAACsI,OAAS,EAAA;YAG3DxG,OAAAA,EAAS,CAAE/B,MAAAA,IAAU,IAAI,CAAC4Q,gBAAgB,CAAC7O,OAAaA,CAAAA,IAAAA,OAAAA;QAC1D,CAAA,CAAA,CAAA;IACF,CAAA;IAEAuP,gBAAAA,CAAiB/I,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;QAC7C,IAAI,CAAC4M,SAAS,CAAC9I,OAAS9D,EAAAA,KAAAA,EAAO,UAAU,KAAK,CAAA,CAAA;IAChD,CAAA;IAEA8M,aAAAA,CAAchJ,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;QAC1C,IAAI,CAAC4M,SAAS,CAAC9I,OAAS9D,EAAAA,KAAAA,EAAO,UAAU,IAAI,CAAA,CAAA;IAC/C,CAAA;IAKA+M,wBAA2B,GAAA;QACzB,MAAMjJ,OAAU,GAAA,IAAI,CAAClB,WAAW,CAACgB,OAAO,CAAA;QAExC,IAAIE,OAAS,EAAA;YACX,IAAI,CAAC8I,SAAS,CAAC9I,OAASlO,EAAAA,SAAAA,EAAW,UAAU,KAAK,CAAA,CAAA;SACnD;IACH,CAAA;IAKAoX,qBAAwB,GAAA;QACtB,MAAMlJ,OAAU,GAAA,IAAI,CAAClB,WAAW,CAACgB,OAAO,CAAA;QAExC,IAAIE,OAAS,EAAA;YACX,IAAI,CAAC8I,SAAS,CAAC9I,OAASlO,EAAAA,SAAAA,EAAW,UAAU,IAAI,CAAA,CAAA;SAClD;IACH,CAAA;IAKAuS,eAAAA,CAAgBH,gBAAgB,EAAE;QAChC,MAAMpH,IAAAA,GAAO,IAAI,CAACwE,KAAK,CAAA;QACvB,MAAMwF,QAAW,GAAA,IAAI,CAAChI,WAAW,CAAChC,IAAI,CAAA;QAGtC,KAAK,MAAM,CAAC3E,MAAQgR,EAAAA,IAAAA,EAAMC,KAAK,IAAI,IAAI,CAACtH,SAAS,CAAE;YACjD,IAAI,CAAC3J,MAAO,CAAA,CAACgR,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;QACrB,CAAA;QACA,IAAI,CAACtH,SAAS,GAAG,EAAE,CAAA;QAEnB,MAAMuH,OAAAA,GAAUvC,SAASrT,MAAM,CAAA;QAC/B,MAAM6V,OAAAA,GAAUxM,KAAKrJ,MAAM,CAAA;QAC3B,MAAMqR,KAAQlS,GAAAA,IAAAA,CAAKC,GAAG,CAACyW,OAASD,EAAAA,OAAAA,CAAAA,CAAAA;QAEhC,IAAIvE,KAAO,EAAA;YAKT,IAAI,CAACD,KAAK,CAAC,CAAGC,EAAAA,KAAAA,CAAAA,CAAAA;SACf;QAED,IAAIwE,UAAUD,OAAS,EAAA;YACrB,IAAI,CAACE,eAAe,CAACF,OAAAA,EAASC,UAAUD,OAASnF,EAAAA,gBAAAA,CAAAA,CAAAA;SAC5C,MAAA,IAAIoF,UAAUD,OAAS,EAAA;YAC5B,IAAI,CAACG,eAAe,CAACF,OAAAA,EAASD,OAAUC,GAAAA,OAAAA,CAAAA,CAAAA;SACzC;IACH,CAAA;IAKAC,gBAAgBzW,KAAK,EAAEgS,KAAK,EAAEZ,gBAAAA,GAAmB,IAAI,EAAE;QACrD,MAAMnH,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMhC,IAAAA,GAAOC,KAAKD,IAAI,CAAA;QACtB,MAAMjC,MAAM/H,KAAQgS,GAAAA,KAAAA,CAAAA;QACpB,IAAIpR,CAAAA,CAAAA;QAEJ,MAAM+V,IAAAA,GAAO,CAACC,GAAQ,GAAA;YACpBA,GAAAA,CAAIjW,MAAM,IAAIqR,KAAAA,CAAAA;YACd,IAAKpR,IAAIgW,GAAIjW,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAKmH,KAAKnH,CAAK,EAAA,CAAA;gBACtCgW,GAAG,CAAChW,CAAE,CAAA,GAAGgW,GAAG,CAAChW,IAAIoR,KAAM,CAAA,CAAA;YACzB,CAAA;QACF,CAAA,CAAA;QACA2E,IAAK3M,CAAAA,IAAAA,CAAAA,CAAAA;QAEL,IAAKpJ,CAAIZ,GAAAA,KAAAA,EAAOY,CAAImH,GAAAA,GAAAA,EAAK,EAAEnH,CAAG,CAAA;YAC5BoJ,IAAI,CAACpJ,CAAE,CAAA,GAAG,IAAI,IAAI,CAACqN,eAAe,EAAA,CAAA;QACpC,CAAA;QAEA,IAAI,IAAI,CAACM,QAAQ,EAAE;YACjBoI,IAAAA,CAAK1M,KAAKqD,OAAO,CAAA,CAAA;SAClB;QACD,IAAI,CAACyE,KAAK,CAAC/R,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;QAElB,IAAIZ,gBAAkB,EAAA;YACpB,IAAI,CAACyF,cAAc,CAAC7M,IAAAA,EAAMhK,OAAOgS,KAAO,EAAA,OAAA,CAAA,CAAA;SACzC;IACH,CAAA;IAEA6E,cAAe3J,CAAAA,OAAO,EAAElN,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE,CAAA,CAAC;IAK7CiN,eAAgB1W,CAAAA,KAAK,EAAEgS,KAAK,EAAE;QAC5B,MAAM/H,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAI,IAAI,CAACuC,QAAQ,EAAE;YACjB,MAAMuI,UAAU7M,IAAKqD,CAAAA,OAAO,CAACyJ,MAAM,CAAC/W,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;YAC3C,IAAI/H,IAAAA,CAAK6D,QAAQ,EAAE;gBACjBT,WAAAA,CAAYpD,IAAM6M,EAAAA,OAAAA,CAAAA,CAAAA;aACnB;SACF;QACD7M,IAAAA,CAAKD,IAAI,CAAC+M,MAAM,CAAC/W,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;IAC1B,CAAA;IAKAgF,KAAAA,CAAMC,IAAI,EAAE;QACV,IAAI,IAAI,CAAC1I,QAAQ,EAAE;YACjB,IAAI,CAACS,SAAS,CAACpN,IAAI,CAACqV,IAAAA,CAAAA,CAAAA;SACf,MAAA;YACL,MAAM,CAAC5R,MAAAA,EAAQgR,IAAMC,EAAAA,IAAAA,CAAK,GAAGW,IAAAA,CAAAA;YAC7B,IAAI,CAAC5R,MAAO,CAAA,CAACgR,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;SACpB;QACD,IAAI,CAACpX,KAAK,CAACgY,YAAY,CAACtV,IAAI,CAAC;YAAC,IAAI,CAACwH,KAAK;eAAK6N,IAAAA;SAAK,CAAA,CAAA;IACpD,CAAA;IAEAE,WAAc,GAAA;QACZ,MAAMnF,KAAAA,GAAQoF,UAAUzW,MAAM,CAAA;QAC9B,IAAI,CAACqW,KAAK,CAAC;YAAC,iBAAA;YAAmB,IAAI,CAACvH,UAAU,EAAA,CAAGzF,IAAI,CAACrJ,MAAM,GAAGqR,KAAAA;YAAOA,KAAAA;SAAM,CAAA,CAAA;IAC9E,CAAA;IAEAqF,UAAa,GAAA;QACX,IAAI,CAACL,KAAK,CAAC;YAAC,iBAAA;YAAmB,IAAI,CAAChL,WAAW,CAAChC,IAAI,CAACrJ,MAAM,GAAG,CAAA;YAAG,CAAA;SAAE,CAAA,CAAA;IACrE,CAAA;IAEA2W,YAAe,GAAA;QACb,IAAI,CAACN,KAAK,CAAC;YAAC,iBAAA;YAAmB,CAAA;YAAG,CAAA;SAAE,CAAA,CAAA;IACtC,CAAA;IAEAO,aAAcvX,CAAAA,KAAK,EAAEgS,KAAK,EAAE;QAC1B,IAAIA,KAAO,EAAA;YACT,IAAI,CAACgF,KAAK,CAAC;gBAAC,iBAAA;gBAAmBhX,KAAAA;gBAAOgS,KAAAA;aAAM,CAAA,CAAA;SAC7C;QACD,MAAMwF,QAAAA,GAAWJ,SAAUzW,CAAAA,MAAM,GAAG,CAAA,CAAA;QACpC,IAAI6W,QAAU,EAAA;YACZ,IAAI,CAACR,KAAK,CAAC;gBAAC,iBAAA;gBAAmBhX,KAAAA;gBAAOwX,QAAAA;aAAS,CAAA,CAAA;SAChD;IACH,CAAA;IAEAC,cAAiB,GAAA;QACf,IAAI,CAACT,KAAK,CAAC;YAAC,iBAAA;YAAmB,CAAA;YAAGI,SAAAA,CAAUzW,MAAM;SAAC,CAAA,CAAA;IACrD,CAAA;AACF;AC9iCA,SAAS+W,iBAAkB/P,CAAAA,KAAK,EAAEtI,IAAI,EAAE;IACtC,IAAI,CAACsI,KAAAA,CAAMgQ,MAAM,CAACC,IAAI,EAAE;QACtB,MAAMC,YAAAA,GAAelQ,KAAMiE,CAAAA,uBAAuB,CAACvM,IAAAA,CAAAA,CAAAA;QACnD,IAAImH,SAAS,EAAE,CAAA;QAEf,IAAK,IAAI5F,IAAI,CAAGuI,EAAAA,IAAAA,GAAO0O,aAAalX,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAMvI,CAAK,EAAA,CAAA;YACzD4F,MAASA,GAAAA,MAAAA,CAAOsR,MAAM,CAACD,YAAY,CAACjX,EAAE,CAACkL,UAAU,CAAC2H,kBAAkB,CAAC9L,KAAAA,CAAAA,CAAAA,CAAAA;QACvE,CAAA;QACAA,KAAMgQ,CAAAA,MAAM,CAACC,IAAI,OAAGG,wKAAAA,EAAavR,MAAOwR,CAAAA,IAAI,CAAC,CAACC,CAAGrP,EAAAA,CAAAA,GAAMqP,CAAIrP,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;KAC5D;IACD,OAAOjB,KAAAA,CAAMgQ,MAAM,CAACC,IAAI,CAAA;AAC1B,CAAA;AAMA,SAASM,oBAAqBjO,CAAAA,IAAI,EAAE;IAClC,MAAMtC,KAAAA,GAAQsC,KAAKC,MAAM,CAAA;IACzB,MAAM1D,MAASkR,GAAAA,iBAAAA,CAAkB/P,KAAOsC,EAAAA,IAAAA,CAAK5K,IAAI,CAAA,CAAA;IACjD,IAAIU,GAAAA,GAAM4H,MAAMwQ,OAAO,CAAA;IACvB,IAAIvX,CAAAA,EAAGuI,MAAMiP,IAAMjG,EAAAA,IAAAA,CAAAA;IACnB,MAAMkG,mBAAmB,IAAM;QAC7B,IAAID,IAAS,KAAA,KAAA,IAASA,IAAS,KAAA,CAAC,KAAO,EAAA;YAErC,OAAA;SACD;QACD,QAAIvD,wKAAAA,EAAQ1C,IAAO,CAAA,EAAA;YAEjBpS,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAACA,GAAAA,EAAKD,KAAKwY,GAAG,CAACF,OAAOjG,IAASpS,CAAAA,IAAAA,GAAAA,CAAAA,CAAAA;SAC9C;QACDoS,IAAOiG,GAAAA,IAAAA,CAAAA;IACT,CAAA,CAAA;IAEA,IAAKxX,CAAAA,GAAI,GAAGuI,IAAO3C,GAAAA,MAAAA,CAAO7F,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QAC/CwX,IAAAA,GAAOzQ,KAAM4Q,CAAAA,gBAAgB,CAAC/R,MAAM,CAAC5F,CAAE,CAAA,CAAA,CAAA;QACvCyX,gBAAAA,EAAAA,CAAAA;IACF,CAAA;IAEAlG,IAAOnT,GAAAA,SAAAA,CAAAA;IACP,IAAK4B,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAOxB,KAAM6Q,CAAAA,KAAK,CAAC7X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QACpDwX,IAAOzQ,GAAAA,KAAAA,CAAM8Q,eAAe,CAAC7X,CAAAA,CAAAA,CAAAA;QAC7ByX,gBAAAA,EAAAA,CAAAA;IACF,CAAA;IAEA,OAAOtY,GAAAA,CAAAA;AACT,CAAA;AAQA,SAAS2Y,yBAAyBtP,KAAK,EAAEuP,KAAK,EAAEjS,OAAO,EAAEkS,UAAU,EAAE;IACnE,MAAMC,SAAAA,GAAYnS,QAAQoS,YAAY,CAAA;IACtC,IAAIzR,IAAM0R,EAAAA,KAAAA,CAAAA;IAEV,QAAIC,wKAAAA,EAAcH,SAAY,CAAA,EAAA;QAC5BxR,IAAAA,GAAOsR,KAAM5Y,CAAAA,GAAG,GAAG2G,OAAAA,CAAQuS,kBAAkB,CAAA;QAC7CF,KAAAA,GAAQrS,QAAQwS,aAAa,CAAA;KACxB,MAAA;QAIL7R,IAAAA,GAAOwR,SAAYD,GAAAA,UAAAA,CAAAA;QACnBG,KAAQ,GAAA,CAAA,CAAA;KACT;IAED,OAAO;QACLI,KAAAA,EAAO9R,IAAOuR,GAAAA,UAAAA;QACdG,KAAAA;QACA/Y,KAAAA,EAAO2Y,KAAMS,CAAAA,MAAM,CAAChQ,KAAAA,CAAM,GAAI/B,IAAO,GAAA,CAAA;IACvC,CAAA,CAAA;AACF,CAAA;AAQA,SAASgS,0BAA0BjQ,KAAK,EAAEuP,KAAK,EAAEjS,OAAO,EAAEkS,UAAU,EAAE;IACpE,MAAMQ,MAAAA,GAAST,MAAMS,MAAM,CAAA;IAC3B,MAAMhB,IAAAA,GAAOgB,MAAM,CAAChQ,KAAM,CAAA,CAAA;IAC1B,IAAI+I,IAAAA,GAAO/I,QAAQ,CAAIgQ,GAAAA,MAAM,CAAChQ,KAAQ,GAAA,CAAA,CAAE,GAAG,IAAI,CAAA;IAC/C,IAAIkQ,IAAAA,GAAOlQ,KAAQgQ,GAAAA,MAAAA,CAAOzY,MAAM,GAAG,CAAIyY,GAAAA,MAAM,CAAChQ,KAAAA,GAAQ,CAAE,CAAA,GAAG,IAAI,CAAA;IAC/D,MAAMmQ,OAAAA,GAAU7S,QAAQuS,kBAAkB,CAAA;IAE1C,IAAI9G,IAAAA,KAAS,IAAI,EAAE;QAGjBA,IAAAA,GAAOiG,IAAQkB,GAAAA,CAAAA,IAAS,KAAA,IAAI,GAAGX,KAAAA,CAAM5Q,GAAG,GAAG4Q,KAAM3Y,CAAAA,KAAK,GAAGsZ,IAAAA,GAAOlB,IAAI,CAAD,CAAA;KACpE;IAED,IAAIkB,IAAAA,KAAS,IAAI,EAAE;QAEjBA,IAAAA,GAAOlB,OAAOA,IAAOjG,GAAAA,IAAAA,CAAAA;KACtB;IAED,MAAMnS,KAAAA,GAAQoY,IAAO,GAACA,CAAAA,IAAAA,GAAOtY,IAAKC,CAAAA,GAAG,CAACoS,IAAAA,EAAMmH,IAAI,CAAA,IAAK,CAAIC,GAAAA,OAAAA,CAAAA;IACzD,MAAMlS,OAAOvH,IAAKwY,CAAAA,GAAG,CAACgB,IAAAA,GAAOnH,QAAQ,CAAIoH,GAAAA,OAAAA,CAAAA;IAEzC,OAAO;QACLJ,KAAAA,EAAO9R,IAAOuR,GAAAA,UAAAA;QACdG,KAAAA,EAAOrS,QAAQwS,aAAa;QAC5BlZ,KAAAA;IACF,CAAA,CAAA;AACF,CAAA;AAEA,SAASwZ,aAAAA,CAAcC,KAAK,EAAE3Y,IAAI,EAAEqJ,MAAM,EAAEvJ,CAAC,EAAE;IAC7C,MAAM8Y,aAAavP,MAAO4H,CAAAA,KAAK,CAAC0H,KAAK,CAAC,EAAE,EAAE7Y,CAAAA,CAAAA,CAAAA;IAC1C,MAAM+Y,WAAWxP,MAAO4H,CAAAA,KAAK,CAAC0H,KAAK,CAAC,EAAE,EAAE7Y,CAAAA,CAAAA,CAAAA;IACxC,MAAMb,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAAC2Z,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;IACjC,MAAMzX,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACwX,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;IACjC,IAAIC,QAAW7Z,GAAAA,GAAAA,CAAAA;IACf,IAAI8Z,MAAS3X,GAAAA,GAAAA,CAAAA;IAEb,IAAIpC,KAAKwY,GAAG,CAACvY,OAAOD,IAAKwY,CAAAA,GAAG,CAACpW,GAAM,CAAA,EAAA;QACjC0X,QAAW1X,GAAAA,GAAAA,CAAAA;QACX2X,MAAS9Z,GAAAA,GAAAA,CAAAA;KACV;IAIDe,IAAI,CAACqJ,MAAAA,CAAOE,IAAI,CAAC,GAAGwP,MAAAA,CAAAA;IAEpB/Y,IAAAA,CAAKgZ,OAAO,GAAG;QACbF,QAAAA;QACAC,MAAAA;QACA7Z,KAAO0Z,EAAAA,UAAAA;QACP3R,GAAK4R,EAAAA,QAAAA;QACL5Z,GAAAA;QACAmC,GAAAA;IACF,CAAA,CAAA;AACF,CAAA;AAEA,SAAS6X,UAAAA,CAAWN,KAAK,EAAE3Y,IAAI,EAAEqJ,MAAM,EAAEvJ,CAAC,EAAE;IAC1C,QAAIyF,wKAAAA,EAAQoT,KAAQ,CAAA,EAAA;QAClBD,aAAcC,CAAAA,KAAAA,EAAO3Y,MAAMqJ,MAAQvJ,EAAAA,CAAAA,CAAAA,CAAAA;KAC9B,MAAA;QACLE,IAAI,CAACqJ,OAAOE,IAAI,CAAC,GAAGF,MAAO4H,CAAAA,KAAK,CAAC0H,KAAO7Y,EAAAA,CAAAA,CAAAA,CAAAA;KACzC;IACD,OAAOE,IAAAA,CAAAA;AACT,CAAA;AAEA,SAASkZ,qBAAAA,CAAsB/P,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;IACvD,MAAM9H,MAAAA,GAASD,KAAKC,MAAM,CAAA;IAC1B,MAAMC,MAAAA,GAASF,KAAKE,MAAM,CAAA;IAC1B,MAAMqI,MAAAA,GAAStI,OAAOuI,SAAS,EAAA,CAAA;IAC/B,MAAMC,cAAcxI,MAAWC,KAAAA,MAAAA,CAAAA;IAC/B,MAAM4B,SAAS,EAAE,CAAA;IACjB,IAAInL,CAAAA,EAAGuI,MAAMrI,IAAM2Y,EAAAA,KAAAA,CAAAA;IAEnB,IAAK7Y,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQgS,KAAK,EAAEpR,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QACnD6Y,KAAQzP,GAAAA,IAAI,CAACpJ,CAAE,CAAA,CAAA;QACfE,IAAAA,GAAO,CAAA,CAAC,CAAA;QACRA,IAAI,CAACoJ,MAAAA,CAAOG,IAAI,CAAC,GAAGqI,WAAAA,IAAexI,MAAO6H,CAAAA,KAAK,CAACS,MAAM,CAAC5R,CAAAA,CAAE,EAAEA,CAAAA,CAAAA,CAAAA;QAC3DmL,MAAAA,CAAOnK,IAAI,CAACmY,UAAWN,CAAAA,KAAAA,EAAO3Y,MAAMqJ,MAAQvJ,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;IAC9C,CAAA;IACA,OAAOmL,MAAAA,CAAAA;AACT,CAAA;AAEA,SAASkO,UAAAA,CAAWC,MAAM,EAAE;IAC1B,OAAOA,UAAUA,MAAON,CAAAA,QAAQ,KAAK5a,SAAakb,IAAAA,MAAAA,CAAOL,MAAM,KAAK7a,SAAAA,CAAAA;AACtE,CAAA;AAEA,SAASmb,QAAQ9S,IAAI,EAAE8C,MAAM,EAAEiQ,UAAU,EAAE;IACzC,IAAI/S,SAAS,CAAG,EAAA;QACd,WAAOyC,wKAAKzC,EAAAA,IAAAA,CAAAA,CAAAA;KACb;IACD,OAAO,CAAC8C,MAAAA,CAAOkQ,YAAY,EAAK,GAAA,CAAA,GAAI,CAAC,CAAA,IAAA,CAAMlQ,OAAOpK,GAAG,IAAIqa,aAAa,CAAI,GAAA,CAAC,CAAC,CAAD,CAAA;AAC7E,CAAA;AAEA,SAASE,WAAAA,CAAYhU,UAAU,EAAE;IAC/B,IAAIwB,OAAAA,EAAS9H,KAAO+H,EAAAA,GAAAA,EAAKM,GAAKE,EAAAA,MAAAA,CAAAA;IAC9B,IAAIjC,UAAAA,CAAWiU,UAAU,EAAE;QACzBzS,OAAAA,GAAUxB,UAAWkU,CAAAA,IAAI,GAAGlU,UAAAA,CAAW6B,CAAC,CAAA;QACxCnI,KAAQ,GAAA,MAAA,CAAA;QACR+H,GAAM,GAAA,OAAA,CAAA;KACD,MAAA;QACLD,OAAAA,GAAUxB,UAAWkU,CAAAA,IAAI,GAAGlU,UAAAA,CAAW8B,CAAC,CAAA;QACxCpI,KAAQ,GAAA,QAAA,CAAA;QACR+H,GAAM,GAAA,KAAA,CAAA;KACP;IACD,IAAID,OAAS,EAAA;QACXO,GAAM,GAAA,KAAA,CAAA;QACNE,MAAS,GAAA,OAAA,CAAA;KACJ,MAAA;QACLF,GAAM,GAAA,OAAA,CAAA;QACNE,MAAS,GAAA,KAAA,CAAA;KACV;IACD,OAAO;QAACvI,KAAAA;QAAO+H,GAAAA;QAAKD,OAAAA;QAASO,GAAAA;QAAKE,MAAAA;IAAM,CAAA,CAAA;AAC1C,CAAA;AAEA,SAASkS,gBAAAA,CAAiBnU,UAAU,EAAEI,OAAO,EAAE4C,KAAK,EAAEF,KAAK,EAAE;IAC3D,IAAIsR,IAAAA,GAAOhU,QAAQiU,aAAa,CAAA;IAChC,MAAMzV,MAAM,CAAA,CAAC,CAAA;IAEb,IAAI,CAACwV,IAAM,EAAA;QACTpU,UAAAA,CAAWqU,aAAa,GAAGzV,GAAAA,CAAAA;QAC3B,OAAA;KACD;IAED,IAAIwV,IAAAA,KAAS,IAAI,EAAE;QACjBpU,UAAAA,CAAWqU,aAAa,GAAG;YAACtS,GAAAA,EAAK,IAAI;YAAEC,KAAAA,EAAO,IAAI;YAAEC,MAAAA,EAAQ,IAAI;YAAEC,IAAAA,EAAM,IAAI;QAAA,CAAA,CAAA;QAC5E,OAAA;KACD;IAED,MAAM,EAACxI,KAAAA,EAAO+H,GAAAA,EAAKD,OAAAA,EAASO,GAAAA,EAAKE,MAAAA,EAAO,GAAG+R,WAAYhU,CAAAA,UAAAA,CAAAA,CAAAA;IAEvD,IAAIoU,IAAAA,KAAS,YAAYpR,KAAO,EAAA;QAC9BhD,UAAWsU,CAAAA,kBAAkB,GAAG,IAAI,CAAA;QACpC,IAAI,CAACtR,KAAAA,CAAM+C,IAAI,IAAI,CAAA,MAAOjD,KAAO,EAAA;YAC/BsR,IAAOrS,GAAAA,GAAAA,CAAAA;SACF,MAAA,IAAI,CAACiB,KAAAA,CAAMgD,OAAO,IAAI,CAAA,MAAOlD,KAAO,EAAA;YACzCsR,IAAOnS,GAAAA,MAAAA,CAAAA;SACF,MAAA;YACLrD,GAAG,CAAC2V,SAAUtS,CAAAA,MAAAA,EAAQvI,OAAO+H,GAAKD,EAAAA,OAAAA,CAAAA,CAAS,GAAG,IAAI,CAAA;YAClD4S,IAAOrS,GAAAA,GAAAA,CAAAA;SACR;KACF;IAEDnD,GAAG,CAAC2V,SAAUH,CAAAA,IAAAA,EAAM1a,OAAO+H,GAAKD,EAAAA,OAAAA,CAAAA,CAAS,GAAG,IAAI,CAAA;IAChDxB,UAAAA,CAAWqU,aAAa,GAAGzV,GAAAA,CAAAA;AAC7B,CAAA;AAEA,SAAS2V,SAAAA,CAAUH,IAAI,EAAEzC,CAAC,EAAErP,CAAC,EAAEd,OAAO,EAAE;IACtC,IAAIA,OAAS,EAAA;QACX4S,IAAOI,GAAAA,IAAAA,CAAKJ,MAAMzC,CAAGrP,EAAAA,CAAAA,CAAAA,CAAAA;QACrB8R,IAAOK,GAAAA,QAAAA,CAASL,MAAM9R,CAAGqP,EAAAA,CAAAA,CAAAA,CAAAA;KACpB,MAAA;QACLyC,IAAOK,GAAAA,QAAAA,CAASL,MAAMzC,CAAGrP,EAAAA,CAAAA,CAAAA,CAAAA;KAC1B;IACD,OAAO8R,IAAAA,CAAAA;AACT,CAAA;AAEA,SAASI,KAAKE,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC1B,OAAOF,SAASC,EAAKC,GAAAA,EAAAA,GAAKF,IAASE,KAAAA,EAAAA,GAAKD,KAAKD,IAAI,CAAA;AACnD,CAAA;AAEA,SAASD,SAASI,CAAC,EAAEnb,KAAK,EAAE+H,GAAG,EAAE;IAC/B,OAAOoT,MAAM,OAAUnb,GAAAA,KAAAA,GAAQmb,CAAM,KAAA,KAAA,GAAQpT,MAAMoT,CAAC,CAAA;AACtD,CAAA;AAEA,SAASC,gBAAAA,CAAiB9U,UAAU,EAAE,EAAC+U,aAAAA,EAAc,EAAEtC,KAAK,EAAE;IAC5DzS,UAAW+U,CAAAA,aAAa,GAAGA,aAAkB,KAAA,MAAA,GACzCtC,UAAU,CAAI,GAAA,IAAA,GAAO,CAAC,GACtBsC,aAAa,CAAA;AACnB,CAAA;AAEe,MAAMC,aAAsBvN,SAAAA,iBAAAA,CAAAA;IAEzC,OAAOjD,KAAK,KAAM,CAAA;IAKlB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB,EAAA,KAAA;QAEjBgL,kBAAoB,EAAA,GAAA;QACpBC,aAAe,EAAA,GAAA;QACfqC,OAAAA,EAAS,IAAI;QAEb3U,UAAY,EAAA;YACV4U,OAAS,EAAA;gBACPnc,IAAM,EAAA,QAAA;gBACNiH,UAAY,EAAA;oBAAC,GAAA;oBAAK,GAAA;oBAAK,MAAA;oBAAQ,OAAA;oBAAS,QAAA;iBAAS;YACnD,CAAA;QACF,CAAA;KACA,CAAA;IAKF,OAAOmV,SAAY,GAAA;QACjB/O,MAAQ,EAAA;YACNgP,OAAS,EAAA;gBACPrc,IAAM,EAAA,UAAA;gBACNsc,MAAAA,EAAQ,IAAI;gBACZC,IAAM,EAAA;oBACJD,MAAAA,EAAQ,IAAI;gBACd,CAAA;YACF,CAAA;YACAE,OAAS,EAAA;gBACPxc,IAAM,EAAA,QAAA;gBACNyc,WAAAA,EAAa,IAAI;YACnB,CAAA;QACF,CAAA;KACA,CAAA;IAQFxJ,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QAC3C,OAAOgI,qBAAAA,CAAsB/P,IAAMD,EAAAA,IAAAA,EAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;IAClD,CAAA;IAOAI,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACvC,OAAOgI,qBAAAA,CAAsB/P,IAAMD,EAAAA,IAAAA,EAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;IAClD,CAAA;IAOAK,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACxC,MAAM,EAAC9H,MAAAA,EAAQC,MAAAA,EAAO,GAAGF,IAAAA,CAAAA;QACzB,MAAM,EAAC0I,QAAW,GAAA,GAAA,EAAKC,QAAAA,GAAW,GAAA,EAAI,GAAG,IAAI,CAACrE,QAAQ,CAAA;QACtD,MAAMnE,WAAWF,MAAOG,CAAAA,IAAI,KAAK,GAAA,GAAMsI,WAAWC,QAAQ,CAAA;QAC1D,MAAMtI,WAAWH,MAAOE,CAAAA,IAAI,KAAK,GAAA,GAAMsI,WAAWC,QAAQ,CAAA;QAC1D,MAAM7G,SAAS,EAAE,CAAA;QACjB,IAAInL,CAAAA,EAAGuI,MAAMrI,IAAMib,EAAAA,GAAAA,CAAAA;QACnB,IAAKnb,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQgS,KAAK,EAAEpR,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACnDmb,GAAM/R,GAAAA,IAAI,CAACpJ,CAAE,CAAA,CAAA;YACbE,IAAAA,GAAO,CAAA,CAAC,CAAA;YACRA,IAAI,CAACoJ,MAAOG,CAAAA,IAAI,CAAC,GAAGH,OAAO6H,KAAK,KAACc,wKAAiBkJ,EAAAA,GAAAA,EAAK3R,QAAWxJ,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;YAClEmL,MAAAA,CAAOnK,IAAI,CAACmY,UAAAA,KAAWlH,wKAAAA,EAAiBkJ,GAAKzR,EAAAA,QAAAA,CAAAA,EAAWxJ,MAAMqJ,MAAQvJ,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;QACxE,CAAA;QACA,OAAOmL,MAAAA,CAAAA;IACT,CAAA;IAKAiH,qBAAAA,CAAsBC,KAAK,EAAEtL,KAAK,EAAEoE,MAAM,EAAEzC,KAAK,EAAE;QACjD,KAAK,CAAC0J,qBAAqB,CAACC,KAAAA,EAAOtL,OAAOoE,MAAQzC,EAAAA,KAAAA,CAAAA,CAAAA;QAClD,MAAM4Q,MAAAA,GAASnO,OAAO+N,OAAO,CAAA;QAC7B,IAAII,UAAUvS,KAAU,KAAA,IAAI,CAACqE,WAAW,CAAC7B,MAAM,EAAE;YAE/C8I,KAAMlT,CAAAA,GAAG,GAAGD,IAAKC,CAAAA,GAAG,CAACkT,KAAMlT,CAAAA,GAAG,EAAEma,MAAAA,CAAOna,GAAG,CAAA,CAAA;YAC1CkT,KAAM/Q,CAAAA,GAAG,GAAGpC,IAAKoC,CAAAA,GAAG,CAAC+Q,KAAM/Q,CAAAA,GAAG,EAAEgY,MAAAA,CAAOhY,GAAG,CAAA,CAAA;SAC3C;IACH,CAAA;IAMAwR,cAAiB,GAAA;QACf,OAAO,CAAA,CAAA;IACT,CAAA;IAKAC,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM,EAAC9B,MAAAA,EAAQC,MAAAA,EAAO,GAAGF,IAAAA,CAAAA;QACzB,MAAM8B,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,MAAM8Q,MAAAA,GAASnO,OAAO+N,OAAO,CAAA;QAC7B,MAAM1S,KAAAA,GAAQ6S,WAAWC,MACrB,CAAA,GAAA,GAAA,GAAMA,OAAOla,KAAK,GAAG,OAAOka,MAAOnS,CAAAA,GAAG,GAAG,GACzC,GAAA,EAAA,GAAKoC,OAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC,CAAC,CAAA;QAErD,OAAO;YACLuJ,KAAO,EAAA,EAAA,GAAK1J,OAAO2J,gBAAgB,CAAC9H,MAAM,CAAC7B,MAAAA,CAAOG,IAAI,CAAC,CAAA;YACvDjD,KAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAEA6H,UAAa,GAAA;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI,CAAA;QAE/B,KAAK,CAACI,UAAU,EAAA,CAAA;QAEhB,MAAMhF,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B/B,IAAAA,CAAKX,KAAK,GAAG,IAAI,CAACmG,UAAU,GAAGnG,KAAK,CAAA;IACtC,CAAA;IAEA1E,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMQ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAI,CAAC6K,cAAc,CAAC5M,IAAKD,CAAAA,IAAI,EAAE,CAAA,EAAGC,IAAKD,CAAAA,IAAI,CAACrJ,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;IACtD,CAAA;IAEAoN,cAAAA,CAAemF,IAAI,EAAEhc,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACvC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAM,EAACL,KAAK,EAAE4C,WAAa,EAAA,EAAC7B,MAAAA,EAAO,EAAC,GAAG,IAAI,CAAA;QAC3C,MAAMqQ,IAAAA,GAAOrQ,OAAO8R,YAAY,EAAA,CAAA;QAChC,MAAM1B,UAAAA,GAAapQ,OAAOkQ,YAAY,EAAA,CAAA;QACtC,MAAM1B,KAAAA,GAAQ,IAAI,CAACuD,SAAS,EAAA,CAAA;QAC5B,MAAM,EAACzG,aAAa,EAAED,cAAc,EAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC3V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QAEtE,IAAK,IAAI7I,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQgS,OAAOpR,CAAK,EAAA,CAAA;YAC1C,MAAMmL,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAClS,CAAAA,CAAAA,CAAAA;YAC9B,MAAMub,OAAAA,GAAUtL,aAASmI,wKAAcjN,EAAAA,MAAM,CAAC5B,MAAOE,CAAAA,IAAI,CAAC,CAAI,GAAA;gBAACmQ,IAAAA;gBAAM4B,IAAM5B,EAAAA,IAAAA;YAAI,CAAA,GAAI,IAAI,CAAC6B,wBAAwB,CAACzb,CAAE,CAAA,CAAA;YACnH,MAAM0b,OAAU,GAAA,IAAI,CAACC,wBAAwB,CAAC3b,CAAG+X,EAAAA,KAAAA,CAAAA,CAAAA;YACjD,MAAMrP,KAAQ,GAACyC,CAAAA,MAAAA,CAAOE,OAAO,IAAI,CAAA,CAAC,CAAA,CAAG9B,MAAOE,CAAAA,IAAI,CAAC,CAAA;YAEjD,MAAM/D,UAAa,GAAA;gBACjBiU,UAAAA;gBACAC,IAAAA,EAAM2B,QAAQ3B,IAAI;gBAClBI,kBAAAA,EAAoB,CAACtR,KAAAA,IAAS2Q,UAAWlO,CAAAA,MAAAA,CAAO+N,OAAO,CAAA,IAAM1Q,KAAUE,KAAAA,KAAAA,CAAM+C,IAAI,IAAIjD,KAAUE,KAAAA,KAAAA,CAAMgD,OAAO;gBAC5GnE,CAAAA,EAAGoS,UAAa4B,GAAAA,OAAAA,CAAQC,IAAI,GAAGE,QAAQE,MAAM;gBAC7CpU,CAAAA,EAAGmS,UAAa+B,GAAAA,OAAAA,CAAQE,MAAM,GAAGL,QAAQC,IAAI;gBAC7CK,MAAQlC,EAAAA,UAAAA,GAAa+B,QAAQjV,IAAI,GAAGvH,KAAKwY,GAAG,CAAC6D,OAAQ9U,CAAAA,IAAI,CAAC;gBAC1DqV,KAAOnC,EAAAA,UAAAA,GAAaza,KAAKwY,GAAG,CAAC6D,QAAQ9U,IAAI,CAAA,GAAIiV,QAAQjV,IAAI;YAC3D,CAAA,CAAA;YAEA,IAAImO,cAAgB,EAAA;gBAClBlP,UAAAA,CAAWI,OAAO,GAAG+O,aAAiB,IAAA,IAAI,CAACnB,yBAAyB,CAAC1T,CAAGob,EAAAA,IAAI,CAACpb,CAAE,CAAA,CAAC+D,MAAM,GAAG,WAAW8E,IAAI,CAAA,CAAA;aACzG;YACD,MAAM/C,OAAAA,GAAUJ,WAAWI,OAAO,IAAIsV,IAAI,CAACpb,CAAAA,CAAE,CAAC8F,OAAO,CAAA;YACrD+T,gBAAiBnU,CAAAA,UAAAA,EAAYI,SAAS4C,KAAOF,EAAAA,KAAAA,CAAAA,CAAAA;YAC7CgS,gBAAiB9U,CAAAA,UAAAA,EAAYI,OAASiS,EAAAA,KAAAA,CAAMI,KAAK,CAAA,CAAA;YACjD,IAAI,CAAChD,aAAa,CAACiG,IAAI,CAACpb,CAAE,CAAA,EAAEA,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;QAC7C,CAAA;IACF,CAAA;IASAkT,UAAWC,CAAAA,IAAI,EAAEzP,SAAS,EAAE;QAC1B,MAAM,EAACjD,MAAM,EAAC,GAAG,IAAI,CAAC8B,WAAW,CAAA;QACjC,MAAM/C,WAAWiB,MAAO0B,CAAAA,uBAAuB,CAAC,IAAI,CAAC0C,KAAK,CAAA,CACvD3B,MAAM,CAAC1C,CAAAA,IAAQA,GAAAA,IAAAA,CAAK6B,UAAU,CAACpF,OAAO,CAAC6U,OAAO,CAAA,CAAA;QACjD,MAAM7Q,OAAUR,GAAAA,MAAAA,CAAOxD,OAAO,CAACgE,OAAO,CAAA;QACtC,MAAMY,SAAS,EAAE,CAAA;QACjB,MAAMuR,aAAAA,GAAgB,IAAI,CAAC7Q,WAAW,CAACF,UAAU,CAACgH,SAAS,CAAC3F,SAAAA,CAAAA,CAAAA;QAC5D,MAAM2P,cAAcD,aAAiBA,IAAAA,aAAa,CAAC3S,MAAAA,CAAOG,IAAI,CAAC,CAAA;QAE/D,MAAM0S,QAAAA,GAAW,CAAC9S,IAAS,GAAA;YACzB,MAAM8B,MAAS9B,GAAAA,IAAAA,CAAKqD,OAAO,CAAC0P,IAAI,CAAClc,CAAAA,IAAAA,GAAQA,IAAI,CAACoJ,MAAOG,CAAAA,IAAI,CAAC,KAAKyS,WAAAA,CAAAA,CAAAA;YAC/D,MAAMG,GAAAA,GAAMlR,UAAUA,MAAM,CAAC9B,KAAKE,MAAM,CAACE,IAAI,CAAC,CAAA;YAE9C,QAAI2O,wKAAAA,EAAciE,GAAQC,CAAAA,IAAAA,KAAAA,CAAMD,GAAM,CAAA,EAAA;gBACpC,OAAO,IAAI,CAAA;aACZ;QACH,CAAA,CAAA;QAEA,KAAK,MAAMhT,QAAQhB,QAAU,CAAA;YAC3B,IAAIkE,SAAAA,KAAcnO,SAAa+d,IAAAA,QAAAA,CAAS9S,IAAO,CAAA,EAAA;gBAC7C,SAAS;aACV;YAOD,IAAIS,YAAY,KAAK,IAAIY,MAAO6R,CAAAA,OAAO,CAAClT,IAAKX,CAAAA,KAAK,CAAM,KAAA,CAAC,KAC1DoB,OAAY1L,KAAAA,SAAAA,IAAaiL,IAAKX,CAAAA,KAAK,KAAKtK,SAAY,EAAA;gBACjDsM,MAAO1J,CAAAA,IAAI,CAACqI,IAAAA,CAAKX,KAAK,CAAA,CAAA;aACvB;YACD,IAAIW,IAAAA,CAAKb,KAAK,KAAKwT,IAAM,EAAA;gBACvB,MAAM;aACP;QACH,CAAA;QAKA,IAAI,CAACtR,MAAO3K,CAAAA,MAAM,EAAE;YAClB2K,MAAAA,CAAO1J,IAAI,CAAC5C,SAAAA,CAAAA,CAAAA;SACb;QAED,OAAOsM,MAAAA,CAAAA;IACT,CAAA;IAMA8R,cAAAA,CAAehU,KAAK,EAAE;QACpB,OAAO,IAAI,CAACuT,UAAU,CAAC3d,SAAAA,EAAWoK,OAAOzI,MAAM,CAAA;IACjD,CAAA;IAEA0c,aAAgB,GAAA;QACd,OAAO,IAAI,CAACC,QAAQ,EAAA,CAAG3c,MAAM,CAAA;IAC/B,CAAA;IAEA4c,2BAA8B,GAAA;QAC5B,MAAM7Q,MAAS,GAAA,IAAI,CAACxN,KAAK,CAACwN,MAAM,CAAA;QAChC,MAAM8Q,eAAe,IAAI,CAACte,KAAK,CAACwH,OAAO,CAACwJ,SAAS,CAAA;QACjD,OAAOrK,MAAOC,CAAAA,IAAI,CAAC4G,MAAAA,CAAAA,CAAQC,MAAM,CAACxG,CAAAA,GAAOuG,GAAAA,MAAM,CAACvG,GAAI,CAAA,CAACkE,IAAI,KAAKmT,cAAc5Q,KAAK,EAAA,CAAA;IACnF,CAAA;IAEA0Q,QAAW,GAAA;QACT,MAAMjT,OAAO,CAAA,CAAC,CAAA;QACd,MAAMoT,gBAAAA,GAAmB,IAAI,CAACF,2BAA2B,EAAA,CAAA;QACzD,KAAK,MAAMvQ,WAAW,IAAI,CAAC9N,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAE;YAC9CpG,IAAI,KAACwF,wKACH,EAAA,IAAI,CAAC3Q,KAAK,CAACwH,OAAO,CAACwJ,SAAS,KAAK,GAAMlD,GAAAA,OAAAA,CAAQ4C,OAAO,GAAG5C,OAAAA,CAAQ+C,OAAO,EAAE0N,gBAAAA,CAAAA,CAC1E,GAAG,IAAI,CAAA;QACX,CAAA;QACA,OAAO5X,MAAAA,CAAOC,IAAI,CAACuE,IAAAA,CAAAA,CAAAA;IACrB,CAAA;IAUAqT,eAAehU,YAAY,EAAEiU,IAAI,EAAExQ,SAAS,EAAE;QAC5C,MAAM7B,MAAS,GAAA,IAAI,CAACqR,UAAU,CAACjT,YAAcyD,EAAAA,SAAAA,CAAAA,CAAAA;QAC7C,MAAM/D,KAAAA,GAAQ,IAACuU,KAAS3e,SACpBsM,GAAAA,MAAAA,CAAO6R,OAAO,CAACQ,IACf,CAAA,GAAA,CAAC,CAAC,CAAA;QAEN,OAAQvU,UAAU,CAAC,CAAA,GACfkC,OAAO3K,MAAM,GAAG,IAChByI,KAAK,CAAA;IACX,CAAA;IAKA8S,SAAY,GAAA;QACV,MAAMrU,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAMuD,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM9B,MAAAA,GAASD,KAAKC,MAAM,CAAA;QAC1B,MAAMkP,SAAS,EAAE,CAAA;QACjB,IAAIxY,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAOc,IAAKD,CAAAA,IAAI,CAACrJ,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAClDwY,MAAAA,CAAOxX,IAAI,CAACsI,MAAOqO,CAAAA,gBAAgB,CAAC,IAAI,CAACzF,SAAS,CAAClS,CAAE,CAAA,CAACsJ,MAAOG,CAAAA,IAAI,CAAC,EAAEzJ,CAAAA,CAAAA,CAAAA,CAAAA;QACtE,CAAA;QAEA,MAAMkY,YAAAA,GAAejR,KAAKiR,YAAY,CAAA;QACtC,MAAM/Y,GAAAA,GAAM+Y,gBAAgBZ,oBAAqBjO,CAAAA,IAAAA,CAAAA,CAAAA;QAEjD,OAAO;YACLlK,GAAAA;YACAqZ,MAAAA;YACApZ,KAAAA,EAAOkK,OAAO0T,WAAW;YACzB7V,GAAAA,EAAKmC,OAAO2T,SAAS;YACrBjF,UAAY,EAAA,IAAI,CAACwE,cAAc,EAAA;YAC/BzV,KAAOuC,EAAAA,MAAAA;YACPqR,OAAAA,EAAS1T,KAAK0T,OAAO;YAErBxC,KAAAA,EAAOD,eAAe,CAAIjR,GAAAA,IAAAA,CAAKoR,kBAAkB,GAAGpR,KAAKqR,aAAa;QACxE,CAAA,CAAA;IACF,CAAA;IAMAmD,wBAAAA,CAAyBjT,KAAK,EAAE;QAC9B,MAAM,EAAC4C,aAAa,EAAC7B,MAAAA,EAAQ2D,QAAQ,EAAE1E,KAAOM,EAAAA,YAAAA,EAAa,EAAEhD,OAAS,EAAA,EAAC8T,MAAMsD,SAAS,EAAEC,YAAAA,EAAa,EAAC,GAAG,IAAI,CAAA;QAC7G,MAAM3D,aAAa0D,SAAa,IAAA,CAAA,CAAA;QAChC,MAAM/R,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,MAAM8Q,MAAAA,GAASnO,OAAO+N,OAAO,CAAA;QAC7B,MAAMkE,WAAW/D,UAAWC,CAAAA,MAAAA,CAAAA,CAAAA;QAC5B,IAAI9S,KAAQ2E,GAAAA,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC,CAAA;QAC/B,IAAIrK,KAAQ,GAAA,CAAA,CAAA;QACZ,IAAIW,MAAAA,GAASmN,WAAW,IAAI,CAACzE,UAAU,CAACc,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAY1G,KAAK,CAAA;QACzE,IAAIgV,IAAM/U,EAAAA,IAAAA,CAAAA;QAEV,IAAI1G,WAAWyG,KAAO,EAAA;YACpBpH,KAAAA,GAAQW,MAASyG,GAAAA,KAAAA,CAAAA;YACjBzG,MAASyG,GAAAA,KAAAA,CAAAA;SACV;QAED,IAAI4W,QAAU,EAAA;YACZ5W,KAAAA,GAAQ8S,OAAON,QAAQ,CAAA;YACvBjZ,MAAAA,GAASuZ,MAAOL,CAAAA,MAAM,GAAGK,MAAAA,CAAON,QAAQ,CAAA;YAExC,IAAIxS,UAAU,CAAK0C,QAAAA,wKAAAA,EAAK1C,eAAW0C,wKAAKoQ,EAAAA,MAAAA,CAAOL,MAAM,CAAG,EAAA;gBACtD7Z,KAAQ,GAAA,CAAA,CAAA;aACT;YACDA,KAASoH,IAAAA,KAAAA,CAAAA;SACV;QAED,MAAMsS,aAAa,KAACV,wKAAAA,EAAc8E,cAAc,CAACE,QAAAA,GAAWF,YAAY9d,KAAK,CAAA;QAC7E,IAAIwa,IAAAA,GAAOrQ,MAAOoO,CAAAA,gBAAgB,CAACmB,UAAAA,CAAAA,CAAAA;QAEnC,IAAI,IAAI,CAACxa,KAAK,CAAC+e,iBAAiB,CAAC7U,KAAQ,CAAA,EAAA;YACvCgT,IAAOjS,GAAAA,MAAAA,CAAOoO,gBAAgB,CAACvY,KAAQW,GAAAA,MAAAA,CAAAA,CAAAA;SAClC,MAAA;YAELyb,IAAO5B,GAAAA,IAAAA,CAAAA;SACR;QAEDnT,IAAAA,GAAO+U,IAAO5B,GAAAA,IAAAA,CAAAA;QAEd,IAAI1a,IAAKwY,CAAAA,GAAG,CAACjR,IAAAA,CAAAA,GAAQ0W,YAAc,EAAA;YACjC1W,IAAO8S,GAAAA,OAAAA,CAAQ9S,IAAM8C,EAAAA,MAAAA,EAAQiQ,UAAc2D,CAAAA,GAAAA,YAAAA,CAAAA;YAC3C,IAAI3W,UAAUgT,UAAY,EAAA;gBACxBI,IAAAA,IAAQnT,IAAO,GAAA,CAAA,CAAA;aAChB;YACD,MAAM6W,UAAAA,GAAa/T,MAAOgU,CAAAA,kBAAkB,CAAC,CAAA,CAAA,CAAA;YAC7C,MAAMC,QAAAA,GAAWjU,MAAOgU,CAAAA,kBAAkB,CAAC,CAAA,CAAA,CAAA;YAC3C,MAAMpe,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAACme,UAAYE,EAAAA,QAAAA,CAAAA,CAAAA;YACjC,MAAMlc,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACgc,UAAYE,EAAAA,QAAAA,CAAAA,CAAAA;YACjC5D,IAAAA,GAAO1a,KAAKoC,GAAG,CAACpC,KAAKC,GAAG,CAACya,MAAMtY,GAAMnC,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA;YACrCqc,IAAAA,GAAO5B,IAAOnT,GAAAA,IAAAA,CAAAA;YAEd,IAAIyG,QAAAA,IAAY,CAACkQ,QAAU,EAAA;gBAEzBjS,MAAAA,CAAOE,OAAO,CAAC9B,MAAAA,CAAOE,IAAI,CAAC,CAACmC,aAAa,CAAC9C,YAAa,CAAA,GAAGS,OAAOkU,gBAAgB,CAACjC,IAAQjS,CAAAA,GAAAA,MAAAA,CAAOkU,gBAAgB,CAAC7D,IAAAA,CAAAA,CAAAA;aACnH;SACF;QAED,IAAIA,IAASrQ,KAAAA,MAAAA,CAAOoO,gBAAgB,CAAC6B,UAAa,CAAA,EAAA;YAChD,MAAMkE,eAAWxU,wKAAKzC,EAAAA,IAAAA,CAAAA,GAAQ8C,MAAOoU,CAAAA,oBAAoB,CAACnE,UAAc,CAAA,GAAA,CAAA,CAAA;YACxEI,IAAQ8D,IAAAA,QAAAA,CAAAA;YACRjX,IAAQiX,IAAAA,QAAAA,CAAAA;SACT;QAED,OAAO;YACLjX,IAAAA;YACAmT,IAAAA;YACA4B,IAAAA;YACAI,MAAAA,EAAQJ,OAAO/U,IAAO,GAAA,CAAA;QACxB,CAAA,CAAA;IACF,CAAA;IAKAkV,wBAAyBnT,CAAAA,KAAK,EAAEuP,KAAK,EAAE;QACrC,MAAMhR,KAAAA,GAAQgR,MAAMhR,KAAK,CAAA;QACzB,MAAMjB,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMqW,QAAAA,GAAWrW,QAAQqW,QAAQ,CAAA;QACjC,MAAMyB,eAAkB3O,OAAAA,wKAAAA,EAAenJ,OAAQ8X,CAAAA,eAAe,EAAEC,QAAAA,CAAAA,CAAAA;QAChE,IAAIjC,MAAQnV,EAAAA,IAAAA,CAAAA;QACZ,MAAMqX,SAAAA,GAAY,IAAI,CAACrB,aAAa,EAAA,CAAA;QACpC,IAAI1E,KAAAA,CAAM4C,OAAO,EAAE;YACjB,MAAM3C,UAAAA,GAAamE,WAAW,IAAI,CAACK,cAAc,CAAChU,KAAAA,CAAAA,GAASuP,MAAMC,UAAU,CAAA;YAC3E,MAAM3F,QAAQvM,OAAQoS,CAAAA,YAAY,KAAK,MAAA,GACnCO,0BAA0BjQ,KAAOuP,EAAAA,KAAAA,EAAOjS,OAASkS,EAAAA,UAAAA,GAAa8F,aAC9DhG,wBAAyBtP,CAAAA,KAAAA,EAAOuP,KAAOjS,EAAAA,OAAAA,EAASkS,aAAa8F,SAAU,CAAA,CAAA;YAC3E,MAAMC,MAAAA,GAAS,IAAI,CAACzf,KAAK,CAACwH,OAAO,CAACwJ,SAAS,KAAK,GAAA,GAAM,IAAI,CAACT,UAAU,GAAGG,OAAO,GAAG,IAAI,CAACH,UAAU,GAAGM,OAAO,CAAA;YAC3G,MAAM6O,UAAAA,GAAa,IAAI,CAACtB,QAAQ,EAAA,CAAGH,OAAO,KAACtN,wKAAe8O,EAAAA,MAAAA,EAAQ,IAAI,CAACpB,2BAA2B,EAAA,CAAA,CAAA,CAAA;YAClG,MAAMsB,aAAa,IAAI,CAACnB,cAAc,CAAC,IAAI,CAACtU,KAAK,EAAE,IAAI,CAAC4C,WAAW,CAAC1C,KAAK,EAAEyT,QAAW3T,GAAAA,KAAAA,GAAQpK,SAAS,CAAI4f,GAAAA,UAAAA,CAAAA;YAC3GpC,MAASvJ,GAAAA,KAAAA,CAAMjT,KAAK,GAAIiT,KAAAA,CAAMkG,KAAK,GAAG0F,UAAAA,GAAe5L,KAAMkG,CAAAA,KAAK,GAAG,CAAA,CAAA;YACnE9R,IAAOvH,GAAAA,IAAAA,CAAKC,GAAG,CAACye,eAAAA,EAAiBvL,MAAMkG,KAAK,GAAGlG,MAAM8F,KAAK,CAAA,CAAA;SACrD,MAAA;YAELyD,MAAAA,GAAS7U,KAAM4Q,CAAAA,gBAAgB,CAAC,IAAI,CAACzF,SAAS,CAAC1J,KAAAA,CAAM,CAACzB,KAAAA,CAAM0C,IAAI,CAAC,EAAEjB,KAAAA,CAAAA,CAAAA;YACnE/B,IAAOvH,GAAAA,IAAAA,CAAKC,GAAG,CAACye,eAAAA,EAAiB7F,MAAM5Y,GAAG,GAAG4Y,MAAMI,KAAK,CAAA,CAAA;SACzD;QAGD,OAAO;YACLyB,IAAAA,EAAMgC,SAASnV,IAAO,GAAA,CAAA;YACtB+U,IAAAA,EAAMI,SAASnV,IAAO,GAAA,CAAA;YACtBmV,MAAAA;YACAnV,IAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAEAxG,IAAO,GAAA;QACL,MAAMoJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM7B,MAAAA,GAASF,KAAKE,MAAM,CAAA;QAC1B,MAAM2U,KAAAA,GAAQ7U,KAAKD,IAAI,CAAA;QACvB,MAAMb,IAAAA,GAAO2V,MAAMne,MAAM,CAAA;QACzB,IAAIC,CAAI,GAAA,CAAA,CAAA;QAER,MAAOA,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACpB,IAAI,IAAI,CAACkS,SAAS,CAAClS,CAAE,CAAA,CAACuJ,OAAOE,IAAI,CAAC,KAAK,IAAI,IAAI,CAACyU,KAAK,CAACle,CAAE,CAAA,CAACiN,MAAM,EAAE;gBAC/DiR,KAAK,CAACle,CAAE,CAAA,CAACC,IAAI,CAAC,IAAI,CAACqN,IAAI,CAAA,CAAA;aACxB;QACH,CAAA;IACF,CAAA;AAEF;ACtqBe,MAAM6Q,gBAAyBhR,SAAAA,iBAAAA,CAAAA;IAE5C,OAAOjD,KAAK,QAAS,CAAA;IAKrB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB,EAAA,OAAA;QAEjBrH,UAAY,EAAA;YACV4U,OAAS,EAAA;gBACPnc,IAAM,EAAA,QAAA;gBACNiH,UAAY,EAAA;oBAAC,GAAA;oBAAK,GAAA;oBAAK,aAAA;oBAAe,QAAA;iBAAS;YACjD,CAAA;QACF,CAAA;KACA,CAAA;IAKF,OAAOmV,SAAY,GAAA;QACjB/O,MAAQ,EAAA;YACNvE,CAAG,EAAA;gBACD9I,IAAM,EAAA,QAAA;YACR,CAAA;YACA+I,CAAG,EAAA;gBACD/I,IAAM,EAAA,QAAA;YACR,CAAA;QACF,CAAA;KACA,CAAA;IAEF4P,UAAa,GAAA;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI,CAAA;QAC/B,KAAK,CAACI,UAAU,EAAA,CAAA;IAClB,CAAA;IAMAqD,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QAC3C,MAAMjG,SAAS,KAAK,CAACuG,kBAAkB,CAACrI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;QAC3D,IAAK,IAAIpR,CAAI,GAAA,CAAA,EAAGA,IAAImL,MAAOpL,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;YACtCmL,MAAM,CAACnL,CAAE,CAAA,CAACkZ,OAAO,GAAG,IAAI,CAACxF,yBAAyB,CAAC1T,CAAIZ,GAAAA,KAAAA,CAAAA,CAAOgf,MAAM,CAAA;QACtE,CAAA;QACA,OAAOjT,MAAAA,CAAAA;IACT,CAAA;IAMAqG,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACvC,MAAMjG,SAAS,KAAK,CAACqG,cAAc,CAACnI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;QACvD,IAAK,IAAIpR,CAAI,GAAA,CAAA,EAAGA,IAAImL,MAAOpL,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;YACtC,MAAME,IAAOkJ,GAAAA,IAAI,CAAChK,KAAAA,GAAQY,CAAE,CAAA,CAAA;YAC5BmL,MAAM,CAACnL,CAAE,CAAA,CAACkZ,OAAO,OAAGjK,wKAAAA,EAAe/O,IAAI,CAAC,CAAE,CAAA,EAAE,IAAI,CAACwT,yBAAyB,CAAC1T,CAAAA,GAAIZ,OAAOgf,MAAM,CAAA,CAAA;QAC9F,CAAA;QACA,OAAOjT,MAAAA,CAAAA;IACT,CAAA;IAMAsG,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACxC,MAAMjG,SAAS,KAAK,CAACsG,eAAe,CAACpI,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;QACxD,IAAK,IAAIpR,CAAI,GAAA,CAAA,EAAGA,IAAImL,MAAOpL,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;YACtC,MAAME,IAAOkJ,GAAAA,IAAI,CAAChK,KAAAA,GAAQY,CAAE,CAAA,CAAA;YAC5BmL,MAAM,CAACnL,EAAE,CAACkZ,OAAO,OAAGjK,wKAAe/O,EAAAA,IAAAA,IAAQA,KAAK6H,CAAC,IAAI,CAAC7H,IAAK6H,CAAAA,CAAC,EAAE,IAAI,CAAC2L,yBAAyB,CAAC1T,CAAAA,GAAIZ,OAAOgf,MAAM,CAAA,CAAA;QAChH,CAAA;QACA,OAAOjT,MAAAA,CAAAA;IACT,CAAA;IAKA2H,cAAiB,GAAA;QACf,MAAM1J,IAAO,GAAA,IAAI,CAACgC,WAAW,CAAChC,IAAI,CAAA;QAElC,IAAI9H,GAAM,GAAA,CAAA,CAAA;QACV,IAAK,IAAItB,IAAIoJ,IAAKrJ,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;YACzCsB,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK8H,IAAI,CAACpJ,CAAAA,CAAE,CAACyG,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAAC1T,CAAM,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;QACxE,CAAA;QACA,OAAOsB,MAAM,CAAKA,IAAAA,GAAAA,CAAAA;IACpB,CAAA;IAKAyR,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMwG,MAAAA,GAAS,IAAI,CAACtT,KAAK,CAAC8K,IAAI,CAACwI,MAAM,IAAI,EAAE,CAAA;QAC3C,MAAM,EAACvK,MAAAA,EAAQC,MAAAA,EAAO,GAAG+B,IAAAA,CAAAA;QACzB,MAAM8B,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,MAAMjB,CAAIF,GAAAA,MAAAA,CAAO4L,gBAAgB,CAAC9H,OAAO5D,CAAC,CAAA,CAAA;QAC1C,MAAMC,CAAIF,GAAAA,MAAAA,CAAO2L,gBAAgB,CAAC9H,OAAO3D,CAAC,CAAA,CAAA;QAC1C,MAAMO,CAAAA,GAAIoD,OAAO+N,OAAO,CAAA;QAExB,OAAO;YACLlG,KAAOpB,EAAAA,MAAM,CAACpJ,KAAAA,CAAM,IAAI,EAAA;YACxBhC,KAAO,EAAA,GAAA,GAAMe,CAAI,GAAA,IAAA,GAAOC,CAAKO,GAAAA,CAAAA,IAAI,IAAOA,GAAAA,CAAAA,GAAI,EAAC,CAAK,GAAA,GAAA;QACpD,CAAA,CAAA;IACF,CAAA;IAEA/D,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMwV,MAAS,GAAA,IAAI,CAACjT,WAAW,CAAChC,IAAI,CAAA;QAGpC,IAAI,CAAC6M,cAAc,CAACoI,QAAQ,CAAGA,EAAAA,MAAAA,CAAOte,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;IAChD,CAAA;IAEAoN,cAAAA,CAAeoI,MAAM,EAAEjf,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACzC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAM,EAACS,MAAAA,EAAQC,MAAAA,EAAO,GAAG,IAAI,CAAC6B,WAAW,CAAA;QACzC,MAAM,EAACyJ,aAAa,EAAED,cAAc,EAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC3V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,MAAMyC,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI,CAAA;QAEzB,IAAK,IAAIzJ,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQgS,OAAOpR,CAAK,EAAA,CAAA;YAC1C,MAAMse,KAAAA,GAAQD,MAAM,CAACre,CAAE,CAAA,CAAA;YACvB,MAAMmL,SAAS,CAAC8E,KAAAA,IAAS,IAAI,CAACiC,SAAS,CAAClS,CAAAA,CAAAA,CAAAA;YACxC,MAAM0F,aAAa,CAAA,CAAC,CAAA;YACpB,MAAM6Y,SAAS7Y,UAAU,CAAC4F,KAAM,CAAA,GAAG2E,QAAQ3G,MAAOiU,CAAAA,kBAAkB,CAAC,GAAA,CAAA,GAAOjU,OAAOqO,gBAAgB,CAACxM,MAAM,CAACG,MAAM,CAAC,CAAA;YAClH,MAAMkT,MAAS9Y,GAAAA,UAAU,CAAC6F,KAAAA,CAAM,GAAG0E,KAAQ1G,GAAAA,MAAAA,CAAO8R,YAAY,EAAA,GAAK9R,OAAOoO,gBAAgB,CAACxM,MAAM,CAACI,MAAM,CAAC,CAAA;YAEzG7F,UAAAA,CAAW+Y,IAAI,GAAGnC,KAAMiC,CAAAA,MAAAA,CAAAA,IAAWjC,KAAMkC,CAAAA,MAAAA,CAAAA,CAAAA;YAEzC,IAAI5J,cAAgB,EAAA;gBAClBlP,UAAAA,CAAWI,OAAO,GAAG+O,aAAiB,IAAA,IAAI,CAACnB,yBAAyB,CAAC1T,CAAAA,EAAGse,KAAMva,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA,CAAA;gBAEtG,IAAIoH,KAAO,EAAA;oBACTvK,UAAWI,CAAAA,OAAO,CAACsY,MAAM,GAAG,CAAA,CAAA;iBAC7B;aACF;YAED,IAAI,CAACjJ,aAAa,CAACmJ,KAAAA,EAAOte,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;QAC3C,CAAA;IACF,CAAA;IAOA6K,yBAA0BlL,CAAAA,KAAK,EAAEK,IAAI,EAAE;QACrC,MAAMsC,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,IAAI5C,MAAS,GAAA,KAAK,CAAC8N,yBAAyB,CAAClL,KAAOK,EAAAA,IAAAA,CAAAA,CAAAA;QAGpD,IAAIjD,MAAAA,CAAOM,OAAO,EAAE;YAClBN,MAAAA,GAASX,MAAOyB,CAAAA,MAAM,CAAC,CAAA,GAAId,MAAQ,EAAA;gBAACM,OAAAA,EAAS,KAAK;YAAA,CAAA,CAAA,CAAA;SACnD;QAGD,MAAMkY,MAAAA,GAASxY,OAAOwY,MAAM,CAAA;QAC5B,IAAIvV,SAAS,QAAU,EAAA;YACrBjD,MAAAA,CAAOwY,MAAM,GAAG,CAAA,CAAA;SACjB;QACDxY,MAAAA,CAAOwY,MAAM,QAAInP,wKAAAA,EAAe9D,MAAUA,IAAAA,MAAAA,CAAO+N,OAAO,EAAEkF,MAAAA,CAAAA,CAAAA;QAE1D,OAAOxY,MAAAA,CAAAA;IACT,CAAA;AACF;AC/JA,SAAS8Y,iBAAkBC,CAAAA,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;IAC1D,IAAIC,MAAS,GAAA,CAAA,CAAA;IACb,IAAIC,MAAS,GAAA,CAAA,CAAA;IACb,IAAIC,OAAU,GAAA,CAAA,CAAA;IACd,IAAIC,OAAU,GAAA,CAAA,CAAA;IAEd,IAAIL,gBAAgBM,wKAAK,EAAA;QACvB,MAAMC,UAAaR,GAAAA,QAAAA,CAAAA;QACnB,MAAMS,WAAWD,UAAaP,GAAAA,aAAAA,CAAAA;QAC9B,MAAMS,MAAAA,GAASngB,IAAKogB,CAAAA,GAAG,CAACH,UAAAA,CAAAA,CAAAA;QACxB,MAAMI,MAAAA,GAASrgB,IAAKsgB,CAAAA,GAAG,CAACL,UAAAA,CAAAA,CAAAA;QACxB,MAAMM,IAAAA,GAAOvgB,IAAKogB,CAAAA,GAAG,CAACF,QAAAA,CAAAA,CAAAA;QACtB,MAAMM,IAAAA,GAAOxgB,IAAKsgB,CAAAA,GAAG,CAACJ,QAAAA,CAAAA,CAAAA;QACtB,MAAMO,OAAAA,GAAU,CAACC,KAAOvI,EAAAA,CAAAA,EAAGrP,QAAM6X,wKAAcD,EAAAA,KAAAA,EAAOT,YAAYC,QAAU,EAAA,IAAI,IAAI,CAAIlgB,GAAAA,IAAAA,CAAKoC,GAAG,CAAC+V,CAAAA,EAAGA,IAAIwH,MAAQ7W,EAAAA,CAAAA,EAAGA,IAAI6W,MAAO,CAAA,CAAA;QAC9H,MAAMiB,OAAAA,GAAU,CAACF,KAAOvI,EAAAA,CAAAA,EAAGrP,QAAM6X,wKAAcD,EAAAA,KAAAA,EAAOT,YAAYC,QAAU,EAAA,IAAI,IAAI,CAAC,CAAA,GAAIlgB,KAAKC,GAAG,CAACkY,GAAGA,CAAIwH,GAAAA,MAAAA,EAAQ7W,CAAGA,EAAAA,CAAAA,GAAI6W,MAAO,CAAA,CAAA;QAC/H,MAAMkB,IAAAA,GAAOJ,OAAQ,CAAA,CAAA,EAAGN,MAAQI,EAAAA,IAAAA,CAAAA,CAAAA;QAChC,MAAMO,IAAAA,GAAOL,OAAQM,CAAAA,wKAAAA,EAASV,MAAQG,EAAAA,IAAAA,CAAAA,CAAAA;QACtC,MAAMQ,IAAAA,GAAOJ,OAAQK,CAAAA,wKAAAA,EAAId,MAAQI,EAAAA,IAAAA,CAAAA,CAAAA;QACjC,MAAMW,IAAON,GAAAA,OAAAA,CAAQK,wKAAKF,GAAAA,wKAAAA,EAASV,MAAQG,EAAAA,IAAAA,CAAAA,CAAAA;QAC3CZ,MAAAA,GAAS,CAACiB,IAAOG,GAAAA,IAAG,IAAK,CAAA,CAAA;QACzBnB,MAAAA,GAAS,CAACiB,IAAOI,GAAAA,IAAG,IAAK,CAAA,CAAA;QACzBpB,OAAAA,GAAU,CAAA,CAAEe,IAAOG,GAAAA,IAAG,CAAK,GAAA,CAAA,CAAA;QAC3BjB,OAAAA,GAAU,CAAA,CAAEe,IAAOI,GAAAA,IAAG,CAAK,GAAA,CAAA,CAAA;KAC5B;IACD,OAAO;QAACtB,MAAAA;QAAQC,MAAAA;QAAQC,OAAAA;QAASC,OAAAA;IAAO,CAAA,CAAA;AAC1C,CAAA;AAEe,MAAMoB,kBAA2BlT,SAAAA,iBAAAA,CAAAA;IAE9C,OAAOjD,KAAK,UAAW,CAAA;IAKvB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB,EAAA,KAAA;QACjBjI,SAAW,EAAA;YAETkb,aAAAA,EAAe,IAAI;YAEnBC,YAAAA,EAAc,KAAK;QACrB,CAAA;QACAva,UAAY,EAAA;YACV4U,OAAS,EAAA;gBACPnc,IAAM,EAAA,QAAA;gBACNiH,UAAY,EAAA;oBAAC,eAAA;oBAAiB,UAAA;oBAAY,aAAA;oBAAe,aAAA;oBAAe,YAAA;oBAAc,GAAA;oBAAK,GAAA;oBAAK,QAAA;oBAAU,aAAA;oBAAe,SAAA;iBAAU;YACrI,CAAA;QACF,CAAA;QAEAmZ,MAAQ,EAAA,KAAA;QAGRF,QAAU,EAAA,CAAA;QAGVC,aAAe,EAAA,GAAA;QAGfR,MAAQ,EAAA,MAAA;QAGRoC,OAAS,EAAA,CAAA;QAETlR,SAAW,EAAA,GAAA;KACX,CAAA;IAEF,OAAOmR,WAAc,GAAA;QACnBC,WAAa,EAAA,CAAC3D,OAASA,IAAS,KAAA,SAAA;QAChC4D,UAAAA,EAAY,CAAC5D,IAAAA,GAASA,IAAS,KAAA,SAAA,IAAa,CAACA,IAAAA,CAAK6D,UAAU,CAAC,YAAiB,CAAA,IAAA,CAAC7D,IAAK6D,CAAAA,UAAU,CAAC,iBAAA,CAAA;KAC/F,CAAA;IAKF,OAAO/F,SAAY,GAAA;QACjBgG,WAAa,EAAA,CAAA;QAGbC,OAAS,EAAA;YACPC,MAAQ,EAAA;gBACNnP,MAAQ,EAAA;oBACNoP,cAAAA,CAAAA,CAAe1iB,KAAK,EAAE;wBACpB,MAAM8K,IAAAA,GAAO9K,MAAM8K,IAAI,CAAA;wBACvB,MAAM,EAACwI,MAAQ,EAAA,EAACqP,UAAAA,EAAYC,SAAAA,EAAWhf,KAAK,EAAEif,eAAAA,EAAiBC,YAAAA,EAAa,EAAC,GAAG9iB,KAAMyiB,CAAAA,MAAM,CAACjb,OAAO,CAAA;wBACpG,IAAIsD,IAAAA,CAAKwI,MAAM,CAAC7R,MAAM,IAAIqJ,IAAKyG,CAAAA,QAAQ,CAAC9P,MAAM,EAAE;4BAC9C,OAAOqJ,KAAKwI,MAAM,CAACyP,GAAG,CAAC,CAACrO,OAAOhT,CAAM,GAAA;gCACnC,MAAMqJ,IAAAA,GAAO/K,KAAMwR,CAAAA,cAAc,CAAC,CAAA,CAAA,CAAA;gCAClC,MAAMwR,KAAQjY,GAAAA,IAAAA,CAAK6B,UAAU,CAACsI,QAAQ,CAACxT,CAAAA,CAAAA,CAAAA;gCAEvC,OAAO;oCACLuhB,IAAMvO,EAAAA,KAAAA;oCACNwO,SAAAA,EAAWF,MAAMG,eAAe;oCAChCC,SAAWxf,EAAAA,KAAAA;oCACX+K,MAAQ,EAAA,CAAC3O,KAAM+e,CAAAA,iBAAiB,CAACrd,CAAAA,CAAAA;oCACjC2hB,QAAAA,EAAUL,MAAMM,UAAU;oCAC1BC,cAAAA,EAAgBP,MAAMQ,gBAAgB;oCACtCC,QAAAA,EAAUT,MAAMU,eAAe;oCAC/BC,SAAAA,EAAWX,MAAMY,WAAW;oCAC5BC,WAAAA,EAAab,MAAMc,WAAW;oCAC9BlB,SAAWA,EAAAA,SAAAA;oCACXD,UAAYA,EAAAA,UAAAA;oCACZG,YAAAA,EAAcD,eAAoBC,IAAAA,CAAAA,YAAgBE,IAAAA,KAAAA,CAAMF,YAAY,CAAD;oCAEnE5Y,KAAOxI,EAAAA,CAAAA;gCACT,CAAA,CAAA;4BACF,CAAA,CAAA,CAAA;yBACD;wBACD,OAAO,EAAE,CAAA;oBACX,CAAA;gBACF,CAAA;gBAEAqiB,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAExB,MAAM,EAAE;oBAC7BA,MAAAA,CAAOziB,KAAK,CAACkkB,oBAAoB,CAACD,WAAW/Z,KAAK,CAAA,CAAA;oBAClDuY,MAAOziB,CAAAA,KAAK,CAAC0F,MAAM,EAAA,CAAA;gBACrB,CAAA;YACF,CAAA;QACF,CAAA;KACA,CAAA;IAEFlG,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;QAC/B,KAAK,CAACxK,KAAOwK,EAAAA,YAAAA,CAAAA,CAAAA;QAEb,IAAI,CAACmF,mBAAmB,GAAG,IAAI,CAAA;QAC/B,IAAI,CAACwU,WAAW,GAAGrkB,SAAAA,CAAAA;QACnB,IAAI,CAACskB,WAAW,GAAGtkB,SAAAA,CAAAA;QACnB,IAAI,CAAC4gB,OAAO,GAAG5gB,SAAAA,CAAAA;QACf,IAAI,CAAC6gB,OAAO,GAAG7gB,SAAAA,CAAAA;IACjB,CAAA;IAEAkQ,UAAAA,GAAa,CAAA,CAAC;IAKd6C,KAAM/R,CAAAA,KAAK,EAAEgS,KAAK,EAAE;QAClB,MAAMhI,IAAO,GAAA,IAAI,CAACyF,UAAU,GAAGzF,IAAI,CAAA;QACnC,MAAMC,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAE7B,IAAI,IAAI,CAACuC,QAAQ,KAAK,KAAK,EAAE;YAC3BtE,IAAAA,CAAKqD,OAAO,GAAGtD,IAAAA,CAAAA;SACV,MAAA;YACL,IAAIuZ,SAAS,CAAC3iB,CAAAA,GAAM,CAACoJ,IAAI,CAACpJ,CAAE,CAAA,CAAA;YAE5B,QAAI+E,wKAASqE,EAAAA,IAAI,CAAChK,KAAAA,CAAM,CAAG,EAAA;gBACzB,MAAM,EAACmG,GAAM,GAAA,OAAA,EAAQ,GAAG,IAAI,CAACoI,QAAQ,CAAA;gBACrCgV,MAAAA,GAAS,CAAC3iB,CAAM,GAAA,KAACiS,wKAAAA,EAAiB7I,IAAI,CAACpJ,EAAE,EAAEuF,GAAAA,CAAAA,CAAAA;aAC5C;YAED,IAAIvF,CAAGuI,EAAAA,IAAAA,CAAAA;YACP,IAAKvI,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQgS,KAAK,EAAEpR,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;gBACnDqJ,IAAAA,CAAKqD,OAAO,CAAC1M,CAAE,CAAA,GAAG2iB,MAAO3iB,CAAAA,CAAAA,CAAAA,CAAAA;YAC3B,CAAA;SACD;IACH,CAAA;IAKA4iB,YAAe,GAAA;QACb,WAAOC,wKAAAA,EAAU,IAAI,CAAC/c,OAAO,CAAC6Y,QAAQ,GAAG,EAAA,CAAA,CAAA;IAC3C,CAAA;IAKAmE,iBAAoB,GAAA;QAClB,WAAOD,wKAAU,EAAA,IAAI,CAAC/c,OAAO,CAAC8Y,aAAa,CAAA,CAAA;IAC7C,CAAA;IAMAmE,mBAAsB,GAAA;QACpB,IAAI5jB,GAAM+f,GAAAA,wKAAAA,CAAAA;QACV,IAAI5d,MAAM,CAAC4d,wKAAAA,CAAAA;QAEX,IAAK,IAAIlf,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI,IAAI,CAAC1B,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAE,EAAEC,CAAG,CAAA;YACxD,IAAI,IAAI,CAAC1B,KAAK,CAAC0kB,gBAAgB,CAAChjB,MAAM,IAAI,CAAC1B,KAAK,CAACwR,cAAc,CAAC9P,CAAGvB,CAAAA,CAAAA,IAAI,KAAK,IAAI,CAACiP,KAAK,EAAE;gBACtF,MAAMxC,UAAAA,GAAa,IAAI,CAAC5M,KAAK,CAACwR,cAAc,CAAC9P,GAAGkL,UAAU,CAAA;gBAC1D,MAAMyT,QAAAA,GAAWzT,WAAW0X,YAAY,EAAA,CAAA;gBACxC,MAAMhE,aAAAA,GAAgB1T,WAAW4X,iBAAiB,EAAA,CAAA;gBAElD3jB,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAACA,GAAKwf,EAAAA,QAAAA,CAAAA,CAAAA;gBACpBrd,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAKqd,QAAWC,GAAAA,aAAAA,CAAAA,CAAAA;aAChC;QACH,CAAA;QAEA,OAAO;YACLD,QAAUxf,EAAAA,GAAAA;YACVyf,aAAAA,EAAetd,GAAMnC,GAAAA,GAAAA;QACvB,CAAA,CAAA;IACF,CAAA;IAKA6E,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM,EAACgV,SAAS,EAAC,GAAGhV,KAAAA,CAAAA;QACpB,MAAM+K,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM6X,IAAAA,GAAO5Z,KAAKD,IAAI,CAAA;QACtB,MAAMoX,OAAU,GAAA,IAAI,CAAC0C,iBAAiB,KAAK,IAAI,CAACC,YAAY,CAACF,IAAQ,CAAA,GAAA,IAAI,CAACnd,OAAO,CAAC0a,OAAO,CAAA;QACzF,MAAM4C,UAAUlkB,IAAKoC,CAAAA,GAAG,CAAEpC,CAAAA,IAAKC,CAAAA,GAAG,CAACmU,SAAAA,CAAUwI,KAAK,EAAExI,SAAAA,CAAUuI,MAAM,CAAI2E,GAAAA,OAAM,IAAK,CAAG,EAAA,CAAA,CAAA,CAAA;QACtF,MAAM3B,MAAAA,GAAS3f,IAAKC,CAAAA,GAAG,KAACkkB,wKAAAA,EAAa,IAAI,CAACvd,OAAO,CAAC+Y,MAAM,EAAEuE,OAAU,CAAA,EAAA,CAAA,CAAA,CAAA;QACpE,MAAME,cAAc,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC/a,KAAK,CAAA,CAAA;QAKlD,MAAM,EAACoW,aAAAA,EAAeD,QAAAA,EAAS,GAAG,IAAI,CAACoE,mBAAmB,EAAA,CAAA;QAC1D,MAAM,EAACjE,MAAAA,EAAQC,MAAAA,EAAQC,OAAAA,EAASC,OAAAA,EAAQ,GAAGP,iBAAkBC,CAAAA,QAAAA,EAAUC,aAAeC,EAAAA,MAAAA,CAAAA,CAAAA;QACtF,MAAM2E,WAAW,CAAClQ,UAAUwI,KAAK,GAAG0E,OAAM,IAAK1B,MAAAA,CAAAA;QAC/C,MAAM2E,YAAY,CAACnQ,UAAUuI,MAAM,GAAG2E,OAAM,IAAKzB,MAAAA,CAAAA;QACjD,MAAM2E,SAAAA,GAAYxkB,KAAKoC,GAAG,CAACpC,KAAKC,GAAG,CAACqkB,QAAUC,EAAAA,SAAAA,CAAAA,GAAa,CAAG,EAAA,CAAA,CAAA,CAAA;QAC9D,MAAMf,kBAAciB,wKAAY,EAAA,IAAI,CAAC7d,OAAO,CAACsY,MAAM,EAAEsF,SAAAA,CAAAA,CAAAA;QACrD,MAAMjB,WAAcvjB,GAAAA,IAAAA,CAAKoC,GAAG,CAACohB,cAAc7D,MAAQ,EAAA,CAAA,CAAA,CAAA;QACnD,MAAM+E,YAAAA,GAAe,CAAClB,WAAAA,GAAcD,WAAU,IAAK,IAAI,CAACoB,6BAA6B,EAAA,CAAA;QACrF,IAAI,CAAC7E,OAAO,GAAGA,OAAU0D,GAAAA,WAAAA,CAAAA;QACzB,IAAI,CAACzD,OAAO,GAAGA,OAAUyD,GAAAA,WAAAA,CAAAA;QAEzBrZ,IAAAA,CAAKya,KAAK,GAAG,IAAI,CAACC,cAAc,EAAA,CAAA;QAEhC,IAAI,CAACrB,WAAW,GAAGA,WAAckB,GAAAA,YAAAA,GAAe,IAAI,CAACI,oBAAoB,CAAC,IAAI,CAACxb,KAAK,CAAA,CAAA;QACpF,IAAI,CAACia,WAAW,GAAGvjB,IAAKoC,CAAAA,GAAG,CAAC,IAAI,CAACohB,WAAW,GAAGkB,YAAAA,GAAeN,WAAa,EAAA,CAAA,CAAA,CAAA;QAE3E,IAAI,CAACrN,cAAc,CAACgN,MAAM,CAAGA,EAAAA,IAAAA,CAAKljB,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;IAC5C,CAAA;IAKAob,cAAejkB,CAAAA,CAAC,EAAEiQ,KAAK,EAAE;QACvB,MAAMhJ,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAMuD,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMwT,aAAAA,GAAgB,IAAI,CAACkE,iBAAiB,EAAA,CAAA;QAC5C,IAAI,KAAC7S,IAAShJ,IAAK7B,CAAAA,SAAS,CAACkb,aAAa,IAAK,CAAC,IAAI,CAAChiB,KAAK,CAAC+e,iBAAiB,CAACrd,CAAMqJ,CAAAA,IAAAA,IAAAA,CAAKqD,OAAO,CAAC1M,CAAE,CAAA,KAAK,IAAI,IAAIqJ,IAAKD,CAAAA,IAAI,CAACpJ,CAAAA,CAAE,CAACiN,MAAM,EAAE;YAClI,OAAO,CAAA,CAAA;SACR;QACD,OAAO,IAAI,CAACiX,sBAAsB,CAAC7a,KAAKqD,OAAO,CAAC1M,CAAE,CAAA,GAAG4e,aAAgBM,GAAAA,wKAAAA,CAAAA,CAAAA;IACvE,CAAA;IAEAjJ,cAAAA,CAAegN,IAAI,EAAE7jB,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACvC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMgV,SAAAA,GAAYhV,MAAMgV,SAAS,CAAA;QACjC,MAAMrM,IAAAA,GAAO3I,MAAMwH,OAAO,CAAA;QAC1B,MAAMqe,aAAAA,GAAgBld,KAAK7B,SAAS,CAAA;QACpC,MAAMgf,OAAAA,GAAU,CAAC9Q,SAAAA,CAAU1L,IAAI,GAAG0L,SAAAA,CAAU5L,KAAI,IAAK,CAAA,CAAA;QACrD,MAAM2c,OAAAA,GAAU,CAAC/Q,SAAAA,CAAU7L,GAAG,GAAG6L,SAAAA,CAAU3L,MAAK,IAAK,CAAA,CAAA;QACrD,MAAM4Y,YAAAA,GAAetQ,KAASkU,IAAAA,aAAAA,CAAc5D,YAAY,CAAA;QACxD,MAAMkC,WAAclC,GAAAA,YAAAA,GAAe,CAAI,GAAA,IAAI,CAACkC,WAAW,CAAA;QACvD,MAAMC,WAAcnC,GAAAA,YAAAA,GAAe,CAAI,GAAA,IAAI,CAACmC,WAAW,CAAA;QACvD,MAAM,EAAC7N,aAAa,EAAED,cAAc,EAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC3V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,IAAIsW,UAAAA,GAAa,IAAI,CAACyD,YAAY,EAAA,CAAA;QAClC,IAAI5iB,CAAAA,CAAAA;QAEJ,IAAKA,CAAI,GAAA,CAAA,EAAGA,CAAIZ,GAAAA,KAAAA,EAAO,EAAEY,CAAG,CAAA;YAC1Bmf,UAAAA,IAAc,IAAI,CAAC8E,cAAc,CAACjkB,CAAGiQ,EAAAA,KAAAA,CAAAA,CAAAA;QACvC,CAAA;QAEA,IAAKjQ,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQgS,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;YACtC,MAAM4e,aAAgB,GAAA,IAAI,CAACqF,cAAc,CAACjkB,CAAGiQ,EAAAA,KAAAA,CAAAA,CAAAA;YAC7C,MAAMqU,GAAAA,GAAMrB,IAAI,CAACjjB,CAAE,CAAA,CAAA;YACnB,MAAM0F,UAAa,GAAA;gBACjB6B,CAAG6c,EAAAA,OAAAA,GAAU,IAAI,CAACpF,OAAO;gBACzBxX,CAAG6c,EAAAA,OAAAA,GAAU,IAAI,CAACpF,OAAO;gBACzBE,UAAAA;gBACAC,QAAAA,EAAUD,UAAaP,GAAAA,aAAAA;gBACvBA,aAAAA;gBACA8D,WAAAA;gBACAD,WAAAA;YACF,CAAA,CAAA;YACA,IAAI7N,cAAgB,EAAA;gBAClBlP,UAAAA,CAAWI,OAAO,GAAG+O,aAAiB,IAAA,IAAI,CAACnB,yBAAyB,CAAC1T,CAAAA,EAAGskB,GAAIvgB,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA,CAAA;aACrG;YACDsW,UAAcP,IAAAA,aAAAA,CAAAA;YAEd,IAAI,CAACzJ,aAAa,CAACmP,GAAAA,EAAKtkB,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;QACzC,CAAA;IACF,CAAA;IAEAkb,cAAiB,GAAA;QACf,MAAM1a,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMmZ,QAAAA,GAAWlb,KAAKD,IAAI,CAAA;QAC1B,IAAI0a,KAAQ,GAAA,CAAA,CAAA;QACZ,IAAI9jB,CAAAA,CAAAA;QAEJ,IAAKA,IAAI,CAAGA,EAAAA,CAAAA,GAAIukB,QAASxkB,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;YACpC,MAAMwG,KAAQ6C,GAAAA,IAAAA,CAAKqD,OAAO,CAAC1M,CAAE,CAAA,CAAA;YAC7B,IAAIwG,UAAU,IAAI,IAAI,CAAC8V,KAAM9V,CAAAA,KAAAA,CAAAA,IAAU,IAAI,CAAClI,KAAK,CAAC+e,iBAAiB,CAACrd,MAAM,CAACukB,QAAQ,CAACvkB,CAAE,CAAA,CAACiN,MAAM,EAAE;gBAC7F6W,KAAS5kB,IAAAA,IAAAA,CAAKwY,GAAG,CAAClR,KAAAA,CAAAA,CAAAA;aACnB;QACH,CAAA;QAEA,OAAOsd,KAAAA,CAAAA;IACT,CAAA;IAEAI,sBAAAA,CAAuB1d,KAAK,EAAE;QAC5B,MAAMsd,KAAQ,GAAA,IAAI,CAAC1Y,WAAW,CAAC0Y,KAAK,CAAA;QACpC,IAAIA,KAAQ,GAAA,CAAA,IAAK,CAACxH,KAAAA,CAAM9V,KAAQ,CAAA,EAAA;YAC9B,OAAO0Y,wKAAAA,GAAAA,CAAOhgB,IAAAA,CAAKwY,GAAG,CAAClR,SAASsd,KAAI,CAAA,CAAA;SACrC;QACD,OAAO,CAAA,CAAA;IACT,CAAA;IAEA/Q,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM9M,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMsT,SAAStT,KAAM8K,CAAAA,IAAI,CAACwI,MAAM,IAAI,EAAE,CAAA;QACtC,MAAMpL,KAAAA,OAAQge,wKAAanb,EAAAA,IAAAA,CAAKqD,OAAO,CAAClE,MAAM,EAAElK,KAAAA,CAAMwH,OAAO,CAAC2e,MAAM,CAAA,CAAA;QAEpE,OAAO;YACLzR,KAAOpB,EAAAA,MAAM,CAACpJ,KAAAA,CAAM,IAAI,EAAA;YACxBhC,KAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAEA0c,iBAAAA,CAAkBD,IAAI,EAAE;QACtB,IAAI3hB,GAAM,GAAA,CAAA,CAAA;QACV,MAAMhD,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,IAAI0B,CAAAA,EAAGuI,IAAMc,EAAAA,IAAAA,EAAM6B,UAAYpF,EAAAA,OAAAA,CAAAA;QAE/B,IAAI,CAACmd,IAAM,EAAA;YAET,IAAKjjB,CAAI,GAAA,CAAA,EAAGuI,IAAOjK,GAAAA,KAAAA,CAAM8K,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;gBAC5D,IAAI1B,KAAAA,CAAM0kB,gBAAgB,CAAChjB,CAAI,CAAA,EAAA;oBAC7BqJ,IAAO/K,GAAAA,KAAAA,CAAMwR,cAAc,CAAC9P,CAAAA,CAAAA,CAAAA;oBAC5BijB,IAAAA,GAAO5Z,KAAKD,IAAI,CAAA;oBAChB8B,UAAAA,GAAa7B,KAAK6B,UAAU,CAAA;oBAC5B,MAAM;iBACP;YACH,CAAA;SACD;QAED,IAAI,CAAC+X,IAAM,EAAA;YACT,OAAO,CAAA,CAAA;SACR;QAED,IAAKjjB,CAAAA,GAAI,GAAGuI,IAAO0a,GAAAA,IAAAA,CAAKljB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC7C8F,OAAUoF,GAAAA,UAAAA,CAAWwI,yBAAyB,CAAC1T,CAAAA,CAAAA,CAAAA;YAC/C,IAAI8F,OAAAA,CAAQ4e,WAAW,KAAK,OAAS,EAAA;gBACnCpjB,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACA,GAAKwE,EAAAA,OAAAA,CAAQoc,WAAW,IAAI,CAAA,EAAGpc,OAAQ6e,CAAAA,gBAAgB,IAAI,CAAA,CAAA,CAAA;aAC3E;QACH,CAAA;QACA,OAAOrjB,GAAAA,CAAAA;IACT,CAAA;IAEA6hB,YAAAA,CAAaF,IAAI,EAAE;QACjB,IAAI3hB,GAAM,GAAA,CAAA,CAAA;QAEV,IAAK,IAAItB,CAAI,GAAA,CAAA,EAAGuI,IAAO0a,GAAAA,IAAAA,CAAKljB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACjD,MAAM8F,OAAU,GAAA,IAAI,CAAC4N,yBAAyB,CAAC1T,CAAAA,CAAAA,CAAAA;YAC/CsB,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACA,GAAKwE,EAAAA,OAAAA,CAAQiV,MAAM,IAAI,CAAA,EAAGjV,OAAQ8e,CAAAA,WAAW,IAAI,CAAA,CAAA,CAAA;QAClE,CAAA;QACA,OAAOtjB,GAAAA,CAAAA;IACT,CAAA;IAMA0iB,oBAAAA,CAAqBlb,YAAY,EAAE;QACjC,IAAI+b,gBAAmB,GAAA,CAAA,CAAA;QAEvB,IAAK,IAAI7kB,CAAI,GAAA,CAAA,EAAGA,CAAI8I,GAAAA,YAAAA,EAAc,EAAE9I,CAAG,CAAA;YACrC,IAAI,IAAI,CAAC1B,KAAK,CAAC0kB,gBAAgB,CAAChjB,CAAI,CAAA,EAAA;gBAClC6kB,gBAAoB,IAAA,IAAI,CAACtB,cAAc,CAACvjB,CAAAA,CAAAA,CAAAA;aACzC;QACH,CAAA;QAEA,OAAO6kB,gBAAAA,CAAAA;IACT,CAAA;IAKAtB,cAAAA,CAAeza,YAAY,EAAE;QAC3B,OAAO5J,KAAKoC,GAAG,KAAC2N,wKAAe,EAAA,IAAI,CAAC3Q,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAC/G,YAAAA,CAAa,CAACgc,MAAM,EAAE,CAAI,CAAA,EAAA,CAAA,CAAA,CAAA;IACpF,CAAA;IAMAjB,6BAAgC,GAAA;QAC9B,OAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAAC1lB,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,CAAK,IAAA,CAAA,CAAA;IACvE,CAAA;AACF;ACzYe,MAAMglB,cAAuB5X,SAAAA,iBAAAA,CAAAA;IAE1C,OAAOjD,KAAK,MAAO,CAAA;IAKnB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAoB,EAAA,MAAA;QACpBC,eAAiB,EAAA,OAAA;QAEjB2X,QAAAA,EAAU,IAAI;QACdC,QAAAA,EAAU,KAAK;KACf,CAAA;IAKF,OAAOpK,SAAY,GAAA;QACjB/O,MAAQ,EAAA;YACNgP,OAAS,EAAA;gBACPrc,IAAM,EAAA,UAAA;YACR,CAAA;YACAwc,OAAS,EAAA;gBACPxc,IAAM,EAAA,QAAA;YACR,CAAA;QACF,CAAA;KACA,CAAA;IAEF4P,UAAa,GAAA;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI,CAAA;QAC/B,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAAA;QAC9B,KAAK,CAACG,UAAU,EAAA,CAAA;IAClB,CAAA;IAEArK,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMQ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM,EAACgB,OAAS8Y,EAAAA,IAAAA,EAAM9b,IAAAA,EAAMiV,MAAS,GAAA,EAAE,EAAE8G,QAAQ,EAAC,GAAG9b,IAAAA,CAAAA;QAErD,MAAM+b,kBAAqB,GAAA,IAAI,CAAC9mB,KAAK,CAACwW,mBAAmB,CAAA;QACzD,IAAI,EAAC1V,KAAAA,EAAOgS,KAAAA,EAAM,OAAGiU,wKAAAA,EAAiChc,MAAMgV,MAAQ+G,EAAAA,kBAAAA,CAAAA,CAAAA;QAEpE,IAAI,CAACrX,UAAU,GAAG3O,KAAAA,CAAAA;QAClB,IAAI,CAAC4O,UAAU,GAAGoD,KAAAA,CAAAA;QAElB,QAAIkU,wKAAAA,EAAoBjc,IAAO,CAAA,EAAA;YAC7BjK,KAAQ,GAAA,CAAA,CAAA;YACRgS,KAAAA,GAAQiN,OAAOte,MAAM,CAAA;SACtB;QAGDmlB,IAAAA,CAAKtgB,MAAM,GAAG,IAAI,CAACtG,KAAK,CAAA;QACxB4mB,IAAAA,CAAKK,aAAa,GAAG,IAAI,CAAC/c,KAAK,CAAA;QAC/B0c,IAAAA,CAAKM,UAAU,GAAG,CAAC,CAACL,SAASK,UAAU,CAAA;QACvCN,IAAAA,CAAK7G,MAAM,GAAGA,MAAAA,CAAAA;QAEd,MAAMvY,OAAU,GAAA,IAAI,CAAC2N,4BAA4B,CAAC5K,IAAAA,CAAAA,CAAAA;QAClD,IAAI,CAAC,IAAI,CAAC/C,OAAO,CAACkf,QAAQ,EAAE;YAC1Blf,OAAAA,CAAQoc,WAAW,GAAG,CAAA,CAAA;SACvB;QACDpc,OAAAA,CAAQ2f,OAAO,GAAG,IAAI,CAAC3f,OAAO,CAAC2f,OAAO,CAAA;QACtC,IAAI,CAACtQ,aAAa,CAAC+P,IAAAA,EAAM9mB,SAAW,EAAA;YAClCsnB,QAAAA,EAAU,CAACN,kBAAAA;YACXtf,OAAAA;SACC+C,EAAAA,IAAAA,CAAAA,CAAAA;QAGH,IAAI,CAACoN,cAAc,CAACoI,MAAAA,EAAQjf,OAAOgS,KAAOvI,EAAAA,IAAAA,CAAAA,CAAAA;IAC5C,CAAA;IAEAoN,cAAAA,CAAeoI,MAAM,EAAEjf,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACzC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAM,EAACS,MAAAA,EAAQC,MAAAA,EAAQ2D,QAAAA,EAAUiY,QAAAA,EAAS,GAAG,IAAI,CAAC/Z,WAAW,CAAA;QAC7D,MAAM,EAACyJ,aAAa,EAAED,cAAc,EAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC3V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,MAAMyC,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI,CAAA;QACzB,MAAM,EAACwb,QAAAA,EAAUQ,OAAAA,EAAQ,GAAG,IAAI,CAAC3f,OAAO,CAAA;QACxC,MAAM6f,YAAeC,OAAAA,wKAAAA,EAASX,QAAYA,CAAAA,GAAAA,QAAAA,GAAW3a,OAAOE,iBAAiB,CAAA;QAC7E,MAAMqb,YAAAA,GAAe,IAAI,CAACvnB,KAAK,CAACwW,mBAAmB,IAAI7E,SAASpH,IAAS,KAAA,MAAA,CAAA;QACzE,MAAM1B,MAAM/H,KAAQgS,GAAAA,KAAAA,CAAAA;QACpB,MAAM0U,WAAAA,GAAczH,OAAOte,MAAM,CAAA;QACjC,IAAIgmB,aAAa3mB,KAAQ,GAAA,CAAA,IAAK,IAAI,CAAC8S,SAAS,CAAC9S,KAAQ,GAAA,CAAA,CAAA,CAAA;QAErD,IAAK,IAAIY,CAAI,GAAA,CAAA,EAAGA,CAAI8lB,GAAAA,WAAAA,EAAa,EAAE9lB,CAAG,CAAA;YACpC,MAAMse,KAAAA,GAAQD,MAAM,CAACre,CAAE,CAAA,CAAA;YACvB,MAAM0F,UAAamgB,GAAAA,YAAAA,GAAevH,KAAQ,GAAA,CAAA,CAAE,CAAA;YAE5C,IAAIte,CAAAA,GAAIZ,KAASY,IAAAA,CAAAA,IAAKmH,GAAK,EAAA;gBACzBzB,UAAW+Y,CAAAA,IAAI,GAAG,IAAI,CAAA;gBACtB,SAAS;aACV;YAED,MAAMtT,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAClS,CAAAA,CAAAA,CAAAA;YAC9B,MAAMgmB,QAAW5N,OAAAA,wKAAAA,EAAcjN,MAAM,CAACI,KAAM,CAAA,CAAA,CAAA;YAC5C,MAAMgT,MAAAA,GAAS7Y,UAAU,CAAC4F,KAAM,CAAA,GAAGhC,MAAOqO,CAAAA,gBAAgB,CAACxM,MAAM,CAACG,KAAAA,CAAM,EAAEtL,CAAAA,CAAAA,CAAAA;YAC1E,MAAMwe,MAAAA,GAAS9Y,UAAU,CAAC6F,KAAM,CAAA,GAAG0E,SAAS+V,QAAWzc,GAAAA,MAAAA,CAAO8R,YAAY,EAAA,GAAK9R,MAAOoO,CAAAA,gBAAgB,CAACzK,QAAW,GAAA,IAAI,CAACzE,UAAU,CAACc,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAY/B,MAAM,CAACI,KAAM,CAAA,EAAEvL,CAAE,CAAA,CAAA;YAE/K0F,UAAAA,CAAW+Y,IAAI,GAAGnC,KAAMiC,CAAAA,MAAAA,CAAAA,IAAWjC,MAAMkC,MAAWwH,CAAAA,IAAAA,QAAAA,CAAAA;YACpDtgB,UAAAA,CAAWlE,IAAI,GAAGxB,CAAI,GAAA,CAAA,IAAK,IAAM0X,CAAAA,GAAG,CAACvM,MAAM,CAACG,KAAM,CAAA,GAAGya,UAAU,CAACza,MAAM,CAAKqa,GAAAA,YAAAA,CAAAA;YAC3E,IAAIF,OAAS,EAAA;gBACX/f,UAAAA,CAAWyF,MAAM,GAAGA,MAAAA,CAAAA;gBACpBzF,UAAAA,CAAW8G,GAAG,GAAG2Y,QAAS/b,CAAAA,IAAI,CAACpJ,CAAE,CAAA,CAAA;aAClC;YAED,IAAI4U,cAAgB,EAAA;gBAClBlP,UAAAA,CAAWI,OAAO,GAAG+O,aAAiB,IAAA,IAAI,CAACnB,yBAAyB,CAAC1T,CAAAA,EAAGse,KAAMva,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA,CAAA;aACvG;YAED,IAAI,CAACgd,YAAc,EAAA;gBACjB,IAAI,CAAC1Q,aAAa,CAACmJ,KAAAA,EAAOte,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;aAC1C;YAEDkd,UAAa5a,GAAAA,MAAAA,CAAAA;QACf,CAAA;IACF,CAAA;IAKA2H,cAAiB,GAAA;QACf,MAAMzJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMgB,OAAAA,GAAU/C,KAAK+C,OAAO,CAAA;QAC5B,MAAM6Z,MAAAA,GAAS7Z,QAAQtG,OAAO,IAAIsG,QAAQtG,OAAO,CAACoc,WAAW,IAAI,CAAA,CAAA;QACjE,MAAM9Y,IAAOC,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE,CAAA;QAC5B,IAAI,CAACA,IAAKrJ,CAAAA,MAAM,EAAE;YAChB,OAAOkmB,MAAAA,CAAAA;SACR;QACD,MAAMC,UAAAA,GAAa9c,IAAI,CAAC,CAAE,CAAA,CAAC3C,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAAC,CAAA,CAAA,CAAA,CAAA;QAC/D,MAAMyS,YAAY/c,IAAI,CAACA,IAAKrJ,CAAAA,MAAM,GAAG,CAAE,CAAA,CAAC0G,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAACtK,IAAAA,CAAKrJ,MAAM,GAAG,CAAA,CAAA,CAAA,CAAA;QAC1F,OAAOb,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,EAAQC,YAAYC,SAAa,CAAA,GAAA,CAAA,CAAA;IACnD,CAAA;IAEAlmB,IAAO,GAAA;QACL,MAAMoJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B/B,IAAAA,CAAK+C,OAAO,CAACga,mBAAmB,CAAC,IAAI,CAAC9nB,KAAK,CAACgV,SAAS,EAAEjK,IAAKC,CAAAA,MAAM,CAACG,IAAI,CAAA,CAAA;QACvE,KAAK,CAACxJ,IAAI,EAAA,CAAA;IACZ,CAAA;AACF;AC3Ie,MAAMomB,mBAA4BlZ,SAAAA,iBAAAA,CAAAA;IAE/C,OAAOjD,KAAK,WAAY,CAAA;IAKxB,OAAO/E,QAAW,GAAA;QAChBkI,eAAiB,EAAA,KAAA;QACjBjI,SAAW,EAAA;YACTkb,aAAAA,EAAe,IAAI;YACnBC,YAAAA,EAAc,IAAI;QACpB,CAAA;QACAva,UAAY,EAAA;YACV4U,OAAS,EAAA;gBACPnc,IAAM,EAAA,QAAA;gBACNiH,UAAY,EAAA;oBAAC,GAAA;oBAAK,GAAA;oBAAK,YAAA;oBAAc,UAAA;oBAAY,aAAA;oBAAe,aAAA;iBAAc;YAChF,CAAA;QACF,CAAA;QACA4J,SAAW,EAAA,GAAA;QACX6P,UAAY,EAAA,CAAA;KACZ,CAAA;IAKF,OAAOtE,SAAY,GAAA;QACjBgG,WAAa,EAAA,CAAA;QAEbC,OAAS,EAAA;YACPC,MAAQ,EAAA;gBACNnP,MAAQ,EAAA;oBACNoP,cAAAA,CAAAA,CAAe1iB,KAAK,EAAE;wBACpB,MAAM8K,IAAAA,GAAO9K,MAAM8K,IAAI,CAAA;wBACvB,IAAIA,IAAAA,CAAKwI,MAAM,CAAC7R,MAAM,IAAIqJ,IAAKyG,CAAAA,QAAQ,CAAC9P,MAAM,EAAE;4BAC9C,MAAM,EAAC6R,MAAAA,EAAQ,EAACqP,UAAAA,EAAY/e,KAAAA,EAAM,EAAC,GAAG5D,KAAMyiB,CAAAA,MAAM,CAACjb,OAAO,CAAA;4BAE1D,OAAOsD,KAAKwI,MAAM,CAACyP,GAAG,CAAC,CAACrO,OAAOhT,CAAM,GAAA;gCACnC,MAAMqJ,IAAAA,GAAO/K,KAAMwR,CAAAA,cAAc,CAAC,CAAA,CAAA,CAAA;gCAClC,MAAMwR,KAAQjY,GAAAA,IAAAA,CAAK6B,UAAU,CAACsI,QAAQ,CAACxT,CAAAA,CAAAA,CAAAA;gCAEvC,OAAO;oCACLuhB,IAAMvO,EAAAA,KAAAA;oCACNwO,SAAAA,EAAWF,MAAMG,eAAe;oCAChCU,WAAAA,EAAab,MAAMc,WAAW;oCAC9BV,SAAWxf,EAAAA,KAAAA;oCACX+f,SAAAA,EAAWX,MAAMY,WAAW;oCAC5BjB,UAAYA,EAAAA,UAAAA;oCACZhU,MAAQ,EAAA,CAAC3O,KAAM+e,CAAAA,iBAAiB,CAACrd,CAAAA,CAAAA;oCAGjCwI,KAAOxI,EAAAA,CAAAA;gCACT,CAAA,CAAA;4BACF,CAAA,CAAA,CAAA;yBACD;wBACD,OAAO,EAAE,CAAA;oBACX,CAAA;gBACF,CAAA;gBAEAqiB,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAExB,MAAM,EAAE;oBAC7BA,MAAAA,CAAOziB,KAAK,CAACkkB,oBAAoB,CAACD,WAAW/Z,KAAK,CAAA,CAAA;oBAClDuY,MAAOziB,CAAAA,KAAK,CAAC0F,MAAM,EAAA,CAAA;gBACrB,CAAA;YACF,CAAA;QACF,CAAA;QAEA8H,MAAQ,EAAA;YACN/D,CAAG,EAAA;gBACDtJ,IAAM,EAAA,cAAA;gBACN6nB,UAAY,EAAA;oBACVC,OAAAA,EAAS,KAAK;gBAChB,CAAA;gBACArL,WAAAA,EAAa,IAAI;gBACjBF,IAAM,EAAA;oBACJwL,QAAAA,EAAU,IAAI;gBAChB,CAAA;gBACAC,WAAa,EAAA;oBACXF,OAAAA,EAAS,KAAK;gBAChB,CAAA;gBACApH,UAAY,EAAA,CAAA;YACd,CAAA;QACF,CAAA;KACA,CAAA;IAEFrhB,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;QAC/B,KAAK,CAACxK,KAAOwK,EAAAA,YAAAA,CAAAA,CAAAA;QAEb,IAAI,CAAC2Z,WAAW,GAAGrkB,SAAAA,CAAAA;QACnB,IAAI,CAACskB,WAAW,GAAGtkB,SAAAA,CAAAA;IACrB,CAAA;IAEA2U,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM9M,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMsT,SAAStT,KAAM8K,CAAAA,IAAI,CAACwI,MAAM,IAAI,EAAE,CAAA;QACtC,MAAMpL,KAAQge,OAAAA,wKAAAA,EAAanb,IAAKqD,CAAAA,OAAO,CAAClE,KAAAA,CAAM,CAACT,CAAC,EAAEzJ,KAAAA,CAAMwH,OAAO,CAAC2e,MAAM,CAAA,CAAA;QAEtE,OAAO;YACLzR,KAAOpB,EAAAA,MAAM,CAACpJ,KAAAA,CAAM,IAAI,EAAA;YACxBhC,KAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAEAiL,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACxC,OAAOsV,wKAAAA,CAA4BC,IAAI,CAAC,IAAI,CAAEtd,CAAAA,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;IACnE,CAAA;IAEApN,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMoa,IAAO,GAAA,IAAI,CAAC7X,WAAW,CAAChC,IAAI,CAAA;QAElC,IAAI,CAACwd,aAAa,EAAA,CAAA;QAClB,IAAI,CAAC3Q,cAAc,CAACgN,MAAM,CAAGA,EAAAA,IAAAA,CAAKljB,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;IAC5C,CAAA;IAKA2J,SAAY,GAAA;QACV,MAAMnJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMiH,KAAQ,GAAA;YAAClT,GAAAA,EAAKmL,OAAOE,iBAAiB;YAAElJ,GAAAA,EAAKgJ,OAAOC,iBAAiB;QAAA,CAAA,CAAA;QAE3ElB,IAAAA,CAAKD,IAAI,CAACtK,OAAO,CAAC,CAACwN,SAAS9D,KAAU,GAAA;YACpC,MAAM2C,SAAS,IAAI,CAAC+G,SAAS,CAAC1J,OAAOT,CAAC,CAAA;YAEtC,IAAI,CAACuU,MAAMnR,MAAW,CAAA,IAAA,IAAI,CAAC7M,KAAK,CAAC+e,iBAAiB,CAAC7U,KAAQ,CAAA,EAAA;gBACzD,IAAI2C,MAAAA,GAASkH,KAAMlT,CAAAA,GAAG,EAAE;oBACtBkT,KAAAA,CAAMlT,GAAG,GAAGgM,MAAAA,CAAAA;iBACb;gBAED,IAAIA,MAAAA,GAASkH,KAAM/Q,CAAAA,GAAG,EAAE;oBACtB+Q,KAAAA,CAAM/Q,GAAG,GAAG6J,MAAAA,CAAAA;iBACb;aACF;QACH,CAAA,CAAA,CAAA;QAEA,OAAOkH,KAAAA,CAAAA;IACT,CAAA;IAKAuU,aAAgB,GAAA;QACd,MAAMtoB,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMgV,SAAAA,GAAYhV,MAAMgV,SAAS,CAAA;QACjC,MAAMrM,IAAAA,GAAO3I,MAAMwH,OAAO,CAAA;QAC1B,MAAM+gB,OAAU3nB,GAAAA,IAAAA,CAAKC,GAAG,CAACmU,UAAU5L,KAAK,GAAG4L,SAAU1L,CAAAA,IAAI,EAAE0L,SAAAA,CAAU3L,MAAM,GAAG2L,UAAU7L,GAAG,CAAA,CAAA;QAE3F,MAAMib,WAAcxjB,GAAAA,IAAAA,CAAKoC,GAAG,CAACulB,UAAU,CAAG,EAAA,CAAA,CAAA,CAAA;QAC1C,MAAMpE,WAAcvjB,GAAAA,IAAAA,CAAKoC,GAAG,CAAC2F,KAAK6f,gBAAgB,GAAG,WAACpE,GAAc,GAAQzb,GAAAA,IAAAA,CAAK6f,gBAAgB,GAAI,CAAC,EAAE,CAAA,CAAA,CAAA;QACxG,MAAMlD,eAAe,CAAClB,cAAcD,WAAU,IAAKnkB,MAAMyoB,sBAAsB,EAAA,CAAA;QAE/E,IAAI,CAACrE,WAAW,GAAGA,cAAekB,YAAe,GAAA,IAAI,CAACpb,KAAK,CAAA;QAC3D,IAAI,CAACia,WAAW,GAAG,IAAI,CAACC,WAAW,GAAGkB,YAAAA,CAAAA;IACxC,CAAA;IAEA3N,cAAAA,CAAegN,IAAI,EAAE7jB,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACvC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM2I,IAAAA,GAAO3I,MAAMwH,OAAO,CAAA;QAC1B,MAAMqe,aAAAA,GAAgBld,KAAK7B,SAAS,CAAA;QACpC,MAAM2B,KAAQ,GAAA,IAAI,CAACqE,WAAW,CAACwE,MAAM,CAAA;QACrC,MAAMwU,OAAAA,GAAUrd,MAAMigB,OAAO,CAAA;QAC7B,MAAM3C,OAAAA,GAAUtd,MAAMkgB,OAAO,CAAA;QAC7B,MAAMC,iBAAoBngB,GAAAA,KAAAA,CAAMogB,aAAa,CAAC,KAAK,GAAMhH,GAAAA,wKAAAA,CAAAA;QACzD,IAAIP,KAAQsH,GAAAA,iBAAAA,CAAAA;QACZ,IAAIlnB,CAAAA,CAAAA;QAEJ,MAAMonB,YAAe,GAAA,GAAA,GAAM,IAAI,CAACC,oBAAoB,EAAA,CAAA;QAEpD,IAAKrnB,CAAI,GAAA,CAAA,EAAGA,CAAIZ,GAAAA,KAAAA,EAAO,EAAEY,CAAG,CAAA;YAC1B4f,KAAAA,IAAS,IAAI,CAAC0H,aAAa,CAACtnB,GAAG6I,IAAMue,EAAAA,YAAAA,CAAAA,CAAAA;QACvC,CAAA;QACA,IAAKpnB,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQgS,OAAOpR,CAAK,EAAA,CAAA;YACtC,MAAMskB,GAAAA,GAAMrB,IAAI,CAACjjB,CAAE,CAAA,CAAA;YACnB,IAAImf,UAAaS,GAAAA,KAAAA,CAAAA;YACjB,IAAIR,WAAWQ,KAAQ,GAAA,IAAI,CAAC0H,aAAa,CAACtnB,GAAG6I,IAAMue,EAAAA,YAAAA,CAAAA,CAAAA;YACnD,IAAI1E,WAAcpkB,GAAAA,KAAAA,CAAM+e,iBAAiB,CAACrd,KAAK+G,KAAMwgB,CAAAA,6BAA6B,CAAC,IAAI,CAACrV,SAAS,CAAClS,CAAG+H,CAAAA,CAAAA,CAAC,IAAI,CAAC,CAAA;YAC3G6X,KAAQR,GAAAA,QAAAA,CAAAA;YAER,IAAInP,KAAO,EAAA;gBACT,IAAIkU,aAAAA,CAAc5D,YAAY,EAAE;oBAC9BmC,WAAc,GAAA,CAAA,CAAA;iBACf;gBACD,IAAIyB,aAAAA,CAAc7D,aAAa,EAAE;oBAC/BnB,UAAAA,GAAaC,QAAW8H,GAAAA,iBAAAA,CAAAA;iBACzB;aACF;YAED,MAAMxhB,UAAa,GAAA;gBACjB6B,CAAG6c,EAAAA,OAAAA;gBACH5c,CAAG6c,EAAAA,OAAAA;gBACH5B,WAAa,EAAA,CAAA;gBACbC,WAAAA;gBACAvD,UAAAA;gBACAC,QAAAA;gBACAtZ,OAAS,EAAA,IAAI,CAAC4N,yBAAyB,CAAC1T,GAAGskB,GAAIvgB,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA;YACzE,CAAA,CAAA;YAEA,IAAI,CAACsM,aAAa,CAACmP,GAAAA,EAAKtkB,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;QACzC,CAAA;IACF,CAAA;IAEAwe,oBAAuB,GAAA;QACrB,MAAMhe,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,IAAIgG,KAAQ,GAAA,CAAA,CAAA;QAEZ/H,IAAAA,CAAKD,IAAI,CAACtK,OAAO,CAAC,CAACwN,SAAS9D,KAAU,GAAA;YACpC,IAAI,CAAC8T,KAAAA,CAAM,IAAI,CAACpK,SAAS,CAAC1J,KAAAA,CAAAA,CAAOT,CAAC,CAAA,IAAK,IAAI,CAACzJ,KAAK,CAAC+e,iBAAiB,CAAC7U,KAAQ,CAAA,EAAA;gBAC1E4I,KAAAA,EAAAA,CAAAA;aACD;QACH,CAAA,CAAA,CAAA;QAEA,OAAOA,KAAAA,CAAAA;IACT,CAAA;IAKAkW,cAAc9e,KAAK,EAAEK,IAAI,EAAEue,YAAY,EAAE;QACvC,OAAO,IAAI,CAAC9oB,KAAK,CAAC+e,iBAAiB,CAAC7U,KAChCqa,CAAAA,OAAAA,wKAAAA,EAAU,IAAI,CAACnP,yBAAyB,CAAClL,KAAAA,EAAOK,MAAM+W,KAAK,IAAIwH,gBAC/D,CAAC,CAAA;IACP,CAAA;AACF;AC/Ne,MAAMI,aAAsBnH,SAAAA,kBAAAA,CAAAA;IAEzC,OAAOnW,KAAK,KAAM,CAAA;IAKlB,OAAO/E,QAAW,GAAA;QAEhB0Z,MAAQ,EAAA,CAAA;QAGRF,QAAU,EAAA,CAAA;QAGVC,aAAe,EAAA,GAAA;QAGfR,MAAQ,EAAA,MAAA;KACR,CAAA;AACJ;ACpBe,MAAMqJ,eAAwBta,SAAAA,iBAAAA,CAAAA;IAE3C,OAAOjD,KAAK,OAAQ,CAAA;IAKpB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAoB,EAAA,MAAA;QACpBC,eAAiB,EAAA,OAAA;QACjBiC,SAAW,EAAA,GAAA;QACX0V,QAAAA,EAAU,IAAI;QACd5R,QAAU,EAAA;YACR8R,IAAM,EAAA;gBACJ1W,IAAM,EAAA,OAAA;YACR,CAAA;QACF,CAAA;KACA,CAAA;IAKF,OAAOqM,SAAY,GAAA;QACjBgG,WAAa,EAAA,CAAA;QAEb/U,MAAQ,EAAA;YACN/D,CAAG,EAAA;gBACDtJ,IAAM,EAAA,cAAA;YACR,CAAA;QACF,CAAA;KACA,CAAA;IAKFsU,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMe,MAAS,GAAA,IAAI,CAAC6B,WAAW,CAAC7B,MAAM,CAAA;QACtC,MAAM4B,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAE9B,OAAO;YACLwK,KAAAA,EAAOzJ,MAAOsI,CAAAA,SAAS,EAAE,CAACrJ,KAAM,CAAA;YAChChC,KAAO,EAAA,EAAA,GAAK+C,OAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC,CAAA;QACzD,CAAA,CAAA;IACF,CAAA;IAEAgI,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAE;QACxC,OAAOsV,wKAAAA,CAA4BC,IAAI,CAAC,IAAI,CAAEtd,CAAAA,IAAAA,EAAMD,MAAMhK,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;IACnE,CAAA;IAEApN,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMQ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM8Z,IAAAA,GAAO7b,KAAK+C,OAAO,CAAA;QACzB,MAAMiS,MAAShV,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE,CAAA;QAC9B,MAAMwI,MAASvI,GAAAA,IAAAA,CAAKC,MAAM,CAACuI,SAAS,EAAA,CAAA;QAGpCqT,IAAAA,CAAK7G,MAAM,GAAGA,MAAAA,CAAAA;QAEd,IAAIxV,SAAS,QAAU,EAAA;YACrB,MAAM/C,OAAU,GAAA,IAAI,CAAC2N,4BAA4B,CAAC5K,IAAAA,CAAAA,CAAAA;YAClD,IAAI,CAAC,IAAI,CAAC/C,OAAO,CAACkf,QAAQ,EAAE;gBAC1Blf,OAAAA,CAAQoc,WAAW,GAAG,CAAA,CAAA;aACvB;YAED,MAAMxc,UAAa,GAAA;gBACjBlC,KAAAA,EAAO,IAAI;gBACXkkB,SAAAA,EAAW9V,MAAO7R,CAAAA,MAAM,KAAKse,MAAAA,CAAOte,MAAM;gBAC1C+F,OAAAA;YACF,CAAA,CAAA;YAEA,IAAI,CAACqP,aAAa,CAAC+P,IAAAA,EAAM9mB,WAAWsH,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;SACjD;QAGD,IAAI,CAACoN,cAAc,CAACoI,QAAQ,CAAGA,EAAAA,MAAAA,CAAOte,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;IAChD,CAAA;IAEAoN,cAAAA,CAAeoI,MAAM,EAAEjf,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACzC,MAAM9B,KAAQ,GAAA,IAAI,CAACqE,WAAW,CAACwE,MAAM,CAAA;QACrC,MAAMK,QAAQpH,IAAS,KAAA,OAAA,CAAA;QAEvB,IAAK,IAAI7I,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQgS,OAAOpR,CAAK,EAAA,CAAA;YAC1C,MAAMse,KAAAA,GAAQD,MAAM,CAACre,CAAE,CAAA,CAAA;YACvB,MAAM8F,OAAAA,GAAU,IAAI,CAAC4N,yBAAyB,CAAC1T,GAAGse,KAAMva,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA,CAAA;YAChF,MAAM8e,aAAAA,GAAgB5gB,KAAM6gB,CAAAA,wBAAwB,CAAC5nB,CAAAA,EAAG,IAAI,CAACkS,SAAS,CAAClS,CAAAA,CAAAA,CAAG+H,CAAC,CAAA,CAAA;YAE3E,MAAMR,IAAI0I,KAAQlJ,GAAAA,KAAAA,CAAMigB,OAAO,GAAGW,cAAcpgB,CAAC,CAAA;YACjD,MAAMC,IAAIyI,KAAQlJ,GAAAA,KAAAA,CAAMkgB,OAAO,GAAGU,cAAcngB,CAAC,CAAA;YAEjD,MAAM9B,UAAa,GAAA;gBACjB6B,CAAAA;gBACAC,CAAAA;gBACAoY,KAAAA,EAAO+H,cAAc/H,KAAK;gBAC1BnB,IAAMnC,EAAAA,KAAAA,CAAM/U,MAAM+U,KAAM9U,CAAAA,CAAAA,CAAAA;gBACxB1B,OAAAA;YACF,CAAA,CAAA;YAEA,IAAI,CAACqP,aAAa,CAACmJ,KAAAA,EAAOte,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;QAC3C,CAAA;IACF,CAAA;AACF;AClGe,MAAMgf,iBAA0B1a,SAAAA,iBAAAA,CAAAA;IAE7C,OAAOjD,KAAK,SAAU,CAAA;IAKtB,OAAO/E,QAAW,GAAA;QAChBiI,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB,EAAA,OAAA;QACjB2X,QAAAA,EAAU,KAAK;QACfxW,IAAAA,EAAM,KAAK;KACX,CAAA;IAKF,OAAOqM,SAAY,GAAA;QAEjBiN,WAAa,EAAA;YACXjf,IAAM,EAAA,OAAA;QACR,CAAA;QAEAiD,MAAQ,EAAA;YACNvE,CAAG,EAAA;gBACD9I,IAAM,EAAA,QAAA;YACR,CAAA;YACA+I,CAAG,EAAA;gBACD/I,IAAM,EAAA,QAAA;YACR,CAAA;QACF,CAAA;KACA,CAAA;IAKFsU,gBAAAA,CAAiBvK,KAAK,EAAE;QACtB,MAAMa,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMwG,MAAAA,GAAS,IAAI,CAACtT,KAAK,CAAC8K,IAAI,CAACwI,MAAM,IAAI,EAAE,CAAA;QAC3C,MAAM,EAACvK,MAAAA,EAAQC,MAAAA,EAAO,GAAG+B,IAAAA,CAAAA;QACzB,MAAM8B,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAC1J,KAAAA,CAAAA,CAAAA;QAC9B,MAAMjB,CAAIF,GAAAA,MAAAA,CAAO4L,gBAAgB,CAAC9H,OAAO5D,CAAC,CAAA,CAAA;QAC1C,MAAMC,CAAIF,GAAAA,MAAAA,CAAO2L,gBAAgB,CAAC9H,OAAO3D,CAAC,CAAA,CAAA;QAE1C,OAAO;YACLwL,KAAOpB,EAAAA,MAAM,CAACpJ,KAAAA,CAAM,IAAI,EAAA;YACxBhC,KAAO,EAAA,GAAA,GAAMe,CAAI,GAAA,IAAA,GAAOC,CAAI,GAAA,GAAA;QAC9B,CAAA,CAAA;IACF,CAAA;IAEAxD,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMQ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAM,EAAChC,IAAMiV,EAAAA,MAAAA,GAAS,EAAE,EAAC,GAAGhV,IAAAA,CAAAA;QAE5B,MAAM+b,kBAAqB,GAAA,IAAI,CAAC9mB,KAAK,CAACwW,mBAAmB,CAAA;QACzD,IAAI,EAAC1V,KAAAA,EAAOgS,KAAAA,EAAM,OAAGiU,wKAAAA,EAAiChc,MAAMgV,MAAQ+G,EAAAA,kBAAAA,CAAAA,CAAAA;QAEpE,IAAI,CAACrX,UAAU,GAAG3O,KAAAA,CAAAA;QAClB,IAAI,CAAC4O,UAAU,GAAGoD,KAAAA,CAAAA;QAElB,QAAIkU,wKAAAA,EAAoBjc,IAAO,CAAA,EAAA;YAC7BjK,KAAQ,GAAA,CAAA,CAAA;YACRgS,KAAAA,GAAQiN,OAAOte,MAAM,CAAA;SACtB;QAED,IAAI,IAAI,CAAC+F,OAAO,CAACkf,QAAQ,EAAE;YAGzB,IAAI,CAAC,IAAI,CAAC5X,kBAAkB,EAAE;gBAC5B,IAAI,CAACmB,WAAW,EAAA,CAAA;aACjB;YACD,MAAM,EAACnC,OAAS8Y,EAAAA,IAAAA,EAAMC,QAAAA,EAAS,GAAG9b,IAAAA,CAAAA;YAGlC6b,IAAAA,CAAKtgB,MAAM,GAAG,IAAI,CAACtG,KAAK,CAAA;YACxB4mB,IAAAA,CAAKK,aAAa,GAAG,IAAI,CAAC/c,KAAK,CAAA;YAC/B0c,IAAAA,CAAKM,UAAU,GAAG,CAAC,CAACL,SAASK,UAAU,CAAA;YACvCN,IAAAA,CAAK7G,MAAM,GAAGA,MAAAA,CAAAA;YAEd,MAAMvY,OAAU,GAAA,IAAI,CAAC2N,4BAA4B,CAAC5K,IAAAA,CAAAA,CAAAA;YAClD/C,OAAAA,CAAQ2f,OAAO,GAAG,IAAI,CAAC3f,OAAO,CAAC2f,OAAO,CAAA;YACtC,IAAI,CAACtQ,aAAa,CAAC+P,IAAAA,EAAM9mB,SAAW,EAAA;gBAClCsnB,QAAAA,EAAU,CAACN,kBAAAA;gBACXtf,OAAAA;aACC+C,EAAAA,IAAAA,CAAAA,CAAAA;QACL,CAAA,MAAO,IAAI,IAAI,CAACuE,kBAAkB,EAAE;YAElC,OAAO/D,KAAK+C,OAAO,CAAA;YACnB,IAAI,CAACgB,kBAAkB,GAAG,KAAK,CAAA;SAChC;QAGD,IAAI,CAAC6I,cAAc,CAACoI,MAAAA,EAAQjf,OAAOgS,KAAOvI,EAAAA,IAAAA,CAAAA,CAAAA;IAC5C,CAAA;IAEA0F,WAAc,GAAA;QACZ,MAAM,EAACyW,QAAQ,EAAC,GAAG,IAAI,CAAClf,OAAO,CAAA;QAE/B,IAAI,CAAC,IAAI,CAACsH,kBAAkB,IAAI4X,QAAU,EAAA;YACxC,IAAI,CAAC5X,kBAAkB,GAAG,IAAI,CAAC9O,KAAK,CAACypB,QAAQ,CAACC,UAAU,CAAC,MAAA,CAAA,CAAA;SAC1D;QAED,KAAK,CAACzZ,WAAW,EAAA,CAAA;IACnB,CAAA;IAEA0H,cAAAA,CAAeoI,MAAM,EAAEjf,KAAK,EAAEgS,KAAK,EAAEvI,IAAI,EAAE;QACzC,MAAMoH,QAAQpH,IAAS,KAAA,OAAA,CAAA;QACvB,MAAM,EAACS,MAAAA,EAAQC,MAAAA,EAAQ2D,QAAAA,EAAUiY,QAAAA,EAAS,GAAG,IAAI,CAAC/Z,WAAW,CAAA;QAC7D,MAAM4J,SAAY,GAAA,IAAI,CAACtB,yBAAyB,CAACtU,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACxD,MAAMgM,aAAgB,GAAA,IAAI,CAACF,gBAAgB,CAACK,SAAAA,CAAAA,CAAAA;QAC5C,MAAMJ,cAAiB,GAAA,IAAI,CAACA,cAAc,CAAC/L,IAAMgM,EAAAA,aAAAA,CAAAA,CAAAA;QACjD,MAAMvJ,KAAAA,GAAQhC,OAAOG,IAAI,CAAA;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI,CAAA;QACzB,MAAM,EAACwb,QAAAA,EAAUQ,OAAAA,EAAQ,GAAG,IAAI,CAAC3f,OAAO,CAAA;QACxC,MAAM6f,YAAeC,OAAAA,wKAAAA,EAASX,QAAYA,CAAAA,GAAAA,QAAAA,GAAW3a,OAAOE,iBAAiB,CAAA;QAC7E,MAAMqb,YAAAA,GAAe,IAAI,CAACvnB,KAAK,CAACwW,mBAAmB,IAAI7E,SAASpH,IAAS,KAAA,MAAA,CAAA;QACzE,IAAIkd,aAAa3mB,KAAQ,GAAA,CAAA,IAAK,IAAI,CAAC8S,SAAS,CAAC9S,KAAQ,GAAA,CAAA,CAAA,CAAA;QAErD,IAAK,IAAIY,CAAIZ,GAAAA,KAAAA,EAAOY,IAAIZ,KAAQgS,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;YAC1C,MAAMse,KAAAA,GAAQD,MAAM,CAACre,CAAE,CAAA,CAAA;YACvB,MAAMmL,MAAS,GAAA,IAAI,CAAC+G,SAAS,CAAClS,CAAAA,CAAAA,CAAAA;YAC9B,MAAM0F,UAAamgB,GAAAA,YAAAA,GAAevH,KAAQ,GAAA,CAAA,CAAE,CAAA;YAC5C,MAAM0H,QAAW5N,OAAAA,wKAAAA,EAAcjN,MAAM,CAACI,KAAM,CAAA,CAAA,CAAA;YAC5C,MAAMgT,MAAAA,GAAS7Y,UAAU,CAAC4F,KAAM,CAAA,GAAGhC,MAAOqO,CAAAA,gBAAgB,CAACxM,MAAM,CAACG,KAAAA,CAAM,EAAEtL,CAAAA,CAAAA,CAAAA;YAC1E,MAAMwe,MAAAA,GAAS9Y,UAAU,CAAC6F,KAAM,CAAA,GAAG0E,SAAS+V,QAAWzc,GAAAA,MAAAA,CAAO8R,YAAY,EAAA,GAAK9R,MAAOoO,CAAAA,gBAAgB,CAACzK,QAAW,GAAA,IAAI,CAACzE,UAAU,CAACc,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAY/B,MAAM,CAACI,KAAM,CAAA,EAAEvL,CAAE,CAAA,CAAA;YAE/K0F,UAAAA,CAAW+Y,IAAI,GAAGnC,KAAMiC,CAAAA,MAAAA,CAAAA,IAAWjC,MAAMkC,MAAWwH,CAAAA,IAAAA,QAAAA,CAAAA;YACpDtgB,UAAAA,CAAWlE,IAAI,GAAGxB,CAAI,GAAA,CAAA,IAAK,IAAM0X,CAAAA,GAAG,CAACvM,MAAM,CAACG,KAAM,CAAA,GAAGya,UAAU,CAACza,MAAM,CAAKqa,GAAAA,YAAAA,CAAAA;YAC3E,IAAIF,OAAS,EAAA;gBACX/f,UAAAA,CAAWyF,MAAM,GAAGA,MAAAA,CAAAA;gBACpBzF,UAAAA,CAAW8G,GAAG,GAAG2Y,QAAS/b,CAAAA,IAAI,CAACpJ,CAAE,CAAA,CAAA;aAClC;YAED,IAAI4U,cAAgB,EAAA;gBAClBlP,UAAAA,CAAWI,OAAO,GAAG+O,aAAiB,IAAA,IAAI,CAACnB,yBAAyB,CAAC1T,CAAAA,EAAGse,KAAMva,CAAAA,MAAM,GAAG,QAAA,GAAW8E,IAAI,CAAA,CAAA;aACvG;YAED,IAAI,CAACgd,YAAc,EAAA;gBACjB,IAAI,CAAC1Q,aAAa,CAACmJ,KAAAA,EAAOte,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;aAC1C;YAEDkd,UAAa5a,GAAAA,MAAAA,CAAAA;QACf,CAAA;QAEA,IAAI,CAAC+J,mBAAmB,CAACL,aAAAA,EAAehM,IAAMmM,EAAAA,SAAAA,CAAAA,CAAAA;IAChD,CAAA;IAKAlC,cAAiB,GAAA;QACf,MAAMzJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW,CAAA;QAC7B,MAAMhC,IAAOC,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE,CAAA;QAE5B,IAAI,CAAC,IAAI,CAACtD,OAAO,CAACkf,QAAQ,EAAE;YAC1B,IAAI1jB,GAAM,GAAA,CAAA,CAAA;YACV,IAAK,IAAItB,IAAIoJ,IAAKrJ,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;gBACzCsB,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK8H,IAAI,CAACpJ,CAAAA,CAAE,CAACyG,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAAC1T,CAAM,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;YACxE,CAAA;YACA,OAAOsB,MAAM,CAAKA,IAAAA,GAAAA,CAAAA;SACnB;QAED,MAAM8K,OAAAA,GAAU/C,KAAK+C,OAAO,CAAA;QAC5B,MAAM6Z,MAAAA,GAAS7Z,QAAQtG,OAAO,IAAIsG,QAAQtG,OAAO,CAACoc,WAAW,IAAI,CAAA,CAAA;QAEjE,IAAI,CAAC9Y,IAAKrJ,CAAAA,MAAM,EAAE;YAChB,OAAOkmB,MAAAA,CAAAA;SACR;QAED,MAAMC,UAAAA,GAAa9c,IAAI,CAAC,CAAE,CAAA,CAAC3C,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAAC,CAAA,CAAA,CAAA,CAAA;QAC/D,MAAMyS,YAAY/c,IAAI,CAACA,IAAKrJ,CAAAA,MAAM,GAAG,CAAE,CAAA,CAAC0G,IAAI,CAAC,IAAI,CAACiN,yBAAyB,CAACtK,IAAAA,CAAKrJ,MAAM,GAAG,CAAA,CAAA,CAAA,CAAA;QAC1F,OAAOb,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,EAAQC,YAAYC,SAAa,CAAA,GAAA,CAAA,CAAA;IACnD,CAAA;AACF;;;;;;;;;;;;AClLA;;;;CAIC,GA4DD,SAAS8B,QAAwB,GAAA;IAC/B,MAAM,IAAIC,MAAM,iFAAmF,CAAA,CAAA;AACrG,CAAA;AAEA;;;;;CAKC,GACD,MAAMC,eAAAA,CAAAA;IAEJ;;;;;;;;;MAUA,OAAOC,QACLC,CAAAA,OAAiD,EACjD;QACApjB,MAAAA,CAAOyB,MAAM,CAACyhB,eAAgBG,CAAAA,SAAS,EAAED,OAAAA,CAAAA,CAAAA;IAC3C,CAAA;IAESviB,OAAmB,CAAA;IAE5BhI,WAAAA,CAAYgI,OAAmB,CAAE;QAC/B,IAAI,CAACA,OAAO,GAAGA,OAAAA,IAAW,CAAA,CAAC,CAAA;IAC7B,CAAA;;IAGAyiB,IAAAA,GAAO,CAAA,CAAC;IAERC,OAAiD,GAAA;QAC/C,OAAOP,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEA9W,KAAuB,GAAA;QACrB,OAAO8W,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEAQ,MAAiB,GAAA;QACf,OAAOR,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEAhnB,GAAc,GAAA;QACZ,OAAOgnB,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEAS,IAAe,GAAA;QACb,OAAOT,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEAU,OAAkB,GAAA;QAChB,OAAOV,QAAAA,EAAAA,CAAAA;IACT,CAAA;IAEAW,KAAgB,GAAA;QACd,OAAOX,QAAAA,EAAAA,CAAAA;IACT,CAAA;AACF,CAAA;AAEA,IAAA,WAAe;IACbY,KAAOV,EAAAA,eAAAA;AAMT,CAAE;ACpHF,SAASW,aAAaC,OAAO,EAAEtf,IAAI,EAAEjD,KAAK,EAAEwiB,SAAS,EAAE;IACrD,MAAM,EAAC9d,UAAU,EAAE9B,IAAAA,EAAMkI,OAAAA,EAAQ,GAAGyX,OAAAA,CAAAA;IACpC,MAAMzf,MAAS4B,GAAAA,UAAAA,CAAWE,WAAW,CAAC9B,MAAM,CAAA;IAC5C,MAAM2b,WAAW8D,OAAQ3c,CAAAA,OAAO,GAAG2c,OAAQ3c,CAAAA,OAAO,CAACtG,OAAO,GAAGijB,OAAQ3c,CAAAA,OAAO,CAACtG,OAAO,CAACmf,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAA;IAE3G,IAAI3b,MAAAA,IAAUG,IAASH,KAAAA,MAAAA,CAAOG,IAAI,IAAIA,SAAS,GAAO6H,IAAAA,OAAAA,IAAWlI,IAAKrJ,CAAAA,MAAM,EAAE;QAC5E,MAAMkpB,YAAe3f,GAAAA,MAAAA,CAAO4f,cAAc,GAAGC,wKAAAA,GAAgBC,wKAAY,CAAA;QACzE,IAAI,CAACJ,SAAW,EAAA;YACd,MAAMK,MAAAA,GAASJ,YAAa7f,CAAAA,IAAAA,EAAMK,IAAMjD,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,IAAIye,QAAU,EAAA;gBACZ,MAAM,EAAC1b,MAAAA,EAAO,GAAG2B,WAAWE,WAAW,CAAA;gBACvC,MAAM,EAACsB,OAAO,EAAC,GAAGqc,OAAAA,CAAAA;gBAElB,MAAMO,mBAAAA,GAAuB5c,QAC1B6c,KAAK,CAAC,GAAGF,MAAOG,CAAAA,EAAE,GAAG,CACrBtiB,CAAAA,CAAAA,OAAO,GACPuiB,SAAS,CACRnL,CAAAA,KAAS,GAAA,KAAClG,wKAAAA,EAAckG,KAAK,CAAC/U,MAAOE,CAAAA,IAAI,CAAC,CAAA,CAAA,CAAA;gBAC9C4f,MAAAA,CAAOG,EAAE,IAAItqB,IAAKoC,CAAAA,GAAG,CAAC,CAAGgoB,EAAAA,mBAAAA,CAAAA,CAAAA;gBAEzB,MAAMI,sBAAuBhd,OAC1B6c,CAAAA,KAAK,CAACF,MAAAA,CAAOM,EAAE,CACfF,CAAAA,SAAS,CACRnL,CAAAA,QAAS,KAAClG,wKAAAA,EAAckG,KAAK,CAAC/U,MAAAA,CAAOE,IAAI,CAAC,CAAA,CAAA,CAAA;gBAC9C4f,MAAAA,CAAOM,EAAE,IAAIzqB,IAAKoC,CAAAA,GAAG,CAAC,CAAGooB,EAAAA,mBAAAA,CAAAA,CAAAA;aAC1B;YACD,OAAOL,MAAAA,CAAAA;SACF,MAAA,IAAIne,UAAW4C,CAAAA,cAAc,EAAE;YAIpC,MAAM8b,EAAAA,GAAKxgB,IAAI,CAAC,CAAE,CAAA,CAAA;YAClB,MAAMiJ,KAAAA,GAAQ,OAAOuX,EAAGC,CAAAA,QAAQ,KAAK,UAAcD,IAAAA,EAAAA,CAAGC,QAAQ,CAACpgB,IAAAA,CAAAA,CAAAA;YAC/D,IAAI4I,KAAO,EAAA;gBACT,MAAMjT,KAAQ6pB,GAAAA,YAAAA,CAAa7f,IAAMK,EAAAA,IAAAA,EAAMjD,KAAQ6L,GAAAA,KAAAA,CAAAA,CAAAA;gBAC/C,MAAMlL,GAAM8hB,GAAAA,YAAAA,CAAa7f,IAAMK,EAAAA,IAAAA,EAAMjD,KAAQ6L,GAAAA,KAAAA,CAAAA,CAAAA;gBAC7C,OAAO;oBAACmX,EAAAA,EAAIpqB,MAAMoqB,EAAE;oBAAEG,EAAAA,EAAIxiB,IAAIwiB,EAAE;gBAAA,CAAA,CAAA;aACjC;SACF;KACF;IAED,OAAO;QAACH,EAAI,EAAA,CAAA;QAAGG,EAAIvgB,EAAAA,IAAAA,CAAKrJ,MAAM,GAAG,CAAA;IAAC,CAAA,CAAA;AACpC,CAAA;AAUA,SAAS+pB,wBAAyBxrB,CAAAA,KAAK,EAAEmL,IAAI,EAAEsgB,QAAQ,EAAEC,OAAO,EAAEhB,SAAS,EAAE;IAC3E,MAAM3gB,QAAAA,GAAW/J,MAAM2rB,4BAA4B,EAAA,CAAA;IACnD,MAAMzjB,KAAAA,GAAQujB,QAAQ,CAACtgB,IAAK,CAAA,CAAA;IAC5B,IAAK,IAAIzJ,CAAI,GAAA,CAAA,EAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QACrD,MAAM,EAACwI,KAAAA,EAAOY,IAAAA,EAAK,GAAGf,QAAQ,CAACrI,CAAE,CAAA,CAAA;QACjC,MAAM,EAACwpB,EAAAA,EAAIG,EAAAA,EAAG,GAAGb,YAAazgB,CAAAA,QAAQ,CAACrI,CAAAA,CAAE,EAAEyJ,IAAAA,EAAMjD,KAAOwiB,EAAAA,SAAAA,CAAAA,CAAAA;QACxD,IAAK,IAAIkB,CAAIV,GAAAA,EAAAA,EAAIU,CAAKP,IAAAA,EAAAA,EAAI,EAAEO,CAAG,CAAA;YAC7B,MAAM5d,OAAAA,GAAUlD,IAAI,CAAC8gB,CAAE,CAAA,CAAA;YACvB,IAAI,CAAC5d,OAAQmS,CAAAA,IAAI,EAAE;gBACjBuL,OAAAA,CAAQ1d,SAAS9D,KAAO0hB,EAAAA,CAAAA,CAAAA,CAAAA;aACzB;QACH,CAAA;IACF,CAAA;AACF,CAAA;AAOA,SAASC,wBAAyB1gB,CAAAA,IAAI,EAAE;IACtC,MAAM2gB,IAAO3gB,GAAAA,IAAAA,CAAK8S,OAAO,CAAC,SAAS,CAAC,CAAA,CAAA;IACpC,MAAM8N,IAAO5gB,GAAAA,IAAAA,CAAK8S,OAAO,CAAC,SAAS,CAAC,CAAA,CAAA;IAEpC,OAAO,SAAS+N,GAAG,EAAEC,GAAG,EAAE;QACxB,MAAMC,MAAAA,GAASJ,IAAOlrB,GAAAA,IAAAA,CAAKwY,GAAG,CAAC4S,GAAI/iB,CAAAA,CAAC,GAAGgjB,GAAAA,CAAIhjB,CAAC,CAAA,GAAI,CAAC,CAAA;QACjD,MAAMkjB,MAAAA,GAASJ,IAAOnrB,GAAAA,IAAAA,CAAKwY,GAAG,CAAC4S,GAAI9iB,CAAAA,CAAC,GAAG+iB,GAAAA,CAAI/iB,CAAC,CAAA,GAAI,CAAC,CAAA;QACjD,OAAOtI,IAAAA,CAAKwrB,IAAI,CAACxrB,IAAKyrB,CAAAA,GAAG,CAACH,MAAAA,EAAQ,CAAKtrB,CAAAA,GAAAA,IAAAA,CAAKyrB,GAAG,CAACF,MAAQ,EAAA,CAAA,CAAA,CAAA,CAAA;IAC1D,CAAA,CAAA;AACF,CAAA;AAWA,SAASG,iBAAkBtsB,CAAAA,KAAK,EAAEyrB,QAAQ,EAAEtgB,IAAI,EAAEohB,gBAAgB,EAAEC,gBAAgB,EAAE;IACpF,MAAMhrB,QAAQ,EAAE,CAAA;IAEhB,IAAI,CAACgrB,gBAAoB,IAAA,CAACxsB,KAAMysB,CAAAA,aAAa,CAAChB,QAAW,CAAA,EAAA;QACvD,OAAOjqB,KAAAA,CAAAA;KACR;IAED,MAAMkrB,iBAAiB,SAAS1e,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;QAC5D,IAAI,CAACsiB,oBAAoB,KAACG,wKAAAA,EAAe3e,SAAShO,KAAMgV,CAAAA,SAAS,EAAE,CAAI,CAAA,EAAA;YACrE,OAAA;SACD;QACD,IAAIhH,OAAAA,CAAQ4e,OAAO,CAACnB,QAAAA,CAASxiB,CAAC,EAAEwiB,QAAAA,CAASviB,CAAC,EAAEqjB,gBAAmB,CAAA,EAAA;YAC7D/qB,KAAAA,CAAMkB,IAAI,CAAC;gBAACsL,OAAAA;gBAASxD,YAAAA;gBAAcN,KAAAA;YAAK,CAAA,CAAA,CAAA;SACzC;IACH,CAAA,CAAA;IAEAshB,wBAAAA,CAAyBxrB,KAAOmL,EAAAA,IAAAA,EAAMsgB,QAAUiB,EAAAA,cAAAA,EAAgB,IAAI,CAAA,CAAA;IACpE,OAAOlrB,KAAAA,CAAAA;AACT,CAAA;AAUA,SAASqrB,sBAAsB7sB,KAAK,EAAEyrB,QAAQ,EAAEtgB,IAAI,EAAEohB,gBAAgB,EAAE;IACtE,IAAI/qB,QAAQ,EAAE,CAAA;IAEd,SAASkrB,eAAe1e,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;QACpD,MAAM,EAAC2W,UAAAA,EAAYC,QAAAA,EAAS,GAAG9S,OAAAA,CAAQ8e,QAAQ,CAAC;YAAC,YAAA;YAAc,UAAA;SAAW,EAAEP,gBAAAA,CAAAA,CAAAA;QAC5E,MAAM,EAACjL,KAAAA,EAAM,OAAGyL,wKAAAA,EAAkB/e,OAAS,EAAA;YAAC/E,CAAAA,EAAGwiB,SAASxiB,CAAC;YAAEC,CAAAA,EAAGuiB,SAASviB,CAAC;QAAA,CAAA,CAAA,CAAA;QAExE,QAAIqY,wKAAAA,EAAcD,KAAOT,EAAAA,UAAAA,EAAYC,QAAW,CAAA,EAAA;YAC9Ctf,KAAAA,CAAMkB,IAAI,CAAC;gBAACsL,OAAAA;gBAASxD,YAAAA;gBAAcN,KAAAA;YAAK,CAAA,CAAA,CAAA;SACzC;IACH,CAAA;IAEAshB,wBAAyBxrB,CAAAA,KAAAA,EAAOmL,MAAMsgB,QAAUiB,EAAAA,cAAAA,CAAAA,CAAAA;IAChD,OAAOlrB,KAAAA,CAAAA;AACT,CAAA;AAYA,SAASwrB,wBAAAA,CAAyBhtB,KAAK,EAAEyrB,QAAQ,EAAEtgB,IAAI,EAAEuf,SAAS,EAAE6B,gBAAgB,EAAEC,gBAAgB,EAAE;IACtG,IAAIhrB,QAAQ,EAAE,CAAA;IACd,MAAMyrB,iBAAiBpB,wBAAyB1gB,CAAAA,IAAAA,CAAAA,CAAAA;IAChD,IAAI+hB,WAAAA,GAAclhB,OAAOE,iBAAiB,CAAA;IAE1C,SAASwgB,eAAe1e,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;QACpD,MAAM0iB,OAAAA,GAAU5e,QAAQ4e,OAAO,CAACnB,SAASxiB,CAAC,EAAEwiB,QAASviB,CAAAA,CAAC,EAAEqjB,gBAAAA,CAAAA,CAAAA;QACxD,IAAI7B,SAAAA,IAAa,CAACkC,OAAS,EAAA;YACzB,OAAA;SACD;QAED,MAAMtP,MAAAA,GAAStP,OAAQmf,CAAAA,cAAc,CAACZ,gBAAAA,CAAAA,CAAAA;QACtC,MAAMa,cAAc,CAAC,CAACZ,gBAAoBxsB,IAAAA,KAAAA,CAAMysB,aAAa,CAACnP,MAAAA,CAAAA,CAAAA;QAC9D,IAAI,CAAC8P,WAAe,IAAA,CAACR,OAAS,EAAA;YAC5B,OAAA;SACD;QAED,MAAMS,QAAAA,GAAWJ,eAAexB,QAAUnO,EAAAA,MAAAA,CAAAA,CAAAA;QAC1C,IAAI+P,WAAWH,WAAa,EAAA;YAC1B1rB,KAAQ,GAAA;gBAAC;oBAACwM,OAAAA;oBAASxD,YAAAA;oBAAcN,KAAAA;gBAAK,CAAA;aAAE,CAAA;YACxCgjB,WAAcG,GAAAA,QAAAA,CAAAA;SACT,MAAA,IAAIA,aAAaH,WAAa,EAAA;YAEnC1rB,KAAAA,CAAMkB,IAAI,CAAC;gBAACsL,OAAAA;gBAASxD,YAAAA;gBAAcN,KAAAA;YAAK,CAAA,CAAA,CAAA;SACzC;IACH,CAAA;IAEAshB,wBAAyBxrB,CAAAA,KAAAA,EAAOmL,MAAMsgB,QAAUiB,EAAAA,cAAAA,CAAAA,CAAAA;IAChD,OAAOlrB,KAAAA,CAAAA;AACT,CAAA;AAYA,SAAS8rB,eAAAA,CAAgBttB,KAAK,EAAEyrB,QAAQ,EAAEtgB,IAAI,EAAEuf,SAAS,EAAE6B,gBAAgB,EAAEC,gBAAgB,EAAE;IAC7F,IAAI,CAACA,gBAAoB,IAAA,CAACxsB,KAAMysB,CAAAA,aAAa,CAAChB,QAAW,CAAA,EAAA;QACvD,OAAO,EAAE,CAAA;KACV;IAED,OAAOtgB,IAAS,KAAA,GAAA,IAAO,CAACuf,SAAAA,GACpBmC,sBAAsB7sB,KAAOyrB,EAAAA,QAAAA,EAAUtgB,IAAMohB,EAAAA,gBAAAA,CAAAA,GAC7CS,yBAAyBhtB,KAAOyrB,EAAAA,QAAAA,EAAUtgB,IAAMuf,EAAAA,SAAAA,EAAW6B,kBAAkBC,gBAAiB,CAAA,CAAA;AACpG,CAAA;AAWA,SAASe,YAAavtB,CAAAA,KAAK,EAAEyrB,QAAQ,EAAEtgB,IAAI,EAAEuf,SAAS,EAAE6B,gBAAgB,EAAE;IACxE,MAAM/qB,QAAQ,EAAE,CAAA;IAChB,MAAMgsB,WAAcriB,GAAAA,IAAAA,KAAS,GAAM,GAAA,UAAA,GAAa,UAAU,CAAA;IAC1D,IAAIsiB,iBAAiB,KAAK,CAAA;IAE1BjC,wBAAAA,CAAyBxrB,OAAOmL,IAAMsgB,EAAAA,QAAAA,EAAU,CAACzd,OAAAA,EAASxD,cAAcN,KAAU,GAAA;QAChF,IAAI8D,OAAO,CAACwf,WAAY,CAAA,IAAIxf,OAAO,CAACwf,WAAY,CAAA,CAAC/B,QAAQ,CAACtgB,IAAK,CAAA,EAAEohB,gBAAmB,CAAA,EAAA;YAClF/qB,KAAAA,CAAMkB,IAAI,CAAC;gBAACsL,OAAAA;gBAASxD,YAAAA;gBAAcN,KAAAA;YAAK,CAAA,CAAA,CAAA;YACxCujB,cAAiBA,GAAAA,cAAAA,IAAkBzf,QAAQ4e,OAAO,CAACnB,SAASxiB,CAAC,EAAEwiB,QAASviB,CAAAA,CAAC,EAAEqjB,gBAAAA,CAAAA,CAAAA;SAC5E;IACH,CAAA,CAAA,CAAA;IAIA,IAAI7B,SAAAA,IAAa,CAAC+C,cAAgB,EAAA;QAChC,OAAO,EAAE,CAAA;KACV;IACD,OAAOjsB,KAAAA,CAAAA;AACT,CAAA;AAMA,IAAA,cAAe;IAEbgqB,wBAAAA;IAGAkC,KAAO,EAAA;QAYLxjB,KAAAA,CAAAA,CAAMlK,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YACzC,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YAExC,MAAMmL,IAAAA,GAAO3D,OAAQ2D,CAAAA,IAAI,IAAI,GAAA,CAAA;YAC7B,MAAMqhB,gBAAmBhlB,GAAAA,OAAAA,CAAQglB,gBAAgB,IAAI,KAAK,CAAA;YAC1D,MAAMhrB,QAAQgG,OAAQkjB,CAAAA,SAAS,GAC3B4B,iBAAAA,CAAkBtsB,OAAOyrB,QAAUtgB,EAAAA,IAAAA,EAAMohB,gBAAkBC,EAAAA,gBAAAA,CAAAA,GAC3Dc,gBAAgBttB,KAAOyrB,EAAAA,QAAAA,EAAUtgB,MAAM,KAAK,EAAEohB,kBAAkBC,gBAAiB,CAAA,CAAA;YACrF,MAAM1X,WAAW,EAAE,CAAA;YAEnB,IAAI,CAACtT,KAAMC,CAAAA,MAAM,EAAE;gBACjB,OAAO,EAAE,CAAA;aACV;YAEDzB,KAAAA,CAAM2rB,4BAA4B,EAAA,CAAGnrB,OAAO,CAAC,CAACuK,IAAS,GAAA;gBACrD,MAAMb,KAAQ1I,GAAAA,KAAK,CAAC,CAAA,CAAE,CAAC0I,KAAK,CAAA;gBAC5B,MAAM8D,OAAUjD,GAAAA,IAAAA,CAAKD,IAAI,CAACZ,KAAM,CAAA,CAAA;gBAGhC,IAAI8D,OAAW,IAAA,CAACA,OAAQmS,CAAAA,IAAI,EAAE;oBAC5BrL,QAAAA,CAASpS,IAAI,CAAC;wBAACsL,OAAAA;wBAASxD,YAAAA,EAAcO,KAAKb,KAAK;wBAAEA,KAAAA;oBAAK,CAAA,CAAA,CAAA;iBACxD;YACH,CAAA,CAAA,CAAA;YAEA,OAAO4K,QAAAA,CAAAA;QACT,CAAA;QAYAhH,OAAAA,CAAAA,CAAQ9N,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YAC3C,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMmL,IAAAA,GAAO3D,OAAQ2D,CAAAA,IAAI,IAAI,IAAA,CAAA;YAC7B,MAAMqhB,gBAAmBhlB,GAAAA,OAAAA,CAAQglB,gBAAgB,IAAI,KAAK,CAAA;YAC1D,IAAIhrB,QAAQgG,OAAQkjB,CAAAA,SAAS,GACzB4B,iBAAAA,CAAkBtsB,OAAOyrB,QAAUtgB,EAAAA,IAAAA,EAAMohB,gBAAkBC,EAAAA,gBAAAA,CAAAA,GAC7Dc,gBAAgBttB,KAAOyrB,EAAAA,QAAAA,EAAUtgB,MAAM,KAAK,EAAEohB,kBAAkBC,gBAAiB,CAAA,CAAA;YAEnF,IAAIhrB,KAAAA,CAAMC,MAAM,GAAG,CAAG,EAAA;gBACpB,MAAM+I,YAAehJ,GAAAA,KAAK,CAAC,CAAA,CAAE,CAACgJ,YAAY,CAAA;gBAC1C,MAAMM,IAAO9K,GAAAA,KAAAA,CAAMwR,cAAc,CAAChH,cAAcM,IAAI,CAAA;gBACpDtJ,KAAAA,GAAQ,EAAE,CAAA;gBACV,IAAK,IAAIE,IAAI,CAAGA,EAAAA,CAAAA,GAAIoJ,KAAKrJ,MAAM,EAAE,EAAEC,CAAG,CAAA;oBACpCF,KAAAA,CAAMkB,IAAI,CAAC;wBAACsL,OAASlD,EAAAA,IAAI,CAACpJ,CAAE,CAAA;wBAAE8I,YAAAA;wBAAcN,KAAOxI,EAAAA,CAAAA;oBAAC,CAAA,CAAA,CAAA;gBACtD,CAAA;aACD;YAED,OAAOF,KAAAA,CAAAA;QACT,CAAA;QAYAwe,KAAAA,CAAAA,CAAMhgB,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YACzC,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMmL,IAAAA,GAAO3D,OAAQ2D,CAAAA,IAAI,IAAI,IAAA,CAAA;YAC7B,MAAMqhB,gBAAmBhlB,GAAAA,OAAAA,CAAQglB,gBAAgB,IAAI,KAAK,CAAA;YAC1D,OAAOF,iBAAkBtsB,CAAAA,KAAAA,EAAOyrB,QAAUtgB,EAAAA,IAAAA,EAAMohB,gBAAkBC,EAAAA,gBAAAA,CAAAA,CAAAA;QACpE,CAAA;QAWAoB,OAAAA,CAAAA,CAAQ5tB,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YAC3C,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMmL,IAAAA,GAAO3D,OAAQ2D,CAAAA,IAAI,IAAI,IAAA,CAAA;YAC7B,MAAMqhB,gBAAmBhlB,GAAAA,OAAAA,CAAQglB,gBAAgB,IAAI,KAAK,CAAA;YAC1D,OAAOc,gBAAgBttB,KAAOyrB,EAAAA,QAAAA,EAAUtgB,MAAM3D,OAAQkjB,CAAAA,SAAS,EAAE6B,gBAAkBC,EAAAA,gBAAAA,CAAAA,CAAAA;QACrF,CAAA;QAWAvjB,CAAAA,CAAAA,CAAEjJ,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YACrC,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,OAAOutB,aAAavtB,KAAOyrB,EAAAA,QAAAA,EAAU,GAAKjkB,EAAAA,OAAAA,CAAQkjB,SAAS,EAAE6B,gBAAAA,CAAAA,CAAAA;QAC/D,CAAA;QAWArjB,CAAAA,CAAAA,CAAElJ,KAAK,EAAEgkB,CAAC,EAAExc,OAAO,EAAE+kB,gBAAgB,EAAE;YACrC,MAAMd,QAAAA,OAAWkC,wKAAAA,EAAoB3J,CAAGhkB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,OAAOutB,aAAavtB,KAAOyrB,EAAAA,QAAAA,EAAU,GAAKjkB,EAAAA,OAAAA,CAAQkjB,SAAS,EAAE6B,gBAAAA,CAAAA,CAAAA;QAC/D,CAAA;IACF,CAAA;AACF,CAAE;AC3XF,MAAMsB,gBAAmB,GAAA;IAAC,MAAA;IAAQ,KAAA;IAAO,OAAA;IAAS,QAAA;CAAS,CAAA;AAE3D,SAASC,gBAAiBC,CAAAA,KAAK,EAAEtC,QAAQ,EAAE;IACzC,OAAOsC,MAAMtgB,MAAM,CAACwO,CAAAA,CAAKA,GAAAA,CAAAA,CAAE+R,GAAG,KAAKvC,QAAAA,CAAAA,CAAAA;AACrC,CAAA;AAEA,SAASwC,2BAA4BF,CAAAA,KAAK,EAAE5iB,IAAI,EAAE;IAChD,OAAO4iB,MAAMtgB,MAAM,CAACwO,CAAAA,CAAAA,GAAK4R,iBAAiB5P,OAAO,CAAChC,CAAE+R,CAAAA,GAAG,MAAM,CAAC,CAAA,IAAK/R,EAAEiS,GAAG,CAAC/iB,IAAI,KAAKA,IAAAA,CAAAA,CAAAA;AACpF,CAAA;AAEA,SAASgjB,YAAaJ,CAAAA,KAAK,EAAEnlB,OAAO,EAAE;IACpC,OAAOmlB,KAAMjV,CAAAA,IAAI,CAAC,CAACC,GAAGrP,CAAM,GAAA;QAC1B,MAAM0kB,EAAAA,GAAKxlB,OAAUc,GAAAA,CAAAA,GAAIqP,CAAC,CAAA;QAC1B,MAAMgD,EAAAA,GAAKnT,OAAUmQ,GAAAA,CAAAA,GAAIrP,CAAC,CAAA;QAC1B,OAAO0kB,GAAG5H,MAAM,KAAKzK,EAAGyK,CAAAA,MAAM,GAC5B4H,EAAGlkB,CAAAA,KAAK,GAAG6R,EAAAA,CAAG7R,KAAK,GACnBkkB,EAAAA,CAAG5H,MAAM,GAAGzK,GAAGyK,MAAM,CAAA;IACzB,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAAS6H,SAAAA,CAAUC,KAAK,EAAE;IACxB,MAAMC,cAAc,EAAE,CAAA;IACtB,IAAI7sB,CAAGuI,EAAAA,IAAAA,EAAMikB,GAAKF,EAAAA,GAAAA,EAAK5jB,KAAOokB,EAAAA,WAAAA,CAAAA;IAE9B,IAAK9sB,CAAI,GAAA,CAAA,EAAGuI,IAAO,GAACqkB,CAAAA,KAAS,IAAA,EAAE,EAAE7sB,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QACtDwsB,GAAMI,GAAAA,KAAK,CAAC5sB,CAAE,CAAA,CAAA;QACb,CAAA,EAAC+pB,QAAAA,EAAUuC,GAAG,EAAExmB,SAAS,EAAC4C,KAAAA,EAAOokB,WAAAA,GAAc,CAAC,EAAC,EAAC,GAAGN,GAAE,EAAA;QACxDK,WAAAA,CAAY7rB,IAAI,CAAC;YACfwH,KAAOxI,EAAAA,CAAAA;YACPwsB,GAAAA;YACAF,GAAAA;YACA3S,UAAAA,EAAY6S,IAAI/S,YAAY,EAAA;YAC5BqL,MAAAA,EAAQ0H,IAAI1H,MAAM;YAClBpc,KAAAA,EAAOA,SAAU4jB,GAAM5jB,GAAAA,KAAAA;YACvBokB,WAAAA;QACF,CAAA,CAAA,CAAA;IACF,CAAA;IACA,OAAOD,WAAAA,CAAAA;AACT,CAAA;AAEA,SAASE,WAAAA,CAAYC,OAAO,EAAE;IAC5B,MAAMtiB,SAAS,CAAA,CAAC,CAAA;IAChB,KAAK,MAAMuiB,QAAQD,OAAS,CAAA;QAC1B,MAAM,EAACtkB,KAAK,EAAE4jB,GAAAA,EAAKQ,WAAAA,EAAY,GAAGG,IAAAA,CAAAA;QAClC,IAAI,CAACvkB,KAAS,IAAA,CAACyjB,gBAAiBe,CAAAA,QAAQ,CAACZ,GAAM,CAAA,EAAA;YAC7C,SAAS;SACV;QACD,MAAMa,MAAAA,GAASziB,MAAM,CAAChC,KAAAA,CAAM,IAAA,CAAKgC,MAAM,CAAChC,KAAAA,CAAM,GAAG;YAAC0I,KAAO,EAAA,CAAA;YAAGgc,MAAQ,EAAA,CAAA;YAAGtI,MAAQ,EAAA,CAAA;YAAGre,IAAM,EAAA,CAAA;SAAC,CAAA,CAAA;QACzF0mB,MAAAA,CAAO/b,KAAK,EAAA,CAAA;QACZ+b,MAAAA,CAAOrI,MAAM,IAAIgI,WAAAA,CAAAA;IACnB,CAAA;IACA,OAAOpiB,MAAAA,CAAAA;AACT,CAAA;AAKA,SAAS2iB,aAAAA,CAAcL,OAAO,EAAEM,MAAM,EAAE;IACtC,MAAM5iB,SAASqiB,WAAYC,CAAAA,OAAAA,CAAAA,CAAAA;IAC3B,MAAM,EAACO,YAAAA,EAAcC,aAAAA,EAAc,GAAGF,MAAAA,CAAAA;IACtC,IAAIttB,GAAGuI,IAAMklB,EAAAA,MAAAA,CAAAA;IACb,IAAKztB,CAAAA,GAAI,GAAGuI,IAAOykB,GAAAA,OAAAA,CAAQjtB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QAChDytB,MAAST,GAAAA,OAAO,CAAChtB,CAAE,CAAA,CAAA;QACnB,MAAM,EAAC0tB,QAAAA,EAAS,GAAGD,OAAOjB,GAAG,CAAA;QAC7B,MAAM9jB,KAAQgC,GAAAA,MAAM,CAAC+iB,MAAAA,CAAO/kB,KAAK,CAAC,CAAA;QAClC,MAAMzG,SAASyG,KAAS+kB,IAAAA,MAAAA,CAAOX,WAAW,GAAGpkB,MAAMoc,MAAM,CAAA;QACzD,IAAI2I,MAAAA,CAAO9T,UAAU,EAAE;YACrB8T,MAAAA,CAAO3R,KAAK,GAAG7Z,MAAAA,GAASA,SAASsrB,YAAeG,GAAAA,QAAAA,IAAYJ,OAAOK,cAAc,CAAA;YACjFF,MAAAA,CAAO5R,MAAM,GAAG2R,aAAAA,CAAAA;SACX,MAAA;YACLC,MAAAA,CAAO3R,KAAK,GAAGyR,YAAAA,CAAAA;YACfE,MAAAA,CAAO5R,MAAM,GAAG5Z,MAAAA,GAASA,SAASurB,aAAgBE,GAAAA,QAAAA,IAAYJ,OAAOM,eAAe,CAAA;SACrF;IACH,CAAA;IACA,OAAOljB,MAAAA,CAAAA;AACT,CAAA;AAEA,SAASmjB,gBAAAA,CAAiBjB,KAAK,EAAE;IAC/B,MAAMC,cAAcF,SAAUC,CAAAA,KAAAA,CAAAA,CAAAA;IAC9B,MAAMc,QAAWjB,GAAAA,YAAAA,CAAaI,WAAY9gB,CAAAA,MAAM,CAACkhB,CAAAA,IAAQA,GAAAA,IAAAA,CAAKT,GAAG,CAACkB,QAAQ,CAAA,EAAG,IAAI,CAAA,CAAA;IACjF,MAAM9lB,IAAO6kB,GAAAA,YAAAA,CAAaL,gBAAiBS,CAAAA,WAAAA,EAAa,SAAS,IAAI,CAAA,CAAA;IACrE,MAAMnlB,KAAAA,GAAQ+kB,YAAaL,CAAAA,gBAAAA,CAAiBS,WAAa,EAAA,OAAA,CAAA,CAAA,CAAA;IACzD,MAAMplB,GAAMglB,GAAAA,YAAAA,CAAaL,gBAAiBS,CAAAA,WAAAA,EAAa,QAAQ,IAAI,CAAA,CAAA;IACnE,MAAMllB,MAAAA,GAAS8kB,YAAaL,CAAAA,gBAAAA,CAAiBS,WAAa,EAAA,QAAA,CAAA,CAAA,CAAA;IAC1D,MAAMiB,gBAAAA,GAAmBvB,4BAA4BM,WAAa,EAAA,GAAA,CAAA,CAAA;IAClE,MAAMkB,cAAAA,GAAiBxB,4BAA4BM,WAAa,EAAA,GAAA,CAAA,CAAA;IAEhE,OAAO;QACLa,QAAAA;QACAM,UAAYpmB,EAAAA,IAAAA,CAAKsP,MAAM,CAACzP,GAAAA,CAAAA;QACxBwmB,cAAgBvmB,EAAAA,KAAAA,CAAMwP,MAAM,CAAC6W,cAAAA,CAAAA,CAAgB7W,MAAM,CAACvP,MAAAA,CAAAA,CAAQuP,MAAM,CAAC4W,gBAAAA,CAAAA;QACnExa,SAAAA,EAAW8Y,iBAAiBS,WAAa,EAAA,WAAA,CAAA;QACzCqB,QAAAA,EAAUtmB,IAAKsP,CAAAA,MAAM,CAACxP,KAAAA,CAAAA,CAAOwP,MAAM,CAAC6W,cAAAA,CAAAA;QACpCpU,UAAAA,EAAYlS,GAAIyP,CAAAA,MAAM,CAACvP,MAAAA,CAAAA,CAAQuP,MAAM,CAAC4W,gBAAAA,CAAAA;IACxC,CAAA,CAAA;AACF,CAAA;AAEA,SAASK,cAAAA,CAAeC,UAAU,EAAE9a,SAAS,EAAE+D,CAAC,EAAErP,CAAC,EAAE;IACnD,OAAO9I,IAAAA,CAAKoC,GAAG,CAAC8sB,UAAU,CAAC/W,CAAE,CAAA,EAAE/D,SAAS,CAAC+D,CAAAA,CAAE,IAAInY,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAU,CAACpmB,EAAE,EAAEsL,SAAS,CAACtL,CAAE,CAAA,CAAA,CAAA;AACrF,CAAA;AAEA,SAASqmB,gBAAiBD,CAAAA,UAAU,EAAEE,UAAU,EAAE;IAChDF,UAAW3mB,CAAAA,GAAG,GAAGvI,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAW3mB,CAAAA,GAAG,EAAE6mB,UAAAA,CAAW7mB,GAAG,CAAA,CAAA;IACxD2mB,UAAWxmB,CAAAA,IAAI,GAAG1I,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAWxmB,CAAAA,IAAI,EAAE0mB,UAAAA,CAAW1mB,IAAI,CAAA,CAAA;IAC3DwmB,UAAWzmB,CAAAA,MAAM,GAAGzI,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAWzmB,CAAAA,MAAM,EAAE2mB,UAAAA,CAAW3mB,MAAM,CAAA,CAAA;IACjEymB,UAAW1mB,CAAAA,KAAK,GAAGxI,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAW1mB,CAAAA,KAAK,EAAE4mB,UAAAA,CAAW5mB,KAAK,CAAA,CAAA;AAChE,CAAA;AAEA,SAAS6mB,UAAAA,CAAWjb,SAAS,EAAEga,MAAM,EAAEG,MAAM,EAAE/iB,MAAM,EAAE;IACrD,MAAM,EAAC4hB,GAAAA,EAAKE,GAAAA,EAAI,GAAGiB,MAAAA,CAAAA;IACnB,MAAMW,UAAAA,GAAa9a,UAAU8a,UAAU,CAAA;IAGvC,IAAI,KAACrpB,wKAAAA,EAASunB,GAAM,CAAA,EAAA;QAClB,IAAImB,MAAAA,CAAOhnB,IAAI,EAAE;YAEf6M,SAAS,CAACgZ,GAAAA,CAAI,IAAImB,MAAAA,CAAOhnB,IAAI,CAAA;SAC9B;QACD,MAAMiC,QAAQgC,MAAM,CAAC+iB,MAAO/kB,CAAAA,KAAK,CAAC,IAAI;YAACjC,IAAM,EAAA,CAAA;YAAG2K,KAAO,EAAA,CAAA;QAAC,CAAA,CAAA;QACxD1I,KAAAA,CAAMjC,IAAI,GAAGvH,IAAKoC,CAAAA,GAAG,CAACoH,KAAMjC,CAAAA,IAAI,EAAEgnB,MAAAA,CAAO9T,UAAU,GAAG6S,GAAAA,CAAI3Q,MAAM,GAAG2Q,IAAI1Q,KAAK,CAAA,CAAA;QAC5E2R,MAAAA,CAAOhnB,IAAI,GAAGiC,KAAAA,CAAMjC,IAAI,GAAGiC,MAAM0I,KAAK,CAAA;QACtCkC,SAAS,CAACgZ,GAAAA,CAAI,IAAImB,MAAAA,CAAOhnB,IAAI,CAAA;KAC9B;IAED,IAAI+lB,GAAAA,CAAIgC,UAAU,EAAE;QAClBH,gBAAiBD,CAAAA,UAAAA,EAAY5B,IAAIgC,UAAU,EAAA,CAAA,CAAA;KAC5C;IAED,MAAMC,QAAAA,GAAWvvB,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAGgsB,MAAOoB,CAAAA,UAAU,GAAGP,cAAAA,CAAeC,UAAY9a,EAAAA,SAAAA,EAAW,MAAQ,EAAA,OAAA,CAAA,CAAA,CAAA;IAC/F,MAAMqb,SAAAA,GAAYzvB,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAGgsB,MAAOsB,CAAAA,WAAW,GAAGT,cAAAA,CAAeC,UAAY9a,EAAAA,SAAAA,EAAW,KAAO,EAAA,QAAA,CAAA,CAAA,CAAA;IAChG,MAAMub,YAAAA,GAAeJ,QAAanb,KAAAA,SAAAA,CAAUwb,CAAC,CAAA;IAC7C,MAAMC,aAAAA,GAAgBJ,SAAcrb,KAAAA,SAAAA,CAAU0b,CAAC,CAAA;IAC/C1b,SAAAA,CAAUwb,CAAC,GAAGL,QAAAA,CAAAA;IACdnb,SAAAA,CAAU0b,CAAC,GAAGL,SAAAA,CAAAA;IAGd,OAAOlB,MAAAA,CAAO9T,UAAU,GACpB;QAACsV,IAAMJ,EAAAA,YAAAA;QAAcK,KAAOH,EAAAA,aAAAA;KAC5B,GAAA;QAACE,IAAMF,EAAAA,aAAAA;QAAeG,KAAOL,EAAAA,YAAAA;KAAa,CAAA;AAChD,CAAA;AAEA,SAASM,gBAAAA,CAAiB7b,SAAS,EAAE;IACnC,MAAM8a,UAAAA,GAAa9a,UAAU8a,UAAU,CAAA;IAEvC,SAASgB,SAAAA,CAAU9C,GAAG,EAAE;QACtB,MAAM+C,MAAAA,GAASnwB,IAAKoC,CAAAA,GAAG,CAAC8sB,UAAU,CAAC9B,GAAAA,CAAI,GAAGhZ,SAAS,CAACgZ,GAAAA,CAAI,EAAE,CAAA,CAAA,CAAA;QAC1DhZ,SAAS,CAACgZ,IAAI,IAAI+C,MAAAA,CAAAA;QAClB,OAAOA,MAAAA,CAAAA;IACT,CAAA;IACA/b,SAAU9L,CAAAA,CAAC,IAAI4nB,SAAU,CAAA,KAAA,CAAA,CAAA;IACzB9b,SAAU/L,CAAAA,CAAC,IAAI6nB,SAAU,CAAA,MAAA,CAAA,CAAA;IACzBA,SAAU,CAAA,OAAA,CAAA,CAAA;IACVA,SAAU,CAAA,QAAA,CAAA,CAAA;AACZ,CAAA;AAEA,SAASE,UAAW3V,CAAAA,UAAU,EAAErG,SAAS,EAAE;IACzC,MAAM8a,UAAAA,GAAa9a,UAAU8a,UAAU,CAAA;IAEvC,SAASmB,kBAAAA,CAAmBC,SAAS,EAAE;QACrC,MAAMC,MAAS,GAAA;YAAC7nB,IAAM,EAAA,CAAA;YAAGH,GAAK,EAAA,CAAA;YAAGC,KAAO,EAAA,CAAA;YAAGC,MAAQ,EAAA,CAAA;QAAC,CAAA,CAAA;QACpD6nB,SAAU1wB,CAAAA,OAAO,CAAC,CAACwtB,GAAQ,GAAA;YACzBmD,MAAM,CAACnD,GAAAA,CAAI,GAAGptB,IAAAA,CAAKoC,GAAG,CAACgS,SAAS,CAACgZ,GAAI,CAAA,EAAE8B,UAAU,CAAC9B,GAAI,CAAA,CAAA,CAAA;QACxD,CAAA,CAAA,CAAA;QACA,OAAOmD,MAAAA,CAAAA;IACT,CAAA;IAEA,OAAO9V,aACH4V,kBAAmB,CAAA;QAAC,MAAA;QAAQ,OAAA;KAAQ,CAAA,GACpCA,kBAAmB,CAAA;QAAC,KAAA;QAAO,QAAA;KAAS,CAAC,CAAA;AAC3C,CAAA;AAEA,SAASG,QAAAA,CAAS9C,KAAK,EAAEtZ,SAAS,EAAEga,MAAM,EAAE5iB,MAAM,EAAE;IAClD,MAAMilB,aAAa,EAAE,CAAA;IACrB,IAAI3vB,CAAGuI,EAAAA,IAAAA,EAAMklB,MAAQjB,EAAAA,GAAAA,EAAKoD,KAAOC,EAAAA,OAAAA,CAAAA;IAEjC,IAAK7vB,CAAI,GAAA,CAAA,EAAGuI,IAAOqkB,GAAAA,KAAAA,CAAM7sB,MAAM,EAAE6vB,KAAQ,GAAA,CAAC,EAAE5vB,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;QACzDytB,MAASb,GAAAA,KAAK,CAAC5sB,CAAE,CAAA,CAAA;QACjBwsB,GAAAA,GAAMiB,OAAOjB,GAAG,CAAA;QAEhBA,GAAAA,CAAIxoB,MAAM,CACRypB,MAAAA,CAAO3R,KAAK,IAAIxI,UAAUwb,CAAC,EAC3BrB,MAAO5R,CAAAA,MAAM,IAAIvI,SAAU0b,CAAAA,CAAC,EAC5BM,UAAW7B,CAAAA,MAAAA,CAAO9T,UAAU,EAAErG,SAAAA,CAAAA,CAAAA,CAAAA;QAEhC,MAAM,EAAC2b,IAAAA,EAAMC,KAAAA,EAAM,GAAGX,UAAAA,CAAWjb,SAAWga,EAAAA,MAAAA,EAAQG,MAAQ/iB,EAAAA,MAAAA,CAAAA,CAAAA;QAI5DklB,KAASX,IAAAA,IAAAA,IAAQU,WAAW5vB,MAAM,CAAA;QAGlC8vB,OAAAA,GAAUA,OAAWX,IAAAA,KAAAA,CAAAA;QAErB,IAAI,CAAC1C,GAAIkB,CAAAA,QAAQ,EAAE;YACjBiC,UAAAA,CAAW3uB,IAAI,CAACysB,MAAAA,CAAAA,CAAAA;SACjB;IACH,CAAA;IAEA,OAAOmC,KAASF,IAAAA,QAAAA,CAASC,UAAYrc,EAAAA,SAAAA,EAAWga,QAAQ5iB,MAAWmlB,CAAAA,IAAAA,OAAAA,CAAAA;AACrE,CAAA;AAEA,SAASC,UAAAA,CAAWtD,GAAG,EAAE5kB,IAAI,EAAEH,GAAG,EAAEqU,KAAK,EAAED,MAAM,EAAE;IACjD2Q,GAAAA,CAAI/kB,GAAG,GAAGA,GAAAA,CAAAA;IACV+kB,GAAAA,CAAI5kB,IAAI,GAAGA,IAAAA,CAAAA;IACX4kB,GAAI9kB,CAAAA,KAAK,GAAGE,IAAOkU,GAAAA,KAAAA,CAAAA;IACnB0Q,GAAI7kB,CAAAA,MAAM,GAAGF,GAAMoU,GAAAA,MAAAA,CAAAA;IACnB2Q,GAAAA,CAAI1Q,KAAK,GAAGA,KAAAA,CAAAA;IACZ0Q,GAAAA,CAAI3Q,MAAM,GAAGA,MAAAA,CAAAA;AACf,CAAA;AAEA,SAASkU,UAAAA,CAAWnD,KAAK,EAAEtZ,SAAS,EAAEga,MAAM,EAAE5iB,MAAM,EAAE;IACpD,MAAMslB,WAAAA,GAAc1C,OAAO2C,OAAO,CAAA;IAClC,IAAI,EAAC1oB,CAAAA,EAAGC,CAAAA,EAAE,GAAG8L,SAAAA,CAAAA;IAEb,KAAK,MAAMma,UAAUb,KAAO,CAAA;QAC1B,MAAMJ,GAAAA,GAAMiB,OAAOjB,GAAG,CAAA;QACtB,MAAM9jB,QAAQgC,MAAM,CAAC+iB,MAAO/kB,CAAAA,KAAK,CAAC,IAAI;YAAC0I,KAAO,EAAA,CAAA;YAAGgc,MAAQ,EAAA,CAAA;YAAGtI,MAAQ,EAAA,CAAA;QAAC,CAAA,CAAA;QACrE,MAAMA,SAAS,MAAC2I,CAAOX,WAAW,GAAGpkB,KAAAA,CAAMoc,MAAM,IAAK,CAAA,CAAA;QACtD,IAAI2I,MAAAA,CAAO9T,UAAU,EAAE;YACrB,MAAMmC,KAAAA,GAAQxI,SAAUwb,CAAAA,CAAC,GAAGhK,MAAAA,CAAAA;YAC5B,MAAMjJ,MAASnT,GAAAA,KAAAA,CAAMjC,IAAI,IAAI+lB,IAAI3Q,MAAM,CAAA;YACvC,QAAI5H,wKAAAA,EAAQvL,KAAMtJ,CAAAA,KAAK,CAAG,EAAA;gBACxBoI,CAAAA,GAAIkB,MAAMtJ,KAAK,CAAA;aAChB;YACD,IAAIotB,GAAAA,CAAIkB,QAAQ,EAAE;gBAChBoC,UAAAA,CAAWtD,GAAKwD,EAAAA,WAAAA,CAAYpoB,IAAI,EAAEJ,CAAG8lB,EAAAA,MAAAA,CAAOoB,UAAU,GAAGsB,WAAYtoB,CAAAA,KAAK,GAAGsoB,WAAAA,CAAYpoB,IAAI,EAAEiU,MAAAA,CAAAA,CAAAA;aAC1F,MAAA;gBACLiU,UAAWtD,CAAAA,GAAAA,EAAKlZ,UAAU1L,IAAI,GAAGc,MAAM0kB,MAAM,EAAE5lB,GAAGsU,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aAC1D;YACDnT,KAAAA,CAAMtJ,KAAK,GAAGoI,CAAAA,CAAAA;YACdkB,KAAAA,CAAM0kB,MAAM,IAAItR,KAAAA,CAAAA;YAChBtU,CAAAA,GAAIglB,IAAI7kB,MAAM,CAAA;SACT,MAAA;YACL,MAAMkU,MAAAA,GAASvI,SAAU0b,CAAAA,CAAC,GAAGlK,MAAAA,CAAAA;YAC7B,MAAMhJ,KAAQpT,GAAAA,KAAAA,CAAMjC,IAAI,IAAI+lB,IAAI1Q,KAAK,CAAA;YACrC,QAAI7H,wKAAAA,EAAQvL,KAAMtJ,CAAAA,KAAK,CAAG,EAAA;gBACxBmI,CAAAA,GAAImB,MAAMtJ,KAAK,CAAA;aAChB;YACD,IAAIotB,GAAAA,CAAIkB,QAAQ,EAAE;gBAChBoC,UAAAA,CAAWtD,GAAKjlB,EAAAA,CAAAA,EAAGyoB,WAAYvoB,CAAAA,GAAG,EAAEqU,KAAAA,EAAOwR,MAAOsB,CAAAA,WAAW,GAAGoB,WAAAA,CAAYroB,MAAM,GAAGqoB,YAAYvoB,GAAG,CAAA,CAAA;aAC/F,MAAA;gBACLqoB,UAAWtD,CAAAA,GAAAA,EAAKjlB,GAAG+L,SAAU7L,CAAAA,GAAG,GAAGiB,KAAM0kB,CAAAA,MAAM,EAAEtR,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aACzD;YACDnT,KAAAA,CAAMtJ,KAAK,GAAGmI,CAAAA,CAAAA;YACdmB,KAAAA,CAAM0kB,MAAM,IAAIvR,MAAAA,CAAAA;YAChBtU,CAAAA,GAAIilB,IAAI9kB,KAAK,CAAA;SACd;IACH,CAAA;IAEA4L,SAAAA,CAAU/L,CAAC,GAAGA,CAAAA,CAAAA;IACd+L,SAAAA,CAAU9L,CAAC,GAAGA,CAAAA,CAAAA;AAChB,CAAA;AAwBA,IAAA,UAAe;IAQb0oB,MAAO5xB,CAAAA,CAAAA,KAAK,EAAE4B,IAAI,EAAE;QAClB,IAAI,CAAC5B,KAAMsuB,CAAAA,KAAK,EAAE;YAChBtuB,KAAMsuB,CAAAA,KAAK,GAAG,EAAE,CAAA;SACjB;QAGD1sB,IAAAA,CAAKwtB,QAAQ,GAAGxtB,IAAKwtB,CAAAA,QAAQ,IAAI,KAAK,CAAA;QACtCxtB,IAAAA,CAAK6pB,QAAQ,GAAG7pB,IAAK6pB,CAAAA,QAAQ,IAAI,KAAA,CAAA;QACjC7pB,IAAAA,CAAK4kB,MAAM,GAAG5kB,IAAK4kB,CAAAA,MAAM,IAAI,CAAA,CAAA;QAE7B5kB,IAAAA,CAAKiwB,OAAO,GAAGjwB,IAAKiwB,CAAAA,OAAO,IAAI,WAAW;YACxC,OAAO;gBAAC;oBACNC,CAAG,EAAA,CAAA;oBACHnwB,IAAAA,CAAAA,CAAKqT,SAAS,EAAE;wBACdpT,IAAAA,CAAKD,IAAI,CAACqT,SAAAA,CAAAA,CAAAA;oBACZ,CAAA;gBACF,CAAA;aAAE,CAAA;QACJ,CAAA,CAAA;QAEAhV,KAAMsuB,CAAAA,KAAK,CAAC5rB,IAAI,CAACd,IAAAA,CAAAA,CAAAA;IACnB,CAAA;IAOAmwB,SAAU/xB,CAAAA,CAAAA,KAAK,EAAEgyB,UAAU,EAAE;QAC3B,MAAM9nB,KAAAA,GAAQlK,KAAMsuB,CAAAA,KAAK,GAAGtuB,KAAAA,CAAMsuB,KAAK,CAACrQ,OAAO,CAAC+T,UAAc,CAAA,GAAA,CAAC,CAAC,CAAA;QAChE,IAAI9nB,KAAAA,KAAU,CAAC,CAAG,EAAA;YAChBlK,KAAAA,CAAMsuB,KAAK,CAACzW,MAAM,CAAC3N,KAAO,EAAA,CAAA,CAAA,CAAA;SAC3B;IACH,CAAA;IAQA1D,WAAUxG,KAAK,EAAE4B,IAAI,EAAE4F,OAAO,EAAE;QAC9B5F,IAAKwtB,CAAAA,QAAQ,GAAG5nB,OAAAA,CAAQ4nB,QAAQ,CAAA;QAChCxtB,IAAK6pB,CAAAA,QAAQ,GAAGjkB,OAAAA,CAAQikB,QAAQ,CAAA;QAChC7pB,IAAK4kB,CAAAA,MAAM,GAAGhf,OAAAA,CAAQgf,MAAM,CAAA;IAC9B,CAAA;IAUA9gB,MAAAA,CAAAA,CAAO1F,KAAK,EAAEwd,KAAK,EAAED,MAAM,EAAE0U,UAAU,EAAE;QACvC,IAAI,CAACjyB,KAAO,EAAA;YACV,OAAA;SACD;QAED,MAAM2xB,cAAUO,wKAAUlyB,EAAAA,KAAAA,CAAMwH,OAAO,CAAC2nB,MAAM,CAACwC,OAAO,CAAA,CAAA;QACtD,MAAMtC,iBAAiBzuB,IAAKoC,CAAAA,GAAG,CAACwa,KAAQmU,GAAAA,OAAAA,CAAQnU,KAAK,EAAE,CAAA,CAAA,CAAA;QACvD,MAAM8R,kBAAkB1uB,IAAKoC,CAAAA,GAAG,CAACua,MAASoU,GAAAA,OAAAA,CAAQpU,MAAM,EAAE,CAAA,CAAA,CAAA;QAC1D,MAAM+Q,KAAAA,GAAQiB,gBAAiBvvB,CAAAA,KAAAA,CAAMsuB,KAAK,CAAA,CAAA;QAC1C,MAAM6D,aAAAA,GAAgB7D,MAAMsB,QAAQ,CAAA;QACpC,MAAMwC,eAAAA,GAAkB9D,MAAMjT,UAAU,CAAA;YAIxCgX,wKAAAA,EAAKryB,KAAMsuB,CAAAA,KAAK,EAAEJ,CAAAA,GAAO,GAAA;YACvB,IAAI,OAAOA,GAAAA,CAAIoE,YAAY,KAAK,UAAY,EAAA;gBAC1CpE,GAAAA,CAAIoE,YAAY,EAAA,CAAA;aACjB;QACH,CAAA,CAAA,CAAA;QA6BA,MAAMC,uBAAAA,GAA0BJ,aAActvB,CAAAA,MAAM,CAAC,CAAC2iB,OAAOmJ,IAC3DA,GAAAA,IAAAA,CAAKT,GAAG,CAAC1mB,OAAO,IAAImnB,KAAKT,GAAG,CAAC1mB,OAAO,CAACygB,OAAO,KAAK,KAAK,GAAGzC,KAAQA,GAAAA,KAAAA,GAAQ,CAAC,EAAE,CAAM,CAAA,IAAA,CAAA,CAAA;QAEpF,MAAMwJ,MAAAA,GAASroB,MAAOqP,CAAAA,MAAM,CAAC;YAC3Boa,UAAY5S,EAAAA,KAAAA;YACZ8S,WAAa/S,EAAAA,MAAAA;YACboU,OAAAA;YACAtC,cAAAA;YACAC,eAAAA;YACAL,YAAAA,EAAcI,iBAAiB,CAAIkD,GAAAA,uBAAAA;YACnCrD,aAAAA,EAAeI,eAAkB,GAAA,CAAA;QACnC,CAAA,CAAA,CAAA;QACA,MAAMQ,UAAanpB,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,CAAA,CAAIupB,EAAAA,OAAAA,CAAAA,CAAAA;QACrC5B,gBAAAA,CAAiBD,gBAAYoC,wKAAUD,EAAAA,UAAAA,CAAAA,CAAAA,CAAAA;QACvC,MAAMjd,SAAAA,GAAYrO,MAAOyB,CAAAA,MAAM,CAAC;YAC9B0nB,UAAAA;YACAU,CAAGnB,EAAAA,cAAAA;YACHqB,CAAGpB,EAAAA,eAAAA;YACHrmB,CAAAA,EAAG0oB,QAAQroB,IAAI;YACfJ,CAAAA,EAAGyoB,QAAQxoB,GAAG;SACbwoB,EAAAA,OAAAA,CAAAA,CAAAA;QAEH,MAAMvlB,MAAS2iB,GAAAA,aAAAA,CAAcoD,aAAcvZ,CAAAA,MAAM,CAACwZ,eAAkBpD,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA;QAGpEoC,QAAAA,CAAS9C,KAAMc,CAAAA,QAAQ,EAAEpa,SAAAA,EAAWga,MAAQ5iB,EAAAA,MAAAA,CAAAA,CAAAA;QAG5CglB,QAASe,CAAAA,aAAAA,EAAend,WAAWga,MAAQ5iB,EAAAA,MAAAA,CAAAA,CAAAA;QAG3C,IAAIglB,QAASgB,CAAAA,eAAAA,EAAiBpd,SAAWga,EAAAA,MAAAA,EAAQ5iB,MAAS,CAAA,EAAA;YAExDglB,QAASe,CAAAA,aAAAA,EAAend,WAAWga,MAAQ5iB,EAAAA,MAAAA,CAAAA,CAAAA;SAC5C;QAEDykB,gBAAiB7b,CAAAA,SAAAA,CAAAA,CAAAA;QAGjByc,UAAAA,CAAWnD,KAAMoB,CAAAA,UAAU,EAAE1a,SAAAA,EAAWga,MAAQ5iB,EAAAA,MAAAA,CAAAA,CAAAA;QAGhD4I,SAAU/L,CAAAA,CAAC,IAAI+L,SAAAA,CAAUwb,CAAC,CAAA;QAC1Bxb,SAAU9L,CAAAA,CAAC,IAAI8L,SAAAA,CAAU0b,CAAC,CAAA;QAE1Be,UAAAA,CAAWnD,KAAMqB,CAAAA,cAAc,EAAE3a,SAAAA,EAAWga,MAAQ5iB,EAAAA,MAAAA,CAAAA,CAAAA;QAEpDpM,KAAAA,CAAMgV,SAAS,GAAG;YAChB1L,IAAAA,EAAM0L,UAAU1L,IAAI;YACpBH,GAAAA,EAAK6L,UAAU7L,GAAG;YAClBC,KAAAA,EAAO4L,SAAU1L,CAAAA,IAAI,GAAG0L,SAAAA,CAAUwb,CAAC;YACnCnnB,MAAAA,EAAQ2L,SAAU7L,CAAAA,GAAG,GAAG6L,SAAAA,CAAU0b,CAAC;YACnCnT,MAAAA,EAAQvI,UAAU0b,CAAC;YACnBlT,KAAAA,EAAOxI,UAAUwb,CAAC;QACpB,CAAA,CAAA;YAGA6B,wKAAAA,EAAK/D,KAAMtZ,CAAAA,SAAS,EAAE,CAACma,MAAW,GAAA;YAChC,MAAMjB,GAAAA,GAAMiB,OAAOjB,GAAG,CAAA;YACtBvnB,MAAAA,CAAOyB,MAAM,CAAC8lB,GAAKluB,EAAAA,KAAAA,CAAMgV,SAAS,CAAA,CAAA;YAClCkZ,GAAAA,CAAIxoB,MAAM,CAACsP,SAAAA,CAAUwb,CAAC,EAAExb,SAAAA,CAAU0b,CAAC,EAAE;gBAACpnB,IAAM,EAAA,CAAA;gBAAGH,GAAK,EAAA,CAAA;gBAAGC,KAAO,EAAA,CAAA;gBAAGC,MAAQ,EAAA,CAAA;YAAC,CAAA,CAAA,CAAA;QAC5E,CAAA,CAAA,CAAA;IACF,CAAA;AACF,CAAE;AC9ba,MAAMmpB,YAAAA,CAAAA;IAOnBC,cAAeC,CAAAA,MAAM,EAAEnQ,WAAW,EAAE,CAAA,CAAC;IAQrCoQ,cAAAA,CAAetd,OAAO,EAAE;QACtB,OAAO,KAAK,CAAA;IACd,CAAA;IASAud,iBAAiB5yB,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE,CAAA,CAAC;IAQzCC,oBAAoB9yB,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE,CAAA,CAAC;IAK5CE,mBAAsB,GAAA;QACpB,OAAO,CAAA,CAAA;IACT,CAAA;IASAC,cAAAA,CAAehlB,OAAO,EAAEwP,KAAK,EAAED,MAAM,EAAEgF,WAAW,EAAE;QAClD/E,KAAAA,GAAQ5c,KAAKoC,GAAG,CAAC,CAAGwa,EAAAA,KAAAA,IAASxP,QAAQwP,KAAK,CAAA,CAAA;QAC1CD,MAASA,GAAAA,MAAAA,IAAUvP,QAAQuP,MAAM,CAAA;QACjC,OAAO;YACLC,KAAAA;YACAD,MAAQ3c,EAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAGuf,EAAAA,WAAAA,GAAc3hB,KAAKoE,KAAK,CAACwY,KAAQ+E,GAAAA,WAAAA,CAAAA,GAAehF,MAAM,CAAA;QAC5E,CAAA,CAAA;IACF,CAAA;IAMA0V,UAAAA,CAAWP,MAAM,EAAE;QACjB,OAAO,IAAI,CAAA;IACb,CAAA;IAMAQ,YAAAA,CAAa7sB,MAAM,EAAE,CAErB,CAAA;AACF;ACtEe,MAAM8sB,aAAsBX,SAAAA,YAAAA,CAAAA;IACzCC,cAAAA,CAAe7wB,IAAI,EAAE;QAInB,OAAOA,IAAAA,IAAQA,KAAK+Q,UAAU,IAAI/Q,KAAK+Q,UAAU,CAAC,SAAS,IAAI,CAAA;IACjE,CAAA;IACAugB,YAAAA,CAAa7sB,MAAM,EAAE;QACnBA,MAAAA,CAAOmB,OAAO,CAACV,SAAS,GAAG,KAAK,CAAA;IAClC,CAAA;AACF;ACTA,MAAMssB,WAAc,GAAA,UAAA,CAAA;AAOpB,MAAMC,WAAc,GAAA;IAClBC,UAAY,EAAA,WAAA;IACZC,SAAW,EAAA,WAAA;IACXC,QAAU,EAAA,SAAA;IACVC,YAAc,EAAA,YAAA;IACdC,WAAa,EAAA,WAAA;IACbC,WAAa,EAAA,WAAA;IACbC,SAAW,EAAA,SAAA;IACXC,YAAc,EAAA,UAAA;IACdC,UAAY,EAAA,UAAA;AACd,CAAA,CAAA;AAEA,MAAMC,gBAAgB7rB,CAAAA,KAAAA,GAASA,KAAU,KAAA,IAAI,IAAIA,KAAU,KAAA,EAAA,CAAA;AAQ3D,SAAS8rB,UAAAA,CAAWtB,MAAM,EAAEnQ,WAAW,EAAE;IACvC,MAAMS,KAAAA,GAAQ0P,OAAO1P,KAAK,CAAA;IAI1B,MAAMiR,YAAAA,GAAevB,MAAOwB,CAAAA,YAAY,CAAC,QAAA,CAAA,CAAA;IACzC,MAAMC,WAAAA,GAAczB,MAAOwB,CAAAA,YAAY,CAAC,OAAA,CAAA,CAAA;IAGxCxB,MAAM,CAACU,YAAY,GAAG;QACpB1yB,OAAS,EAAA;YACP6c,MAAQ0W,EAAAA,YAAAA;YACRzW,KAAO2W,EAAAA,WAAAA;YACPnR,KAAO,EAAA;gBACLiF,OAAAA,EAASjF,MAAMiF,OAAO;gBACtB1K,MAAAA,EAAQyF,MAAMzF,MAAM;gBACpBC,KAAAA,EAAOwF,MAAMxF,KAAK;YACpB,CAAA;QACF,CAAA;IACF,CAAA,CAAA;IAKAwF,KAAAA,CAAMiF,OAAO,GAAGjF,KAAMiF,CAAAA,OAAO,IAAI,OAAA,CAAA;IAEjCjF,KAAAA,CAAMoR,SAAS,GAAGpR,KAAMoR,CAAAA,SAAS,IAAI,YAAA,CAAA;IAErC,IAAIL,cAAcI,WAAc,CAAA,EAAA;QAC9B,MAAME,YAAAA,OAAeC,wKAAAA,EAAa5B,MAAQ,EAAA,OAAA,CAAA,CAAA;QAC1C,IAAI2B,iBAAiBv0B,SAAW,EAAA;YAC9B4yB,MAAAA,CAAOlV,KAAK,GAAG6W,YAAAA,CAAAA;SAChB;KACF;IAED,IAAIN,cAAcE,YAAe,CAAA,EAAA;QAC/B,IAAIvB,MAAO1P,CAAAA,KAAK,CAACzF,MAAM,KAAK,EAAI,EAAA;YAI9BmV,MAAAA,CAAOnV,MAAM,GAAGmV,MAAAA,CAAOlV,KAAK,GAAA,CAAI+E,eAAe,CAAA,CAAA,CAAA;SAC1C,MAAA;YACL,MAAMgS,aAAAA,OAAgBD,wKAAAA,EAAa5B,MAAQ,EAAA,QAAA,CAAA,CAAA;YAC3C,IAAI6B,kBAAkBz0B,SAAW,EAAA;gBAC/B4yB,MAAAA,CAAOnV,MAAM,GAAGgX,aAAAA,CAAAA;aACjB;SACF;KACF;IAED,OAAO7B,MAAAA,CAAAA;AACT,CAAA;AAIA,MAAM8B,uBAAuBC,wKAA+B,GAAA;IAACC,OAAAA,EAAS,IAAI;AAAA,CAAA,GAAI,KAAK,CAAA;AAEnF,SAASC,YAAYC,IAAI,EAAEz0B,IAAI,EAAE0yB,QAAQ,EAAE;IACzC,IAAI+B,IAAM,EAAA;QACRA,IAAKhC,CAAAA,gBAAgB,CAACzyB,IAAAA,EAAM0yB,QAAU2B,EAAAA,oBAAAA,CAAAA,CAAAA;KACvC;AACH,CAAA;AAEA,SAASK,eAAe70B,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;IAC7C,IAAI7yB,KAAAA,IAASA,KAAM0yB,CAAAA,MAAM,EAAE;QACzB1yB,KAAAA,CAAM0yB,MAAM,CAACI,mBAAmB,CAAC3yB,MAAM0yB,QAAU2B,EAAAA,oBAAAA,CAAAA,CAAAA;KAClD;AACH,CAAA;AAEA,SAASM,eAAgBtyB,CAAAA,KAAK,EAAExC,KAAK,EAAE;IACrC,MAAMG,IAAAA,GAAOkzB,WAAW,CAAC7wB,KAAAA,CAAMrC,IAAI,CAAC,IAAIqC,MAAMrC,IAAI,CAAA;IAClD,MAAM,EAAC8I,CAAC,EAAEC,CAAAA,EAAE,OAAGykB,wKAAAA,EAAoBnrB,KAAOxC,EAAAA,KAAAA,CAAAA,CAAAA;IAC1C,OAAO;QACLG,IAAAA;QACAH,KAAAA;QACA+0B,MAAQvyB,EAAAA,KAAAA;QACRyG,CAAGA,EAAAA,CAAAA,KAAMnJ,SAAYmJ,GAAAA,CAAAA,GAAI,IAAI;QAC7BC,CAAGA,EAAAA,CAAAA,KAAMpJ,SAAYoJ,GAAAA,CAAAA,GAAI,IAAI;IAC/B,CAAA,CAAA;AACF,CAAA;AAEA,SAAS8rB,gBAAiBC,CAAAA,QAAQ,EAAEvC,MAAM,EAAE;IAC1C,KAAK,MAAMkC,QAAQK,QAAU,CAAA;QAC3B,IAAIL,IAASlC,KAAAA,MAAAA,IAAUkC,IAAKM,CAAAA,QAAQ,CAACxC,MAAS,CAAA,EAAA;YAC5C,OAAO,IAAI,CAAA;SACZ;IACH,CAAA;AACF,CAAA;AAEA,SAASyC,qBAAqBn1B,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAS1yB,MAAM0yB,MAAM,CAAA;IAC3B,MAAM0C,QAAW,GAAA,IAAIC,gBAAiBC,CAAAA,CAAAA,OAAW,GAAA;QAC/C,IAAIC,UAAU,KAAK,CAAA;QACnB,KAAK,MAAMhb,SAAS+a,OAAS,CAAA;YAC3BC,OAAAA,GAAUA,OAAWP,IAAAA,gBAAAA,CAAiBza,KAAMib,CAAAA,UAAU,EAAE9C,MAAAA,CAAAA,CAAAA;YACxD6C,OAAAA,GAAUA,OAAW,IAAA,CAACP,gBAAiBza,CAAAA,KAAAA,CAAMkb,YAAY,EAAE/C,MAAAA,CAAAA,CAAAA;QAC7D,CAAA;QACA,IAAI6C,OAAS,EAAA;YACX1C,QAAAA,EAAAA,CAAAA;SACD;IACH,CAAA,CAAA,CAAA;IACAuC,QAASM,CAAAA,OAAO,CAACC,QAAU,EAAA;QAACC,SAAAA,EAAW,IAAI;QAAEC,OAAAA,EAAS,IAAI;IAAA,CAAA,CAAA,CAAA;IAC1D,OAAOT,QAAAA,CAAAA;AACT,CAAA;AAEA,SAASU,qBAAqB91B,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAS1yB,MAAM0yB,MAAM,CAAA;IAC3B,MAAM0C,QAAW,GAAA,IAAIC,gBAAiBC,CAAAA,CAAAA,OAAW,GAAA;QAC/C,IAAIC,UAAU,KAAK,CAAA;QACnB,KAAK,MAAMhb,SAAS+a,OAAS,CAAA;YAC3BC,OAAAA,GAAUA,OAAWP,IAAAA,gBAAAA,CAAiBza,KAAMkb,CAAAA,YAAY,EAAE/C,MAAAA,CAAAA,CAAAA;YAC1D6C,OAAAA,GAAUA,OAAW,IAAA,CAACP,gBAAiBza,CAAAA,KAAAA,CAAMib,UAAU,EAAE9C,MAAAA,CAAAA,CAAAA;QAC3D,CAAA;QACA,IAAI6C,OAAS,EAAA;YACX1C,QAAAA,EAAAA,CAAAA;SACD;IACH,CAAA,CAAA,CAAA;IACAuC,QAASM,CAAAA,OAAO,CAACC,QAAU,EAAA;QAACC,SAAAA,EAAW,IAAI;QAAEC,OAAAA,EAAS,IAAI;IAAA,CAAA,CAAA,CAAA;IAC1D,OAAOT,QAAAA,CAAAA;AACT,CAAA;AAEA,MAAMW,qBAAqB,IAAIp2B,GAAAA,EAAAA,CAAAA;AAC/B,IAAIq2B,mBAAsB,GAAA,CAAA,CAAA;AAE1B,SAASC,cAAiB,GAAA;IACxB,MAAMC,GAAAA,GAAMh1B,OAAOi1B,gBAAgB,CAAA;IACnC,IAAID,QAAQF,mBAAqB,EAAA;QAC/B,OAAA;KACD;IACDA,mBAAsBE,GAAAA,GAAAA,CAAAA;IACtBH,kBAAAA,CAAmBv1B,OAAO,CAAC,CAAC41B,MAAAA,EAAQp2B,KAAU,GAAA;QAC5C,IAAIA,KAAAA,CAAMq2B,uBAAuB,KAAKH,GAAK,EAAA;YACzCE,MAAAA,EAAAA,CAAAA;SACD;IACH,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAASE,6BAA8Bt2B,CAAAA,KAAK,EAAEo2B,MAAM,EAAE;IACpD,IAAI,CAACL,kBAAmB5tB,CAAAA,IAAI,EAAE;QAC5BjH,MAAO0xB,CAAAA,gBAAgB,CAAC,QAAUqD,EAAAA,cAAAA,CAAAA,CAAAA;KACnC;IACDF,kBAAmBzzB,CAAAA,GAAG,CAACtC,KAAOo2B,EAAAA,MAAAA,CAAAA,CAAAA;AAChC,CAAA;AAEA,SAASG,+BAAAA,CAAgCv2B,KAAK,EAAE;IAC9C+1B,kBAAAA,CAAmB1yB,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;IAC1B,IAAI,CAAC+1B,kBAAmB5tB,CAAAA,IAAI,EAAE;QAC5BjH,MAAO4xB,CAAAA,mBAAmB,CAAC,QAAUmD,EAAAA,cAAAA,CAAAA,CAAAA;KACtC;AACH,CAAA;AAEA,SAASO,qBAAqBx2B,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAS1yB,MAAM0yB,MAAM,CAAA;IAC3B,MAAM+D,SAAAA,GAAY/D,cAAUgE,wKAAehE,EAAAA,MAAAA,CAAAA,CAAAA;IAC3C,IAAI,CAAC+D,SAAW,EAAA;QACd,OAAA;KACD;IACD,MAAML,MAASO,OAAAA,wKAAAA,EAAU,CAACnZ,KAAAA,EAAOD,MAAW,GAAA;QAC1C,MAAMiT,CAAAA,GAAIiG,UAAUG,WAAW,CAAA;QAC/B/D,QAAAA,CAASrV,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;QAChB,IAAIiT,CAAAA,GAAIiG,SAAUG,CAAAA,WAAW,EAAE;YAQ7B/D,QAAAA,EAAAA,CAAAA;SACD;KACA3xB,EAAAA,MAAAA,CAAAA,CAAAA;IAGH,MAAMk0B,QAAW,GAAA,IAAIyB,cAAevB,CAAAA,CAAAA,OAAW,GAAA;QAC7C,MAAM/a,KAAAA,GAAQ+a,OAAO,CAAC,CAAE,CAAA,CAAA;QACxB,MAAM9X,KAAQjD,GAAAA,KAAAA,CAAMuc,WAAW,CAACtZ,KAAK,CAAA;QACrC,MAAMD,MAAShD,GAAAA,KAAAA,CAAMuc,WAAW,CAACvZ,MAAM,CAAA;QAIvC,IAAIC,KAAAA,KAAU,CAAKD,IAAAA,MAAAA,KAAW,CAAG,EAAA;YAC/B,OAAA;SACD;QACD6Y,MAAAA,CAAO5Y,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;IAChB,CAAA,CAAA,CAAA;IACA6X,QAAAA,CAASM,OAAO,CAACe,SAAAA,CAAAA,CAAAA;IACjBH,6BAAAA,CAA8Bt2B,KAAOo2B,EAAAA,MAAAA,CAAAA,CAAAA;IAErC,OAAOhB,QAAAA,CAAAA;AACT,CAAA;AAEA,SAAS2B,gBAAgB/2B,KAAK,EAAEG,IAAI,EAAEi1B,QAAQ,EAAE;IAC9C,IAAIA,QAAU,EAAA;QACZA,QAAAA,CAAS4B,UAAU,EAAA,CAAA;KACpB;IACD,IAAI72B,SAAS,QAAU,EAAA;QACrBo2B,+BAAgCv2B,CAAAA,KAAAA,CAAAA,CAAAA;KACjC;AACH,CAAA;AAEA,SAASi3B,qBAAqBj3B,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAS1yB,MAAM0yB,MAAM,CAAA;IAC3B,MAAMwE,KAAAA,OAAQP,wKAAU,EAAA,CAACn0B,KAAU,GAAA;QAIjC,IAAIxC,KAAMiP,CAAAA,GAAG,KAAK,IAAI,EAAE;YACtB4jB,QAAAA,CAASiC,gBAAgBtyB,KAAOxC,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;SACjC;KACAA,EAAAA,KAAAA,CAAAA,CAAAA;IAEH20B,WAAAA,CAAYjC,QAAQvyB,IAAM+2B,EAAAA,KAAAA,CAAAA,CAAAA;IAE1B,OAAOA,KAAAA,CAAAA;AACT,CAAA;AAMe,MAAMC,WAAoB3E,SAAAA,YAAAA,CAAAA;IAOvCC,cAAeC,CAAAA,MAAM,EAAEnQ,WAAW,EAAE;QAIlC,MAAMlN,UAAUqd,MAAUA,IAAAA,MAAAA,CAAO/f,UAAU,IAAI+f,MAAAA,CAAO/f,UAAU,CAAC,IAAA,CAAA,CAAA;QASjE,IAAI0C,OAAWA,IAAAA,OAAAA,CAAQqd,MAAM,KAAKA,MAAQ,EAAA;YAGxCsB,UAAAA,CAAWtB,MAAQnQ,EAAAA,WAAAA,CAAAA,CAAAA;YACnB,OAAOlN,OAAAA,CAAAA;SACR;QAED,OAAO,IAAI,CAAA;IACb,CAAA;IAKAsd,cAAAA,CAAetd,OAAO,EAAE;QACtB,MAAMqd,MAAAA,GAASrd,QAAQqd,MAAM,CAAA;QAC7B,IAAI,CAACA,MAAM,CAACU,WAAAA,CAAY,EAAE;YACxB,OAAO,KAAK,CAAA;SACb;QAED,MAAM1yB,OAAUgyB,GAAAA,MAAM,CAACU,WAAAA,CAAY,CAAC1yB,OAAO,CAAA;QAC3C;YAAC,QAAA;YAAU,OAAA;SAAQ,CAACF,OAAO,CAAC,CAAC+D,IAAS,GAAA;YACpC,MAAM2D,KAAAA,GAAQxH,OAAO,CAAC6D,IAAK,CAAA,CAAA;YAC3B,QAAIuV,wKAAAA,EAAc5R,KAAQ,CAAA,EAAA;gBACxBwqB,MAAAA,CAAO0E,eAAe,CAAC7yB,IAAAA,CAAAA,CAAAA;aAClB,MAAA;gBACLmuB,MAAO2E,CAAAA,YAAY,CAAC9yB,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;aAC3B;QACH,CAAA,CAAA,CAAA;QAEA,MAAM8a,KAAQtiB,GAAAA,OAAAA,CAAQsiB,KAAK,IAAI,CAAA,CAAC,CAAA;QAChCrc,MAAAA,CAAOC,IAAI,CAACoc,KAAAA,CAAAA,CAAOxiB,OAAO,CAAC,CAACyG,GAAQ,GAAA;YAClCyrB,MAAAA,CAAO1P,KAAK,CAAC/b,GAAAA,CAAI,GAAG+b,KAAK,CAAC/b,GAAI,CAAA,CAAA;QAChC,CAAA,CAAA,CAAA;QAOAyrB,MAAOlV,CAAAA,KAAK,GAAGkV,MAAAA,CAAOlV,KAAK,CAAA;QAE3B,OAAOkV,MAAM,CAACU,WAAY,CAAA,CAAA;QAC1B,OAAO,IAAI,CAAA;IACb,CAAA;IAQAR,iBAAiB5yB,KAAK,EAAEG,IAAI,EAAE0yB,QAAQ,EAAE;QAEtC,IAAI,CAACC,mBAAmB,CAAC9yB,KAAOG,EAAAA,IAAAA,CAAAA,CAAAA;QAEhC,MAAMm3B,OAAAA,GAAUt3B,MAAMu3B,QAAQ,IAAA,CAAKv3B,KAAMu3B,CAAAA,QAAQ,GAAG,CAAA,CAAC,CAAA,CAAA;QACrD,MAAMC,QAAW,GAAA;YACfC,MAAQtC,EAAAA,oBAAAA;YACRuC,MAAQ5B,EAAAA,oBAAAA;YACRM,MAAQI,EAAAA,oBAAAA;QACV,CAAA,CAAA;QACA,MAAM9K,OAAU8L,GAAAA,QAAQ,CAACr3B,IAAAA,CAAK,IAAI82B,oBAAAA,CAAAA;QAClCK,OAAO,CAACn3B,IAAAA,CAAK,GAAGurB,OAAAA,CAAQ1rB,OAAOG,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;IACvC,CAAA;IAOAC,mBAAoB9yB,CAAAA,KAAK,EAAEG,IAAI,EAAE;QAC/B,MAAMm3B,OAAAA,GAAUt3B,MAAMu3B,QAAQ,IAAA,CAAKv3B,KAAMu3B,CAAAA,QAAQ,GAAG,CAAA,CAAC,CAAA,CAAA;QACrD,MAAML,KAAAA,GAAQI,OAAO,CAACn3B,IAAK,CAAA,CAAA;QAE3B,IAAI,CAAC+2B,KAAO,EAAA;YACV,OAAA;SACD;QAED,MAAMM,QAAW,GAAA;YACfC,MAAQV,EAAAA,eAAAA;YACRW,MAAQX,EAAAA,eAAAA;YACRX,MAAQW,EAAAA,eAAAA;QACV,CAAA,CAAA;QACA,MAAMrL,OAAU8L,GAAAA,QAAQ,CAACr3B,IAAAA,CAAK,IAAI00B,cAAAA,CAAAA;QAClCnJ,OAAAA,CAAQ1rB,OAAOG,IAAM+2B,EAAAA,KAAAA,CAAAA,CAAAA;QACrBI,OAAO,CAACn3B,KAAK,GAAGL,SAAAA,CAAAA;IAClB,CAAA;IAEAizB,mBAAsB,GAAA;QACpB,OAAO7xB,OAAOi1B,gBAAgB,CAAA;IAChC,CAAA;IAQAnD,cAAAA,CAAeN,MAAM,EAAElV,KAAK,EAAED,MAAM,EAAEgF,WAAW,EAAE;QACjD,WAAOyQ,wKAAAA,EAAeN,MAAQlV,EAAAA,KAAAA,EAAOD,MAAQgF,EAAAA,WAAAA,CAAAA,CAAAA;IAC/C,CAAA;IAKA0Q,UAAAA,CAAWP,MAAM,EAAE;QACjB,MAAM+D,SAAAA,GAAY/D,cAAUgE,wKAAehE,EAAAA,MAAAA,CAAAA,CAAAA;QAC3C,OAAO,CAAC,CAAA,CAAE+D,SAAaA,IAAAA,SAAAA,CAAUkB,WAAW,CAAD,CAAA;IAC7C,CAAA;AACF;AC/XO,SAASC,eAAgBlF,CAAAA,MAAM,EAAE;IACtC,IAAI,KAACmF,wKAAsB,EAAA,KAAA,OAAOC,eAAoB,KAAA,WAAA,IAAepF,kBAAkBoF,eAAkB,EAAA;QACvG,OAAO3E,aAAAA,CAAAA;KACR;IACD,OAAOgE,WAAAA,CAAAA;AACT;ACLe,MAAMY,OAAAA,CAAAA;IAEnB,OAAOlxB,QAAAA,GAAW,CAAA,CAAG,CAAA;IACrB,OAAOmxB,gBAAgBl4B,SAAU,CAAA;IAEjCmJ,CAAU,CAAA;IACVC,CAAU,CAAA;IACVzD,MAAAA,GAAS,KAAK,CAAC;IACf+B,OAAW,CAAA;IACXM,WAAwC,CAAA;IAExCmwB,eAAAA,CAAgB1L,gBAAyB,EAAS;QAChD,MAAM,EAACtjB,CAAAA,EAAGC,CAAAA,EAAE,GAAG,IAAI,CAAC4jB,QAAQ,CAAC;YAAC,GAAA;YAAK,GAAA;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAAO;YAACtjB,CAAAA;YAAGC,CAAAA;QAAC,CAAA,CAAA;IACd,CAAA;IAEAgvB,QAAW,GAAA;QACT,WAAO5Q,wKAAAA,EAAS,IAAI,CAACre,CAAC,SAAKqe,wKAAS,EAAA,IAAI,CAACpe,CAAC,CAAA,CAAA;IAC5C,CAAA;IASA4jB,QAAS9kB,CAAAA,KAAe,EAAEmwB,KAAe,EAAoC;QAC3E,MAAMl4B,KAAAA,GAAQ,IAAI,CAAC6H,WAAW,CAAA;QAC9B,IAAI,CAACqwB,KAAS,IAAA,CAACl4B,KAAO,EAAA;;YAEpB,OAAO,IAAI,CAAA;SACZ;QACD,MAAMm4B,MAA+B,CAAA,CAAC,CAAA;QACtCpwB,KAAMxH,CAAAA,OAAO,CAAC,CAAC+D,IAAS,GAAA;YACtB6zB,GAAG,CAAC7zB,KAAK,GAAGtE,KAAK,CAACsE,IAAK,CAAA,IAAItE,KAAK,CAACsE,IAAAA,CAAK,CAACkB,MAAM,EAAA,GAAKxF,KAAK,CAACsE,IAAAA,CAAK,CAACgB,GAAG,GAAG,IAAI,CAAChB,IAAe,CAAA,CAAA;QAC1F,CAAA,CAAA,CAAA;QACA,OAAO6zB,GAAAA,CAAAA;IACT,CAAA;AACF;AC5BO,SAASC,QAAAA,CAAS5vB,KAAK,EAAE6Q,KAAK,EAAE;IACrC,MAAMgf,QAAW7vB,GAAAA,KAAAA,CAAMjB,OAAO,CAAC8R,KAAK,CAAA;IACpC,MAAMif,qBAAqBC,iBAAkB/vB,CAAAA,KAAAA,CAAAA,CAAAA;IAC7C,MAAMgwB,aAAa73B,IAAKC,CAAAA,GAAG,CAACy3B,QAASI,CAAAA,aAAa,IAAIH,kBAAoBA,EAAAA,kBAAAA,CAAAA,CAAAA;IAC1E,MAAMI,YAAAA,GAAeL,SAASM,KAAK,CAACC,OAAO,GAAGC,eAAAA,CAAgBxf,SAAS,EAAE,CAAA;IACzE,MAAMyf,eAAAA,GAAkBJ,aAAal3B,MAAM,CAAA;IAC3C,MAAMu3B,KAAAA,GAAQL,YAAY,CAAC,CAAE,CAAA,CAAA;IAC7B,MAAMjb,IAAOib,GAAAA,YAAY,CAACI,eAAAA,GAAkB,CAAE,CAAA,CAAA;IAC9C,MAAME,WAAW,EAAE,CAAA;IAGnB,IAAIF,kBAAkBN,UAAY,EAAA;QAChCS,UAAW5f,CAAAA,KAAAA,EAAO2f,QAAUN,EAAAA,YAAAA,EAAcI,eAAkBN,GAAAA,UAAAA,CAAAA,CAAAA;QAC5D,OAAOQ,QAAAA,CAAAA;KACR;IAED,MAAM/W,OAAAA,GAAUiX,gBAAiBR,CAAAA,YAAAA,EAAcrf,KAAOmf,EAAAA,UAAAA,CAAAA,CAAAA;IAEtD,IAAIM,kBAAkB,CAAG,EAAA;QACvB,IAAIr3B,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,MAAMmvB,eAAkBL,GAAAA,eAAAA,GAAkB,CAAIn4B,GAAAA,IAAAA,CAAKy4B,KAAK,CAAE3b,CAAAA,IAAAA,GAAOsb,KAAI,IAAA,CAAMD,eAAkB,GAAA,CAAA,KAAM,IAAI,CAAA;QACvG5Y,IAAK7G,CAAAA,KAAAA,EAAO2f,UAAU/W,OAASpI,MAAAA,wKAAAA,EAAcsf,mBAAmB,CAAIJ,GAAAA,KAAAA,GAAQI,eAAe,EAAEJ,KAAAA,CAAAA,CAAAA;QAC7F,IAAKt3B,CAAAA,GAAI,GAAGuI,IAAO8uB,GAAAA,eAAAA,GAAkB,CAAC,EAAEr3B,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;YACrDye,IAAK7G,CAAAA,KAAAA,EAAO2f,QAAU/W,EAAAA,OAAAA,EAASyW,YAAY,CAACj3B,EAAE,EAAEi3B,YAAY,CAACj3B,CAAAA,GAAI,CAAE,CAAA,CAAA,CAAA;QACrE,CAAA;QACAye,IAAK7G,CAAAA,KAAAA,EAAO2f,QAAU/W,EAAAA,OAAAA,EAASxE,IAAM5D,MAAAA,wKAAAA,EAAcsf,mBAAmB9f,KAAM7X,CAAAA,MAAM,GAAGic,IAAAA,GAAO0b,eAAe,CAAA,CAAA;QAC3G,OAAOH,QAAAA,CAAAA;KACR;IACD9Y,IAAAA,CAAK7G,OAAO2f,QAAU/W,EAAAA,OAAAA,CAAAA,CAAAA;IACtB,OAAO+W,QAAAA,CAAAA;AACT,CAAC;AAED,SAAST,iBAAAA,CAAkB/vB,KAAK,EAAE;IAChC,MAAMgU,MAAShU,GAAAA,KAAAA,CAAMjB,OAAO,CAACiV,MAAM,CAAA;IACnC,MAAM6c,UAAAA,GAAa7wB,MAAM8wB,SAAS,EAAA,CAAA;IAClC,MAAMC,QAAAA,GAAW/wB,MAAMwQ,OAAO,GAAGqgB,aAAAA,CAAc7c,MAAAA,GAAS,CAAI,GAAA,CAAC,CAAD,CAAA;IAC5D,MAAMgd,QAAAA,GAAWhxB,KAAMixB,CAAAA,UAAU,GAAGJ,UAAAA,CAAAA;IACpC,OAAO14B,KAAKoE,KAAK,CAACpE,IAAKC,CAAAA,GAAG,CAAC24B,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACvC,CAAA;AAOA,SAASN,gBAAiBR,CAAAA,YAAY,EAAErf,KAAK,EAAEmf,UAAU,EAAE;IACzD,MAAMkB,mBAAmBC,cAAejB,CAAAA,YAAAA,CAAAA,CAAAA;IACxC,MAAMzW,OAAAA,GAAU5I,KAAM7X,CAAAA,MAAM,GAAGg3B,UAAAA,CAAAA;IAI/B,IAAI,CAACkB,gBAAkB,EAAA;QACrB,OAAO/4B,IAAAA,CAAKoC,GAAG,CAACkf,OAAS,EAAA,CAAA,CAAA,CAAA;KAC1B;IAED,MAAM2X,cAAUC,wKAAWH,EAAAA,gBAAAA,CAAAA,CAAAA;IAC3B,IAAK,IAAIj4B,CAAI,GAAA,CAAA,EAAGuI,IAAO4vB,GAAAA,OAAAA,CAAQp4B,MAAM,GAAG,CAAA,EAAGC,CAAIuI,GAAAA,IAAAA,EAAMvI,CAAK,EAAA,CAAA;QACxD,MAAMiC,MAAAA,GAASk2B,OAAO,CAACn4B,CAAE,CAAA,CAAA;QACzB,IAAIiC,SAASue,OAAS,EAAA;YACpB,OAAOve,MAAAA,CAAAA;SACR;IACH,CAAA;IACA,OAAO/C,IAAAA,CAAKoC,GAAG,CAACkf,OAAS,EAAA,CAAA,CAAA,CAAA;AAC3B,CAAA;AAKA,SAAS4W,eAAgBxf,CAAAA,KAAK,EAAE;IAC9B,MAAMyR,SAAS,EAAE,CAAA;IACjB,IAAIrpB,CAAGuI,EAAAA,IAAAA,CAAAA;IACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOqP,GAAAA,KAAAA,CAAM7X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;QAC9C,IAAI4X,KAAK,CAAC5X,CAAE,CAAA,CAACk3B,KAAK,EAAE;YAClB7N,MAAAA,CAAOroB,IAAI,CAAChB,CAAAA,CAAAA,CAAAA;SACb;IACH,CAAA;IACA,OAAOqpB,MAAAA,CAAAA;AACT,CAAA;AAQA,SAASmO,WAAW5f,KAAK,EAAE2f,QAAQ,EAAEN,YAAY,EAAEzW,OAAO,EAAE;IAC1D,IAAIpP,KAAQ,GAAA,CAAA,CAAA;IACZ,IAAIsH,IAAAA,GAAOue,YAAY,CAAC,CAAE,CAAA,CAAA;IAC1B,IAAIj3B,CAAAA,CAAAA;IAEJwgB,OAAUthB,GAAAA,IAAAA,CAAKm5B,IAAI,CAAC7X,OAAAA,CAAAA,CAAAA;IACpB,IAAKxgB,IAAI,CAAGA,EAAAA,CAAAA,GAAI4X,KAAM7X,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACjC,IAAIA,MAAM0Y,IAAM,EAAA;YACd6e,QAAAA,CAASv2B,IAAI,CAAC4W,KAAK,CAAC5X,CAAE,CAAA,CAAA,CAAA;YACtBoR,KAAAA,EAAAA,CAAAA;YACAsH,IAAOue,GAAAA,YAAY,CAAC7lB,KAAAA,GAAQoP,OAAQ,CAAA,CAAA;SACrC;IACH,CAAA;AACF,CAAA;AASA,SAAS/B,IAAK7G,CAAAA,KAAK,EAAE2f,QAAQ,EAAE/W,OAAO,EAAE8X,UAAU,EAAEC,QAAQ,EAAE;IAC5D,MAAMn5B,KAAAA,OAAQ6P,wKAAAA,EAAeqpB,UAAY,EAAA,CAAA,CAAA,CAAA;IACzC,MAAMnxB,GAAAA,GAAMjI,IAAKC,CAAAA,GAAG,KAAC8P,wKAAAA,EAAespB,UAAU3gB,KAAM7X,CAAAA,MAAM,CAAG6X,EAAAA,KAAAA,CAAM7X,MAAM,CAAA,CAAA;IACzE,IAAIqR,KAAQ,GAAA,CAAA,CAAA;IACZ,IAAIrR,QAAQC,CAAG0Y,EAAAA,IAAAA,CAAAA;IAEf8H,OAAUthB,GAAAA,IAAAA,CAAKm5B,IAAI,CAAC7X,OAAAA,CAAAA,CAAAA;IACpB,IAAI+X,QAAU,EAAA;QACZx4B,MAAAA,GAASw4B,QAAWD,GAAAA,UAAAA,CAAAA;QACpB9X,OAAAA,GAAUzgB,MAASb,GAAAA,IAAAA,CAAKoE,KAAK,CAACvD,MAASygB,GAAAA,OAAAA,CAAAA,CAAAA;KACxC;IAED9H,IAAOtZ,GAAAA,KAAAA,CAAAA;IAEP,MAAOsZ,OAAO,CAAG,CAAA;QACftH,KAAAA,EAAAA,CAAAA;QACAsH,IAAAA,GAAOxZ,IAAKy4B,CAAAA,KAAK,CAACv4B,KAAAA,GAAQgS,KAAQoP,GAAAA,OAAAA,CAAAA,CAAAA;IACpC,CAAA;IAEA,IAAKxgB,CAAAA,GAAId,KAAKoC,GAAG,CAAClC,OAAO,CAAIY,CAAAA,EAAAA,CAAAA,GAAImH,KAAKnH,CAAK,EAAA,CAAA;QACzC,IAAIA,MAAM0Y,IAAM,EAAA;YACd6e,QAAAA,CAASv2B,IAAI,CAAC4W,KAAK,CAAC5X,CAAE,CAAA,CAAA,CAAA;YACtBoR,KAAAA,EAAAA,CAAAA;YACAsH,IAAAA,GAAOxZ,IAAKy4B,CAAAA,KAAK,CAACv4B,KAAAA,GAAQgS,KAAQoP,GAAAA,OAAAA,CAAAA,CAAAA;SACnC;IACH,CAAA;AACF,CAAA;AAMA,SAAS0X,cAAeliB,CAAAA,GAAG,EAAE;IAC3B,MAAMwiB,GAAAA,GAAMxiB,IAAIjW,MAAM,CAAA;IACtB,IAAIC,CAAG0oB,EAAAA,IAAAA,CAAAA;IAEP,IAAI8P,MAAM,CAAG,EAAA;QACX,OAAO,KAAK,CAAA;KACb;IAED,IAAK9P,IAAAA,GAAO1S,GAAG,CAAC,CAAE,CAAA,EAAEhW,CAAI,GAAA,CAAC,EAAEA,CAAAA,GAAIw4B,GAAK,EAAA,EAAEx4B,CAAG,CAAA;QACvC,IAAIgW,GAAG,CAAChW,CAAE,CAAA,GAAGgW,GAAG,CAAChW,CAAAA,GAAI,CAAE,CAAA,KAAK0oB,IAAM,EAAA;YAChC,OAAO,KAAK,CAAA;SACb;IACH,CAAA;IACA,OAAOA,IAAAA,CAAAA;AACT;ACjKA,MAAM+P,YAAAA,GAAe,CAACC,KAAUA,GAAAA,KAAAA,KAAU,SAAS,OAAUA,GAAAA,KAAAA,KAAU,OAAU,GAAA,MAAA,GAASA,KAAK,CAAA;AAC/F,MAAMC,iBAAiB,CAAC5xB,KAAAA,EAAO+S,MAAMiB,MAAWjB,GAAAA,IAAAA,KAAS,SAASA,IAAS,KAAA,MAAA,GAAS/S,KAAK,CAAC+S,KAAK,GAAGiB,MAAAA,GAAShU,KAAK,CAAC+S,IAAAA,CAAK,GAAGiB,MAAM,CAAA;AAC/H,MAAM6d,aAAAA,GAAgB,CAACC,WAAa7B,EAAAA,aAAAA,GAAkB93B,KAAKC,GAAG,CAAC63B,iBAAiB6B,WAAaA,EAAAA,WAAAA,CAAAA,CAAAA;AAY7F,SAASC,MAAAA,CAAO9iB,GAAG,EAAE+iB,QAAQ,EAAE;IAC7B,MAAM1P,SAAS,EAAE,CAAA;IACjB,MAAM2P,SAAAA,GAAYhjB,GAAIjW,CAAAA,MAAM,GAAGg5B,QAAAA,CAAAA;IAC/B,MAAMP,GAAAA,GAAMxiB,IAAIjW,MAAM,CAAA;IACtB,IAAIC,CAAI,GAAA,CAAA,CAAA;IAER,MAAOA,CAAAA,GAAIw4B,GAAKx4B,EAAAA,CAAAA,IAAKg5B,SAAW,CAAA;QAC9B3P,MAAAA,CAAOroB,IAAI,CAACgV,GAAG,CAAC9W,IAAKoE,CAAAA,KAAK,CAACtD,CAAG,CAAA,CAAA,CAAA,CAAA;IAChC,CAAA;IACA,OAAOqpB,MAAAA,CAAAA;AACT,CAAA;AAOA,SAAS4P,mBAAoBlyB,CAAAA,KAAK,EAAEyB,KAAK,EAAE0wB,eAAe,EAAE;IAC1D,MAAMn5B,MAASgH,GAAAA,KAAAA,CAAM6Q,KAAK,CAAC7X,MAAM,CAAA;IACjC,MAAMo5B,UAAaj6B,GAAAA,IAAAA,CAAKC,GAAG,CAACqJ,OAAOzI,MAAS,GAAA,CAAA,CAAA,CAAA;IAC5C,MAAMX,KAAAA,GAAQ2H,MAAMiW,WAAW,CAAA;IAC/B,MAAM7V,GAAAA,GAAMJ,MAAMkW,SAAS,CAAA;IAC3B,MAAMmc,OAAAA,GAAU;IAChB,IAAIC,SAAAA,GAAYtyB,KAAM8Q,CAAAA,eAAe,CAACshB,UAAAA,CAAAA,CAAAA;IACtC,IAAIpe,MAAAA,CAAAA;IAEJ,IAAIme,eAAiB,EAAA;QACnB,IAAIn5B,WAAW,CAAG,EAAA;YAChBgb,MAAAA,GAAS7b,IAAKoC,CAAAA,GAAG,CAAC+3B,SAAAA,GAAYj6B,OAAO+H,GAAMkyB,GAAAA,SAAAA,CAAAA,CAAAA;SACtC,MAAA,IAAI7wB,UAAU,CAAG,EAAA;YACtBuS,MAAAA,GAAS,CAAChU,KAAAA,CAAM8Q,eAAe,CAAC,CAAA,CAAA,GAAKwhB,SAAQ,IAAK,CAAA,CAAA;SAC7C,MAAA;YACLte,MAAS,GAACse,CAAAA,SAAYtyB,GAAAA,KAAAA,CAAM8Q,eAAe,CAACshB,UAAAA,GAAa,EAAC,IAAK,CAAA,CAAA;SAChE;QACDE,SAAAA,IAAaF,UAAa3wB,GAAAA,KAAAA,GAAQuS,MAAS,GAAA,CAACA,MAAM,CAAA;QAGlD,IAAIse,SAAYj6B,GAAAA,KAAAA,GAAQg6B,OAAWC,IAAAA,SAAAA,GAAYlyB,MAAMiyB,OAAS,EAAA;YAC5D,OAAA;SACD;KACF;IACD,OAAOC,SAAAA,CAAAA;AACT,CAAA;AAMA,SAASC,cAAAA,CAAeC,MAAM,EAAEx5B,MAAM,EAAE;QACtC4wB,wKAAK4I,EAAAA,MAAAA,EAAQ,CAACzlB,KAAU,GAAA;QACtB,MAAM0lB,EAAAA,GAAK1lB,MAAM0lB,EAAE,CAAA;QACnB,MAAMC,KAAAA,GAAQD,EAAGz5B,CAAAA,MAAM,GAAG,CAAA,CAAA;QAC1B,IAAIC,CAAAA,CAAAA;QACJ,IAAIy5B,QAAQ15B,MAAQ,EAAA;YAClB,IAAKC,CAAI,GAAA,CAAA,EAAGA,CAAIy5B,GAAAA,KAAAA,EAAO,EAAEz5B,CAAG,CAAA;gBAC1B,OAAO8T,MAAM1K,IAAI,CAACowB,EAAE,CAACx5B,EAAE,CAAC,CAAA;YAC1B,CAAA;YACAw5B,EAAGrjB,CAAAA,MAAM,CAAC,CAAGsjB,EAAAA,KAAAA,CAAAA,CAAAA;SACd;IACH,CAAA,CAAA,CAAA;AACF,CAAA;AAKA,SAASC,iBAAkB5zB,CAAAA,OAAO,EAAE;IAClC,OAAOA,QAAQ6zB,SAAS,GAAG7zB,OAAQ8xB,CAAAA,UAAU,GAAG,CAAC,CAAA;AACnD,CAAA;AAKA,SAASgC,cAAAA,CAAe9zB,OAAO,EAAE+zB,QAAQ,EAAE;IACzC,IAAI,CAAC/zB,OAAQygB,CAAAA,OAAO,EAAE;QACpB,OAAO,CAAA,CAAA;KACR;IAED,MAAMuT,IAAOC,OAAAA,yKAAAA,EAAOj0B,OAAQg0B,CAAAA,IAAI,EAAED,QAAAA,CAAAA,CAAAA;IAClC,MAAM5J,OAAAA,OAAUO,wKAAU1qB,EAAAA,OAAAA,CAAQmqB,OAAO,CAAA,CAAA;IACzC,MAAM+J,KAAAA,OAAQv0B,wKAAQK,EAAAA,OAAAA,CAAQyb,IAAI,CAAA,GAAIzb,QAAQyb,IAAI,CAACxhB,MAAM,GAAG,CAAC,CAAA;IAE7D,OAAO,KAAS+5B,GAAAA,IAAAA,CAAKG,UAAU,GAAIhK,QAAQpU,MAAM,CAAA;AACnD,CAAA;AAEA,SAASqe,kBAAmBhuB,CAAAA,MAAM,EAAEnF,KAAK,EAAE;IACzC,WAAOoF,wKAAAA,EAAcD,MAAQ,EAAA;QAC3BnF,KAAAA;QACAtI,IAAM,EAAA,OAAA;IACR,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAAS07B,kBAAkBjuB,MAAM,EAAE1D,KAAK,EAAEnI,IAAI,EAAE;IAC9C,WAAO8L,wKAAAA,EAAcD,MAAQ,EAAA;QAC3B7L,IAAAA;QACAmI,KAAAA;QACA/J,IAAM,EAAA,MAAA;IACR,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAAS27B,WAAW1B,KAAK,EAAE3O,QAAQ,EAAE7iB,OAAO,EAAE;IAE5C,IAAIwvB,GAAAA,OAAM2D,yKAAmB3B,EAAAA,KAAAA,CAAAA,CAAAA;IAC7B,IAAI,OAAY3O,IAAAA,QAAAA,KAAa,WAAa,CAAC7iB,OAAAA,IAAW6iB,aAAa,OAAU,EAAA;QAC3E2M,GAAAA,GAAM+B,YAAa/B,CAAAA,GAAAA,CAAAA,CAAAA;KACpB;IACD,OAAOA,GAAAA,CAAAA;AACT,CAAA;AAEA,SAAS4D,SAAAA,CAAUvzB,KAAK,EAAEgU,MAAM,EAAEgP,QAAQ,EAAE2O,KAAK,EAAE;IACjD,MAAM,EAACjxB,GAAG,EAAEG,IAAI,EAAED,MAAM,EAAED,KAAK,EAAEpJ,KAAK,EAAC,GAAGyI,KAAAA,CAAAA;IAC1C,MAAM,EAACuM,SAAAA,EAAWxH,MAAAA,EAAO,GAAGxN,KAAAA,CAAAA;IAC5B,IAAIqgB,QAAW,GAAA,CAAA,CAAA;IACf,IAAI6E,UAAU+W,MAAQC,EAAAA,MAAAA,CAAAA;IACtB,MAAM3e,SAASlU,MAASF,GAAAA,GAAAA,CAAAA;IACxB,MAAMqU,QAAQpU,KAAQE,GAAAA,IAAAA,CAAAA;IAEtB,IAAIb,KAAAA,CAAM0S,YAAY,EAAI,EAAA;QACxB8gB,MAASE,OAAAA,yKAAAA,EAAe/B,OAAO9wB,IAAMF,EAAAA,KAAAA,CAAAA,CAAAA;QAErC,QAAI3C,wKAAAA,EAASglB,QAAW,CAAA,EAAA;YACtB,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;YAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;YACtCF,MAAAA,GAAS1uB,MAAM,CAAC4uB,cAAAA,CAAe,CAAC/iB,gBAAgB,CAACnR,SAASqV,MAASd,GAAAA,MAAAA,CAAAA;SAC9D,MAAA,IAAIgP,aAAa,QAAU,EAAA;YAChCyQ,MAAS,GAAClnB,CAAAA,SAAAA,CAAU3L,MAAM,GAAG2L,UAAU7L,GAAE,IAAK,CAAA,GAAIoU,MAASd,GAAAA,MAAAA,CAAAA;SACtD,MAAA;YACLyf,MAAS7B,GAAAA,cAAAA,CAAe5xB,OAAOgjB,QAAUhP,EAAAA,MAAAA,CAAAA,CAAAA;SAC1C;QACDyI,QAAAA,GAAW9b,KAAQE,GAAAA,IAAAA,CAAAA;KACd,MAAA;QACL,QAAI7C,wKAAAA,EAASglB,QAAW,CAAA,EAAA;YACtB,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;YAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;YACtCH,MAAAA,GAASzuB,MAAM,CAAC4uB,cAAAA,CAAe,CAAC/iB,gBAAgB,CAACnR,SAASsV,KAAQf,GAAAA,MAAAA,CAAAA;SAC7D,MAAA,IAAIgP,aAAa,QAAU,EAAA;YAChCwQ,MAAS,GAACjnB,CAAAA,SAAAA,CAAU1L,IAAI,GAAG0L,UAAU5L,KAAI,IAAK,CAAA,GAAIoU,KAAQf,GAAAA,MAAAA,CAAAA;SACrD,MAAA;YACLwf,MAAS5B,GAAAA,cAAAA,CAAe5xB,OAAOgjB,QAAUhP,EAAAA,MAAAA,CAAAA,CAAAA;SAC1C;QACDyf,MAASC,OAAAA,yKAAAA,EAAe/B,OAAO/wB,MAAQF,EAAAA,GAAAA,CAAAA,CAAAA;QACvCkX,QAAAA,GAAWoL,QAAa,KAAA,MAAA,GAAS,CAAC9J,wKAAAA,GAAUA,wKAAO,CAAA;KACpD;IACD,OAAO;QAACsa,MAAAA;QAAQC,MAAAA;QAAQhX,QAAAA;QAAU7E,QAAAA;IAAQ,CAAA,CAAA;AAC5C,CAAA;AAEe,MAAMgc,KAActE,SAAAA,OAAAA,CAAAA;IAGjCv4B,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,EAAA,CAAA;QAGL,IAAI,CAACuH,EAAE,GAAGvH,IAAIuH,EAAE,CAAA;QAEhB,IAAI,CAACzL,IAAI,GAAGkE,IAAIlE,IAAI,CAAA;QAEpB,IAAI,CAACqH,OAAO,GAAG1H,SAAAA,CAAAA;QAEf,IAAI,CAACmP,GAAG,GAAG5K,IAAI4K,GAAG,CAAA;QAElB,IAAI,CAACjP,KAAK,GAAGqE,IAAIrE,KAAK,CAAA;QAItB,IAAI,CAACmJ,GAAG,GAAGrJ,SAAAA,CAAAA;QAEX,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;QAEd,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;QAEZ,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;QAEb,IAAI,CAAC0d,KAAK,GAAG1d,SAAAA,CAAAA;QAEb,IAAI,CAACyd,MAAM,GAAGzd,SAAAA,CAAAA;QACd,IAAI,CAACw8B,QAAQ,GAAG;YACdhzB,IAAM,EAAA,CAAA;YACNF,KAAO,EAAA,CAAA;YACPD,GAAK,EAAA,CAAA;YACLE,MAAQ,EAAA,CAAA;QACV,CAAA,CAAA;QAEA,IAAI,CAAC6b,QAAQ,GAAGplB,SAAAA,CAAAA;QAEhB,IAAI,CAACqlB,SAAS,GAAGrlB,SAAAA,CAAAA;QAEjB,IAAI,CAACy8B,UAAU,GAAGz8B,SAAAA,CAAAA;QAElB,IAAI,CAAC08B,aAAa,GAAG18B,SAAAA,CAAAA;QAErB,IAAI,CAAC28B,WAAW,GAAG38B,SAAAA,CAAAA;QAEnB,IAAI,CAAC48B,YAAY,GAAG58B,SAAAA,CAAAA;QAIpB,IAAI,CAACqL,IAAI,GAAGrL,SAAAA,CAAAA;QAEZ,IAAI,CAAC68B,aAAa,GAAG78B,SAAAA,CAAAA;QACrB,IAAI,CAACe,GAAG,GAAGf,SAAAA,CAAAA;QACX,IAAI,CAACkD,GAAG,GAAGlD,SAAAA,CAAAA;QACX,IAAI,CAAC88B,MAAM,GAAG98B,SAAAA,CAAAA;QAEd,IAAI,CAACwZ,KAAK,GAAG,EAAE,CAAA;QAEf,IAAI,CAACujB,cAAc,GAAG,IAAI,CAAA;QAE1B,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;QAEvB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAAC9jB,OAAO,GAAG,CAAA,CAAA;QACf,IAAI,CAACygB,UAAU,GAAG,CAAA,CAAA;QAClB,IAAI,CAACsD,iBAAiB,GAAG,CAAA,CAAC,CAAA;QAE1B,IAAI,CAACte,WAAW,GAAG5e,SAAAA,CAAAA;QAEnB,IAAI,CAAC6e,SAAS,GAAG7e,SAAAA,CAAAA;QACjB,IAAI,CAAC8qB,cAAc,GAAG,KAAK,CAAA;QAC3B,IAAI,CAACqS,QAAQ,GAAGn9B,SAAAA,CAAAA;QAChB,IAAI,CAACo9B,QAAQ,GAAGp9B,SAAAA,CAAAA;QAChB,IAAI,CAACq9B,aAAa,GAAGr9B,SAAAA,CAAAA;QACrB,IAAI,CAACs9B,aAAa,GAAGt9B,SAAAA,CAAAA;QACrB,IAAI,CAACu9B,YAAY,GAAG,CAAA,CAAA;QACpB,IAAI,CAACC,YAAY,GAAG,CAAA,CAAA;QACpB,IAAI,CAAC7kB,MAAM,GAAG,CAAA,CAAC,CAAA;QACf,IAAI,CAAC8kB,iBAAiB,GAAG,KAAK,CAAA;QAC9B,IAAI,CAAC1tB,QAAQ,GAAG/P,SAAAA,CAAAA;IAClB,CAAA;IAMAmqB,IAAAA,CAAKziB,OAAO,EAAE;QACZ,IAAI,CAACA,OAAO,GAAGA,OAAAA,CAAQg2B,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QAEjD,IAAI,CAACxH,IAAI,GAAG3D,OAAAA,CAAQ2D,IAAI,CAAA;QAGxB,IAAI,CAAC+xB,QAAQ,GAAG,IAAI,CAACrqB,KAAK,CAACrL,QAAQ3G,GAAG,CAAA,CAAA;QACtC,IAAI,CAACo8B,QAAQ,GAAG,IAAI,CAACpqB,KAAK,CAACrL,QAAQxE,GAAG,CAAA,CAAA;QACtC,IAAI,CAACo6B,aAAa,GAAG,IAAI,CAACvqB,KAAK,CAACrL,QAAQi2B,YAAY,CAAA,CAAA;QACpD,IAAI,CAACN,aAAa,GAAG,IAAI,CAACtqB,KAAK,CAACrL,QAAQk2B,YAAY,CAAA,CAAA;IACtD,CAAA;IAQA7qB,KAAM3E,CAAAA,GAAG,EAAEhE,KAAK,EAAE;QAChB,OAAOgE,GAAAA,CAAAA;IACT,CAAA;IAOArC,aAAgB,GAAA;QACd,IAAI,EAACqxB,QAAQ,EAAED,QAAQ,EAAEG,aAAAA,EAAeD,aAAAA,EAAc,GAAG,IAAI,CAAA;QAC7DD,QAAWS,OAAAA,wKAAAA,EAAgBT,QAAUlxB,EAAAA,MAAAA,CAAOE,iBAAiB,CAAA,CAAA;QAC7D+wB,QAAWU,OAAAA,wKAAAA,EAAgBV,QAAUjxB,EAAAA,MAAAA,CAAOC,iBAAiB,CAAA,CAAA;QAC7DmxB,aAAgBO,OAAAA,wKAAAA,EAAgBP,aAAepxB,EAAAA,MAAAA,CAAOE,iBAAiB,CAAA,CAAA;QACvEixB,aAAgBQ,OAAAA,wKAAAA,EAAgBR,aAAenxB,EAAAA,MAAAA,CAAOC,iBAAiB,CAAA,CAAA;QACvE,OAAO;YACLpL,GAAAA,MAAK88B,wKAAAA,EAAgBT,QAAUE,EAAAA,aAAAA,CAAAA;YAC/Bp6B,GAAAA,MAAK26B,wKAAAA,EAAgBV,QAAUE,EAAAA,aAAAA,CAAAA;YAC/BrxB,UAAAA,MAAYnB,wKAASuyB,EAAAA,QAAAA,CAAAA;YACrBnxB,UAAAA,MAAYpB,wKAASsyB,EAAAA,QAAAA,CAAAA;QACvB,CAAA,CAAA;IACF,CAAA;IAQA/oB,SAAAA,CAAUxF,QAAQ,EAAE;QAClB,IAAI,EAAC7N,GAAAA,EAAKmC,GAAAA,EAAK8I,UAAAA,EAAYC,UAAAA,EAAW,GAAG,IAAI,CAACF,aAAa,EAAA,CAAA;QAC3D,IAAIkI,KAAAA,CAAAA;QAEJ,IAAIjI,cAAcC,UAAY,EAAA;YAC5B,OAAO;gBAAClL,GAAAA;gBAAKmC,GAAAA;YAAG,CAAA,CAAA;SACjB;QAED,MAAM46B,KAAAA,GAAQ,IAAI,CAAClxB,uBAAuB,EAAA,CAAA;QAC1C,IAAK,IAAIhL,CAAI,GAAA,CAAA,EAAGuI,IAAO2zB,GAAAA,KAAAA,CAAMn8B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAClDqS,KAAQ6pB,GAAAA,KAAK,CAACl8B,CAAE,CAAA,CAACkL,UAAU,CAACsH,SAAS,CAAC,IAAI,EAAExF,QAAAA,CAAAA,CAAAA;YAC5C,IAAI,CAAC5C,UAAY,EAAA;gBACfjL,GAAAA,GAAMD,IAAKC,CAAAA,GAAG,CAACA,GAAAA,EAAKkT,MAAMlT,GAAG,CAAA,CAAA;aAC9B;YACD,IAAI,CAACkL,UAAY,EAAA;gBACf/I,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK+Q,MAAM/Q,GAAG,CAAA,CAAA;aAC9B;QACH,CAAA;QAGAnC,GAAAA,GAAMkL,UAAclL,IAAAA,GAAAA,GAAMmC,GAAMA,GAAAA,GAAAA,GAAMnC,GAAG,CAAA;QACzCmC,GAAAA,GAAM8I,UAAcjL,IAAAA,GAAAA,GAAMmC,GAAMnC,GAAAA,GAAAA,GAAMmC,GAAG,CAAA;QAEzC,OAAO;YACLnC,GAAK88B,MAAAA,wKAAAA,EAAgB98B,GAAK88B,MAAAA,wKAAAA,EAAgB36B,GAAKnC,EAAAA,GAAAA,CAAAA,CAAAA;YAC/CmC,GAAK26B,MAAAA,wKAAAA,EAAgB36B,GAAK26B,MAAAA,wKAAAA,EAAgB98B,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;QACjD,CAAA,CAAA;IACF,CAAA;IAOAktB,UAAa,GAAA;QACX,OAAO;YACL5mB,IAAM,EAAA,IAAI,CAACmzB,WAAW,IAAI,CAAA;YAC1BtzB,GAAK,EAAA,IAAI,CAACozB,UAAU,IAAI,CAAA;YACxBnzB,KAAO,EAAA,IAAI,CAACszB,YAAY,IAAI,CAAA;YAC5BrzB,MAAQ,EAAA,IAAI,CAACmzB,aAAa,IAAI,CAAA;QAChC,CAAA,CAAA;IACF,CAAA;IAOAqB,QAAW,GAAA;QACT,OAAO,IAAI,CAACvkB,KAAK,CAAA;IACnB,CAAA;IAKA/F,SAAY,GAAA;QACV,MAAMzI,IAAO,GAAA,IAAI,CAAC9K,KAAK,CAAC8K,IAAI,CAAA;QAC5B,OAAO,IAAI,CAACtD,OAAO,CAAC8L,MAAM,IAAA,CAAK,IAAI,CAAC6H,YAAY,KAAKrQ,IAAKgzB,CAAAA,OAAO,GAAGhzB,IAAKizB,CAAAA,OAAO,CAAKjzB,IAAAA,IAAAA,CAAKwI,MAAM,IAAI,EAAE,CAAA;IACxG,CAAA;IAKA0qB,cAAchpB,SAAY,GAAA,IAAI,CAAChV,KAAK,CAACgV,SAAS,EAAE;QAC9C,MAAMxT,KAAQ,GAAA,IAAI,CAACs7B,WAAW,IAAA,CAAK,IAAI,CAACA,WAAW,GAAG,IAAI,CAACmB,kBAAkB,CAACjpB,SAAS,CAAA,CAAA,CAAA;QACvF,OAAOxT,KAAAA,CAAAA;IACT,CAAA;IAGA8wB,YAAe,GAAA;QACb,IAAI,CAAC7Z,MAAM,GAAG,CAAA,CAAC,CAAA;QACf,IAAI,CAAC8kB,iBAAiB,GAAG,KAAK,CAAA;IAChC,CAAA;IAMAW,YAAe,GAAA;YACbj9B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC02B,YAAY,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACxC,CAAA;IAUAx4B,OAAOwf,QAAQ,EAAEC,SAAS,EAAEgZ,OAAO,EAAE;QACnC,MAAM,EAACvhB,WAAW,EAAEwhB,KAAK,EAAE9kB,KAAOgf,EAAAA,QAAAA,EAAS,GAAG,IAAI,CAAC9wB,OAAO,CAAA;QAC1D,MAAM62B,UAAAA,GAAa/F,SAAS+F,UAAU,CAAA;QAGtC,IAAI,CAACH,YAAY,EAAA,CAAA;QAGjB,IAAI,CAAChZ,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACC,SAAS,GAAGA,SAAAA,CAAAA;QACjB,IAAI,CAACmX,QAAQ,GAAG6B,OAAUx3B,GAAAA,MAAAA,CAAOyB,MAAM,CAAC;YACtCkB,IAAM,EAAA,CAAA;YACNF,KAAO,EAAA,CAAA;YACPD,GAAK,EAAA,CAAA;YACLE,MAAQ,EAAA,CAAA;SACP80B,EAAAA,OAAAA,CAAAA,CAAAA;QAEH,IAAI,CAAC7kB,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAACyjB,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAACF,cAAc,GAAG,IAAI,CAAA;QAC1B,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;QAGvB,IAAI,CAACwB,mBAAmB,EAAA,CAAA;QACxB,IAAI,CAACC,aAAa,EAAA,CAAA;QAClB,IAAI,CAACC,kBAAkB,EAAA,CAAA;QAEvB,IAAI,CAAC9E,UAAU,GAAG,IAAI,CAACve,YAAY,EAC/B,GAAA,IAAI,CAACqC,KAAK,GAAG2gB,OAAAA,CAAQ70B,IAAI,GAAG60B,OAAAA,CAAQ/0B,KAAK,GACzC,IAAI,CAACmU,MAAM,GAAG4gB,OAAQh1B,CAAAA,GAAG,GAAGg1B,OAAAA,CAAQ90B,MAAM,CAAA;QAG9C,IAAI,CAAC,IAAI,CAACk0B,iBAAiB,EAAE;YAC3B,IAAI,CAACkB,gBAAgB,EAAA,CAAA;YACrB,IAAI,CAACC,mBAAmB,EAAA,CAAA;YACxB,IAAI,CAACC,eAAe,EAAA,CAAA;YACpB,IAAI,CAAC/B,MAAM,OAAGgC,wKAAU,EAAA,IAAI,EAAER,KAAOxhB,EAAAA,WAAAA,CAAAA,CAAAA;YACrC,IAAI,CAAC2gB,iBAAiB,GAAG,IAAI,CAAA;SAC9B;QAED,IAAI,CAACsB,gBAAgB,EAAA,CAAA;QAErB,IAAI,CAACvlB,KAAK,GAAG,IAAI,CAACwlB,UAAU,MAAM,EAAE,CAAA;QAGpC,IAAI,CAACC,eAAe,EAAA,CAAA;QAIpB,MAAMC,kBAAkBX,UAAa,GAAA,IAAI,CAAC/kB,KAAK,CAAC7X,MAAM,CAAA;QACtD,IAAI,CAACw9B,qBAAqB,CAACD,eAAAA,GAAkBxE,MAAO,CAAA,IAAI,CAAClhB,KAAK,EAAE+kB,UAAAA,CAAAA,GAAc,IAAI,CAAC/kB,KAAK,CAAA,CAAA;QAMxF,IAAI,CAAC9S,SAAS,EAAA,CAAA;QAGd,IAAI,CAAC04B,4BAA4B,EAAA,CAAA;QACjC,IAAI,CAACC,sBAAsB,EAAA,CAAA;QAC3B,IAAI,CAACC,2BAA2B,EAAA,CAAA;QAGhC,IAAI9G,QAAAA,CAASrQ,OAAO,IAAA,CAAKqQ,QAAAA,CAASD,QAAQ,IAAIC,QAAS+G,CAAAA,MAAM,KAAK,MAAK,CAAI,EAAA;YACzE,IAAI,CAAC/lB,KAAK,GAAG+e,QAAAA,CAAS,IAAI,EAAE,IAAI,CAAC/e,KAAK,CAAA,CAAA;YACtC,IAAI,CAACyjB,WAAW,GAAG,IAAI,CAAA;YACvB,IAAI,CAACuC,aAAa,EAAA,CAAA;SACnB;QAED,IAAIN,eAAiB,EAAA;YAEnB,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAAC3lB,KAAK,CAAA,CAAA;SACtC;QAED,IAAI,CAACimB,SAAS,EAAA,CAAA;QACd,IAAI,CAACC,GAAG,EAAA,CAAA;QACR,IAAI,CAACC,QAAQ,EAAA,CAAA;QAIb,IAAI,CAACC,WAAW,EAAA,CAAA;IAClB,CAAA;IAKAl5B,SAAY,GAAA;QACV,IAAIm5B,aAAgB,GAAA,IAAI,CAACn4B,OAAO,CAACoB,OAAO,CAAA;QACxC,IAAIoW,UAAYE,EAAAA,QAAAA,CAAAA;QAEhB,IAAI,IAAI,CAAC/D,YAAY,EAAI,EAAA;YACvB6D,UAAa,GAAA,IAAI,CAAC1V,IAAI,CAAA;YACtB4V,QAAW,GAAA,IAAI,CAAC9V,KAAK,CAAA;SAChB,MAAA;YACL4V,UAAa,GAAA,IAAI,CAAC7V,GAAG,CAAA;YACrB+V,QAAW,GAAA,IAAI,CAAC7V,MAAM,CAAA;YAEtBs2B,aAAAA,GAAgB,CAACA,aAAAA,CAAAA;SAClB;QACD,IAAI,CAACjhB,WAAW,GAAGM,UAAAA,CAAAA;QACnB,IAAI,CAACL,SAAS,GAAGO,QAAAA,CAAAA;QACjB,IAAI,CAAC0L,cAAc,GAAG+U,aAAAA,CAAAA;QACtB,IAAI,CAAC1mB,OAAO,GAAGiG,QAAWF,GAAAA,UAAAA,CAAAA;QAC1B,IAAI,CAAC4gB,cAAc,GAAG,IAAI,CAACp4B,OAAO,CAACq4B,aAAa,CAAA;IAClD,CAAA;IAEAH,WAAc,GAAA;YACZz+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAACk4B,WAAW,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACvC,CAAA;IAIApB,mBAAsB,GAAA;YACpBr9B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC82B,mBAAmB,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IAC/C,CAAA;IACAC,aAAgB,GAAA;QAEd,IAAI,IAAI,CAACpjB,YAAY,EAAI,EAAA;YAEvB,IAAI,CAACqC,KAAK,GAAG,IAAI,CAAC0H,QAAQ,CAAA;YAC1B,IAAI,CAAC5b,IAAI,GAAG,CAAA,CAAA;YACZ,IAAI,CAACF,KAAK,GAAG,IAAI,CAACoU,KAAK,CAAA;SAClB,MAAA;YACL,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC4H,SAAS,CAAA;YAG5B,IAAI,CAAChc,GAAG,GAAG,CAAA,CAAA;YACX,IAAI,CAACE,MAAM,GAAG,IAAI,CAACkU,MAAM,CAAA;SAC1B;QAGD,IAAI,CAACkf,WAAW,GAAG,CAAA,CAAA;QACnB,IAAI,CAACF,UAAU,GAAG,CAAA,CAAA;QAClB,IAAI,CAACG,YAAY,GAAG,CAAA,CAAA;QACpB,IAAI,CAACF,aAAa,GAAG,CAAA,CAAA;IACvB,CAAA;IACAgC,kBAAqB,GAAA;YACnBv9B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAACg3B,kBAAkB,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IAC9C,CAAA;IAEAsB,UAAAA,CAAWrhB,IAAI,EAAE;QACf,IAAI,CAACze,KAAK,CAAC+/B,aAAa,CAACthB,IAAM,EAAA,IAAI,CAAC9L,UAAU,EAAA,CAAA,CAAA;YAC9C1R,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAACiX,KAAK,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACjC,CAAA;IAGAggB,gBAAmB,GAAA;QACjB,IAAI,CAACqB,UAAU,CAAC,kBAAA,CAAA,CAAA;IAClB,CAAA;IACApB,mBAAAA,GAAsB,CAAA,CAAC;IACvBC,eAAkB,GAAA;QAChB,IAAI,CAACmB,UAAU,CAAC,iBAAA,CAAA,CAAA;IAClB,CAAA;IAGAjB,gBAAmB,GAAA;QACjB,IAAI,CAACiB,UAAU,CAAC,kBAAA,CAAA,CAAA;IAClB,CAAA;IAIAhB,UAAa,GAAA;QACX,OAAO,EAAE,CAAA;IACX,CAAA;IACAC,eAAkB,GAAA;QAChB,IAAI,CAACe,UAAU,CAAC,iBAAA,CAAA,CAAA;IAClB,CAAA;IAEAE,2BAA8B,GAAA;YAC5B/+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAACw4B,2BAA2B,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACvD,CAAA;IAKAC,kBAAAA,CAAmB3mB,KAAK,EAAE;QACxB,MAAMgf,QAAW,GAAA,IAAI,CAAC9wB,OAAO,CAAC8R,KAAK,CAAA;QACnC,IAAI5X,GAAGuI,IAAMlI,EAAAA,IAAAA,CAAAA;QACb,IAAKL,CAAAA,GAAI,GAAGuI,IAAOqP,GAAAA,KAAAA,CAAM7X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;YAC9CK,IAAOuX,GAAAA,KAAK,CAAC5X,CAAE,CAAA,CAAA;YACfK,IAAAA,CAAK2S,KAAK,OAAGzT,wKAAKq3B,EAAAA,QAAAA,CAAS4H,QAAQ,EAAE;gBAACn+B,IAAAA,CAAKmG,KAAK;gBAAExG,CAAAA;gBAAG4X,KAAAA;aAAM,EAAE,IAAI,CAAA,CAAA;QACnE,CAAA;IACF,CAAA;IACA6mB,0BAA6B,GAAA;YAC3Bl/B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC24B,0BAA0B,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACtD,CAAA;IAIAjB,4BAA+B,GAAA;YAC7Bj+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC03B,4BAA4B,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACxD,CAAA;IACAC,sBAAyB,GAAA;QACvB,MAAM33B,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM8wB,QAAAA,GAAW9wB,QAAQ8R,KAAK,CAAA;QAC9B,MAAM8mB,QAAAA,GAAW9F,aAAc,CAAA,IAAI,CAAChhB,KAAK,CAAC7X,MAAM,EAAE+F,OAAAA,CAAQ8R,KAAK,CAACof,aAAa,CAAA,CAAA;QAC7E,MAAM2H,WAAAA,GAAc/H,QAAS+H,CAAAA,WAAW,IAAI,CAAA,CAAA;QAC5C,MAAMC,WAAAA,GAAchI,SAASgI,WAAW,CAAA;QACxC,IAAI3D,aAAgB0D,GAAAA,WAAAA,CAAAA;QACpB,IAAIE,WAAWpb,SAAWqb,EAAAA,gBAAAA,CAAAA;QAE1B,IAAI,CAAC,IAAI,CAACC,UAAU,EAAA,IAAM,CAACnI,QAASrQ,CAAAA,OAAO,IAAIoY,WAAAA,IAAeC,eAAeF,QAAY,IAAA,CAAA,IAAK,CAAC,IAAI,CAACjlB,YAAY,EAAI,EAAA;YAClH,IAAI,CAACwhB,aAAa,GAAG0D,WAAAA,CAAAA;YACrB,OAAA;SACD;QAED,MAAMK,UAAAA,GAAa,IAAI,CAACC,cAAc,EAAA,CAAA;QACtC,MAAMC,aAAgBF,GAAAA,UAAAA,CAAWG,MAAM,CAACrjB,KAAK,CAAA;QAC7C,MAAMsjB,cAAiBJ,GAAAA,UAAAA,CAAWK,OAAO,CAACxjB,MAAM,CAAA;QAIhD,MAAM2H,QAAW8b,OAAAA,wKAAAA,EAAY,IAAI,CAAChhC,KAAK,CAACwd,KAAK,GAAGojB,aAAe,EAAA,CAAA,EAAG,IAAI,CAAC1b,QAAQ,CAAA,CAAA;QAC/Eqb,SAAAA,GAAY/4B,OAAQiV,CAAAA,MAAM,GAAG,IAAI,CAACyI,QAAQ,GAAGkb,QAAAA,GAAWlb,QAAYkb,GAAAA,CAAAA,QAAW,GAAA,CAAA,CAAE,CAAA;QAGjF,IAAIQ,aAAAA,GAAgB,IAAIL,SAAW,EAAA;YACjCA,SAAYrb,GAAAA,QAAAA,GAAAA,CAAYkb,QAAAA,GAAAA,CAAY54B,OAAAA,CAAQiV,MAAM,GAAG,GAAA,GAAM,CAAA,CAAC,CAAA,CAAA;YAC5D0I,SAAY,GAAA,IAAI,CAACA,SAAS,GAAGiW,kBAAkB5zB,OAAQkV,CAAAA,IAAI,IAC3D4b,QAAS3G,CAAAA,OAAO,GAAG2J,cAAe9zB,CAAAA,OAAAA,CAAQy5B,KAAK,EAAE,IAAI,CAACjhC,KAAK,CAACwH,OAAO,CAACg0B,IAAI,CAAA,CAAA;YACxEgF,gBAAAA,GAAmB5/B,IAAKwrB,CAAAA,IAAI,CAACwU,aAAAA,GAAgBA,gBAAgBE,cAAiBA,GAAAA,cAAAA,CAAAA,CAAAA;YAC9EnE,aAAAA,OAAgBuE,wKAAAA,EAAUtgC,IAAKC,CAAAA,GAAG,CAChCD,IAAAA,CAAKugC,IAAI,KAACH,wKAAAA,EAAY,CAACN,WAAWK,OAAO,CAACxjB,MAAM,GAAG,CAAA,IAAKgjB,SAAAA,EAAW,CAAC,CAAA,EAAG,KACvE3/B,IAAKugC,CAAAA,IAAI,KAACH,wKAAAA,EAAY7b,YAAYqb,gBAAkB,EAAA,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA,GAAM5/B,KAAKugC,IAAI,KAACH,wKAAAA,EAAYF,cAAiBN,GAAAA,gBAAAA,EAAkB,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;YAE7H7D,aAAAA,GAAgB/7B,KAAKoC,GAAG,CAACq9B,aAAaz/B,IAAKC,CAAAA,GAAG,CAACy/B,WAAa3D,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;SAC7D;QAED,IAAI,CAACA,aAAa,GAAGA,aAAAA,CAAAA;IACvB,CAAA;IACAyC,2BAA8B,GAAA;YAC5Bn+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC43B,2BAA2B,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACvD,CAAA;IACAE,aAAAA,GAAgB,CAAA,CAAC;IAIjBC,SAAY,GAAA;YACVt+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAAC+3B,SAAS,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACrC,CAAA;IACAC,GAAM,GAAA;QAEJ,MAAMjX,OAAU,GAAA;YACd/K,KAAO,EAAA,CAAA;YACPD,MAAQ,EAAA,CAAA;QACV,CAAA,CAAA;QAEA,MAAM,EAACvd,KAAK,EAAEwH,OAAS,EAAA,EAAC8R,OAAOgf,QAAQ,EAAE2I,KAAOG,EAAAA,SAAAA,EAAW1kB,IAAM2kB,EAAAA,QAAAA,EAAS,EAAC,GAAG,IAAI,CAAA;QAClF,MAAMpZ,OAAAA,GAAU,IAAI,CAACwY,UAAU,EAAA,CAAA;QAC/B,MAAMtlB,YAAAA,GAAe,IAAI,CAACA,YAAY,EAAA,CAAA;QAEtC,IAAI8M,OAAS,EAAA;YACX,MAAMqZ,cAAchG,cAAe8F,CAAAA,SAAAA,EAAWphC,KAAMwH,CAAAA,OAAO,CAACg0B,IAAI,CAAA,CAAA;YAChE,IAAIrgB,YAAc,EAAA;gBAChBoN,OAAAA,CAAQ/K,KAAK,GAAG,IAAI,CAAC0H,QAAQ,CAAA;gBAC7BqD,OAAQhL,CAAAA,MAAM,GAAG6d,iBAAAA,CAAkBiG,QAAYC,CAAAA,GAAAA,WAAAA,CAAAA;aAC1C,MAAA;gBACL/Y,OAAAA,CAAQhL,MAAM,GAAG,IAAI,CAAC4H,SAAS;gBAC/BoD,OAAQ/K,CAAAA,KAAK,GAAG4d,iBAAAA,CAAkBiG,QAAYC,CAAAA,GAAAA,WAAAA,CAAAA;aAC/C;YAGD,IAAIhJ,QAAAA,CAASrQ,OAAO,IAAI,IAAI,CAAC3O,KAAK,CAAC7X,MAAM,EAAE;gBACzC,MAAM,EAACu3B,KAAAA,EAAOtb,IAAAA,EAAMmjB,MAAAA,EAAQE,OAAAA,EAAQ,GAAG,IAAI,CAACJ,cAAc,EAAA,CAAA;gBAC1D,MAAMY,WAAAA,GAAcjJ,QAAS3G,CAAAA,OAAO,GAAG,CAAA,CAAA;gBACvC,MAAM6P,YAAejd,OAAAA,wKAAAA,EAAU,IAAI,CAACoY,aAAa,CAAA,CAAA;gBACjD,MAAM3b,GAAAA,GAAMpgB,IAAKogB,CAAAA,GAAG,CAACwgB,YAAAA,CAAAA,CAAAA;gBACrB,MAAMtgB,GAAAA,GAAMtgB,IAAKsgB,CAAAA,GAAG,CAACsgB,YAAAA,CAAAA,CAAAA;gBAErB,IAAIrmB,YAAc,EAAA;oBAEhB,MAAMsmB,WAAAA,GAAcnJ,QAASoJ,CAAAA,MAAM,GAAG,CAAA,GAAIxgB,GAAM2f,GAAAA,MAAAA,CAAOrjB,KAAK,GAAGwD,GAAM+f,GAAAA,OAAAA,CAAQxjB,MAAM,CAAA;oBACnFgL,OAAAA,CAAQhL,MAAM,GAAG3c,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACskB,SAAS,EAAEoD,OAAAA,CAAQhL,MAAM,GAAGkkB,WAAcF,GAAAA,WAAAA,CAAAA,CAAAA;iBACpE,MAAA;oBAGL,MAAMI,UAAAA,GAAarJ,QAASoJ,CAAAA,MAAM,GAAG,CAAA,GAAI1gB,GAAM6f,GAAAA,MAAAA,CAAOrjB,KAAK,GAAG0D,GAAM6f,GAAAA,OAAAA,CAAQxjB,MAAM,CAAA;oBAElFgL,OAAAA,CAAQ/K,KAAK,GAAG5c,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACqkB,QAAQ,EAAEqD,OAAAA,CAAQ/K,KAAK,GAAGmkB,UAAaJ,GAAAA,WAAAA,CAAAA,CAAAA;iBACtE;gBACD,IAAI,CAACK,iBAAiB,CAAC5I,KAAAA,EAAOtb,MAAMwD,GAAKF,EAAAA,GAAAA,CAAAA,CAAAA;aAC1C;SACF;QAED,IAAI,CAAC6gB,cAAc,EAAA,CAAA;QAEnB,IAAI1mB,YAAc,EAAA;YAChB,IAAI,CAACqC,KAAK,GAAG,IAAI,CAACvE,OAAO,GAAGjZ,MAAMwd,KAAK,GAAG,IAAI,CAAC8e,QAAQ,CAAChzB,IAAI,GAAG,IAAI,CAACgzB,QAAQ,CAAClzB,KAAK,CAAA;YAClF,IAAI,CAACmU,MAAM,GAAGgL,OAAAA,CAAQhL,MAAM,CAAA;SACvB,MAAA;YACL,IAAI,CAACC,KAAK,GAAG+K,OAAAA,CAAQ/K,KAAK,CAAA;YAC1B,IAAI,CAACD,MAAM,GAAG,IAAI,CAACtE,OAAO,GAAGjZ,MAAMud,MAAM,GAAG,IAAI,CAAC+e,QAAQ,CAACnzB,GAAG,GAAG,IAAI,CAACmzB,QAAQ,CAACjzB,MAAM,CAAA;SACrF;IACH,CAAA;IAEAu4B,iBAAAA,CAAkB5I,KAAK,EAAEtb,IAAI,EAAEwD,GAAG,EAAEF,GAAG,EAAE;QACvC,MAAM,EAAC1H,KAAAA,EAAO,EAAC8gB,KAAAA,EAAOzI,OAAO,EAAC,EAAElG,QAAQ,EAAC,GAAG,IAAI,CAACjkB,OAAO,CAAA;QACxD,MAAMs6B,SAAY,GAAA,IAAI,CAACnF,aAAa,KAAK,CAAA,CAAA;QACzC,MAAMoF,mBAAmBtW,QAAa,KAAA,KAAA,IAAS,IAAI,CAACtgB,IAAI,KAAK,GAAA,CAAA;QAE7D,IAAI,IAAI,CAACgQ,YAAY,EAAI,EAAA;YACvB,MAAM6mB,UAAAA,GAAa,IAAI,CAACzoB,eAAe,CAAC,CAAK,CAAA,GAAA,IAAI,CAACjQ,IAAI,CAAA;YACtD,MAAM24B,WAAc,GAAA,IAAI,CAAC74B,KAAK,GAAG,IAAI,CAACmQ,eAAe,CAAC,IAAI,CAACD,KAAK,CAAC7X,MAAM,GAAG,CAAA,CAAA,CAAA;YAC1E,IAAIg7B,WAAc,GAAA,CAAA,CAAA;YAClB,IAAIC,YAAe,GAAA,CAAA,CAAA;YAInB,IAAIoF,SAAW,EAAA;gBACb,IAAIC,gBAAkB,EAAA;oBACpBtF,WAAczb,GAAAA,GAAAA,GAAMgY,MAAMxb,KAAK,CAAA;oBAC/Bkf,YAAexb,GAAAA,GAAAA,GAAMxD,KAAKH,MAAM,CAAA;iBAC3B,MAAA;oBACLkf,WAAcvb,GAAAA,GAAAA,GAAM8X,MAAMzb,MAAM,CAAA;oBAChCmf,YAAe1b,GAAAA,GAAAA,GAAMtD,KAAKF,KAAK,CAAA;iBAChC;aACI,MAAA,IAAI4c,UAAU,OAAS,EAAA;gBAC5BsC,YAAAA,GAAehf,KAAKF,KAAK,CAAA;aACpB,MAAA,IAAI4c,UAAU,KAAO,EAAA;gBAC1BqC,WAAAA,GAAczD,MAAMxb,KAAK,CAAA;aACpB,MAAA,IAAI4c,UAAU,OAAS,EAAA;gBAC5BqC,WAAczD,GAAAA,KAAAA,CAAMxb,KAAK,GAAG,CAAA,CAAA;gBAC5Bkf,YAAehf,GAAAA,IAAAA,CAAKF,KAAK,GAAG,CAAA,CAAA;aAC7B;YAGD,IAAI,CAACif,WAAW,GAAG77B,IAAAA,CAAKoC,GAAG,CAAEy5B,CAAAA,WAAAA,GAAcuF,UAAarQ,GAAAA,OAAM,IAAK,IAAI,CAACnU,KAAK,GAAA,CAAI,IAAI,CAACA,KAAK,GAAGwkB,UAAS,CAAI,EAAA,CAAA,CAAA,CAAA;YAC3G,IAAI,CAACtF,YAAY,GAAG97B,IAAAA,CAAKoC,GAAG,CAAE05B,CAAAA,YAAAA,GAAeuF,WAActQ,GAAAA,OAAM,IAAK,IAAI,CAACnU,KAAK,GAAA,CAAI,IAAI,CAACA,KAAK,GAAGykB,WAAU,CAAI,EAAA,CAAA,CAAA,CAAA;SAC1G,MAAA;YACL,IAAI1F,UAAAA,GAAa7e,IAAKH,CAAAA,MAAM,GAAG,CAAA,CAAA;YAC/B,IAAIif,aAAAA,GAAgBxD,KAAMzb,CAAAA,MAAM,GAAG,CAAA,CAAA;YAEnC,IAAI6c,UAAU,OAAS,EAAA;gBACrBmC,UAAa,GAAA,CAAA,CAAA;gBACbC,aAAAA,GAAgBxD,MAAMzb,MAAM,CAAA;aACvB,MAAA,IAAI6c,UAAU,KAAO,EAAA;gBAC1BmC,UAAAA,GAAa7e,KAAKH,MAAM,CAAA;gBACxBif,aAAgB,GAAA,CAAA,CAAA;aACjB;YAED,IAAI,CAACD,UAAU,GAAGA,UAAa5K,GAAAA,OAAAA,CAAAA;YAC/B,IAAI,CAAC6K,aAAa,GAAGA,aAAgB7K,GAAAA,OAAAA,CAAAA;SACtC;IACH,CAAA;IAMAkQ,cAAiB,GAAA;QACf,IAAI,IAAI,CAACvF,QAAQ,EAAE;YACjB,IAAI,CAACA,QAAQ,CAAChzB,IAAI,GAAG1I,KAAKoC,GAAG,CAAC,IAAI,CAACy5B,WAAW,EAAE,IAAI,CAACH,QAAQ,CAAChzB,IAAI,CAAA,CAAA;YAClE,IAAI,CAACgzB,QAAQ,CAACnzB,GAAG,GAAGvI,KAAKoC,GAAG,CAAC,IAAI,CAACu5B,UAAU,EAAE,IAAI,CAACD,QAAQ,CAACnzB,GAAG,CAAA,CAAA;YAC/D,IAAI,CAACmzB,QAAQ,CAAClzB,KAAK,GAAGxI,KAAKoC,GAAG,CAAC,IAAI,CAAC05B,YAAY,EAAE,IAAI,CAACJ,QAAQ,CAAClzB,KAAK,CAAA,CAAA;YACrE,IAAI,CAACkzB,QAAQ,CAACjzB,MAAM,GAAGzI,KAAKoC,GAAG,CAAC,IAAI,CAACw5B,aAAa,EAAE,IAAI,CAACF,QAAQ,CAACjzB,MAAM,CAAA,CAAA;SACzE;IACH,CAAA;IAEAo2B,QAAW,GAAA;YACTx+B,wKAAAA,EAAK,IAAI,CAACuG,OAAO,CAACi4B,QAAQ,EAAE;YAAC,IAAI;SAAC,CAAA,CAAA;IACpC,CAAA;IAMAtkB,YAAe,GAAA;QACb,MAAM,EAAChQ,IAAAA,EAAMsgB,QAAAA,EAAS,GAAG,IAAI,CAACjkB,OAAO,CAAA;QACrC,OAAOikB,QAAa,KAAA,KAAA,IAASA,QAAa,KAAA,QAAA,IAAYtgB,IAAS,KAAA,GAAA,CAAA;IACjE,CAAA;IAIA+2B,UAAa,GAAA;QACX,OAAO,IAAI,CAAC16B,OAAO,CAAC4nB,QAAQ,CAAA;IAC9B,CAAA;IAMA6P,qBAAAA,CAAsB3lB,KAAK,EAAE;QAC3B,IAAI,CAAC0mB,2BAA2B,EAAA,CAAA;QAEhC,IAAI,CAACC,kBAAkB,CAAC3mB,KAAAA,CAAAA,CAAAA;QAGxB,IAAI5X,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOqP,GAAAA,KAAAA,CAAM7X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;YAC9C,QAAIoY,wKAAAA,EAAcR,KAAK,CAAC5X,CAAE,CAAA,CAACgT,KAAK,CAAG,EAAA;gBACjC4E,KAAMzB,CAAAA,MAAM,CAACnW,CAAG,EAAA,CAAA,CAAA,CAAA;gBAChBuI,IAAAA,EAAAA,CAAAA;gBACAvI,CAAAA,EAAAA,CAAAA;aACD;QACH,CAAA;QAEA,IAAI,CAACy+B,0BAA0B,EAAA,CAAA;IACjC,CAAA;IAMAQ,cAAiB,GAAA;QACf,IAAID,UAAAA,GAAa,IAAI,CAAC3D,WAAW,CAAA;QAEjC,IAAI,CAAC2D,UAAY,EAAA;YACf,MAAMrC,aAAa,IAAI,CAAC72B,OAAO,CAAC8R,KAAK,CAAC+kB,UAAU,CAAA;YAChD,IAAI/kB,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;YACtB,IAAI+kB,UAAAA,GAAa/kB,KAAM7X,CAAAA,MAAM,EAAE;gBAC7B6X,KAAAA,GAAQkhB,OAAOlhB,KAAO+kB,EAAAA,UAAAA,CAAAA,CAAAA;aACvB;YAED,IAAI,CAACtB,WAAW,GAAG2D,aAAa,IAAI,CAACyB,kBAAkB,CAAC7oB,KAAAA,EAAOA,KAAM7X,CAAAA,MAAM,EAAE,IAAI,CAAC+F,OAAO,CAAC8R,KAAK,CAACof,aAAa,CAAA,CAAA;SAC9G;QAED,OAAOgI,UAAAA,CAAAA;IACT,CAAA;IAQAyB,mBAAmB7oB,KAAK,EAAE7X,MAAM,EAAEi3B,aAAa,EAAE;QAC/C,MAAM,EAACzpB,GAAG,EAAE+tB,mBAAmB/B,MAAM,EAAC,GAAG,IAAI,CAAA;QAC7C,MAAMmH,SAAS,EAAE,CAAA;QACjB,MAAMC,UAAU,EAAE,CAAA;QAClB,MAAM3H,YAAY95B,IAAKoE,CAAAA,KAAK,CAACvD,MAAAA,GAAS64B,cAAc74B,MAAQi3B,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;QAC5D,IAAI4J,eAAkB,GAAA,CAAA,CAAA;QACtB,IAAIC,gBAAmB,GAAA,CAAA,CAAA;QACvB,IAAI7gC,CAAAA,EAAGkqB,GAAG4W,IAAM9tB,EAAAA,KAAAA,EAAO+tB,UAAUC,UAAYltB,EAAAA,KAAAA,EAAOmmB,UAAYne,EAAAA,KAAAA,EAAOD,MAAQolB,EAAAA,WAAAA,CAAAA;QAE/E,IAAKjhC,CAAI,GAAA,CAAA,EAAGA,CAAID,GAAAA,MAAAA,EAAQC,KAAKg5B,SAAW,CAAA;YACtChmB,KAAAA,GAAQ4E,KAAK,CAAC5X,CAAE,CAAA,CAACgT,KAAK,CAAA;YACtB+tB,QAAW,GAAA,IAAI,CAACG,uBAAuB,CAAClhC,CAAAA,CAAAA,CAAAA;YACxCuN,GAAAA,CAAIusB,IAAI,GAAGkH,UAAaD,GAAAA,QAAAA,CAASI,MAAM,CAAA;YACvCrtB,KAAAA,GAAQylB,MAAM,CAACyH,UAAAA,CAAW,GAAGzH,MAAM,CAACyH,WAAW,IAAI;gBAAC53B,IAAAA,EAAM,CAAA,CAAC;gBAAGowB,EAAAA,EAAI,EAAE;YAAA,CAAA,CAAA;YACpES,UAAAA,GAAa8G,SAAS9G,UAAU,CAAA;YAChCne,KAAAA,GAAQD,MAAS,GAAA,CAAA,CAAA;YAEjB,IAAI,KAACzD,wKAAAA,EAAcpF,KAAU,CAAA,IAAA,KAACvN,wKAAAA,EAAQuN,KAAQ,CAAA,EAAA;gBAC5C8I,KAAQslB,OAAAA,wKAAAA,EAAa7zB,KAAKuG,KAAM1K,CAAAA,IAAI,EAAE0K,KAAM0lB,CAAAA,EAAE,EAAE1d,KAAO9I,EAAAA,KAAAA,CAAAA,CAAAA;gBACvD6I,MAASoe,GAAAA,UAAAA,CAAAA;aACJ,MAAA,QAAIx0B,wKAAAA,EAAQuN,KAAQ,CAAA,EAAA;gBAEzB,IAAKkX,CAAAA,GAAI,GAAG4W,IAAO9tB,GAAAA,KAAAA,CAAMjT,MAAM,EAAEmqB,CAAAA,GAAI4W,IAAM,EAAA,EAAE5W,CAAG,CAAA;oBAC9C+W,WAAAA,GAAqCjuB,KAAK,CAACkX,CAAE,CAAA,CAAA;oBAE7C,IAAI,KAAC9R,wKAAAA,EAAc6oB,WAAgB,CAAA,IAAA,KAACx7B,wKAAAA,EAAQw7B,WAAc,CAAA,EAAA;wBACxDnlB,KAAQslB,OAAAA,wKAAAA,EAAa7zB,KAAKuG,KAAM1K,CAAAA,IAAI,EAAE0K,KAAM0lB,CAAAA,EAAE,EAAE1d,KAAOmlB,EAAAA,WAAAA,CAAAA,CAAAA;wBACvDplB,MAAUoe,IAAAA,UAAAA,CAAAA;qBACX;gBACH,CAAA;aACD;YACDyG,MAAAA,CAAO1/B,IAAI,CAAC8a,KAAAA,CAAAA,CAAAA;YACZ6kB,OAAAA,CAAQ3/B,IAAI,CAAC6a,MAAAA,CAAAA,CAAAA;YACb+kB,eAAkB1hC,GAAAA,IAAAA,CAAKoC,GAAG,CAACwa,KAAO8kB,EAAAA,eAAAA,CAAAA,CAAAA;YAClCC,gBAAmB3hC,GAAAA,IAAAA,CAAKoC,GAAG,CAACua,MAAQglB,EAAAA,gBAAAA,CAAAA,CAAAA;QACtC,CAAA;QACAvH,cAAAA,CAAeC,MAAQx5B,EAAAA,MAAAA,CAAAA,CAAAA;QAEvB,MAAMo/B,MAAAA,GAASuB,MAAOnkB,CAAAA,OAAO,CAACqkB,eAAAA,CAAAA,CAAAA;QAC9B,MAAMvB,OAAAA,GAAUsB,OAAQpkB,CAAAA,OAAO,CAACskB,gBAAAA,CAAAA,CAAAA;QAEhC,MAAMQ,OAAAA,GAAU,CAACC,GAAAA,GAAAA,CAAS;gBAACxlB,KAAO4kB,EAAAA,MAAM,CAACY,GAAAA,CAAI,IAAI,CAAA;gBAAGzlB,MAAQ8kB,EAAAA,OAAO,CAACW,GAAAA,CAAI,IAAI,CAAA;aAAC,CAAA,CAAA;QAE7E,OAAO;YACLhK,KAAAA,EAAO+J,OAAQ,CAAA,CAAA,CAAA;YACfrlB,IAAAA,EAAMqlB,QAAQthC,MAAS,GAAA,CAAA,CAAA;YACvBo/B,MAAAA,EAAQkC,OAAQlC,CAAAA,MAAAA,CAAAA;YAChBE,OAAAA,EAASgC,OAAQhC,CAAAA,OAAAA,CAAAA;YACjBqB,MAAAA;YACAC,OAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAOA1tB,gBAAAA,CAAiBzM,KAAK,EAAE;QACtB,OAAOA,KAAAA,CAAAA;IACT,CAAA;IASAmR,gBAAiBnR,CAAAA,KAAK,EAAEgC,KAAK,EAAE;QAC7B,OAAO+J,GAAAA,CAAAA;IACT,CAAA;IAQAkL,gBAAAA,CAAiB8jB,KAAK,EAAE,CAAA,CAAC;IAQzB1pB,eAAAA,CAAgBrP,KAAK,EAAE;QACrB,MAAMoP,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,IAAIpP,QAAQ,CAAKA,IAAAA,KAAAA,GAAQoP,KAAM7X,CAAAA,MAAM,GAAG,CAAG,EAAA;YACzC,OAAO,IAAI,CAAA;SACZ;QACD,OAAO,IAAI,CAAC4X,gBAAgB,CAACC,KAAK,CAACpP,KAAAA,CAAM,CAAChC,KAAK,CAAA,CAAA;IACjD,CAAA;IAQA+W,kBAAAA,CAAmBikB,OAAO,EAAE;QAC1B,IAAI,IAAI,CAACtY,cAAc,EAAE;YACvBsY,OAAAA,GAAU,CAAIA,GAAAA,OAAAA,CAAAA;SACf;QAED,MAAMD,KAAAA,GAAQ,IAAI,CAACvkB,WAAW,GAAGwkB,OAAU,GAAA,IAAI,CAACjqB,OAAO,CAAA;QACvD,WAAOkqB,wKAAY,EAAA,IAAI,CAACvD,cAAc,OAAGwD,wKAAAA,EAAY,IAAI,CAACpjC,KAAK,EAAEijC,KAAO,EAAA,CAAA,CAAA,GAAKA,KAAK,CAAA,CAAA;IACpF,CAAA;IAMAI,kBAAAA,CAAmBJ,KAAK,EAAE;QACxB,MAAMC,OAAAA,GAAU,CAACD,KAAQ,GAAA,IAAI,CAACvkB,WAAW,IAAI,IAAI,CAACzF,OAAO,CAAA;QACzD,OAAO,IAAI,CAAC2R,cAAc,GAAG,CAAA,GAAIsY,UAAUA,OAAO,CAAA;IACpD,CAAA;IAOAnmB,YAAe,GAAA;QACb,OAAO,IAAI,CAAC1D,gBAAgB,CAAC,IAAI,CAACiqB,YAAY,EAAA,CAAA,CAAA;IAChD,CAAA;IAKAA,YAAe,GAAA;QACb,MAAM,EAACziC,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAAA;QAEvB,OAAOnC,GAAAA,GAAM,CAAKmC,IAAAA,GAAAA,GAAM,CAAIA,GAAAA,GAAAA,GAC1BnC,MAAM,CAAKmC,IAAAA,GAAAA,GAAM,CAAInC,GAAAA,GAAAA,GACrB,CAAC,CAAA;IACL,CAAA;IAKA8R,UAAAA,CAAWzI,KAAK,EAAE;QAChB,MAAMoP,KAAQ,GAAA,IAAI,CAACA,KAAK,IAAI,EAAE,CAAA;QAE9B,IAAIpP,KAAS,IAAA,CAAA,IAAKA,KAAQoP,GAAAA,KAAAA,CAAM7X,MAAM,EAAE;YACtC,MAAMM,IAAAA,GAAOuX,KAAK,CAACpP,KAAM,CAAA,CAAA;YACzB,OAAOnI,IAAK8N,CAAAA,QAAQ,IAAA,CACrB9N,IAAK8N,CAAAA,QAAQ,GAAGgsB,iBAAAA,CAAkB,IAAI,CAAClpB,UAAU,EAAA,EAAIzI,OAAOnI,IAAI,CAAA,CAAA,CAAA;SAChE;QACD,OAAO,IAAI,CAAC8N,QAAQ,IAAA,CACpB,IAAI,CAACA,QAAQ,GAAG+rB,kBAAAA,CAAmB,IAAI,CAAC57B,KAAK,CAAC2S,UAAU,EAAA,EAAI,IAAI,CAAA,CAAA,CAAA;IAClE,CAAA;IAMA4mB,SAAY,GAAA;QACV,MAAMgK,WAAc,GAAA,IAAI,CAAC/7B,OAAO,CAAC8R,KAAK,CAAA;QAGtC,MAAMkqB,GAAMjf,OAAAA,wKAAAA,EAAU,IAAI,CAACoY,aAAa,CAAA,CAAA;QACxC,MAAM3b,MAAMpgB,IAAKwY,CAAAA,GAAG,CAACxY,IAAAA,CAAKogB,GAAG,CAACwiB,GAAAA,CAAAA,CAAAA,CAAAA;QAC9B,MAAMtiB,MAAMtgB,IAAKwY,CAAAA,GAAG,CAACxY,IAAAA,CAAKsgB,GAAG,CAACsiB,GAAAA,CAAAA,CAAAA,CAAAA;QAE9B,MAAM9C,UAAAA,GAAa,IAAI,CAACC,cAAc,EAAA,CAAA;QACtC,MAAMhP,OAAAA,GAAU4R,WAAYE,CAAAA,eAAe,IAAI,CAAA,CAAA;QAC/C,MAAMjT,CAAAA,GAAIkQ,aAAaA,UAAWG,CAAAA,MAAM,CAACrjB,KAAK,GAAGmU,UAAU,CAAC,CAAA;QAC5D,MAAMjB,CAAAA,GAAIgQ,aAAaA,UAAWK,CAAAA,OAAO,CAACxjB,MAAM,GAAGoU,UAAU,CAAC,CAAA;QAG9D,OAAO,IAAI,CAACxW,YAAY,EAAA,GACpBuV,IAAI1P,GAAMwP,GAAAA,CAAAA,GAAItP,MAAMsP,CAAIxP,GAAAA,GAAAA,GAAM0P,IAAIxP,GAAG,GACrCwP,IAAIxP,GAAMsP,GAAAA,CAAAA,GAAIxP,MAAM0P,CAAI1P,GAAAA,GAAAA,GAAMwP,IAAItP,GAAG,CAAA;IAC3C,CAAA;IAMAuf,UAAa,GAAA;QACX,MAAMxY,OAAU,GAAA,IAAI,CAACzgB,OAAO,CAACygB,OAAO,CAAA;QAEpC,IAAIA,YAAY,MAAQ,EAAA;YACtB,OAAO,CAAC,CAACA,OAAAA,CAAAA;SACV;QAED,OAAO,IAAI,CAACvb,uBAAuB,EAAA,CAAGjL,MAAM,GAAG,CAAA,CAAA;IACjD,CAAA;IAKAiiC,qBAAAA,CAAsB1uB,SAAS,EAAE;QAC/B,MAAM7J,IAAAA,GAAO,IAAI,CAACA,IAAI,CAAA;QACtB,MAAMnL,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMwH,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM,EAACkV,IAAI,EAAE+O,QAAAA,EAAU9D,MAAAA,EAAO,GAAGngB,OAAAA,CAAAA;QACjC,MAAMiV,MAAAA,GAASC,KAAKD,MAAM,CAAA;QAC1B,MAAMtB,YAAAA,GAAe,IAAI,CAACA,YAAY,EAAA,CAAA;QACtC,MAAM7B,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMihB,WAAAA,GAAcjhB,MAAM7X,MAAM,GAAA,CAAIgb,MAAS,GAAA,CAAA,GAAI,CAAC,CAAD,CAAA;QACjD,MAAMknB,KAAKvI,iBAAkB1e,CAAAA,IAAAA,CAAAA,CAAAA;QAC7B,MAAMlb,QAAQ,EAAE,CAAA;QAEhB,MAAMoiC,aAAajc,MAAO6V,CAAAA,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QACpD,MAAMkxB,YAAYD,UAAW3b,CAAAA,OAAO,GAAG2b,UAAWpmB,CAAAA,KAAK,GAAG,CAAC,CAAA;QAC3D,MAAMsmB,gBAAgBD,SAAY,GAAA,CAAA,CAAA;QAClC,MAAME,gBAAAA,GAAmB,SAASd,KAAK,EAAE;YACvC,WAAOG,wKAAAA,EAAYpjC,OAAOijC,KAAOY,EAAAA,SAAAA,CAAAA,CAAAA;QACnC,CAAA,CAAA;QACA,IAAIG,WAAAA,EAAatiC,GAAGq5B,SAAWkJ,EAAAA,gBAAAA,CAAAA;QAC/B,IAAIC,KAAKC,GAAKC,EAAAA,GAAAA,EAAKC,GAAKC,EAAAA,EAAAA,EAAIC,IAAIC,EAAIC,EAAAA,EAAAA,CAAAA;QAEpC,IAAIhZ,aAAa,KAAO,EAAA;YACtBuY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAAC16B,MAAM,CAAA,CAAA;YAC1C86B,GAAM,GAAA,IAAI,CAAC96B,MAAM,GAAGs6B,EAAAA,CAAAA;YACpBU,GAAAA,GAAML,WAAcF,GAAAA,aAAAA,CAAAA;YACpBS,EAAKR,GAAAA,gBAAAA,CAAiB/uB,SAAU7L,CAAAA,GAAG,CAAI26B,GAAAA,aAAAA,CAAAA;YACvCW,EAAAA,GAAKzvB,UAAU3L,MAAM,CAAA;SAChB,MAAA,IAAIoiB,aAAa,QAAU,EAAA;YAChCuY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAAC56B,GAAG,CAAA,CAAA;YACvCo7B,EAAAA,GAAKvvB,UAAU7L,GAAG,CAAA;YAClBs7B,EAAKV,GAAAA,gBAAAA,CAAiB/uB,SAAU3L,CAAAA,MAAM,CAAIy6B,GAAAA,aAAAA,CAAAA;YAC1CK,GAAAA,GAAMH,WAAcF,GAAAA,aAAAA,CAAAA;YACpBO,GAAM,GAAA,IAAI,CAACl7B,GAAG,GAAGw6B,EAAAA,CAAAA;SACZ,MAAA,IAAIlY,aAAa,MAAQ,EAAA;YAC9BuY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAAC36B,KAAK,CAAA,CAAA;YACzC86B,GAAM,GAAA,IAAI,CAAC96B,KAAK,GAAGu6B,EAAAA,CAAAA;YACnBS,GAAAA,GAAMJ,WAAcF,GAAAA,aAAAA,CAAAA;YACpBQ,EAAKP,GAAAA,gBAAAA,CAAiB/uB,SAAU1L,CAAAA,IAAI,CAAIw6B,GAAAA,aAAAA,CAAAA;YACxCU,EAAAA,GAAKxvB,UAAU5L,KAAK,CAAA;SACf,MAAA,IAAIqiB,aAAa,OAAS,EAAA;YAC/BuY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACz6B,IAAI,CAAA,CAAA;YACxCg7B,EAAAA,GAAKtvB,UAAU1L,IAAI,CAAA;YACnBk7B,EAAKT,GAAAA,gBAAAA,CAAiB/uB,SAAU5L,CAAAA,KAAK,CAAI06B,GAAAA,aAAAA,CAAAA;YACzCI,GAAAA,GAAMF,WAAcF,GAAAA,aAAAA,CAAAA;YACpBM,GAAM,GAAA,IAAI,CAAC96B,IAAI,GAAGq6B,EAAAA,CAAAA;SACb,MAAA,IAAIx4B,SAAS,GAAK,EAAA;YACvB,IAAIsgB,aAAa,QAAU,EAAA;gBACzBuY,WAAcD,GAAAA,gBAAAA,CAAiB,CAAC/uB,SAAU7L,CAAAA,GAAG,GAAG6L,SAAU3L,CAAAA,MAAM,IAAI,CAAI,GAAA,GAAA,CAAA,CAAA;aACnE,MAAA,QAAI5C,wKAAAA,EAASglB,QAAW,CAAA,EAAA;gBAC7B,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;gBAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;gBACtC4H,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAAC/jC,KAAK,CAACwN,MAAM,CAAC4uB,cAAAA,CAAe,CAAC/iB,gBAAgB,CAACnR,KAAAA,CAAAA,CAAAA,CAAAA;aACnF;YAEDq8B,EAAAA,GAAKvvB,UAAU7L,GAAG,CAAA;YAClBs7B,EAAAA,GAAKzvB,UAAU3L,MAAM,CAAA;YACrB86B,GAAAA,GAAMH,WAAcF,GAAAA,aAAAA,CAAAA;YACpBO,GAAAA,GAAMF,GAAMR,GAAAA,EAAAA,CAAAA;SACP,MAAA,IAAIx4B,SAAS,GAAK,EAAA;YACvB,IAAIsgB,aAAa,QAAU,EAAA;gBACzBuY,WAAcD,GAAAA,gBAAAA,CAAiB,CAAC/uB,SAAAA,CAAU1L,IAAI,GAAG0L,SAAAA,CAAU5L,KAAI,IAAK,CAAA,CAAA,CAAA;aAC/D,MAAA,QAAI3C,wKAAAA,EAASglB,QAAW,CAAA,EAAA;gBAC7B,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;gBAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;gBACtC4H,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAAC/jC,KAAK,CAACwN,MAAM,CAAC4uB,cAAAA,CAAe,CAAC/iB,gBAAgB,CAACnR,KAAAA,CAAAA,CAAAA,CAAAA;aACnF;YAEDg8B,GAAAA,GAAMF,WAAcF,GAAAA,aAAAA,CAAAA;YACpBM,GAAAA,GAAMF,GAAMP,GAAAA,EAAAA,CAAAA;YACZW,EAAAA,GAAKtvB,UAAU1L,IAAI,CAAA;YACnBk7B,EAAAA,GAAKxvB,UAAU5L,KAAK,CAAA;SACrB;QAED,MAAMs7B,YAAQ/zB,wKAAenJ,EAAAA,OAAAA,CAAQ8R,KAAK,CAACof,aAAa,EAAE6B,WAAAA,CAAAA,CAAAA;QAC1D,MAAMoK,IAAAA,GAAO/jC,KAAKoC,GAAG,CAAC,GAAGpC,IAAKm5B,CAAAA,IAAI,CAACQ,WAAcmK,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;QACjD,IAAKhjC,CAAI,GAAA,CAAA,EAAGA,CAAI64B,GAAAA,WAAAA,EAAa74B,KAAKijC,IAAM,CAAA;YACtC,MAAMtvB,OAAU,GAAA,IAAI,CAAC1C,UAAU,CAACjR,CAAAA,CAAAA,CAAAA;YAChC,MAAMkjC,WAAAA,GAAcloB,IAAK8gB,CAAAA,UAAU,CAACnoB,OAAAA,CAAAA,CAAAA;YACpC,MAAMwvB,iBAAAA,GAAoBld,MAAO6V,CAAAA,UAAU,CAACnoB,OAAAA,CAAAA,CAAAA;YAE5C,MAAMsO,SAAAA,GAAYihB,YAAYjhB,SAAS,CAAA;YACvC,MAAMmhB,SAAAA,GAAYF,YAAYhhC,KAAK,CAAA;YACnC,MAAM0f,UAAauhB,GAAAA,iBAAAA,CAAkBE,IAAI,IAAI,EAAE,CAAA;YAC/C,MAAMvhB,gBAAAA,GAAmBqhB,kBAAkBG,UAAU,CAAA;YAErD,MAAMzE,SAAAA,GAAYqE,YAAYrE,SAAS,CAAA;YACvC,MAAM0E,SAAAA,GAAYL,YAAYK,SAAS,CAAA;YACvC,MAAMC,cAAiBN,GAAAA,WAAAA,CAAYM,cAAc,IAAI,EAAE,CAAA;YACvD,MAAMC,oBAAAA,GAAuBP,YAAYO,oBAAoB,CAAA;YAE7DpK,SAAYJ,GAAAA,mBAAAA,CAAoB,IAAI,EAAEj5B,CAAG+a,EAAAA,MAAAA,CAAAA,CAAAA;YAGzC,IAAIse,cAAcj7B,SAAW,EAAA;gBAC3B,SAAS;aACV;YAEDmkC,gBAAmBb,OAAAA,wKAAAA,EAAYpjC,OAAO+6B,SAAWpX,EAAAA,SAAAA,CAAAA,CAAAA;YAEjD,IAAIxI,YAAc,EAAA;gBAChB+oB,GAAME,GAAAA,GAAAA,GAAME,KAAKE,EAAKP,GAAAA,gBAAAA,CAAAA;aACjB,MAAA;gBACLE,GAAME,GAAAA,GAAAA,GAAME,KAAKE,EAAKR,GAAAA,gBAAAA,CAAAA;aACvB;YAEDziC,KAAAA,CAAMkB,IAAI,CAAC;gBACTwhC,GAAAA;gBACAC,GAAAA;gBACAC,GAAAA;gBACAC,GAAAA;gBACAC,EAAAA;gBACAC,EAAAA;gBACAC,EAAAA;gBACAC,EAAAA;gBACAjnB,KAAOmG,EAAAA,SAAAA;gBACP/f,KAAOkhC,EAAAA,SAAAA;gBACPxhB,UAAAA;gBACAE,gBAAAA;gBACA+c,SAAAA;gBACA0E,SAAAA;gBACAC,cAAAA;gBACAC,oBAAAA;YACF,CAAA,CAAA,CAAA;QACF,CAAA;QAEA,IAAI,CAAC9H,YAAY,GAAG9C,WAAAA,CAAAA;QACpB,IAAI,CAAC+C,YAAY,GAAG0G,WAAAA,CAAAA;QAEpB,OAAOxiC,KAAAA,CAAAA;IACT,CAAA;IAKAy8B,kBAAAA,CAAmBjpB,SAAS,EAAE;QAC5B,MAAM7J,IAAAA,GAAO,IAAI,CAACA,IAAI,CAAA;QACtB,MAAM3D,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM,EAACikB,QAAQ,EAAEnS,KAAOiqB,EAAAA,WAAAA,EAAY,GAAG/7B,OAAAA,CAAAA;QACvC,MAAM2T,YAAAA,GAAe,IAAI,CAACA,YAAY,EAAA,CAAA;QACtC,MAAM7B,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAM,EAAC8gB,KAAAA,EAAOgL,UAAAA,EAAYzT,OAAO,EAAE+P,MAAM,EAAC,GAAG6B,WAAAA,CAAAA;QAC7C,MAAMI,EAAAA,GAAKvI,iBAAkB5zB,CAAAA,OAAAA,CAAQkV,IAAI,CAAA,CAAA;QACzC,MAAM2oB,iBAAiB1B,EAAKhS,GAAAA,OAAAA,CAAAA;QAC5B,MAAM2T,eAAkB5D,GAAAA,MAAAA,GAAS,CAAC/P,OAAAA,GAAU0T,cAAc,CAAA;QAC1D,MAAMhlB,QAAW,GAAA,KAACkE,wKAAU,EAAA,IAAI,CAACoY,aAAa,CAAA,CAAA;QAC9C,MAAMn7B,QAAQ,EAAE,CAAA;QAChB,IAAIE,CAAAA,EAAGuI,IAAMlI,EAAAA,IAAAA,EAAM2S,KAAOzL,EAAAA,CAAAA,EAAGC,GAAG0Z,SAAWqgB,EAAAA,KAAAA,EAAOzH,IAAMG,EAAAA,UAAAA,EAAY4J,SAAWC,EAAAA,UAAAA,CAAAA;QAC/E,IAAIC,YAAe,GAAA,QAAA,CAAA;QAEnB,IAAIha,aAAa,KAAO,EAAA;YACtBviB,CAAI,GAAA,IAAI,CAACG,MAAM,GAAGi8B,eAAAA,CAAAA;YAClB1iB,SAAY,GAAA,IAAI,CAAC8iB,uBAAuB,EAAA,CAAA;SACnC,MAAA,IAAIja,aAAa,QAAU,EAAA;YAChCviB,CAAI,GAAA,IAAI,CAACC,GAAG,GAAGm8B,eAAAA,CAAAA;YACf1iB,SAAY,GAAA,IAAI,CAAC8iB,uBAAuB,EAAA,CAAA;SACnC,MAAA,IAAIja,aAAa,MAAQ,EAAA;YAC9B,MAAM2M,GAAM,GAAA,IAAI,CAACuN,uBAAuB,CAAChC,EAAAA,CAAAA,CAAAA;YACzC/gB,SAAAA,GAAYwV,IAAIxV,SAAS,CAAA;YACzB3Z,CAAAA,GAAImvB,IAAInvB,CAAC,CAAA;SACJ,MAAA,IAAIwiB,aAAa,OAAS,EAAA;YAC/B,MAAM2M,GAAM,GAAA,IAAI,CAACuN,uBAAuB,CAAChC,EAAAA,CAAAA,CAAAA;YACzC/gB,SAAAA,GAAYwV,IAAIxV,SAAS,CAAA;YACzB3Z,CAAAA,GAAImvB,IAAInvB,CAAC,CAAA;SACJ,MAAA,IAAIkC,SAAS,GAAK,EAAA;YACvB,IAAIsgB,aAAa,QAAU,EAAA;gBACzBviB,CAAI,GAAE8L,CAAAA,SAAU7L,CAAAA,GAAG,GAAG6L,SAAU3L,CAAAA,MAAM,IAAI,CAAKg8B,GAAAA,cAAAA,CAAAA;aAC1C,MAAA,QAAI5+B,wKAAAA,EAASglB,QAAW,CAAA,EAAA;gBAC7B,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;gBAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;gBACtClzB,CAAI,GAAA,IAAI,CAAClJ,KAAK,CAACwN,MAAM,CAAC4uB,cAAe,CAAA,CAAC/iB,gBAAgB,CAACnR,KAASm9B,CAAAA,GAAAA,cAAAA,CAAAA;aACjE;YACDziB,SAAY,GAAA,IAAI,CAAC8iB,uBAAuB,EAAA,CAAA;SACnC,MAAA,IAAIv6B,SAAS,GAAK,EAAA;YACvB,IAAIsgB,aAAa,QAAU,EAAA;gBACzBxiB,CAAI,GAAE+L,CAAAA,SAAU1L,CAAAA,IAAI,GAAG0L,SAAU5L,CAAAA,KAAK,IAAI,CAAKi8B,GAAAA,cAAAA,CAAAA;aAC1C,MAAA,QAAI5+B,wKAAAA,EAASglB,QAAW,CAAA,EAAA;gBAC7B,MAAM2Q,iBAAiBz1B,MAAOC,CAAAA,IAAI,CAAC6kB,QAAAA,CAAS,CAAC,CAAE,CAAA,CAAA;gBAC/C,MAAMvjB,KAAAA,GAAQujB,QAAQ,CAAC2Q,cAAe,CAAA,CAAA;gBACtCnzB,CAAI,GAAA,IAAI,CAACjJ,KAAK,CAACwN,MAAM,CAAC4uB,cAAAA,CAAe,CAAC/iB,gBAAgB,CAACnR,KAAAA,CAAAA,CAAAA;aACxD;YACD0a,SAAAA,GAAY,IAAI,CAAC+iB,uBAAuB,CAAChC,IAAI/gB,SAAS,CAAA;SACvD;QAED,IAAIzX,SAAS,GAAK,EAAA;YAChB,IAAIivB,UAAU,OAAS,EAAA;gBACrBqL,YAAe,GAAA,KAAA,CAAA;aACV,MAAA,IAAIrL,UAAU,KAAO,EAAA;gBAC1BqL,YAAe,GAAA,QAAA,CAAA;aAChB;SACF;QAED,MAAM/E,UAAAA,GAAa,IAAI,CAACC,cAAc,EAAA,CAAA;QACtC,IAAKj/B,CAAAA,GAAI,GAAGuI,IAAOqP,GAAAA,KAAAA,CAAM7X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9CK,IAAOuX,GAAAA,KAAK,CAAC5X,CAAE,CAAA,CAAA;YACfgT,KAAAA,GAAQ3S,KAAK2S,KAAK,CAAA;YAElB,MAAMkwB,cAAcrB,WAAY/F,CAAAA,UAAU,CAAC,IAAI,CAAC7qB,UAAU,CAACjR,CAAAA,CAAAA,CAAAA,CAAAA;YAC3DuhC,KAAAA,GAAQ,IAAI,CAAC1pB,eAAe,CAAC7X,CAAAA,CAAAA,GAAK6hC,YAAYqC,WAAW,CAAA;YACzDpK,IAAO,GAAA,IAAI,CAACoH,uBAAuB,CAAClhC,CAAAA,CAAAA,CAAAA;YACpCi6B,UAAAA,GAAaH,KAAKG,UAAU,CAAA;YAC5B4J,SAAAA,OAAYp+B,wKAAQuN,EAAAA,KAAAA,CAAAA,GAASA,KAAMjT,CAAAA,MAAM,GAAG,CAAC,CAAA;YAC7C,MAAMokC,YAAYN,SAAY,GAAA,CAAA,CAAA;YAC9B,MAAM3hC,KAAAA,GAAQghC,YAAYhhC,KAAK,CAAA;YAC/B,MAAMkiC,WAAAA,GAAclB,YAAYmB,eAAe,CAAA;YAC/C,MAAMC,WAAAA,GAAcpB,YAAYqB,eAAe,CAAA;YAC/C,IAAIC,aAAgBtjB,GAAAA,SAAAA,CAAAA;YAEpB,IAAIzH,YAAc,EAAA;gBAChBlS,CAAIg6B,GAAAA,KAAAA,CAAAA;gBAEJ,IAAIrgB,cAAc,OAAS,EAAA;oBACzB,IAAIlhB,CAAAA,KAAMuI,OAAO,CAAG,EAAA;wBAClBi8B,aAAgB,GAAA,CAAC,IAAI,CAAC1+B,OAAO,CAACoB,OAAO,GAAG,UAAU,MAAM,CAAA;qBACnD,MAAA,IAAIlH,MAAM,CAAG,EAAA;wBAClBwkC,aAAgB,GAAA,CAAC,IAAI,CAAC1+B,OAAO,CAACoB,OAAO,GAAG,SAAS,OAAO,CAAA;qBACnD,MAAA;wBACLs9B,aAAgB,GAAA,QAAA,CAAA;qBACjB;iBACF;gBAED,IAAIza,aAAa,KAAO,EAAA;oBACtB,IAAI2Z,UAAAA,KAAe,MAAU/kB,IAAAA,QAAAA,KAAa,CAAG,EAAA;wBAC3CmlB,UAAa,GAAA,CAACD,SAAY5J,GAAAA,UAAAA,GAAaA,UAAa,GAAA,CAAA,CAAA;qBAC/C,MAAA,IAAIyJ,eAAe,QAAU,EAAA;wBAClCI,UAAa,GAAA,CAAC9E,WAAWK,OAAO,CAACxjB,MAAM,GAAG,CAAA,GAAIsoB,YAAYlK,UAAaA,GAAAA,UAAAA,CAAAA;qBAClE,MAAA;wBACL6J,UAAAA,GAAa,CAAC9E,UAAWK,CAAAA,OAAO,CAACxjB,MAAM,GAAGoe,UAAa,GAAA,CAAA,CAAA;qBACxD;iBACI,MAAA;oBAEL,IAAIyJ,UAAAA,KAAe,MAAU/kB,IAAAA,QAAAA,KAAa,CAAG,EAAA;wBAC3CmlB,UAAAA,GAAa7J,UAAa,GAAA,CAAA,CAAA;qBACrB,MAAA,IAAIyJ,eAAe,QAAU,EAAA;wBAClCI,UAAAA,GAAa9E,WAAWK,OAAO,CAACxjB,MAAM,GAAG,IAAIsoB,SAAYlK,GAAAA,UAAAA,CAAAA;qBACpD,MAAA;wBACL6J,UAAAA,GAAa9E,UAAWK,CAAAA,OAAO,CAACxjB,MAAM,GAAGgoB,SAAY5J,GAAAA,UAAAA,CAAAA;qBACtD;iBACF;gBACD,IAAI+F,MAAQ,EAAA;oBACV8D,UAAAA,IAAc,CAAC,CAAA,CAAA;iBAChB;gBACD,IAAInlB,QAAa,KAAA,CAAA,IAAK,CAACukB,WAAAA,CAAYuB,iBAAiB,EAAE;oBACpDl9B,CAAAA,IAAK,UAAC0yB,GAAa,CAAK/6B,GAAAA,IAAAA,CAAKsgB,GAAG,CAACb,QAAAA,CAAAA,CAAAA;iBAClC;aACI,MAAA;gBACLnX,CAAI+5B,GAAAA,KAAAA,CAAAA;gBACJuC,UAAAA,GAAa,CAAC,CAAID,GAAAA,SAAQ,IAAK5J,UAAa,GAAA,CAAA,CAAA;aAC7C;YAED,IAAIyK,QAAAA,CAAAA;YAEJ,IAAIxB,WAAAA,CAAYuB,iBAAiB,EAAE;gBACjC,MAAME,YAAAA,OAAenU,wKAAU0S,EAAAA,WAAAA,CAAY0B,eAAe,CAAA,CAAA;gBAC1D,MAAM/oB,MAASmjB,GAAAA,UAAAA,CAAW2B,OAAO,CAAC3gC,CAAE,CAAA,CAAA;gBACpC,MAAM8b,KAAQkjB,GAAAA,UAAAA,CAAW0B,MAAM,CAAC1gC,CAAE,CAAA,CAAA;gBAElC,IAAIyH,GAAAA,GAAMq8B,UAAaa,GAAAA,YAAAA,CAAal9B,GAAG,CAAA;gBACvC,IAAIG,IAAAA,GAAO,CAAI+8B,GAAAA,YAAAA,CAAa/8B,IAAI,CAAA;gBAEhC,OAAQm8B,YAAAA;oBACR,KAAK,QAAA;wBACHt8B,GAAAA,IAAOoU,MAAS,GAAA,CAAA,CAAA;wBAChB,MAAM;oBACR,KAAK,QAAA;wBACHpU,GAAOoU,IAAAA,MAAAA,CAAAA;wBACP,MAAM;gBAGR,CAAA;gBAEA,OAAQqF,SAAAA;oBACR,KAAK,QAAA;wBACHtZ,IAAAA,IAAQkU,KAAQ,GAAA,CAAA,CAAA;wBAChB,MAAM;oBACR,KAAK,OAAA;wBACHlU,IAAQkU,IAAAA,KAAAA,CAAAA;wBACR,MAAM;oBACR,KAAK,OAAA;wBACH,IAAI9b,CAAAA,KAAMuI,OAAO,CAAG,EAAA;4BAClBX,IAAQkU,IAAAA,KAAAA,CAAAA;yBACH,MAAA,IAAI9b,IAAI,CAAG,EAAA;4BAChB4H,IAAAA,IAAQkU,KAAQ,GAAA,CAAA,CAAA;yBACjB;wBACD,MAAM;gBAGR,CAAA;gBAEA4oB,QAAW,GAAA;oBACT98B,IAAAA;oBACAH,GAAAA;oBACAqU,KAAOA,EAAAA,KAAAA,GAAQ6oB,aAAa7oB,KAAK;oBACjCD,MAAQA,EAAAA,MAAAA,GAAS8oB,aAAa9oB,MAAM;oBAEpC3Z,KAAAA,EAAOghC,YAAY2B,aAAa;gBAClC,CAAA,CAAA;aACD;YAED/kC,KAAAA,CAAMkB,IAAI,CAAC;gBACTgS,KAAAA;gBACA8mB,IAAAA;gBACAgK,UAAAA;gBACAh+B,OAAS,EAAA;oBACP6Y,QAAAA;oBACAzc,KAAAA;oBACAkiC,WAAAA;oBACAE,WAAAA;oBACApjB,SAAWsjB,EAAAA,aAAAA;oBACXT,YAAAA;oBACAe,WAAa,EAAA;wBAACv9B,CAAAA;wBAAGC,CAAAA;qBAAE;oBACnBk9B,QAAAA;gBACF,CAAA;YACF,CAAA,CAAA,CAAA;QACF,CAAA;QAEA,OAAO5kC,KAAAA,CAAAA;IACT,CAAA;IAEAkkC,uBAA0B,GAAA;QACxB,MAAM,EAACja,QAAAA,EAAUnS,KAAAA,EAAM,GAAG,IAAI,CAAC9R,OAAO,CAAA;QACtC,MAAM6Y,QAAW,GAAA,KAACkE,wKAAU,EAAA,IAAI,CAACoY,aAAa,CAAA,CAAA;QAE9C,IAAItc,QAAU,EAAA;YACZ,OAAOoL,QAAAA,KAAa,KAAQ,GAAA,MAAA,GAAS,OAAO,CAAA;SAC7C;QAED,IAAI2O,KAAQ,GAAA,QAAA,CAAA;QAEZ,IAAI9gB,KAAAA,CAAM8gB,KAAK,KAAK,OAAS,EAAA;YAC3BA,KAAQ,GAAA,MAAA,CAAA;QACV,CAAA,MAAO,IAAI9gB,KAAAA,CAAM8gB,KAAK,KAAK,KAAO,EAAA;YAChCA,KAAQ,GAAA,OAAA,CAAA;QACV,CAAA,MAAO,IAAI9gB,KAAAA,CAAM8gB,KAAK,KAAK,OAAS,EAAA;YAClCA,KAAQ,GAAA,OAAA,CAAA;SACT;QAED,OAAOA,KAAAA,CAAAA;IACT,CAAA;IAEAuL,uBAAAA,CAAwBhC,EAAE,EAAE;QAC1B,MAAM,EAAClY,QAAQ,EAAEnS,KAAO,EAAA,EAAC8rB,UAAAA,EAAY1D,MAAAA,EAAQ/P,OAAAA,EAAQ,EAAC,GAAG,IAAI,CAACnqB,OAAO,CAAA;QACrE,MAAMk5B,UAAAA,GAAa,IAAI,CAACC,cAAc,EAAA,CAAA;QACtC,MAAM0E,iBAAiB1B,EAAKhS,GAAAA,OAAAA,CAAAA;QAC5B,MAAMkP,MAASH,GAAAA,UAAAA,CAAWG,MAAM,CAACrjB,KAAK,CAAA;QAEtC,IAAIoF,SAAAA,CAAAA;QACJ,IAAI3Z,CAAAA,CAAAA;QAEJ,IAAIwiB,aAAa,MAAQ,EAAA;YACvB,IAAIiW,MAAQ,EAAA;gBACVz4B,CAAI,GAAA,IAAI,CAACG,KAAK,GAAGuoB,OAAAA,CAAAA;gBAEjB,IAAIyT,eAAe,MAAQ,EAAA;oBACzBxiB,SAAY,GAAA,MAAA,CAAA;iBACP,MAAA,IAAIwiB,eAAe,QAAU,EAAA;oBAClCxiB,SAAY,GAAA,QAAA,CAAA;oBACZ3Z,CAAAA,IAAM43B,MAAS,GAAA,CAAA,CAAA;iBACV,MAAA;oBACLje,SAAY,GAAA,OAAA,CAAA;oBACZ3Z,CAAK43B,IAAAA,MAAAA,CAAAA;iBACN;aACI,MAAA;gBACL53B,CAAI,GAAA,IAAI,CAACG,KAAK,GAAGi8B,cAAAA,CAAAA;gBAEjB,IAAID,eAAe,MAAQ,EAAA;oBACzBxiB,SAAY,GAAA,OAAA,CAAA;iBACP,MAAA,IAAIwiB,eAAe,QAAU,EAAA;oBAClCxiB,SAAY,GAAA,QAAA,CAAA;oBACZ3Z,CAAAA,IAAM43B,MAAS,GAAA,CAAA,CAAA;iBACV,MAAA;oBACLje,SAAY,GAAA,MAAA,CAAA;oBACZ3Z,CAAI,GAAA,IAAI,CAACK,IAAI,CAAA;iBACd;aACF;SACI,MAAA,IAAImiB,aAAa,OAAS,EAAA;YAC/B,IAAIiW,MAAQ,EAAA;gBACVz4B,CAAI,GAAA,IAAI,CAACK,IAAI,GAAGqoB,OAAAA,CAAAA;gBAEhB,IAAIyT,eAAe,MAAQ,EAAA;oBACzBxiB,SAAY,GAAA,OAAA,CAAA;iBACP,MAAA,IAAIwiB,eAAe,QAAU,EAAA;oBAClCxiB,SAAY,GAAA,QAAA,CAAA;oBACZ3Z,CAAAA,IAAM43B,MAAS,GAAA,CAAA,CAAA;iBACV,MAAA;oBACLje,SAAY,GAAA,MAAA,CAAA;oBACZ3Z,CAAK43B,IAAAA,MAAAA,CAAAA;iBACN;aACI,MAAA;gBACL53B,CAAI,GAAA,IAAI,CAACK,IAAI,GAAG+7B,cAAAA,CAAAA;gBAEhB,IAAID,eAAe,MAAQ,EAAA;oBACzBxiB,SAAY,GAAA,MAAA,CAAA;iBACP,MAAA,IAAIwiB,eAAe,QAAU,EAAA;oBAClCxiB,SAAY,GAAA,QAAA,CAAA;oBACZ3Z,CAAAA,IAAK43B,MAAS,GAAA,CAAA,CAAA;iBACT,MAAA;oBACLje,SAAY,GAAA,OAAA,CAAA;oBACZ3Z,CAAI,GAAA,IAAI,CAACG,KAAK,CAAA;iBACf;aACF;SACI,MAAA;YACLwZ,SAAY,GAAA,OAAA,CAAA;SACb;QAED,OAAO;YAACA,SAAAA;YAAW3Z,CAAAA;QAAC,CAAA,CAAA;IACtB,CAAA;IAKAw9B,iBAAoB,GAAA;QAClB,IAAI,IAAI,CAACj/B,OAAO,CAAC8R,KAAK,CAACooB,MAAM,EAAE;YAC7B,OAAA;SACD;QAED,MAAM1hC,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMyrB,QAAW,GAAA,IAAI,CAACjkB,OAAO,CAACikB,QAAQ,CAAA;QAEtC,IAAIA,QAAAA,KAAa,MAAUA,IAAAA,QAAAA,KAAa,OAAS,EAAA;YAC/C,OAAO;gBAACtiB,GAAK,EAAA,CAAA;gBAAGG,IAAM,EAAA,IAAI,CAACA,IAAI;gBAAED,MAAAA,EAAQrJ,MAAMud,MAAM;gBAAEnU,KAAO,EAAA,IAAI,CAACA,KAAK;YAAA,CAAA,CAAA;SACzE;QAAC,IAAIqiB,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAU,EAAA;YACjD,OAAO;gBAACtiB,GAAK,EAAA,IAAI,CAACA,GAAG;gBAAEG,IAAM,EAAA,CAAA;gBAAGD,MAAQ,EAAA,IAAI,CAACA,MAAM;gBAAED,KAAAA,EAAOpJ,MAAMwd,KAAK;YAAA,CAAA,CAAA;SACxE;IACH,CAAA;IAKAkpB,cAAiB,GAAA;QACf,MAAM,EAACz3B,GAAG,EAAEzH,SAAS,EAAC2b,eAAAA,EAAgB,EAAE7Z,IAAI,EAAEH,GAAAA,EAAKqU,KAAAA,EAAOD,MAAM,EAAC,GAAG,IAAI,CAAA;QACxE,IAAI4F,eAAiB,EAAA;YACnBlU,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACR13B,GAAAA,CAAIiU,SAAS,GAAGC,eAAAA,CAAAA;YAChBlU,GAAAA,CAAI23B,QAAQ,CAACt9B,IAAMH,EAAAA,GAAAA,EAAKqU,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;YAC/BtO,GAAAA,CAAI43B,OAAO,EAAA,CAAA;SACZ;IACH,CAAA;IAEAxnB,oBAAAA,CAAqBnX,KAAK,EAAE;QAC1B,MAAMwU,IAAO,GAAA,IAAI,CAAClV,OAAO,CAACkV,IAAI,CAAA;QAC9B,IAAI,CAAC,IAAI,CAAC+jB,UAAU,MAAM,CAAC/jB,IAAAA,CAAKuL,OAAO,EAAE;YACvC,OAAO,CAAA,CAAA;SACR;QACD,MAAM3O,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMpP,KAAAA,GAAQoP,MAAM6R,SAAS,CAAC3hB,CAAAA,CAAKA,GAAAA,CAAAA,CAAEtB,KAAK,KAAKA,KAAAA,CAAAA,CAAAA;QAC/C,IAAIgC,SAAS,CAAG,EAAA;YACd,MAAMvB,OAAO+T,IAAK8gB,CAAAA,UAAU,CAAC,IAAI,CAAC7qB,UAAU,CAACzI,KAAAA,CAAAA,CAAAA,CAAAA;YAC7C,OAAOvB,KAAKgb,SAAS,CAAA;SACtB;QACD,OAAO,CAAA,CAAA;IACT,CAAA;IAKAmjB,QAAAA,CAAS9xB,SAAS,EAAE;QAClB,MAAM0H,IAAO,GAAA,IAAI,CAAClV,OAAO,CAACkV,IAAI,CAAA;QAC9B,MAAMzN,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMzN,KAAQ,GAAA,IAAI,CAACq7B,cAAc,IAAA,CAAK,IAAI,CAACA,cAAc,GAAG,IAAI,CAAC6G,qBAAqB,CAAC1uB,SAAS,CAAA,CAAA,CAAA;QAChG,IAAItT,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,MAAM88B,QAAW,GAAA,CAACC,EAAIC,EAAAA,EAAAA,EAAIjkB,KAAU,GAAA;YAClC,IAAI,CAACA,KAAMxF,CAAAA,KAAK,IAAI,CAACwF,KAAAA,CAAMpf,KAAK,EAAE;gBAChC,OAAA;aACD;YACDqL,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACR13B,GAAI0U,CAAAA,SAAS,GAAGX,KAAAA,CAAMxF,KAAK,CAAA;YAC3BvO,GAAI4U,CAAAA,WAAW,GAAGb,KAAAA,CAAMpf,KAAK,CAAA;YAC7BqL,GAAAA,CAAIi4B,WAAW,CAAClkB,KAAMM,CAAAA,UAAU,IAAI,EAAE,CAAA,CAAA;YACtCrU,GAAIsU,CAAAA,cAAc,GAAGP,KAAAA,CAAMQ,gBAAgB,CAAA;YAE3CvU,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;YACbl4B,GAAAA,CAAIm4B,MAAM,CAACJ,EAAAA,CAAG/9B,CAAC,EAAE+9B,GAAG99B,CAAC,CAAA,CAAA;YACrB+F,GAAAA,CAAIo4B,MAAM,CAACJ,EAAAA,CAAGh+B,CAAC,EAAEg+B,GAAG/9B,CAAC,CAAA,CAAA;YACrB+F,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;YACVr4B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;QACb,CAAA,CAAA;QAEA,IAAInqB,IAAAA,CAAKuL,OAAO,EAAE;YAChB,IAAKvmB,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;gBAC9C,MAAME,IAAAA,GAAOJ,KAAK,CAACE,CAAE,CAAA,CAAA;gBAErB,IAAIgb,IAAAA,CAAK6qB,eAAe,EAAE;oBACxBR,QACE,CAAA;wBAAC99B,CAAAA,EAAGrH,KAAK0iC,EAAE;wBAAEp7B,CAAAA,EAAGtH,KAAK2iC,EAAE;qBACvB,EAAA;wBAACt7B,CAAAA,EAAGrH,KAAK4iC,EAAE;wBAAEt7B,CAAAA,EAAGtH,KAAK6iC,EAAE;qBACvB7iC,EAAAA,IAAAA,CAAAA,CAAAA;iBAEH;gBAED,IAAI8a,IAAAA,CAAK2e,SAAS,EAAE;oBAClB0L,QACE,CAAA;wBAAC99B,CAAAA,EAAGrH,KAAKsiC,GAAG;wBAAEh7B,CAAAA,EAAGtH,KAAKuiC,GAAG;qBACzB,EAAA;wBAACl7B,CAAAA,EAAGrH,KAAKwiC,GAAG;wBAAEl7B,CAAAA,EAAGtH,KAAKyiC,GAAG;qBACzB,EAAA;wBACEzgC,KAAAA,EAAOhC,KAAKqjC,SAAS;wBACrBznB,KAAAA,EAAO5b,KAAK2+B,SAAS;wBACrBjd,UAAAA,EAAY1hB,KAAKsjC,cAAc;wBAC/B1hB,gBAAAA,EAAkB5hB,KAAKujC,oBAAoB;oBAC7C,CAAA,CAAA,CAAA;iBAEH;YACH,CAAA;SACD;IACH,CAAA;IAKAqC,UAAa,GAAA;QACX,MAAM,EAACxnC,KAAAA,EAAOiP,GAAAA,EAAKzH,OAAS,EAAA,EAACmgB,MAAM,EAAEjL,IAAI,EAAC,EAAC,GAAG,IAAI,CAAA;QAClD,MAAMknB,aAAajc,MAAO6V,CAAAA,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QACpD,MAAMkxB,YAAYlc,MAAOM,CAAAA,OAAO,GAAG2b,UAAWpmB,CAAAA,KAAK,GAAG,CAAC,CAAA;QACvD,IAAI,CAACqmB,SAAW,EAAA;YACd,OAAA;SACD;QACD,MAAM4D,aAAAA,GAAgB/qB,KAAK8gB,UAAU,CAAC,IAAI,CAAC7qB,UAAU,CAAC,CAAA,CAAA,CAAA,CAAIgR,SAAS,CAAA;QACnE,MAAMqgB,WAAAA,GAAc,IAAI,CAAC1G,YAAY,CAAA;QACrC,IAAIgH,EAAAA,EAAIE,IAAID,EAAIE,EAAAA,EAAAA,CAAAA;QAEhB,IAAI,IAAI,CAACtpB,YAAY,EAAI,EAAA;YACvBmpB,EAAAA,OAAKlB,wKAAAA,EAAYpjC,KAAO,EAAA,IAAI,CAACsJ,IAAI,EAAEu6B,aAAaA,SAAY,GAAA,CAAA,CAAA;YAC5DW,EAAAA,OAAKpB,wKAAAA,EAAYpjC,KAAO,EAAA,IAAI,CAACoJ,KAAK,EAAEq+B,iBAAiBA,aAAgB,GAAA,CAAA,CAAA;YACrElD,EAAAA,GAAKE,EAAKT,GAAAA,WAAAA,CAAAA;SACL,MAAA;YACLO,EAAAA,OAAKnB,wKAAAA,EAAYpjC,KAAO,EAAA,IAAI,CAACmJ,GAAG,EAAE06B,aAAaA,SAAY,GAAA,CAAA,CAAA;YAC3DY,EAAAA,OAAKrB,wKAAAA,EAAYpjC,KAAO,EAAA,IAAI,CAACqJ,MAAM,EAAEo+B,iBAAiBA,aAAgB,GAAA,CAAA,CAAA;YACtEnD,EAAAA,GAAKE,EAAKR,GAAAA,WAAAA,CAAAA;SACX;QACD/0B,GAAAA,CAAI03B,IAAI,EAAA,CAAA;QACR13B,GAAI0U,CAAAA,SAAS,GAAGigB,UAAAA,CAAWpmB,KAAK,CAAA;QAChCvO,GAAI4U,CAAAA,WAAW,GAAG+f,UAAAA,CAAWhgC,KAAK,CAAA;QAElCqL,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QACbl4B,GAAIm4B,CAAAA,MAAM,CAAC9C,EAAIC,EAAAA,EAAAA,CAAAA,CAAAA;QACft1B,GAAIo4B,CAAAA,MAAM,CAAC7C,EAAIC,EAAAA,EAAAA,CAAAA,CAAAA;QACfx1B,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;QAEVr4B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IACb,CAAA;IAKAa,UAAAA,CAAW1yB,SAAS,EAAE;QACpB,MAAMuuB,WAAc,GAAA,IAAI,CAAC/7B,OAAO,CAAC8R,KAAK,CAAA;QAEtC,IAAI,CAACiqB,WAAYtb,CAAAA,OAAO,EAAE;YACxB,OAAA;SACD;QAED,MAAMhZ,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QAEpB,MAAM8F,IAAAA,GAAO,IAAI,CAAC0xB,iBAAiB,EAAA,CAAA;QACnC,IAAI1xB,IAAM,EAAA;gBACR4yB,wKAAAA,EAAS14B,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;SACf;QAED,MAAMvT,KAAQ,GAAA,IAAI,CAACw8B,aAAa,CAAChpB,SAAAA,CAAAA,CAAAA;QACjC,KAAK,MAAMpT,QAAQJ,KAAO,CAAA;YACxB,MAAMomC,iBAAAA,GAAoBhmC,KAAK4F,OAAO,CAAA;YACtC,MAAMi7B,QAAAA,GAAW7gC,KAAK45B,IAAI,CAAA;YAC1B,MAAM9mB,KAAAA,GAAQ9S,KAAK8S,KAAK,CAAA;YACxB,MAAMxL,CAAAA,GAAItH,KAAK4jC,UAAU,CAAA;gBACzBqC,wKAAAA,EAAW54B,GAAKyF,EAAAA,KAAAA,EAAO,CAAGxL,EAAAA,CAAAA,EAAGu5B,QAAUmF,EAAAA,iBAAAA,CAAAA,CAAAA;QACzC,CAAA;QAEA,IAAI7yB,IAAM,EAAA;gBACR+yB,wKAAW74B,EAAAA,GAAAA,CAAAA,CAAAA;SACZ;IACH,CAAA;IAKA84B,SAAY,GAAA;QACV,MAAM,EAAC94B,GAAAA,EAAKzH,OAAAA,EAAS,EAACikB,QAAQ,EAAEwV,KAAK,EAAEr4B,OAAO,EAAC,EAAC,GAAG,IAAI,CAAA;QAEvD,IAAI,CAACq4B,KAAMhZ,CAAAA,OAAO,EAAE;YAClB,OAAA;SACD;QAED,MAAMuT,IAAAA,OAAOC,yKAAOwF,EAAAA,KAAAA,CAAMzF,IAAI,CAAA,CAAA;QAC9B,MAAM7J,OAAAA,OAAUO,wKAAU+O,EAAAA,KAAAA,CAAMtP,OAAO,CAAA,CAAA;QACvC,MAAMyI,KAAAA,GAAQ6G,MAAM7G,KAAK,CAAA;QACzB,IAAI3d,MAAAA,GAAS+e,IAAKG,CAAAA,UAAU,GAAG,CAAA,CAAA;QAE/B,IAAIlQ,QAAa,KAAA,QAAA,IAAYA,QAAa,KAAA,QAAA,QAAYhlB,wKAAAA,EAASglB,QAAW,CAAA,EAAA;YACxEhP,MAAAA,IAAUkV,QAAQtoB,MAAM,CAAA;YACxB,QAAIlC,wKAAAA,EAAQ85B,KAAMhe,CAAAA,IAAI,CAAG,EAAA;gBACvBxG,MAAU+e,IAAAA,IAAAA,CAAKG,UAAU,GAAA,CAAIsF,MAAMhe,IAAI,CAACxhB,MAAM,GAAG,CAAA,CAAA,CAAA;aAClD;SACI,MAAA;YACLgb,MAAAA,IAAUkV,QAAQxoB,GAAG,CAAA;SACtB;QAED,MAAM,EAAC8yB,MAAAA,EAAQC,MAAAA,EAAQhX,QAAQ,EAAE7E,QAAQ,EAAC,GAAG2b,SAAAA,CAAU,IAAI,EAAEvf,QAAQgP,QAAU2O,EAAAA,KAAAA,CAAAA,CAAAA;YAE/EyN,wKAAAA,EAAW54B,KAAKgyB,KAAMhe,CAAAA,IAAI,EAAE,CAAA,EAAG,GAAGuY,IAAM,EAAA;YACtC53B,KAAAA,EAAOq9B,MAAMr9B,KAAK;YAClBshB,QAAAA;YACA7E,QAAAA;YACAuC,SAAWkZ,EAAAA,UAAAA,CAAW1B,OAAO3O,QAAU7iB,EAAAA,OAAAA,CAAAA;YACvC68B,YAAc,EAAA,QAAA;YACde,WAAa,EAAA;gBAACvK,MAAAA;gBAAQC,MAAAA;aAAO;QAC/B,CAAA,CAAA,CAAA;IACF,CAAA;IAEAv6B,IAAAA,CAAKqT,SAAS,EAAE;QACd,IAAI,CAAC,IAAI,CAACyrB,UAAU,EAAI,EAAA;YACtB,OAAA;SACD;QAED,IAAI,CAACiG,cAAc,EAAA,CAAA;QACnB,IAAI,CAACI,QAAQ,CAAC9xB,SAAAA,CAAAA,CAAAA;QACd,IAAI,CAACwyB,UAAU,EAAA,CAAA;QACf,IAAI,CAACO,SAAS,EAAA,CAAA;QACd,IAAI,CAACL,UAAU,CAAC1yB,SAAAA,CAAAA,CAAAA;IAClB,CAAA;IAMA6c,OAAU,GAAA;QACR,MAAMlpB,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAMwgC,EAAAA,GAAKr/B,KAAK2Q,KAAK,IAAI3Q,KAAK2Q,KAAK,CAACwY,CAAC,IAAI,CAAA,CAAA;QACzC,MAAMmW,EAAAA,OAAKt3B,wKAAehI,EAAAA,IAAAA,CAAK+T,IAAI,IAAI/T,KAAK+T,IAAI,CAACoV,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;QACrD,MAAMoW,EAAAA,OAAKv3B,wKAAAA,EAAehI,IAAKgf,CAAAA,MAAM,IAAIhf,IAAKgf,CAAAA,MAAM,CAACmK,CAAC,EAAE,CAAA,CAAA,CAAA;QAExD,IAAI,CAAC,IAAI,CAAC2O,UAAU,EAAM,IAAA,IAAI,CAAC9+B,IAAI,KAAK06B,KAAAA,CAAMrS,SAAS,CAACroB,IAAI,EAAE;YAE5D,OAAO;gBAAC;oBACNmwB,CAAGkW,EAAAA,EAAAA;oBACHrmC,IAAAA,EAAM,CAACqT,SAAc,GAAA;wBACnB,IAAI,CAACrT,IAAI,CAACqT,SAAAA,CAAAA,CAAAA;oBACZ,CAAA;gBACF,CAAA;aAAE,CAAA;SACH;QAED,OAAO;YAAC;gBACN8c,CAAGmW,EAAAA,EAAAA;gBACHtmC,IAAAA,EAAM,CAACqT,SAAc,GAAA;oBACnB,IAAI,CAAC0xB,cAAc,EAAA,CAAA;oBACnB,IAAI,CAACI,QAAQ,CAAC9xB,SAAAA,CAAAA,CAAAA;oBACd,IAAI,CAAC+yB,SAAS,EAAA,CAAA;gBAChB,CAAA;YACF,CAAA;YAAG;gBACDjW,CAAGoW,EAAAA,EAAAA;gBACHvmC,IAAAA,EAAM,IAAM;oBACV,IAAI,CAAC6lC,UAAU,EAAA,CAAA;gBACjB,CAAA;YACF,CAAA;YAAG;gBACD1V,CAAGkW,EAAAA,EAAAA;gBACHrmC,IAAAA,EAAM,CAACqT,SAAc,GAAA;oBACnB,IAAI,CAAC0yB,UAAU,CAAC1yB,SAAAA,CAAAA,CAAAA;gBAClB,CAAA;YACF,CAAA;SAAE,CAAA;IACJ,CAAA;IAOAtI,uBAAAA,CAAwBvM,IAAI,EAAE;QAC5B,MAAMy9B,KAAQ,GAAA,IAAI,CAAC59B,KAAK,CAAC2rB,4BAA4B,EAAA,CAAA;QACrD,MAAMlM,MAAS,GAAA,IAAI,CAACtU,IAAI,GAAG,QAAA,CAAA;QAC3B,MAAM4f,SAAS,EAAE,CAAA;QACjB,IAAIrpB,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAO2zB,GAAAA,KAAAA,CAAMn8B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9C,MAAMqJ,IAAAA,GAAO6yB,KAAK,CAACl8B,CAAE,CAAA,CAAA;YACrB,IAAIqJ,IAAI,CAAC0U,MAAO,CAAA,KAAK,IAAI,CAAC7T,EAAE,IAAA,CAAK,CAACzL,IAAQ4K,IAAAA,IAAAA,CAAK5K,IAAI,KAAKA,IAAG,CAAI,EAAA;gBAC7D4qB,MAAAA,CAAOroB,IAAI,CAACqI,IAAAA,CAAAA,CAAAA;aACb;QACH,CAAA;QACA,OAAOggB,MAAAA,CAAAA;IACT,CAAA;IAOA6X,uBAAAA,CAAwB14B,KAAK,EAAE;QAC7B,MAAMvB,IAAO,GAAA,IAAI,CAACnB,OAAO,CAAC8R,KAAK,CAACkkB,UAAU,CAAC,IAAI,CAAC7qB,UAAU,CAACzI,KAAAA,CAAAA,CAAAA,CAAAA;QAC3D,WAAOuxB,yKAAAA,EAAO9yB,KAAK6yB,IAAI,CAAA,CAAA;IACzB,CAAA;IAKA2M,UAAa,GAAA;QACX,MAAMC,WAAW,IAAI,CAACxF,uBAAuB,CAAC,GAAGjH,UAAU,CAAA;QAC3D,OAAO,CAAC,IAAI,CAACxgB,YAAY,EAAK,GAAA,IAAI,CAACqC,KAAK,GAAG,IAAI,CAACD,MAAM,IAAI6qB,QAAAA,CAAAA;IAC5D,CAAA;AACF;ACtqDe,MAAMC,aAAAA,CAAAA;IACnB7oC,WAAAA,CAAYW,IAAI,EAAEmoC,KAAK,EAAExe,QAAQ,CAAE;QACjC,IAAI,CAAC3pB,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAACmoC,KAAK,GAAGA,KAAAA,CAAAA;QACb,IAAI,CAACxe,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACtoB,KAAK,GAAGmF,MAAO4hC,CAAAA,MAAM,CAAC,IAAI,CAAA,CAAA;IACjC,CAAA;IAEAC,SAAAA,CAAUroC,IAAI,EAAE;QACd,OAAOwG,MAAOqjB,CAAAA,SAAS,CAACye,aAAa,CAACxnC,IAAI,CAAC,IAAI,CAACd,IAAI,CAAC6pB,SAAS,EAAE7pB,KAAK6pB,SAAS,CAAA,CAAA;IAChF,CAAA;IAMA0e,QAAAA,CAAS9mC,IAAI,EAAE;QACb,MAAM+mC,KAAAA,GAAQhiC,MAAOiiC,CAAAA,cAAc,CAAChnC,IAAAA,CAAAA,CAAAA;QACpC,IAAIinC,WAAAA,CAAAA;QAEJ,IAAIC,kBAAkBH,KAAQ,CAAA,EAAA;YAE5BE,WAAc,GAAA,IAAI,CAACH,QAAQ,CAACC,KAAAA,CAAAA,CAAAA;SAC7B;QAED,MAAMnnC,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMoK,EAAAA,GAAKhK,KAAKgK,EAAE,CAAA;QAClB,MAAM08B,KAAQ,GAAA,IAAI,CAACA,KAAK,GAAG,GAAM18B,GAAAA,EAAAA,CAAAA;QAEjC,IAAI,CAACA,EAAI,EAAA;YACP,MAAM,IAAIge,KAAM,CAAA,0BAAA,GAA6BhoB,IAAM,CAAA,CAAA;SACpD;QAED,IAAIgK,MAAMpK,KAAO,EAAA;YAEf,OAAO8mC,KAAAA,CAAAA;SACR;QAED9mC,KAAK,CAACoK,GAAG,GAAGhK,IAAAA,CAAAA;QACZmnC,gBAAAA,CAAiBnnC,MAAM0mC,KAAOO,EAAAA,WAAAA,CAAAA,CAAAA;QAC9B,IAAI,IAAI,CAAC/e,QAAQ,EAAE;YACjBjjB,wKAAAA,CAASijB,QAAQ,CAACloB,IAAAA,CAAKgK,EAAE,EAAEhK,KAAK2a,SAAS,CAAA,CAAA;SAC1C;QAED,OAAO+rB,KAAAA,CAAAA;IACT,CAAA;IAMAnmC,GAAAA,CAAIyJ,EAAE,EAAE;QACN,OAAO,IAAI,CAACpK,KAAK,CAACoK,EAAG,CAAA,CAAA;IACvB,CAAA;IAKAo9B,UAAAA,CAAWpnC,IAAI,EAAE;QACf,MAAMJ,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMoK,EAAAA,GAAKhK,KAAKgK,EAAE,CAAA;QAClB,MAAM08B,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QAExB,IAAI18B,MAAMpK,KAAO,EAAA;YACf,OAAOA,KAAK,CAACoK,EAAG,CAAA,CAAA;SACjB;QAED,IAAI08B,KAAS18B,IAAAA,EAAAA,IAAM/E,wKAAQ,CAACyhC,MAAM,EAAE;YAClC,OAAOzhC,wKAAQ,CAACyhC,KAAM,CAAA,CAAC18B,EAAG,CAAA,CAAA;YAC1B,IAAI,IAAI,CAACke,QAAQ,EAAE;gBACjB,OAAOvN,yKAAS,CAAC3Q,EAAG,CAAA,CAAA;aACrB;SACF;IACH,CAAA;AACF,CAAC;AAED,SAASm9B,iBAAiBnnC,IAAI,EAAE0mC,KAAK,EAAEO,WAAW,EAAE;IAElD,MAAMI,mBAAeC,yKAAMviC,EAAAA,MAAAA,CAAO4hC,MAAM,CAAC,IAAI,CAAG,EAAA;QAC9CM,WAAAA,GAAchiC,wKAAS1E,CAAAA,GAAG,CAAC0mC,WAAAA,CAAAA,GAAe,CAAA,CAAE;QAC5ChiC,wKAAAA,CAAS1E,GAAG,CAACmmC,KAAAA,CAAAA;QACb1mC,IAAAA,CAAKiF,QAAQ;KACd,CAAA,CAAA;IAEDA,wKAASvE,CAAAA,GAAG,CAACgmC,KAAOW,EAAAA,YAAAA,CAAAA,CAAAA;IAEpB,IAAIrnC,IAAAA,CAAKo2B,aAAa,EAAE;QACtBmR,aAAcb,CAAAA,KAAAA,EAAO1mC,KAAKo2B,aAAa,CAAA,CAAA;KACxC;IAED,IAAIp2B,IAAAA,CAAKugB,WAAW,EAAE;QACpBtb,wKAAAA,CAASuiC,QAAQ,CAACd,KAAO1mC,EAAAA,IAAAA,CAAKugB,WAAW,CAAA,CAAA;KAC1C;AACH,CAAA;AAEA,SAASgnB,aAAcb,CAAAA,KAAK,EAAEe,MAAM,EAAE;IACpC1iC,MAAAA,CAAOC,IAAI,CAACyiC,MAAAA,CAAAA,CAAQ7oC,OAAO,CAAC8oC,CAAAA,QAAY,GAAA;QACtC,MAAMC,aAAAA,GAAgBD,QAASE,CAAAA,KAAK,CAAC,GAAA,CAAA,CAAA;QACrC,MAAMC,UAAAA,GAAaF,cAAcvnC,GAAG,EAAA,CAAA;QACpC,MAAM0nC,WAAc,GAAA;YAACpB,KAAAA;SAAM,CAAC1vB,MAAM,CAAC2wB,aAAeI,CAAAA,CAAAA,IAAI,CAAC,GAAA,CAAA,CAAA;QACvD,MAAMC,QAAQP,MAAM,CAACC,QAAS,CAAA,CAACE,KAAK,CAAC,GAAA,CAAA,CAAA;QACrC,MAAMK,UAAAA,GAAaD,MAAM5nC,GAAG,EAAA,CAAA;QAC5B,MAAM8nC,WAAAA,GAAcF,KAAMD,CAAAA,IAAI,CAAC,GAAA,CAAA,CAAA;QAC/B9iC,wKAAAA,CAASkjC,KAAK,CAACL,WAAaD,EAAAA,UAAAA,EAAYK,WAAaD,EAAAA,UAAAA,CAAAA,CAAAA;IACvD,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAASf,iBAAAA,CAAkBH,KAAK,EAAE;IAChC,OAAO,IAAA,IAAQA,SAAS,UAAcA,IAAAA,KAAAA,CAAAA;AACxC;AC1GO,MAAMqB,QAAAA,CAAAA;IACXxqC,WAAc,EAAA;QACZ,IAAI,CAACyqC,WAAW,GAAG,IAAI5B,aAAcx5B,CAAAA,iBAAAA,EAAmB,YAAY,IAAI,CAAA,CAAA;QACxE,IAAI,CAACiG,QAAQ,GAAG,IAAIuzB,cAActQ,OAAS,EAAA,UAAA,CAAA,CAAA;QAC3C,IAAI,CAACvV,OAAO,GAAG,IAAI6lB,cAAc1hC,MAAQ,EAAA,SAAA,CAAA,CAAA;QACzC,IAAI,CAAC6G,MAAM,GAAG,IAAI66B,cAAchM,KAAO,EAAA,QAAA,CAAA,CAAA;QAGvC,IAAI,CAAC6N,gBAAgB,GAAG;YAAC,IAAI,CAACD,WAAW;YAAE,IAAI,CAACz8B,MAAM;YAAE,IAAI,CAACsH,QAAQ;SAAC,CAAA;IACxE,CAAA;IAKAnS,GAAAA,CAAI,GAAGoV,IAAI,EAAE;QACX,IAAI,CAACoyB,KAAK,CAAC,UAAYpyB,EAAAA,IAAAA,CAAAA,CAAAA;IACzB,CAAA;IAEA3U,MAAO,CAAA,GAAG2U,IAAI,EAAE;QACd,IAAI,CAACoyB,KAAK,CAAC,YAAcpyB,EAAAA,IAAAA,CAAAA,CAAAA;IAC3B,CAAA;IAKAqyB,cAAAA,CAAe,GAAGryB,IAAI,EAAE;QACtB,IAAI,CAACoyB,KAAK,CAAC,YAAYpyB,IAAM,EAAA,IAAI,CAACkyB,WAAW,CAAA,CAAA;IAC/C,CAAA;IAKAh6B,WAAAA,CAAY,GAAG8H,IAAI,EAAE;QACnB,IAAI,CAACoyB,KAAK,CAAC,YAAYpyB,IAAM,EAAA,IAAI,CAACjD,QAAQ,CAAA,CAAA;IAC5C,CAAA;IAKAu1B,UAAAA,CAAW,GAAGtyB,IAAI,EAAE;QAClB,IAAI,CAACoyB,KAAK,CAAC,YAAYpyB,IAAM,EAAA,IAAI,CAACyK,OAAO,CAAA,CAAA;IAC3C,CAAA;IAKA8nB,SAAAA,CAAU,GAAGvyB,IAAI,EAAE;QACjB,IAAI,CAACoyB,KAAK,CAAC,YAAYpyB,IAAM,EAAA,IAAI,CAACvK,MAAM,CAAA,CAAA;IAC1C,CAAA;IAMA+8B,aAAAA,CAAc3+B,EAAE,EAAE;QAChB,OAAO,IAAI,CAAC4+B,IAAI,CAAC5+B,IAAI,IAAI,CAACq+B,WAAW,EAAE,YAAA,CAAA,CAAA;IACzC,CAAA;IAMAvgB,UAAAA,CAAW9d,EAAE,EAAE;QACb,OAAO,IAAI,CAAC4+B,IAAI,CAAC5+B,IAAI,IAAI,CAACkJ,QAAQ,EAAE,SAAA,CAAA,CAAA;IACtC,CAAA;IAMA21B,SAAAA,CAAU7+B,EAAE,EAAE;QACZ,OAAO,IAAI,CAAC4+B,IAAI,CAAC5+B,IAAI,IAAI,CAAC4W,OAAO,EAAE,QAAA,CAAA,CAAA;IACrC,CAAA;IAMAkoB,QAAAA,CAAS9+B,EAAE,EAAE;QACX,OAAO,IAAI,CAAC4+B,IAAI,CAAC5+B,IAAI,IAAI,CAAC4B,MAAM,EAAE,OAAA,CAAA,CAAA;IACpC,CAAA;IAKAm9B,iBAAAA,CAAkB,GAAG5yB,IAAI,EAAE;QACzB,IAAI,CAACoyB,KAAK,CAAC,cAAcpyB,IAAM,EAAA,IAAI,CAACkyB,WAAW,CAAA,CAAA;IACjD,CAAA;IAKAW,cAAAA,CAAe,GAAG7yB,IAAI,EAAE;QACtB,IAAI,CAACoyB,KAAK,CAAC,cAAcpyB,IAAM,EAAA,IAAI,CAACjD,QAAQ,CAAA,CAAA;IAC9C,CAAA;IAKA+1B,aAAAA,CAAc,GAAG9yB,IAAI,EAAE;QACrB,IAAI,CAACoyB,KAAK,CAAC,cAAcpyB,IAAM,EAAA,IAAI,CAACyK,OAAO,CAAA,CAAA;IAC7C,CAAA;IAKAsoB,YAAAA,CAAa,GAAG/yB,IAAI,EAAE;QACpB,IAAI,CAACoyB,KAAK,CAAC,cAAcpyB,IAAM,EAAA,IAAI,CAACvK,MAAM,CAAA,CAAA;IAC5C,CAAA;IAKA28B,MAAMhkC,MAAM,EAAE4R,IAAI,EAAEgzB,aAAa,EAAE;QACjC;eAAIhzB,IAAAA;SAAK,CAACvX,OAAO,CAACwqC,CAAAA,GAAO,GAAA;YACvB,MAAMC,GAAMF,GAAAA,aAAAA,IAAiB,IAAI,CAACG,mBAAmB,CAACF,GAAAA,CAAAA,CAAAA;YACtD,IAAID,aAAiBE,IAAAA,GAAAA,CAAIzC,SAAS,CAACwC,GAASC,CAAAA,IAAAA,GAAAA,KAAQ,IAAI,CAACzoB,OAAO,IAAIwoB,GAAIp/B,CAAAA,EAAE,EAAG;gBAC3E,IAAI,CAACu/B,KAAK,CAAChlC,MAAAA,EAAQ8kC,GAAKD,EAAAA,GAAAA,CAAAA,CAAAA;aACnB,MAAA;oBAKL3Y,wKAAK2Y,EAAAA,GAAAA,EAAKppC,CAAAA,IAAQ,GAAA;oBAOhB,MAAMwpC,OAAUL,GAAAA,aAAAA,IAAiB,IAAI,CAACG,mBAAmB,CAACtpC,IAAAA,CAAAA,CAAAA;oBAC1D,IAAI,CAACupC,KAAK,CAAChlC,MAAAA,EAAQilC,OAASxpC,EAAAA,IAAAA,CAAAA,CAAAA;gBAC9B,CAAA,CAAA,CAAA;aACD;QACH,CAAA,CAAA,CAAA;IACF,CAAA;IAKAupC,MAAMhlC,MAAM,EAAEsjB,QAAQ,EAAE4hB,SAAS,EAAE;QACjC,MAAMC,kBAAcC,yKAAYplC,EAAAA,MAAAA,CAAAA,CAAAA;YAChClF,wKAAKoqC,EAAAA,SAAS,CAAC,QAAWC,GAAAA,WAAAA,CAAY,EAAE,EAAE,EAAED;QAC5C5hB,QAAQ,CAACtjB,OAAO,CAACklC,SAAAA,CAAAA,CAAAA;YACjBpqC,wKAAKoqC,EAAAA,SAAS,CAAC,OAAUC,GAAAA,WAAAA,CAAY,EAAE,EAAE,EAAED;IAC7C,CAAA;IAKAH,mBAAAA,CAAoB/qC,IAAI,EAAE;QACxB,IAAK,IAAIuB,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAA,IAAI,CAACwoC,gBAAgB,CAACzoC,MAAM,EAAEC,CAAK,EAAA,CAAA;YACrD,MAAMupC,GAAM,GAAA,IAAI,CAACf,gBAAgB,CAACxoC,CAAE,CAAA,CAAA;YACpC,IAAIupC,GAAAA,CAAIzC,SAAS,CAACroC,IAAO,CAAA,EAAA;gBACvB,OAAO8qC,GAAAA,CAAAA;aACR;QACH,CAAA;QAEA,OAAO,IAAI,CAACzoB,OAAO,CAAA;IACrB,CAAA;IAKAgoB,KAAK5+B,EAAE,EAAEm/B,aAAa,EAAE5qC,IAAI,EAAE;QAC5B,MAAMyB,IAAAA,GAAOmpC,aAAc5oC,CAAAA,GAAG,CAACyJ,EAAAA,CAAAA,CAAAA;QAC/B,IAAIhK,SAAS9B,SAAW,EAAA;YACtB,MAAM,IAAI8pB,KAAM,CAAA,GAAA,GAAMhe,EAAK,GAAA,wBAAA,GAA2BzL,OAAO,GAAK,CAAA,CAAA;SACnE;QACD,OAAOyB,IAAAA,CAAAA;IACT,CAAA;AAEF,CAAC;AAGD,IAAA,WAAe,aAAA,GAAgB,IAAIooC,QAAW,EAAA;ACtK/B,MAAMwB,aAAAA,CAAAA;IACnBhsC,WAAc,EAAA;QACZ,IAAI,CAACisC,KAAK,GAAG3rC,SAAAA,CAAAA;IACf,CAAA;IAYA4rC,MAAAA,CAAO1rC,KAAK,EAAE2rC,IAAI,EAAE5zB,IAAI,EAAEtK,MAAM,EAAE;QAChC,IAAIk+B,SAAS,YAAc,EAAA;YACzB,IAAI,CAACF,KAAK,GAAG,IAAI,CAACG,kBAAkB,CAAC5rC,OAAO,IAAI,CAAA,CAAA;YAChD,IAAI,CAACD,OAAO,CAAC,IAAI,CAAC0rC,KAAK,EAAEzrC,KAAO,EAAA,SAAA,CAAA,CAAA;SACjC;QAED,IAAI,IAAI,CAACyrC,KAAK,KAAK3rC,SAAW,EAAA;YAC5B,OAAA;SACD;QAED,MAAMqiB,WAAc1U,GAAAA,MAAAA,GAAS,IAAI,CAACo+B,YAAY,CAAC7rC,KAAAA,CAAAA,CAAOyN,MAAM,CAACA,MAAU,CAAA,GAAA,IAAI,CAACo+B,YAAY,CAAC7rC,KAAM,CAAA,CAAA;QAC/F,MAAM+qB,SAAS,IAAI,CAAChrB,OAAO,CAACoiB,WAAAA,EAAaniB,OAAO2rC,IAAM5zB,EAAAA,IAAAA,CAAAA,CAAAA;QAEtD,IAAI4zB,SAAS,cAAgB,EAAA;YAC3B,IAAI,CAAC5rC,OAAO,CAACoiB,WAAAA,EAAaniB,KAAO,EAAA,MAAA,CAAA,CAAA;YACjC,IAAI,CAACD,OAAO,CAAC,IAAI,CAAC0rC,KAAK,EAAEzrC,KAAO,EAAA,WAAA,CAAA,CAAA;YAChC,IAAI,CAACyrC,KAAK,GAAG3rC,SAAAA,CAAAA;SACd;QACD,OAAOirB,MAAAA,CAAAA;IACT,CAAA;IAKAhrB,OAAAA,CAAQoiB,WAAW,EAAEniB,KAAK,EAAE2rC,IAAI,EAAE5zB,IAAI,EAAE;QACtCA,IAAAA,GAAOA,QAAQ,CAAA,CAAC,CAAA;QAChB,KAAK,MAAM+zB,cAAc3pB,WAAa,CAAA;YACpC,MAAM4pB,MAAAA,GAASD,WAAWC,MAAM,CAAA;YAChC,MAAM5lC,MAAAA,GAAS4lC,MAAM,CAACJ,IAAK,CAAA,CAAA;YAC3B,MAAM3c,MAAS,GAAA;gBAAChvB,KAAAA;gBAAO+X,IAAAA;gBAAM+zB,UAAAA,CAAWtkC,OAAO;aAAC,CAAA;YAChD,QAAIwkC,wKAAAA,EAAa7lC,QAAQ6oB,MAAQ+c,EAAAA,MAAAA,CAAAA,KAAY,KAAK,IAAIh0B,IAAAA,CAAKk0B,UAAU,EAAE;gBACrE,OAAO,KAAK,CAAA;aACb;QACH,CAAA;QAEA,OAAO,IAAI,CAAA;IACb,CAAA;IAEAC,UAAa,GAAA;QAMX,IAAI,KAACpyB,wKAAAA,EAAc,IAAI,CAACrB,MAAM,CAAG,EAAA;YAC/B,IAAI,CAAC0zB,SAAS,GAAG,IAAI,CAAC1zB,MAAM,CAAA;YAC5B,IAAI,CAACA,MAAM,GAAG3Y,SAAAA,CAAAA;SACf;IACH,CAAA;IAMA+rC,YAAAA,CAAa7rC,KAAK,EAAE;QAClB,IAAI,IAAI,CAACyY,MAAM,EAAE;YACf,OAAO,IAAI,CAACA,MAAM,CAAA;SACnB;QAED,MAAM0J,WAAAA,GAAc,IAAI,CAAC1J,MAAM,GAAG,IAAI,CAACmzB,kBAAkB,CAAC5rC,KAAAA,CAAAA,CAAAA;QAE1D,IAAI,CAACosC,mBAAmB,CAACpsC,KAAAA,CAAAA,CAAAA;QAEzB,OAAOmiB,WAAAA,CAAAA;IACT,CAAA;IAEAypB,kBAAmB5rC,CAAAA,KAAK,EAAEuI,GAAG,EAAE;QAC7B,MAAMlC,MAAAA,GAASrG,KAASA,IAAAA,KAAAA,CAAMqG,MAAM,CAAA;QACpC,MAAMmB,OAAAA,OAAUmJ,wKAAetK,EAAAA,MAAAA,CAAOmB,OAAO,IAAInB,OAAOmB,OAAO,CAACgb,OAAO,EAAE,CAAA,CAAC,CAAA,CAAA;QAC1E,MAAMA,UAAU6pB,UAAWhmC,CAAAA,MAAAA,CAAAA,CAAAA;QAE3B,OAAOmB,OAAAA,KAAY,KAAK,IAAI,CAACe,GAAAA,GAAM,EAAE,GAAG+jC,iBAAkBtsC,CAAAA,KAAAA,EAAOwiB,OAAShb,EAAAA,OAAAA,EAASe,GAAI,CAAA,CAAA;IACzF,CAAA;IAMA6jC,mBAAAA,CAAoBpsC,KAAK,EAAE;QACzB,MAAMusC,mBAAsB,GAAA,IAAI,CAACJ,SAAS,IAAI,EAAE,CAAA;QAChD,MAAMhqB,WAAAA,GAAc,IAAI,CAAC1J,MAAM,CAAA;QAC/B,MAAM2R,IAAAA,GAAO,CAACrR,CAAGrP,EAAAA,CAAAA,GAAMqP,EAAEtL,MAAM,CAACxE,CAAAA,CAAAA,GAAK,CAACS,CAAAA,CAAE8iC,IAAI,CAACtjC,CAAAA,CAAKD,GAAAA,CAAAA,CAAE8iC,MAAM,CAACngC,EAAE,KAAK1C,CAAAA,CAAE6iC,MAAM,CAACngC,EAAE,CAAA,CAAA,CAAA;QAC7E,IAAI,CAAC7L,OAAO,CAACqqB,IAAKmiB,CAAAA,mBAAAA,EAAqBpqB,cAAcniB,KAAO,EAAA,MAAA,CAAA,CAAA;QAC5D,IAAI,CAACD,OAAO,CAACqqB,IAAKjI,CAAAA,WAAAA,EAAaoqB,sBAAsBvsC,KAAO,EAAA,OAAA,CAAA,CAAA;IAC9D,CAAA;AACF,CAAC;AAKD,SAASqsC,UAAWhmC,CAAAA,MAAM,EAAE;IAC1B,MAAMomC,WAAW,CAAA,CAAC,CAAA;IAClB,MAAMjqB,UAAU,EAAE,CAAA;IAClB,MAAM5b,OAAOD,MAAOC,CAAAA,IAAI,CAAC6iB,QAASjH,CAAAA,OAAO,CAAChhB,KAAK,CAAA,CAAA;IAC/C,IAAK,IAAIE,CAAI,GAAA,CAAA,EAAGA,IAAIkF,IAAKnF,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACpC8gB,OAAAA,CAAQ9f,IAAI,CAAC+mB,QAAAA,CAASghB,SAAS,CAAC7jC,IAAI,CAAClF,CAAE,CAAA,CAAA,CAAA,CAAA;IACzC,CAAA;IAEA,MAAMgrC,KAAQrmC,GAAAA,MAAAA,CAAOmc,OAAO,IAAI,EAAE,CAAA;IAClC,IAAK,IAAI9gB,CAAI,GAAA,CAAA,EAAGA,IAAIgrC,KAAMjrC,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACrC,MAAMqqC,MAAAA,GAASW,KAAK,CAAChrC,CAAE,CAAA,CAAA;QAEvB,IAAI8gB,OAAQvE,CAAAA,OAAO,CAAC8tB,MAAAA,CAAAA,KAAY,CAAC,CAAG,EAAA;YAClCvpB,OAAAA,CAAQ9f,IAAI,CAACqpC,MAAAA,CAAAA,CAAAA;YACbU,QAAQ,CAACV,MAAAA,CAAOngC,EAAE,CAAC,GAAG,IAAI,CAAA;SAC3B;IACH,CAAA;IAEA,OAAO;QAAC4W,OAAAA;QAASiqB,QAAAA;IAAQ,CAAA,CAAA;AAC3B,CAAA;AAEA,SAASE,OAAQnlC,CAAAA,OAAO,EAAEe,GAAG,EAAE;IAC7B,IAAI,CAACA,GAAAA,IAAOf,OAAY,KAAA,KAAK,EAAE;QAC7B,OAAO,IAAI,CAAA;KACZ;IACD,IAAIA,OAAAA,KAAY,IAAI,EAAE;QACpB,OAAO,CAAA,CAAC,CAAA;KACT;IACD,OAAOA,OAAAA,CAAAA;AACT,CAAA;AAEA,SAAS8kC,iBAAkBtsC,CAAAA,KAAK,EAAE,EAACwiB,OAAO,EAAEiqB,QAAQ,EAAC,EAAEjlC,OAAO,EAAEe,GAAG,EAAE;IACnE,MAAMwiB,SAAS,EAAE,CAAA;IACjB,MAAM1V,OAAAA,GAAUrV,MAAM2S,UAAU,EAAA,CAAA;IAEhC,KAAK,MAAMo5B,UAAUvpB,OAAS,CAAA;QAC5B,MAAM5W,EAAAA,GAAKmgC,OAAOngC,EAAE,CAAA;QACpB,MAAMjD,IAAOgkC,GAAAA,OAAAA,CAAQnlC,OAAO,CAACoE,GAAG,EAAErD,GAAAA,CAAAA,CAAAA;QAClC,IAAII,IAAAA,KAAS,IAAI,EAAE;YACjB,SAAS;SACV;QACDoiB,MAAAA,CAAOroB,IAAI,CAAC;YACVqpC,MAAAA;YACAvkC,OAASolC,EAAAA,UAAAA,CAAW5sC,KAAMqG,CAAAA,MAAM,EAAE;gBAAC0lC,MAAAA;gBAAQW,KAAOD,EAAAA,QAAQ,CAAC7gC,EAAG,CAAA;YAAA,CAAA,EAAGjD,IAAM0M,EAAAA,OAAAA,CAAAA;QACzE,CAAA,CAAA,CAAA;IACF,CAAA;IAEA,OAAO0V,MAAAA,CAAAA;AACT,CAAA;AAEA,SAAS6hB,UAAWvmC,CAAAA,MAAM,EAAE,EAAC0lC,MAAM,EAAEW,KAAK,EAAC,EAAE/jC,IAAI,EAAE0M,OAAO,EAAE;IAC1D,MAAMzO,IAAAA,GAAOP,MAAOwmC,CAAAA,eAAe,CAACd,MAAAA,CAAAA,CAAAA;IACpC,MAAMv5B,MAASnM,GAAAA,MAAAA,CAAOoM,eAAe,CAAC9J,IAAM/B,EAAAA,IAAAA,CAAAA,CAAAA;IAC5C,IAAI8lC,KAAAA,IAASX,MAAOllC,CAAAA,QAAQ,EAAE;QAE5B2L,MAAO9P,CAAAA,IAAI,CAACqpC,MAAAA,CAAOllC,QAAQ,CAAA,CAAA;KAC5B;IACD,OAAOR,MAAOqM,CAAAA,cAAc,CAACF,MAAAA,EAAQ6C,OAAS,EAAA;QAAC,EAAA;KAAG,EAAE;QAElDy3B,UAAAA,EAAY,KAAK;QACjBC,SAAAA,EAAW,KAAK;QAChBC,OAAAA,EAAS,IAAI;IACf,CAAA,CAAA,CAAA;AACF;ACvLO,SAASC,YAAAA,CAAa9sC,IAAI,EAAEqH,OAAO,EAAE;IAC1C,MAAM0lC,kBAAkBrmC,wKAAS0K,CAAAA,QAAQ,CAACpR,IAAAA,CAAK,IAAI,CAAA,CAAC,CAAA;IACpD,MAAMgtC,cAAiB,GAAC3lC,CAAAA,OAAAA,CAAQ+J,QAAQ,IAAI,CAAA,CAAC,CAAA,CAAGpR,IAAK,CAAA,IAAI,CAAA,CAAC,CAAA;IAC1D,OAAOgtC,cAAAA,CAAen8B,SAAS,IAAIxJ,OAAAA,CAAQwJ,SAAS,IAAIk8B,eAAAA,CAAgBl8B,SAAS,IAAI,GAAA,CAAA;AACvF,CAAC;AAED,SAASo8B,yBAA0BxhC,CAAAA,EAAE,EAAEoF,SAAS,EAAE;IAChD,IAAI7F,IAAOS,GAAAA,EAAAA,CAAAA;IACX,IAAIA,OAAO,SAAW,EAAA;QACpBT,IAAO6F,GAAAA,SAAAA,CAAAA;KACF,MAAA,IAAIpF,OAAO,SAAW,EAAA;QAC3BT,IAAO6F,GAAAA,SAAAA,KAAc,GAAM,GAAA,GAAA,GAAM,GAAG,CAAA;KACrC;IACD,OAAO7F,IAAAA,CAAAA;AACT,CAAA;AAEA,SAASkiC,yBAA0BliC,CAAAA,IAAI,EAAE6F,SAAS,EAAE;IAClD,OAAO7F,IAAAA,KAAS6F,SAAY,GAAA,SAAA,GAAY,SAAS,CAAA;AACnD,CAAA;AAEA,SAASs8B,aAAAA,CAAc1hC,EAAE,EAAE;IACzB,IAAIA,EAAO,KAAA,GAAA,IAAOA,EAAO,KAAA,GAAA,IAAOA,OAAO,GAAK,EAAA;QAC1C,OAAOA,EAAAA,CAAAA;KACR;AACH,CAAA;AAEA,SAAS2hC,gBAAAA,CAAiB9hB,QAAQ,EAAE;IAClC,IAAIA,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAU,EAAA;QAC/C,OAAO,GAAA,CAAA;KACR;IACD,IAAIA,QAAAA,KAAa,MAAUA,IAAAA,QAAAA,KAAa,OAAS,EAAA;QAC/C,OAAO,GAAA,CAAA;KACR;AACH,CAAA;AAEO,SAAS+hB,aAAc5hC,CAAAA,EAAE,EAAE,GAAG6hC,YAAY,EAAE;IACjD,IAAIH,cAAc1hC,EAAK,CAAA,EAAA;QACrB,OAAOA,EAAAA,CAAAA;KACR;IACD,KAAK,MAAMjD,QAAQ8kC,YAAc,CAAA;QAC/B,MAAMtiC,OAAOxC,IAAKwC,CAAAA,IAAI,IACjBoiC,gBAAAA,CAAiB5kC,KAAK8iB,QAAQ,CAAA,IAC9B7f,EAAGnK,CAAAA,MAAM,GAAG,CAAK6rC,IAAAA,aAAAA,CAAc1hC,EAAE,CAAC,CAAA,CAAE,CAAC8hC,WAAW,EAAA,CAAA,CAAA;QACrD,IAAIviC,IAAM,EAAA;YACR,OAAOA,IAAAA,CAAAA;SACR;IACH,CAAA;IACA,MAAM,IAAIye,MAAM,CAAC,0BAA0B,EAAEhe,EAAG,CAAA,mDAAmD,CAAC,CAAE,CAAA;AACxG,CAAC;AAED,SAAS+hC,mBAAmB/hC,EAAE,EAAET,IAAI,EAAE2C,OAAO,EAAE;IAC7C,IAAIA,OAAO,CAAC3C,IAAO,GAAA,QAAA,CAAS,KAAKS,EAAI,EAAA;QACnC,OAAO;YAACT,IAAAA;QAAI,CAAA,CAAA;KACb;AACH,CAAA;AAEA,SAASyiC,wBAAyBhiC,CAAAA,EAAE,EAAEvF,MAAM,EAAE;IAC5C,IAAIA,OAAOyE,IAAI,IAAIzE,OAAOyE,IAAI,CAACyG,QAAQ,EAAE;QACvC,MAAMs8B,UAAUxnC,MAAOyE,CAAAA,IAAI,CAACyG,QAAQ,CAAC9D,MAAM,CAAC,CAACqgC,CAAAA,GAAMA,EAAEp9B,OAAO,KAAK9E,EAAMkiC,IAAAA,CAAAA,CAAEj9B,OAAO,KAAKjF,EAAAA,CAAAA,CAAAA;QACrF,IAAIiiC,OAAAA,CAAQpsC,MAAM,EAAE;YAClB,OAAOksC,kBAAmB/hC,CAAAA,EAAAA,EAAI,GAAKiiC,EAAAA,OAAO,CAAC,CAAA,CAAE,CAAKF,IAAAA,kBAAAA,CAAmB/hC,EAAI,EAAA,GAAA,EAAKiiC,OAAO,CAAC,CAAE,CAAA,CAAA,CAAA;SACzF;KACF;IACD,OAAO,CAAA,CAAC,CAAA;AACV,CAAA;AAEA,SAASE,gBAAiB1nC,CAAAA,MAAM,EAAEmB,OAAO,EAAE;IACzC,MAAMwmC,gBAAgBzxB,yKAAS,CAAClW,MAAOlG,CAAAA,IAAI,CAAC,IAAI;QAACqN,MAAAA,EAAQ,CAAA,CAAC;IAAC,CAAA,CAAA;IAC3D,MAAMygC,YAAezmC,GAAAA,OAAAA,CAAQgG,MAAM,IAAI,CAAA,CAAC,CAAA;IACxC,MAAM0gC,cAAiBjB,GAAAA,YAAAA,CAAa5mC,MAAOlG,CAAAA,IAAI,EAAEqH,OAAAA,CAAAA,CAAAA;IACjD,MAAMgG,MAAS7G,GAAAA,MAAAA,CAAO4hC,MAAM,CAAC,IAAI,CAAA,CAAA;IAGjC5hC,MAAAA,CAAOC,IAAI,CAACqnC,YAAAA,CAAAA,CAAcztC,OAAO,CAACoL,CAAAA,EAAM,GAAA;QACtC,MAAMuiC,SAAAA,GAAYF,YAAY,CAACriC,EAAG,CAAA,CAAA;QAClC,IAAI,KAACnF,wKAAAA,EAAS0nC,SAAY,CAAA,EAAA;YACxB,OAAO/9B,QAAQg+B,KAAK,CAAC,CAAC,uCAAuC,EAAExiC,GAAG,CAAC,CAAA,CAAA;SACpE;QACD,IAAIuiC,SAAAA,CAAUE,MAAM,EAAE;YACpB,OAAOj+B,QAAQC,IAAI,CAAC,CAAC,+CAA+C,EAAEzE,GAAG,CAAC,CAAA,CAAA;SAC3E;QACD,MAAMT,IAAOqiC,GAAAA,aAAAA,CAAc5hC,EAAIuiC,EAAAA,SAAAA,EAAWP,wBAAyBhiC,CAAAA,EAAAA,EAAIvF,MAASQ,CAAAA,EAAAA,wKAAAA,CAAS2G,MAAM,CAAC2gC,SAAUhuC,CAAAA,IAAI,CAAC,CAAA,CAAA;QAC/G,MAAMmuC,SAAAA,GAAYjB,0BAA0BliC,IAAM+iC,EAAAA,cAAAA,CAAAA,CAAAA;QAClD,MAAMK,mBAAsBP,GAAAA,aAAAA,CAAcxgC,MAAM,IAAI,CAAA,CAAC,CAAA;QACrDA,MAAM,CAAC5B,GAAG,OAAG4iC,yKAAAA,EAAQ7nC,OAAO4hC,MAAM,CAAC,IAAI,CAAG,EAAA;YAAC;gBAACp9B,IAAAA;YAAI,CAAA;YAAGgjC,SAAAA;YAAWI,mBAAmB,CAACpjC,IAAK,CAAA;YAAEojC,mBAAmB,CAACD,SAAU,CAAA;SAAC,CAAA,CAAA;IAC1H,CAAA,CAAA,CAAA;IAGAjoC,MAAAA,CAAOyE,IAAI,CAACyG,QAAQ,CAAC/Q,OAAO,CAACsN,CAAAA,OAAW,GAAA;QACtC,MAAM3N,IAAO2N,GAAAA,OAAAA,CAAQ3N,IAAI,IAAIkG,OAAOlG,IAAI,CAAA;QACxC,MAAM6Q,SAAYlD,GAAAA,OAAAA,CAAQkD,SAAS,IAAIi8B,aAAa9sC,IAAMqH,EAAAA,OAAAA,CAAAA,CAAAA;QAC1D,MAAM0lC,eAAkB3wB,GAAAA,yKAAS,CAACpc,IAAAA,CAAK,IAAI,CAAA,CAAC,CAAA;QAC5C,MAAMouC,mBAAsBrB,GAAAA,eAAAA,CAAgB1/B,MAAM,IAAI,CAAA,CAAC,CAAA;QACvD7G,MAAAA,CAAOC,IAAI,CAAC2nC,mBAAAA,CAAAA,CAAqB/tC,OAAO,CAACiuC,CAAAA,SAAa,GAAA;YACpD,MAAMtjC,IAAAA,GAAOiiC,0BAA0BqB,SAAWz9B,EAAAA,SAAAA,CAAAA,CAAAA;YAClD,MAAMpF,EAAKkC,GAAAA,OAAO,CAAC3C,IAAAA,GAAO,SAAS,IAAIA,IAAAA,CAAAA;YACvCqC,MAAM,CAAC5B,EAAG,CAAA,GAAG4B,MAAM,CAAC5B,GAAG,IAAIjF,MAAAA,CAAO4hC,MAAM,CAAC,IAAI,CAAA,CAAA;gBAC7CiG,yKAAQhhC,EAAAA,MAAM,CAAC5B,EAAAA,CAAG,EAAE;gBAAC;oBAACT,IAAAA;gBAAI,CAAA;gBAAG8iC,YAAY,CAACriC,EAAG,CAAA;gBAAE2iC,mBAAmB,CAACE,SAAU,CAAA;aAAC,CAAA,CAAA;QAChF,CAAA,CAAA,CAAA;IACF,CAAA,CAAA,CAAA;IAGA9nC,MAAAA,CAAOC,IAAI,CAAC4G,MAAAA,CAAAA,CAAQhN,OAAO,CAACyG,CAAAA,GAAO,GAAA;QACjC,MAAMwB,KAAAA,GAAQ+E,MAAM,CAACvG,GAAI,CAAA,CAAA;YACzBunC,yKAAAA,EAAQ/lC,KAAO,EAAA;YAAC5B,wKAAAA,CAAS2G,MAAM,CAAC/E,KAAMtI,CAAAA,IAAI,CAAC;YAAE0G,wKAAAA,CAAS4B,KAAK;SAAC,CAAA,CAAA;IAC9D,CAAA,CAAA,CAAA;IAEA,OAAO+E,MAAAA,CAAAA;AACT,CAAA;AAEA,SAASkhC,WAAAA,CAAYroC,MAAM,EAAE;IAC3B,MAAMmB,OAAAA,GAAUnB,OAAOmB,OAAO,IAAA,CAAKnB,MAAOmB,CAAAA,OAAO,GAAG,CAAA,CAAC,CAAA,CAAA;IAErDA,OAAAA,CAAQgb,OAAO,OAAG7R,wKAAAA,EAAenJ,OAAQgb,CAAAA,OAAO,EAAE,CAAA,CAAC,CAAA,CAAA;IACnDhb,OAAQgG,CAAAA,MAAM,GAAGugC,gBAAAA,CAAiB1nC,MAAQmB,EAAAA,OAAAA,CAAAA,CAAAA;AAC5C,CAAA;AAEA,SAASmnC,QAAAA,CAAS7jC,IAAI,EAAE;IACtBA,IAAAA,GAAOA,QAAQ,CAAA,CAAC,CAAA;IAChBA,IAAAA,CAAKyG,QAAQ,GAAGzG,IAAKyG,CAAAA,QAAQ,IAAI,EAAE,CAAA;IACnCzG,IAAAA,CAAKwI,MAAM,GAAGxI,IAAKwI,CAAAA,MAAM,IAAI,EAAE,CAAA;IAC/B,OAAOxI,IAAAA,CAAAA;AACT,CAAA;AAEA,SAAS8jC,UAAAA,CAAWvoC,MAAM,EAAE;IAC1BA,MAAAA,GAASA,UAAU,CAAA,CAAC,CAAA;IACpBA,MAAAA,CAAOyE,IAAI,GAAG6jC,QAAStoC,CAAAA,MAAAA,CAAOyE,IAAI,CAAA,CAAA;IAElC4jC,WAAYroC,CAAAA,MAAAA,CAAAA,CAAAA;IAEZ,OAAOA,MAAAA,CAAAA;AACT,CAAA;AAEA,MAAMwoC,WAAW,IAAIlvC,GAAAA,EAAAA,CAAAA;AACrB,MAAMmvC,aAAa,IAAIC,GAAAA,EAAAA,CAAAA;AAEvB,SAASC,UAAWv5B,CAAAA,QAAQ,EAAEw5B,QAAQ,EAAE;IACtC,IAAIroC,IAAAA,GAAOioC,QAAS1sC,CAAAA,GAAG,CAACsT,QAAAA,CAAAA,CAAAA;IACxB,IAAI,CAAC7O,IAAM,EAAA;QACTA,IAAOqoC,GAAAA,QAAAA,EAAAA,CAAAA;QACPJ,QAASvsC,CAAAA,GAAG,CAACmT,QAAU7O,EAAAA,IAAAA,CAAAA,CAAAA;QACvBkoC,UAAAA,CAAWnsC,GAAG,CAACiE,IAAAA,CAAAA,CAAAA;KAChB;IACD,OAAOA,IAAAA,CAAAA;AACT,CAAA;AAEA,MAAMsoC,UAAa,GAAA,CAAC5sC,GAAKua,EAAAA,GAAAA,EAAK5V,GAAQ,GAAA;IACpC,MAAM0B,IAAAA,OAAOgL,wKAAAA,EAAiBkJ,GAAK5V,EAAAA,GAAAA,CAAAA,CAAAA;IACnC,IAAI0B,SAAS7I,SAAW,EAAA;QACtBwC,GAAAA,CAAIK,GAAG,CAACgG,IAAAA,CAAAA,CAAAA;KACT;AACH,CAAA,CAAA;AAEe,MAAMwmC,MAAAA,CAAAA;IACnB3vC,WAAAA,CAAY6G,MAAM,CAAE;QAClB,IAAI,CAAC+oC,OAAO,GAAGR,UAAWvoC,CAAAA,MAAAA,CAAAA,CAAAA;QAC1B,IAAI,CAACgpC,WAAW,GAAG,IAAI1vC,GAAAA,EAAAA,CAAAA;QACvB,IAAI,CAAC2vC,cAAc,GAAG,IAAI3vC,GAAAA,EAAAA,CAAAA;IAC5B,CAAA;IAEA,IAAI4vC,QAAW,GAAA;QACb,OAAO,IAAI,CAACH,OAAO,CAACG,QAAQ,CAAA;IAC9B,CAAA;IAEA,IAAIpvC,IAAO,GAAA;QACT,OAAO,IAAI,CAACivC,OAAO,CAACjvC,IAAI,CAAA;IAC1B,CAAA;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;QACb,IAAI,CAACivC,OAAO,CAACjvC,IAAI,GAAGA,IAAAA,CAAAA;IACtB,CAAA;IAEA,IAAI2K,IAAO,GAAA;QACT,OAAO,IAAI,CAACskC,OAAO,CAACtkC,IAAI,CAAA;IAC1B,CAAA;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;QACb,IAAI,CAACskC,OAAO,CAACtkC,IAAI,GAAG6jC,QAAS7jC,CAAAA,IAAAA,CAAAA,CAAAA;IAC/B,CAAA;IAEA,IAAItD,OAAU,GAAA;QACZ,OAAO,IAAI,CAAC4nC,OAAO,CAAC5nC,OAAO,CAAA;IAC7B,CAAA;IAEA,IAAIA,OAAAA,CAAQA,OAAO,EAAE;QACnB,IAAI,CAAC4nC,OAAO,CAAC5nC,OAAO,GAAGA,OAAAA,CAAAA;IACzB,CAAA;IAEA,IAAIgb,OAAU,GAAA;QACZ,OAAO,IAAI,CAAC4sB,OAAO,CAAC5sB,OAAO,CAAA;IAC7B,CAAA;IAEA9c,MAAS,GAAA;QACP,MAAMW,MAAAA,GAAS,IAAI,CAAC+oC,OAAO,CAAA;QAC3B,IAAI,CAACI,UAAU,EAAA,CAAA;QACfd,WAAYroC,CAAAA,MAAAA,CAAAA,CAAAA;IACd,CAAA;IAEAmpC,UAAa,GAAA;QACX,IAAI,CAACH,WAAW,CAACI,KAAK,EAAA,CAAA;QACtB,IAAI,CAACH,cAAc,CAACG,KAAK,EAAA,CAAA;IAC3B,CAAA;IAQAl9B,gBAAAA,CAAiBm9B,WAAW,EAAE;QAC5B,OAAOV,UAAAA,CAAWU,aAChB,IAAM;gBAAC;oBACL,CAAC,SAAS,EAAEA,WAAAA,CAAY,CAAC;oBACzB,EAAA;iBACD;aAAC,CAAA,CAAA;IACN,CAAA;IASAv5B,yBAA0Bu5B,CAAAA,WAAW,EAAEx5B,UAAU,EAAE;QACjD,OAAO84B,UAAAA,CAAW,CAAC,EAAEU,WAAAA,CAAY,YAAY,EAAEx5B,UAAAA,CAAW,CAAC,EACzD,IAAM;gBACJ;oBACE,CAAC,SAAS,EAAEw5B,WAAAA,CAAY,aAAa,EAAEx5B,WAAW,CAAC;oBACnD,CAAC,YAAY,EAAEA,UAAAA,CAAW,CAAC;iBAC5B;gBAED;oBACE,CAAC,SAAS,EAAEw5B,WAAAA,CAAY,CAAC;oBACzB,EAAA;iBACD;aACF,CAAA,CAAA;IACL,CAAA;IAUA95B,uBAAwB85B,CAAAA,WAAW,EAAEn6B,WAAW,EAAE;QAChD,OAAOy5B,UAAAA,CAAW,CAAC,EAAEU,WAAAA,CAAY,CAAC,EAAEn6B,WAAAA,CAAY,CAAC,EAC/C,IAAM;gBAAC;oBACL,CAAC,SAAS,EAAEm6B,WAAAA,CAAY,UAAU,EAAEn6B,YAAY,CAAC;oBACjD,CAAC,SAAS,EAAEm6B,WAAAA,CAAY,CAAC;oBACzB,CAAC,SAAS,EAAEn6B,WAAAA,CAAY,CAAC;oBACzB,EAAA;iBACD;aAAC,CAAA,CAAA;IACN,CAAA;IAOAs3B,eAAAA,CAAgBd,MAAM,EAAE;QACtB,MAAMngC,EAAAA,GAAKmgC,OAAOngC,EAAE,CAAA;QACpB,MAAMzL,IAAAA,GAAO,IAAI,CAACA,IAAI,CAAA;QACtB,OAAO6uC,UAAAA,CAAW,CAAC,EAAE7uC,IAAAA,CAAK,QAAQ,EAAEyL,EAAAA,CAAG,CAAC,EACtC,IAAM;gBAAC;oBACL,CAAC,QAAQ,EAAEA,EAAAA,CAAG,CAAC;uBACZmgC,MAAO4D,CAAAA,sBAAsB,IAAI,EAAE;iBACvC;aAAC,CAAA,CAAA;IACN,CAAA;IAKAC,aAAcC,CAAAA,SAAS,EAAEC,UAAU,EAAE;QACnC,MAAMT,WAAAA,GAAc,IAAI,CAACA,WAAW,CAAA;QACpC,IAAI75B,KAAAA,GAAQ65B,WAAYltC,CAAAA,GAAG,CAAC0tC,SAAAA,CAAAA,CAAAA;QAC5B,IAAI,CAACr6B,SAASs6B,UAAY,EAAA;YACxBt6B,KAAAA,GAAQ,IAAI7V,GAAAA,EAAAA,CAAAA;YACZ0vC,WAAY/sC,CAAAA,GAAG,CAACutC,SAAWr6B,EAAAA,KAAAA,CAAAA,CAAAA;SAC5B;QACD,OAAOA,KAAAA,CAAAA;IACT,CAAA;IAQA/C,gBAAgBo9B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;QAC/C,MAAM,EAACtoC,OAAO,EAAErH,IAAI,EAAC,GAAG,IAAI,CAAA;QAC5B,MAAMqV,KAAQ,GAAA,IAAI,CAACo6B,aAAa,CAACC,SAAWC,EAAAA,UAAAA,CAAAA,CAAAA;QAC5C,MAAMvhC,MAAAA,GAASiH,KAAMrT,CAAAA,GAAG,CAAC4tC,QAAAA,CAAAA,CAAAA;QACzB,IAAIxhC,MAAQ,EAAA;YACV,OAAOA,MAAAA,CAAAA;SACR;QAED,MAAMiE,SAAS,IAAIu8B,GAAAA,EAAAA,CAAAA;QAEnBgB,QAASvvC,CAAAA,OAAO,CAACoG,CAAAA,IAAQ,GAAA;YACvB,IAAIipC,SAAW,EAAA;gBACbr9B,MAAAA,CAAO7P,GAAG,CAACktC,SAAAA,CAAAA,CAAAA;gBACXjpC,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAOioC,GAAAA,UAAAA,CAAW18B,QAAQq9B,SAAW5oC,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;aACnD;YACDL,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAOioC,GAAAA,UAAAA,CAAW18B,QAAQhL,OAASP,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;YAChDL,IAAKpG,CAAAA,OAAO,CAACyG,CAAAA,GAAOioC,GAAAA,UAAAA,CAAW18B,MAAQ+J,EAAAA,yKAAS,CAACpc,IAAAA,CAAK,IAAI,CAAA,CAAI8G,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;YAC9DL,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAOioC,GAAAA,UAAAA,CAAW18B,QAAQ3L,wKAAUI,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;YACjDL,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAOioC,GAAAA,UAAAA,CAAW18B,QAAQ2P,yKAAalb,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;QACtD,CAAA,CAAA,CAAA;QAEA,MAAM8mB,KAAAA,GAAQziB,KAAM7H,CAAAA,IAAI,CAAC+O,MAAAA,CAAAA,CAAAA;QACzB,IAAIub,KAAAA,CAAMtsB,MAAM,KAAK,CAAG,EAAA;YACtBssB,KAAAA,CAAMrrB,IAAI,CAACiE,MAAO4hC,CAAAA,MAAM,CAAC,IAAI,CAAA,CAAA,CAAA;SAC9B;QACD,IAAIuG,UAAAA,CAAWlsC,GAAG,CAACmtC,QAAW,CAAA,EAAA;YAC5Bv6B,KAAMlT,CAAAA,GAAG,CAACytC,QAAUhiB,EAAAA,KAAAA,CAAAA,CAAAA;SACrB;QACD,OAAOA,KAAAA,CAAAA;IACT,CAAA;IAMAiiB,iBAAoB,GAAA;QAClB,MAAM,EAACxoC,OAAO,EAAErH,IAAI,EAAC,GAAG,IAAI,CAAA;QAE5B,OAAO;YACLqH,OAAAA;YACA+U,yKAAS,CAACpc,IAAK,CAAA,IAAI,CAAA,CAAC;YACpB0G,wKAAAA,CAAS0K,QAAQ,CAACpR,IAAK,CAAA,IAAI,CAAA,CAAC;YAC5B;gBAACA,IAAAA;YAAI,CAAA;YACL0G,wKAAAA;YACAsb,yKAAAA;SACD,CAAA;IACH,CAAA;IASApM,oBAAoBvD,MAAM,EAAEsD,KAAK,EAAET,OAAO,EAAEQ,QAAW,GAAA;QAAC,EAAA;KAAG,EAAE;QAC3D,MAAMkV,MAAS,GAAA;YAACnjB,OAAAA,EAAS,IAAI;QAAA,CAAA,CAAA;QAC7B,MAAM,EAACqoC,QAAQ,EAAEC,WAAW,EAAC,GAAGC,WAAAA,CAAY,IAAI,CAACb,cAAc,EAAE98B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;QACzE,IAAIrO,OAAUyoC,GAAAA,QAAAA,CAAAA;QACd,IAAIG,WAAAA,CAAYH,UAAUn6B,KAAQ,CAAA,EAAA;YAChCiV,MAAOnjB,CAAAA,OAAO,GAAG,KAAK,CAAA;YACtByN,OAAUg7B,OAAAA,yKAAAA,EAAWh7B,OAAWA,CAAAA,GAAAA,OAAAA,EAAAA,GAAYA,OAAO,CAAA;YAEnD,MAAMi7B,cAAc,IAAI,CAAC59B,cAAc,CAACF,QAAQ6C,OAAS66B,EAAAA,WAAAA,CAAAA,CAAAA;YACzD1oC,OAAU+oC,OAAAA,yKAAAA,EAAeN,UAAU56B,OAASi7B,EAAAA,WAAAA,CAAAA,CAAAA;SAC7C;QAED,KAAK,MAAM/rC,QAAQuR,KAAO,CAAA;YACxBiV,MAAM,CAACxmB,IAAAA,CAAK,GAAGiD,OAAO,CAACjD,IAAK,CAAA,CAAA;QAC9B,CAAA;QACA,OAAOwmB,MAAAA,CAAAA;IACT,CAAA;IAQArY,cAAeF,CAAAA,MAAM,EAAE6C,OAAO,EAAEQ,QAAW,GAAA;QAAC,EAAA;KAAG,EAAE26B,kBAAkB,EAAE;QACnE,MAAM,EAACP,QAAAA,EAAS,GAAGE,YAAY,IAAI,CAACb,cAAc,EAAE98B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;QAC5D,WAAOpP,wKAAAA,EAAS4O,OACZk7B,CAAAA,OAAAA,yKAAAA,EAAeN,UAAU56B,OAASvV,EAAAA,SAAAA,EAAW0wC,sBAC7CP,QAAQ,CAAA;IACd,CAAA;AACF,CAAC;AAED,SAASE,YAAYM,aAAa,EAAEj+B,MAAM,EAAEqD,QAAQ,EAAE;IACpD,IAAIL,KAAAA,GAAQi7B,aAActuC,CAAAA,GAAG,CAACqQ,MAAAA,CAAAA,CAAAA;IAC9B,IAAI,CAACgD,KAAO,EAAA;QACVA,KAAAA,GAAQ,IAAI7V,GAAAA,EAAAA,CAAAA;QACZ8wC,aAAcnuC,CAAAA,GAAG,CAACkQ,MAAQgD,EAAAA,KAAAA,CAAAA,CAAAA;KAC3B;IACD,MAAMC,QAAAA,GAAWI,SAAS8zB,IAAI,EAAA,CAAA;IAC9B,IAAIp7B,MAAAA,GAASiH,KAAMrT,CAAAA,GAAG,CAACsT,QAAAA,CAAAA,CAAAA;IACvB,IAAI,CAAClH,MAAQ,EAAA;QACX,MAAM0hC,QAAAA,OAAWS,yKAAAA,EAAgBl+B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;QACzCtH,MAAS,GAAA;YACP0hC,QAAAA;YACAC,WAAar6B,EAAAA,QAAAA,CAASpI,MAAM,CAACkjC,CAAAA,CAAAA,GAAK,CAACA,CAAEjD,CAAAA,WAAW,EAAG9e,CAAAA,QAAQ,CAAC,OAAA,CAAA,CAAA;QAC9D,CAAA,CAAA;QACApZ,KAAMlT,CAAAA,GAAG,CAACmT,QAAUlH,EAAAA,MAAAA,CAAAA,CAAAA;KACrB;IACD,OAAOA,MAAAA,CAAAA;AACT,CAAA;AAEA,MAAMqiC,cAAc1oC,CAAAA,KAAAA,OAASzB,wKAASyB,EAAAA,KAAAA,CAAAA,IACjCvB,OAAOK,mBAAmB,CAACkB,KAAOskC,CAAAA,CAAAA,IAAI,CAAC,CAACvlC,GAAAA,OAAQopC,yKAAWnoC,EAAAA,KAAK,CAACjB,GAAI,CAAA,CAAA,CAAA,CAAA;AAE1E,SAASmpC,WAAYlZ,CAAAA,KAAK,EAAEphB,KAAK,EAAE;IACjC,MAAM,EAAC+6B,YAAY,EAAEC,WAAW,EAAC,OAAGjF,yKAAa3U,EAAAA,KAAAA,CAAAA,CAAAA;IAEjD,KAAK,MAAM3yB,QAAQuR,KAAO,CAAA;QACxB,MAAMg3B,aAAa+D,YAAatsC,CAAAA,IAAAA,CAAAA,CAAAA;QAChC,MAAMwoC,YAAY+D,WAAYvsC,CAAAA,IAAAA,CAAAA,CAAAA;QAC9B,MAAM2D,KAAAA,GAAQ,CAAC6kC,SAAAA,IAAaD,UAAS,KAAM5V,KAAK,CAAC3yB,IAAK,CAAA,CAAA;QACtD,IAAKuoC,UAAeuD,IAAAA,KAAAA,yKAAWnoC,EAAAA,KAAAA,CAAAA,IAAU0oC,YAAY1oC,KAAK,CAAA,CAAA,IACpD6kC,SAAa5lC,QAAAA,wKAAAA,EAAQe,KAAS,CAAA,EAAA;YAClC,OAAO,IAAI,CAAA;SACZ;IACH,CAAA;IACA,OAAO,KAAK,CAAA;AACd;;AC9YA,MAAM6oC,eAAkB,GAAA;IAAC,KAAA;IAAO,QAAA;IAAU,MAAA;IAAQ,OAAA;IAAS,WAAA;CAAY,CAAA;AACvE,SAASC,oBAAqBvlB,CAAAA,QAAQ,EAAEtgB,IAAI,EAAE;IAC5C,OAAOsgB,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAaslB,IAAAA,eAAAA,CAAgB9yB,OAAO,CAACwN,QAAAA,CAAAA,KAAc,CAAC,CAAA,IAAKtgB,IAAS,KAAA,GAAA,CAAA;AAC9G,CAAA;AAEA,SAAS8lC,aAAcC,CAAAA,EAAE,EAAEC,EAAE,EAAE;IAC7B,OAAO,SAASp4B,CAAC,EAAErP,CAAC,EAAE;QACpB,OAAOqP,CAAC,CAACm4B,EAAG,CAAA,KAAKxnC,CAAC,CAACwnC,EAAAA,CAAG,GAClBn4B,CAAC,CAACo4B,EAAAA,CAAG,GAAGznC,CAAC,CAACynC,GAAG,GACbp4B,CAAC,CAACm4B,EAAG,CAAA,GAAGxnC,CAAC,CAACwnC,EAAG,CAAA,CAAA;IACnB,CAAA,CAAA;AACF,CAAA;AAEA,SAASE,oBAAAA,CAAqB/7B,OAAO,EAAE;IACrC,MAAMrV,KAAAA,GAAQqV,QAAQrV,KAAK,CAAA;IAC3B,MAAM0G,gBAAmB1G,GAAAA,KAAAA,CAAMwH,OAAO,CAACV,SAAS,CAAA;IAEhD9G,KAAAA,CAAM+/B,aAAa,CAAC,aAAA,CAAA,CAAA;QACpBiM,wKAAatlC,EAAAA,gBAAAA,IAAoBA,gBAAiB2qC,CAAAA,UAAU,EAAE;QAACh8B,OAAAA;KAAQ,EAAErV,KAAAA,CAAAA,CAAAA;AAC3E,CAAA;AAEA,SAASsxC,mBAAAA,CAAoBj8B,OAAO,EAAE;IACpC,MAAMrV,KAAAA,GAAQqV,QAAQrV,KAAK,CAAA;IAC3B,MAAM0G,gBAAmB1G,GAAAA,KAAAA,CAAMwH,OAAO,CAACV,SAAS,CAAA;QAChDklC,wKAAatlC,EAAAA,gBAAAA,IAAoBA,gBAAiB6qC,CAAAA,UAAU,EAAE;QAACl8B,OAAAA;KAAQ,EAAErV,KAAAA,CAAAA,CAAAA;AAC3E,CAAA;AAMA,SAASwxC,SAAU5vC,CAAAA,IAAI,EAAE;IACvB,QAAIi2B,wKAAAA,EAAAA,KAAqB,OAAOj2B,IAAAA,KAAS,QAAU,EAAA;QACjDA,IAAO+zB,GAAAA,QAAAA,CAAS8b,cAAc,CAAC7vC,IAAAA,CAAAA,CAAAA;IACjC,CAAA,MAAO,IAAIA,IAAAA,IAAQA,IAAKH,CAAAA,MAAM,EAAE;QAE9BG,IAAOA,GAAAA,IAAI,CAAC,CAAE,CAAA,CAAA;KACf;IAED,IAAIA,IAAAA,IAAQA,IAAK8wB,CAAAA,MAAM,EAAE;QAEvB9wB,IAAAA,GAAOA,KAAK8wB,MAAM,CAAA;KACnB;IACD,OAAO9wB,IAAAA,CAAAA;AACT,CAAA;AAEA,MAAM8vC,YAAY,CAAA,CAAC,CAAA;AACnB,MAAMC,QAAAA,GAAW,CAAC1qC,GAAQ,GAAA;IACxB,MAAMyrB,SAAS8e,SAAUvqC,CAAAA,GAAAA,CAAAA,CAAAA;IACzB,OAAON,MAAOW,CAAAA,MAAM,CAACoqC,SAAAA,CAAAA,CAAWjkC,MAAM,CAAC,CAACmkC,CAAAA,GAAMA,CAAElf,CAAAA,MAAM,KAAKA,MAAAA,CAAAA,CAAQ1wB,GAAG,EAAA,CAAA;AACxE,CAAA,CAAA;AAEA,SAAS6vC,gBAAgBh1B,GAAG,EAAE/b,KAAK,EAAE2W,IAAI,EAAE;IACzC,MAAM7Q,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACiW,GAAAA,CAAAA,CAAAA;IACzB,KAAK,MAAM5V,OAAOL,IAAM,CAAA;QACtB,MAAMkrC,SAAS,CAAC7qC,GAAAA,CAAAA;QAChB,IAAI6qC,UAAUhxC,KAAO,EAAA;YACnB,MAAMoH,KAAAA,GAAQ2U,GAAG,CAAC5V,GAAI,CAAA,CAAA;YACtB,OAAO4V,GAAG,CAAC5V,GAAI,CAAA,CAAA;YACf,IAAIwQ,IAAAA,GAAO,CAAKq6B,IAAAA,MAAAA,GAAShxC,KAAO,EAAA;gBAC9B+b,GAAG,CAACi1B,MAASr6B,GAAAA,IAAAA,CAAK,GAAGvP,KAAAA,CAAAA;aACtB;SACF;IACH,CAAA;AACF,CAAA;AASA,SAAS6pC,mBAAmB/tB,CAAC,EAAEguB,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;IAC9D,IAAI,CAACD,WAAAA,IAAejuB,CAAE7jB,CAAAA,IAAI,KAAK,UAAY,EAAA;QACzC,OAAO,IAAI,CAAA;KACZ;IACD,IAAI+xC,OAAS,EAAA;QACX,OAAOF,SAAAA,CAAAA;KACR;IACD,OAAOhuB,CAAAA,CAAAA;AACT,CAAA;AAEA,MAAMmuB,KAAAA,CAAAA;IAEJ,OAAOtrC,WAAWA,wKAAS,CAAA;IAC3B,OAAO6qC,YAAYA,SAAU,CAAA;IAC7B,OAAOn1B,YAAYA,yKAAU,CAAA;IAC7B,OAAOkN,WAAWA,QAAS,CAAA;IAC3B,OAAO2oB,UAAUA,OAAQ,CAAA;IACzB,OAAOT,WAAWA,QAAS,CAAA;IAE3B,OAAOjJ,QAAAA,CAAS,GAAGlnC,KAAK,EAAE;QACxBioB,QAAAA,CAAS9mB,GAAG,CAAInB,GAAAA,KAAAA,CAAAA,CAAAA;QAChB6wC,iBAAAA,EAAAA,CAAAA;IACF,CAAA;IAEA,OAAOrJ,UAAAA,CAAW,GAAGxnC,KAAK,EAAE;QAC1BioB,QAAAA,CAASrmB,MAAM,CAAI5B,GAAAA,KAAAA,CAAAA,CAAAA;QACnB6wC,iBAAAA,EAAAA,CAAAA;IACF,CAAA;IAGA7yC,WAAYoC,CAAAA,IAAI,EAAE0wC,UAAU,CAAE;QAC5B,MAAMjsC,SAAS,IAAI,CAACA,MAAM,GAAG,IAAI8oC,MAAOmD,CAAAA,UAAAA,CAAAA,CAAAA;QACxC,MAAMC,gBAAgBf,SAAU5vC,CAAAA,IAAAA,CAAAA,CAAAA;QAChC,MAAM4wC,gBAAgBb,QAASY,CAAAA,aAAAA,CAAAA,CAAAA;QAC/B,IAAIC,aAAe,EAAA;YACjB,MAAM,IAAI5oB,KAAAA,CACR,4CAA+C4oB,GAAAA,aAAAA,CAAc5mC,EAAE,GAAG,IACtE,GAAA,iDAAA,GAAoD4mC,aAAc9f,CAAAA,MAAM,CAAC9mB,EAAE,GAAG,mBAC1E,CAAA,CAAA;SACH;QAED,MAAMpE,OAAAA,GAAUnB,OAAOqM,cAAc,CAACrM,OAAO2pC,iBAAiB,EAAA,EAAI,IAAI,CAACr9B,UAAU,EAAA,CAAA,CAAA;QAEjF,IAAI,CAAC48B,QAAQ,GAAG,IAAA,CAAKlpC,MAAOkpC,CAAAA,QAAQ,IAAI3X,eAAAA,CAAgB2a,aAAa,CAAA,GAAA,CAAA;QACrE,IAAI,CAAChD,QAAQ,CAACrc,YAAY,CAAC7sB,MAAAA,CAAAA,CAAAA;QAE3B,MAAMgP,OAAAA,GAAU,IAAI,CAACk6B,QAAQ,CAAC9c,cAAc,CAAC8f,aAAe/qC,EAAAA,OAAAA,CAAQ+a,WAAW,CAAA,CAAA;QAC/E,MAAMmQ,MAAAA,GAASrd,OAAWA,IAAAA,OAAAA,CAAQqd,MAAM,CAAA;QACxC,MAAMnV,MAAAA,GAASmV,MAAUA,IAAAA,MAAAA,CAAOnV,MAAM,CAAA;QACtC,MAAMC,KAAAA,GAAQkV,MAAUA,IAAAA,MAAAA,CAAOlV,KAAK,CAAA;QAEpC,IAAI,CAAC5R,EAAE,OAAG6mC,yKAAAA,EAAAA,CAAAA;QACV,IAAI,CAACxjC,GAAG,GAAGoG,OAAAA,CAAAA;QACX,IAAI,CAACqd,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAAClV,KAAK,GAAGA,KAAAA,CAAAA;QACb,IAAI,CAACD,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACm1B,QAAQ,GAAGlrC,OAAAA,CAAAA;QAIhB,IAAI,CAACmrC,YAAY,GAAG,IAAI,CAACpwB,WAAW,CAAA;QACpC,IAAI,CAACsP,OAAO,GAAG,EAAE,CAAA;QACjB,IAAI,CAAC+gB,SAAS,GAAG,EAAE,CAAA;QACnB,IAAI,CAAC7lC,OAAO,GAAGjN,SAAAA,CAAAA;QACf,IAAI,CAACwuB,KAAK,GAAG,EAAE,CAAA;QACf,IAAI,CAAC+H,uBAAuB,GAAGv2B,SAAAA,CAAAA;QAC/B,IAAI,CAACkV,SAAS,GAAGlV,SAAAA,CAAAA;QACjB,IAAI,CAAC+B,OAAO,GAAG,EAAE,CAAA;QACjB,IAAI,CAACgxC,UAAU,GAAG/yC,SAAAA,CAAAA;QAClB,IAAI,CAACgzC,UAAU,GAAG,CAAA,CAAC,CAAA;QAEnB,IAAI,CAACC,oBAAoB,GAAGjzC,SAAAA,CAAAA;QAC5B,IAAI,CAACkzC,eAAe,GAAG,EAAE,CAAA;QACzB,IAAI,CAACxlC,MAAM,GAAG,CAAA,CAAC,CAAA;QACf,IAAI,CAACylC,QAAQ,GAAG,IAAIzH,aAAAA,EAAAA,CAAAA;QACpB,IAAI,CAACjU,QAAQ,GAAG,CAAA,CAAC,CAAA;QACjB,IAAI,CAAC2b,cAAc,GAAG,CAAA,CAAC,CAAA;QACvB,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAA;QACrB,IAAI,CAAC38B,mBAAmB,GAAG1W,SAAAA,CAAAA;QAC3B,IAAI,CAAC+P,QAAQ,GAAG/P,SAAAA,CAAAA;QAChB,IAAI,CAACszC,SAAS,OAAGC,yKAAAA,EAAS9oC,CAAAA,IAAAA,GAAQ,IAAI,CAAC7E,MAAM,CAAC6E,IAAO/C,CAAAA,EAAAA,OAAAA,CAAQ8rC,WAAW,IAAI,CAAA,CAAA,CAAA;QAC5E,IAAI,CAACt7B,YAAY,GAAG,EAAE,CAAA;QAGtB05B,SAAS,CAAC,IAAI,CAAC9lC,EAAE,CAAC,GAAG,IAAI,CAAA;QAEzB,IAAI,CAACyJ,OAAW,IAAA,CAACqd,MAAQ,EAAA;YAKvBtiB,OAAAA,CAAQg+B,KAAK,CAAC,mEAAA,CAAA,CAAA;YACd,OAAA;SACD;QAED/lC,QAAAA,CAAS9F,MAAM,CAAC,IAAI,EAAE,UAAY6uC,EAAAA,oBAAAA,CAAAA,CAAAA;QAClC/oC,QAAAA,CAAS9F,MAAM,CAAC,IAAI,EAAE,UAAY+uC,EAAAA,mBAAAA,CAAAA,CAAAA;QAElC,IAAI,CAACiC,WAAW,EAAA,CAAA;QAChB,IAAI,IAAI,CAACJ,QAAQ,EAAE;YACjB,IAAI,CAACztC,MAAM,EAAA,CAAA;SACZ;IACH,CAAA;IAEA,IAAI6c,WAAc,GAAA;QAChB,MAAM,EAAC/a,OAAS,EAAA,EAAC+a,WAAW,EAAEixB,mBAAAA,EAAoB,EAAEh2B,KAAAA,EAAOD,MAAM,EAAEo1B,YAAY,EAAC,GAAG,IAAI,CAAA;QACvF,IAAI,KAAC74B,wKAAAA,EAAcyI,WAAc,CAAA,EAAA;YAE/B,OAAOA,WAAAA,CAAAA;SACR;QAED,IAAIixB,uBAAuBb,YAAc,EAAA;YAEvC,OAAOA,YAAAA,CAAAA;SACR;QAGD,OAAOp1B,MAAAA,GAASC,KAAQD,GAAAA,MAAAA,GAAS,IAAI,CAAA;IACvC,CAAA;IAEA,IAAIzS,IAAO,GAAA;QACT,OAAO,IAAI,CAACzE,MAAM,CAACyE,IAAI,CAAA;IACzB,CAAA;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;QACb,IAAI,CAACzE,MAAM,CAACyE,IAAI,GAAGA,IAAAA,CAAAA;IACrB,CAAA;IAEA,IAAItD,OAAU,GAAA;QACZ,OAAO,IAAI,CAACkrC,QAAQ,CAAA;IACtB,CAAA;IAEA,IAAIlrC,OAAAA,CAAQA,OAAO,EAAE;QACnB,IAAI,CAACnB,MAAM,CAACmB,OAAO,GAAGA,OAAAA,CAAAA;IACxB,CAAA;IAEA,IAAIiiB,QAAW,GAAA;QACb,OAAOA,QAAAA,CAAAA;IACT,CAAA;IAKA8pB,WAAc,GAAA;QAEZ,IAAI,CAACxT,aAAa,CAAC,YAAA,CAAA,CAAA;QAEnB,IAAI,IAAI,CAACv4B,OAAO,CAACisC,UAAU,EAAE;YAC3B,IAAI,CAACrd,MAAM,EAAA,CAAA;SACN,MAAA;gBACLsd,yKAAAA,EAAY,IAAI,EAAE,IAAI,CAAClsC,OAAO,CAAC2uB,gBAAgB,CAAA,CAAA;SAChD;QAED,IAAI,CAACwd,UAAU,EAAA,CAAA;QAGf,IAAI,CAAC5T,aAAa,CAAC,WAAA,CAAA,CAAA;QAEnB,OAAO,IAAI,CAAA;IACb,CAAA;IAEA0P,KAAQ,GAAA;YACNmE,yKAAAA,EAAY,IAAI,CAAClhB,MAAM,EAAE,IAAI,CAACzjB,GAAG,CAAA,CAAA;QACjC,OAAO,IAAI,CAAA;IACb,CAAA;IAEA/L,IAAO,GAAA;QACLmF,QAASnF,CAAAA,IAAI,CAAC,IAAI,CAAA,CAAA;QAClB,OAAO,IAAI,CAAA;IACb,CAAA;IAOAkzB,MAAO5Y,CAAAA,KAAK,EAAED,MAAM,EAAE;QACpB,IAAI,CAAClV,QAAAA,CAAS9G,OAAO,CAAC,IAAI,CAAG,EAAA;YAC3B,IAAI,CAACsyC,OAAO,CAACr2B,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;SACf,MAAA;YACL,IAAI,CAACu2B,iBAAiB,GAAG;gBAACt2B,KAAAA;gBAAOD,MAAAA;YAAM,CAAA,CAAA;SACxC;IACH,CAAA;IAEAs2B,OAAQr2B,CAAAA,KAAK,EAAED,MAAM,EAAE;QACrB,MAAM/V,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMkrB,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,MAAMnQ,cAAc/a,OAAQgsC,CAAAA,mBAAmB,IAAI,IAAI,CAACjxB,WAAW,CAAA;QACnE,MAAMwxB,OAAAA,GAAU,IAAI,CAACxE,QAAQ,CAACvc,cAAc,CAACN,MAAQlV,EAAAA,KAAAA,EAAOD,MAAQgF,EAAAA,WAAAA,CAAAA,CAAAA;QACpE,MAAMyxB,QAAAA,GAAWxsC,QAAQ2uB,gBAAgB,IAAI,IAAI,CAACoZ,QAAQ,CAACxc,mBAAmB,EAAA,CAAA;QAC9E,MAAMxoB,OAAO,IAAI,CAACiT,KAAK,GAAG,WAAW,QAAQ,CAAA;QAE7C,IAAI,CAACA,KAAK,GAAGu2B,OAAAA,CAAQv2B,KAAK,CAAA;QAC1B,IAAI,CAACD,MAAM,GAAGw2B,OAAAA,CAAQx2B,MAAM,CAAA;QAC5B,IAAI,CAACo1B,YAAY,GAAG,IAAI,CAACpwB,WAAW,CAAA;QACpC,IAAI,KAACmxB,yKAAY,EAAA,IAAI,EAAEM,QAAAA,EAAU,IAAI,CAAG,EAAA;YACtC,OAAA;SACD;QAED,IAAI,CAACjU,aAAa,CAAC,QAAU,EAAA;YAAC53B,IAAM4rC,EAAAA,OAAAA;QAAO,CAAA,CAAA,CAAA;YAE3C/H,wKAAaxkC,EAAAA,OAAAA,CAAQysC,QAAQ,EAAE;YAAC,IAAI;YAAEF,OAAAA;SAAQ,EAAE,IAAI,CAAA,CAAA;QAEpD,IAAI,IAAI,CAACZ,QAAQ,EAAE;YACjB,IAAI,IAAI,CAACC,SAAS,CAAC7oC,IAAO,CAAA,EAAA;gBAExB,IAAI,CAAC2pC,MAAM,EAAA,CAAA;aACZ;SACF;IACH,CAAA;IAEAC,mBAAsB,GAAA;QACpB,MAAM3sC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM4sC,aAAgB5sC,GAAAA,OAAAA,CAAQgG,MAAM,IAAI,CAAA,CAAC,CAAA;YAEzC6kB,wKAAK+hB,EAAAA,aAAAA,EAAe,CAACC,WAAAA,EAAa50B,MAAW,GAAA;YAC3C40B,WAAAA,CAAYzoC,EAAE,GAAG6T,MAAAA,CAAAA;QACnB,CAAA,CAAA,CAAA;IACF,CAAA;IAKA60B,mBAAsB,GAAA;QACpB,MAAM9sC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM+sC,SAAAA,GAAY/sC,QAAQgG,MAAM,CAAA;QAChC,MAAMA,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,MAAMgnC,OAAAA,GAAU7tC,OAAOC,IAAI,CAAC4G,QAAQ3K,MAAM,CAAC,CAACga,GAAAA,EAAKjR,EAAO,GAAA;YACtDiR,GAAG,CAACjR,EAAG,CAAA,GAAG,KAAK,CAAA;YACf,OAAOiR,GAAAA,CAAAA;QACT,CAAA,EAAG,CAAA,CAAC,CAAA,CAAA;QACJ,IAAIrb,QAAQ,EAAE,CAAA;QAEd,IAAI+yC,SAAW,EAAA;YACb/yC,KAAQA,GAAAA,KAAAA,CAAMoX,MAAM,CAClBjS,MAAOC,CAAAA,IAAI,CAAC2tC,SAAWxxB,CAAAA,CAAAA,GAAG,CAAC,CAACnX,EAAO,GAAA;gBACjC,MAAM6hC,YAAAA,GAAe8G,SAAS,CAAC3oC,EAAG,CAAA,CAAA;gBAClC,MAAMT,IAAAA,GAAOqiC,cAAc5hC,EAAI6hC,EAAAA,YAAAA,CAAAA,CAAAA;gBAC/B,MAAMgH,WAAWtpC,IAAS,KAAA,GAAA,CAAA;gBAC1B,MAAMgQ,eAAehQ,IAAS,KAAA,GAAA,CAAA;gBAC9B,OAAO;oBACL3D,OAASimC,EAAAA,YAAAA;oBACTiH,SAAAA,EAAWD,QAAW,GAAA,WAAA,GAAct5B,YAAe,GAAA,QAAA,GAAW,MAAM;oBACpEw5B,KAAAA,EAAOF,QAAW,GAAA,cAAA,GAAiBt5B,YAAe,GAAA,UAAA,GAAa,QAAQ;gBACzE,CAAA,CAAA;YACF,CAAA,CAAA,CAAA,CAAA;SAEH;YAEDkX,wKAAK7wB,EAAAA,KAAAA,EAAO,CAACI,IAAS,GAAA;YACpB,MAAM6rC,YAAAA,GAAe7rC,KAAK4F,OAAO,CAAA;YACjC,MAAMoE,EAAAA,GAAK6hC,aAAa7hC,EAAE,CAAA;YAC1B,MAAMT,IAAAA,GAAOqiC,cAAc5hC,EAAI6hC,EAAAA,YAAAA,CAAAA,CAAAA;YAC/B,MAAMmH,gBAAYjkC,wKAAe88B,EAAAA,YAAAA,CAAattC,IAAI,EAAEyB,KAAK+yC,KAAK,CAAA,CAAA;YAE9D,IAAIlH,YAAahiB,CAAAA,QAAQ,KAAK3rB,SAAAA,IAAakxC,oBAAqBvD,CAAAA,YAAAA,CAAahiB,QAAQ,EAAEtgB,IAAU6lC,CAAAA,KAAAA,oBAAAA,CAAqBpvC,IAAK8yC,CAAAA,SAAS,CAAG,EAAA;gBACrIjH,YAAahiB,CAAAA,QAAQ,GAAG7pB,IAAAA,CAAK8yC,SAAS,CAAA;aACvC;YAEDF,OAAO,CAAC5oC,EAAG,CAAA,GAAG,IAAI,CAAA;YAClB,IAAInD,QAAQ,IAAI,CAAA;YAChB,IAAImD,EAAAA,IAAM4B,UAAUA,MAAM,CAAC5B,GAAG,CAACzL,IAAI,KAAKy0C,SAAW,EAAA;gBACjDnsC,KAAQ+E,GAAAA,MAAM,CAAC5B,EAAG,CAAA,CAAA;aACb,MAAA;gBACL,MAAMipC,UAAAA,GAAaprB,QAASihB,CAAAA,QAAQ,CAACkK,SAAAA,CAAAA,CAAAA;gBACrCnsC,KAAAA,GAAQ,IAAIosC,UAAW,CAAA;oBACrBjpC,EAAAA;oBACAzL,IAAMy0C,EAAAA,SAAAA;oBACN3lC,GAAK,EAAA,IAAI,CAACA,GAAG;oBACbjP,KAAAA,EAAO,IAAI;gBACb,CAAA,CAAA,CAAA;gBACAwN,MAAM,CAAC/E,KAAAA,CAAMmD,EAAE,CAAC,GAAGnD,KAAAA,CAAAA;aACpB;YAEDA,KAAMwhB,CAAAA,IAAI,CAACwjB,YAAcjmC,EAAAA,OAAAA,CAAAA,CAAAA;QAC3B,CAAA,CAAA,CAAA;YAEA6qB,wKAAKmiB,EAAAA,OAAAA,EAAS,CAACM,UAAAA,EAAYlpC,EAAO,GAAA;YAChC,IAAI,CAACkpC,UAAY,EAAA;gBACf,OAAOtnC,MAAM,CAAC5B,EAAG,CAAA,CAAA;aAClB;QACH,CAAA,CAAA,CAAA;YAEAymB,wKAAK7kB,EAAAA,MAAAA,EAAQ,CAAC/E,KAAU,GAAA;YACtBimB,OAAAA,CAAQloB,SAAS,CAAC,IAAI,EAAEiC,KAAAA,EAAOA,MAAMjB,OAAO,CAAA,CAAA;YAC5CknB,OAAQkD,CAAAA,MAAM,CAAC,IAAI,EAAEnpB,KAAAA,CAAAA,CAAAA;QACvB,CAAA,CAAA,CAAA;IACF,CAAA;IAKAssC,eAAkB,GAAA;QAChB,MAAMhrC,QAAAA,GAAW,IAAI,CAAC6oC,SAAS,CAAA;QAC/B,MAAMt7B,UAAU,IAAI,CAACxM,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,CAAA;QACzC,MAAM4V,OAAAA,GAAUtN,SAAStI,MAAM,CAAA;QAE/BsI,QAAS+O,CAAAA,IAAI,CAAC,CAACC,CAAAA,EAAGrP,IAAMqP,CAAE7O,CAAAA,KAAK,GAAGR,CAAAA,CAAEQ,KAAK,CAAA,CAAA;QACzC,IAAImN,UAAUC,OAAS,EAAA;YACrB,IAAK,IAAI5V,CAAI4V,GAAAA,OAAAA,EAAS5V,CAAI2V,GAAAA,OAAAA,EAAS,EAAE3V,CAAG,CAAA;gBACtC,IAAI,CAACszC,mBAAmB,CAACtzC,CAAAA,CAAAA,CAAAA;YAC3B,CAAA;YACAqI,QAAS8N,CAAAA,MAAM,CAACP,OAAAA,EAASD,OAAUC,GAAAA,OAAAA,CAAAA,CAAAA;SACpC;QACD,IAAI,CAAC07B,eAAe,GAAGjpC,QAASkhB,CAAAA,KAAK,CAAC,CAAGnS,CAAAA,CAAAA,IAAI,CAACm4B,aAAAA,CAAc,OAAS,EAAA,OAAA,CAAA,CAAA,CAAA;IACvE,CAAA;IAKAgE,2BAA8B,GAAA;QAC5B,MAAM,EAACrC,SAAW7oC,EAAAA,QAAAA,EAAUe,IAAAA,EAAM,EAACyG,QAAAA,EAAS,EAAC,GAAG,IAAI,CAAA;QACpD,IAAIxH,QAAStI,CAAAA,MAAM,GAAG8P,QAAAA,CAAS9P,MAAM,EAAE;YACrC,OAAO,IAAI,CAACsL,OAAO,CAAA;SACpB;QACDhD,QAAAA,CAASvJ,OAAO,CAAC,CAACuK,IAAAA,EAAMb,KAAU,GAAA;YAChC,IAAIqH,QAAAA,CAAS9D,MAAM,CAACxE,CAAAA,CAAAA,GAAKA,CAAM8B,KAAAA,IAAAA,CAAK8b,QAAQ,CAAA,CAAEplB,MAAM,KAAK,CAAG,EAAA;gBAC1D,IAAI,CAACuzC,mBAAmB,CAAC9qC,KAAAA,CAAAA,CAAAA;aAC1B;QACH,CAAA,CAAA,CAAA;IACF,CAAA;IAEAgrC,wBAA2B,GAAA;QACzB,MAAMC,iBAAiB,EAAE,CAAA;QACzB,MAAM5jC,QAAW,GAAA,IAAI,CAACzG,IAAI,CAACyG,QAAQ,CAAA;QACnC,IAAI7P,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAI,CAACgrC,2BAA2B,EAAA,CAAA;QAEhC,IAAKvzC,CAAAA,GAAI,GAAGuI,IAAOsH,GAAAA,QAAAA,CAAS9P,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;YACjD,MAAMoM,OAAAA,GAAUyD,QAAQ,CAAC7P,CAAE,CAAA,CAAA;YAC3B,IAAIqJ,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAC9P,CAAAA,CAAAA,CAAAA;YAC/B,MAAMvB,IAAAA,GAAO2N,QAAQ3N,IAAI,IAAI,IAAI,CAACkG,MAAM,CAAClG,IAAI,CAAA;YAE7C,IAAI4K,KAAK5K,IAAI,IAAI4K,IAAK5K,CAAAA,IAAI,KAAKA,IAAM,EAAA;gBACnC,IAAI,CAAC60C,mBAAmB,CAACtzC,CAAAA,CAAAA,CAAAA;gBACzBqJ,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAC9P,CAAAA,CAAAA,CAAAA;aAC5B;YACDqJ,IAAAA,CAAK5K,IAAI,GAAGA,IAAAA,CAAAA;YACZ4K,IAAKiG,CAAAA,SAAS,GAAGlD,OAAQkD,CAAAA,SAAS,IAAIi8B,YAAa9sC,CAAAA,IAAAA,EAAM,IAAI,CAACqH,OAAO,CAAA,CAAA;YACrEuD,IAAAA,CAAKqqC,KAAK,GAAGtnC,OAAQsnC,CAAAA,KAAK,IAAI,CAAA,CAAA;YAC9BrqC,IAAAA,CAAKb,KAAK,GAAGxI,CAAAA,CAAAA;YACbqJ,IAAAA,CAAK2J,KAAK,GAAG,EAAK5G,GAAAA,OAAAA,CAAQ4G,KAAK,CAAA;YAC/B3J,IAAAA,CAAKsqC,OAAO,GAAG,IAAI,CAAC3wB,gBAAgB,CAAChjB,CAAAA,CAAAA,CAAAA;YAErC,IAAIqJ,IAAAA,CAAK6B,UAAU,EAAE;gBACnB7B,IAAK6B,CAAAA,UAAU,CAAC0D,WAAW,CAAC5O,CAAAA,CAAAA,CAAAA;gBAC5BqJ,IAAK6B,CAAAA,UAAU,CAACoD,UAAU,EAAA,CAAA;aACrB,MAAA;gBACL,MAAMslC,eAAAA,GAAkB7rB,QAAS8gB,CAAAA,aAAa,CAACpqC,IAAAA,CAAAA,CAAAA;gBAC/C,MAAM,EAAC2O,kBAAAA,EAAoBC,eAAAA,EAAgB,GAAGlI,wKAAAA,CAAS0K,QAAQ,CAACpR,IAAK,CAAA,CAAA;gBACrEwG,MAAOyB,CAAAA,MAAM,CAACktC,eAAiB,EAAA;oBAC7BvmC,eAAiB0a,EAAAA,QAAAA,CAASC,UAAU,CAAC3a,eAAAA,CAAAA;oBACrCD,kBAAoBA,EAAAA,kBAAAA,IAAsB2a,QAASC,CAAAA,UAAU,CAAC5a,kBAAAA,CAAAA;gBAChE,CAAA,CAAA,CAAA;gBACA/D,IAAAA,CAAK6B,UAAU,GAAG,IAAI0oC,eAAAA,CAAgB,IAAI,EAAE5zC,CAAAA,CAAAA,CAAAA;gBAC5CyzC,cAAezyC,CAAAA,IAAI,CAACqI,IAAAA,CAAK6B,UAAU,CAAA,CAAA;aACpC;QACH,CAAA;QAEA,IAAI,CAACmoC,eAAe,EAAA,CAAA;QACpB,OAAOI,cAAAA,CAAAA;IACT,CAAA;IAMAI,cAAiB,GAAA;YACfljB,wKAAK,EAAA,IAAI,CAACvnB,IAAI,CAACyG,QAAQ,EAAE,CAACzD,SAAStD,YAAiB,GAAA;YAClD,IAAI,CAACgH,cAAc,CAAChH,YAAcoC,CAAAA,CAAAA,UAAU,CAAC+E,KAAK,EAAA,CAAA;QACpD,CAAA,EAAG,IAAI,CAAA,CAAA;IACT,CAAA;IAKAA,KAAQ,GAAA;QACN,IAAI,CAAC4jC,cAAc,EAAA,CAAA;QACnB,IAAI,CAACxV,aAAa,CAAC,OAAA,CAAA,CAAA;IACrB,CAAA;IAEAr6B,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMlE,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAE1BA,MAAAA,CAAOX,MAAM,EAAA,CAAA;QACb,MAAM8B,OAAU,GAAA,IAAI,CAACkrC,QAAQ,GAAGrsC,MAAAA,CAAOqM,cAAc,CAACrM,MAAO2pC,CAAAA,iBAAiB,EAAI,EAAA,IAAI,CAACr9B,UAAU,EAAA,CAAA,CAAA;QACjG,MAAM6iC,gBAAgB,IAAI,CAACh/B,mBAAmB,GAAG,CAAChP,QAAQV,SAAS,CAAA;QAEnE,IAAI,CAAC2uC,aAAa,EAAA,CAAA;QAClB,IAAI,CAACC,mBAAmB,EAAA,CAAA;QACxB,IAAI,CAACC,oBAAoB,EAAA,CAAA;QAIzB,IAAI,CAAC1C,QAAQ,CAAC/G,UAAU,EAAA,CAAA;QAExB,IAAI,IAAI,CAACnM,aAAa,CAAC,cAAgB,EAAA;YAACx1B,IAAAA;YAAM0hC,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YAC1E,OAAA;SACD;QAGD,MAAMkJ,cAAAA,GAAiB,IAAI,CAACD,wBAAwB,EAAA,CAAA;QAEpD,IAAI,CAACnV,aAAa,CAAC,sBAAA,CAAA,CAAA;QAGnB,IAAI9N,UAAa,GAAA,CAAA,CAAA;QACjB,IAAK,IAAIvwB,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACa,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK,EAAA,CAAA;YAC/D,MAAM,EAACkL,UAAU,EAAC,GAAG,IAAI,CAAC4E,cAAc,CAAC9P,CAAAA,CAAAA,CAAAA;YACzC,MAAMiQ,QAAQ,CAAC6jC,aAAAA,IAAiBL,eAAel3B,OAAO,CAACrR,gBAAgB,CAAC,CAAA,CAAA;YAGxEA,UAAAA,CAAWqF,qBAAqB,CAACN,KAAAA,CAAAA,CAAAA;YACjCsgB,UAAAA,GAAarxB,KAAKoC,GAAG,CAAC,CAAC4J,UAAAA,CAAW4H,cAAc,EAAIyd,EAAAA,UAAAA,CAAAA,CAAAA;QACtD,CAAA;QACAA,UAAa,GAAA,IAAI,CAAC2jB,WAAW,GAAGpuC,OAAAA,CAAQ2nB,MAAM,CAAC0mB,WAAW,GAAG5jB,UAAAA,GAAa,CAAC,CAAA;QAC3E,IAAI,CAAC6jB,aAAa,CAAC7jB,UAAAA,CAAAA,CAAAA;QAGnB,IAAI,CAACujB,aAAe,EAAA;gBAGlBnjB,wKAAK8iB,EAAAA,cAAAA,EAAgB,CAACvoC,UAAe,GAAA;gBACnCA,UAAAA,CAAW+E,KAAK,EAAA,CAAA;YAClB,CAAA,CAAA,CAAA;SACD;QAED,IAAI,CAACokC,eAAe,CAACxrC,IAAAA,CAAAA,CAAAA;QAGrB,IAAI,CAACw1B,aAAa,CAAC,aAAe,EAAA;YAACx1B,IAAAA;QAAI,CAAA,CAAA,CAAA;QAEvC,IAAI,CAACsnB,OAAO,CAAC/Y,IAAI,CAACm4B,cAAc,GAAK,EAAA,MAAA,CAAA,CAAA,CAAA;QAGrC,MAAM,EAACpvC,OAAO,EAAEgxC,UAAU,EAAC,GAAG,IAAI,CAAA;QAClC,IAAIA,UAAY,EAAA;YACd,IAAI,CAACmD,aAAa,CAACnD,UAAAA,EAAY,IAAI,CAAA,CAAA;SAC9B,MAAA,IAAIhxC,OAAQJ,CAAAA,MAAM,EAAE;YACzB,IAAI,CAACw0C,kBAAkB,CAACp0C,OAAAA,EAASA,SAAS,IAAI,CAAA,CAAA;SAC/C;QAED,IAAI,CAACqyC,MAAM,EAAA,CAAA;IACb,CAAA;IAKAuB,aAAgB,GAAA;YACdpjB,wKAAAA,EAAK,IAAI,CAAC7kB,MAAM,EAAE,CAAC/E,KAAU,GAAA;YAC3BimB,OAAQqD,CAAAA,SAAS,CAAC,IAAI,EAAEtpB,KAAAA,CAAAA,CAAAA;QAC1B,CAAA,CAAA,CAAA;QAEA,IAAI,CAAC0rC,mBAAmB,EAAA,CAAA;QACxB,IAAI,CAACG,mBAAmB,EAAA,CAAA;IAC1B,CAAA;IAKAoB,mBAAsB,GAAA;QACpB,MAAMluC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM0uC,cAAAA,GAAiB,IAAInH,GAAIpoC,CAAAA,MAAAA,CAAOC,IAAI,CAAC,IAAI,CAACksC,UAAU,CAAA,CAAA,CAAA;QAC1D,MAAMqD,SAAY,GAAA,IAAIpH,GAAIvnC,CAAAA,OAAAA,CAAQ4uC,MAAM,CAAA,CAAA;QAExC,IAAI,KAACC,yKAAAA,EAAUH,cAAgBC,EAAAA,SAAAA,CAAAA,IAAc,CAAC,CAAC,IAAI,CAACpD,oBAAoB,KAAKvrC,OAAQisC,CAAAA,UAAU,EAAE;YAE/F,IAAI,CAAC6C,YAAY,EAAA,CAAA;YACjB,IAAI,CAAC3C,UAAU,EAAA,CAAA;SAChB;IACH,CAAA;IAKAgC,oBAAuB,GAAA;QACrB,MAAM,EAACzC,cAAAA,EAAe,GAAG,IAAI,CAAA;QAC7B,MAAMqD,OAAU,GAAA,IAAI,CAACC,sBAAsB,MAAM,EAAE,CAAA;QACnD,KAAK,MAAM,EAACrwC,MAAM,EAAErF,KAAAA,EAAOgS,KAAAA,EAAM,IAAIyjC,OAAS,CAAA;YAC5C,MAAM9+B,IAAOtR,GAAAA,MAAAA,KAAW,iBAAoB,GAAA,CAAC2M,QAAQA,KAAK,CAAA;YAC1D++B,eAAAA,CAAgBqB,gBAAgBpyC,KAAO2W,EAAAA,IAAAA,CAAAA,CAAAA;QACzC,CAAA;IACF,CAAA;IAKA++B,sBAAyB,GAAA;QACvB,MAAMx+B,YAAAA,GAAe,IAAI,CAACA,YAAY,CAAA;QACtC,IAAI,CAACA,YAAAA,IAAgB,CAACA,YAAAA,CAAavW,MAAM,EAAE;YACzC,OAAA;SACD;QAED,IAAI,CAACuW,YAAY,GAAG,EAAE,CAAA;QACtB,MAAMy+B,eAAe,IAAI,CAAC3rC,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,CAAA;QAC9C,MAAMi1C,OAAAA,GAAU,CAAC1T,GAAAA,GAAQ,IAAI+L,GAAAA,CAC3B/2B,YACGvK,CAAAA,MAAM,CAACmkC,CAAAA,CAAKA,GAAAA,CAAC,CAAC,CAAA,CAAE,KAAK5O,GAAAA,CAAAA,CACrBjgB,GAAG,CAAC,CAAC6uB,CAAAA,EAAGlwC,CAAMA,GAAAA,CAAAA,GAAI,GAAMkwC,GAAAA,CAAAA,CAAE/5B,MAAM,CAAC,CAAG8xB,CAAAA,CAAAA,IAAI,CAAC,GAAA,CAAA,CAAA,CAAA,CAAA;QAG9C,MAAMgN,YAAYD,OAAQ,CAAA,CAAA,CAAA,CAAA;QAC1B,IAAK,IAAIh1C,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI+0C,cAAc/0C,CAAK,EAAA,CAAA;YACrC,IAAI,KAAC20C,yKAAAA,EAAUM,SAAWD,EAAAA,OAAAA,CAAQh1C,CAAK,CAAA,CAAA,EAAA;gBACrC,OAAA;aACD;QACH,CAAA;QACA,OAAO4J,MAAM7H,IAAI,CAACkzC,SACf5zB,CAAAA,CAAAA,GAAG,CAAC6uB,CAAAA,CAAAA,GAAKA,CAAEpI,CAAAA,KAAK,CAAC,GACjBzmB,CAAAA,CAAAA,CAAAA,GAAG,CAAChK,CAAAA,IAAAA,CAAM;gBAAC5S,MAAQ4S,EAAAA,CAAC,CAAC,CAAE,CAAA;gBAAEjY,KAAO,EAAA,CAACiY,CAAC,CAAC,CAAE,CAAA;gBAAEjG,KAAO,EAAA,CAACiG,CAAC,CAAC,CAAE,CAAA;aAAA,CAAA,CAAA,CAAA;IACxD,CAAA;IAOA+8B,aAAAA,CAAc7jB,UAAU,EAAE;QACxB,IAAI,IAAI,CAAC8N,aAAa,CAAC,cAAgB,EAAA;YAACkM,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YACpE,OAAA;SACD;QAEDvd,OAAQhpB,CAAAA,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC8X,KAAK,EAAE,IAAI,CAACD,MAAM,EAAE0U,UAAAA,CAAAA,CAAAA;QAE9C,MAAMld,IAAAA,GAAO,IAAI,CAACC,SAAS,CAAA;QAC3B,MAAM4hC,SAAS7hC,IAAKyI,CAAAA,KAAK,IAAI,CAAKzI,IAAAA,IAAAA,CAAKwI,MAAM,IAAI,CAAA,CAAA;QAEjD,IAAI,CAACsU,OAAO,GAAG,EAAE,CAAA;YACjBQ,wKAAAA,EAAK,IAAI,CAAC/D,KAAK,EAAE,CAACJ,GAAQ,GAAA;YACxB,IAAI0oB,MAAU1oB,IAAAA,GAAAA,CAAIzC,QAAQ,KAAK,WAAa,EAAA;gBAE1C,OAAA;aACD;YAID,IAAIyC,GAAAA,CAAI1nB,SAAS,EAAE;gBACjB0nB,GAAAA,CAAI1nB,SAAS,EAAA,CAAA;aACd;YACD,IAAI,CAACqrB,OAAO,CAACnvB,IAAI,CAAA,GAAIwrB,IAAI2D,OAAO,EAAA,CAAA,CAAA;QAClC,CAAA,EAAG,IAAI,CAAA,CAAA;QAEP,IAAI,CAACA,OAAO,CAACrxB,OAAO,CAAC,CAACoB,MAAMsI,KAAU,GAAA;YACpCtI,IAAAA,CAAKi1C,IAAI,GAAG3sC,KAAAA,CAAAA;QACd,CAAA,CAAA,CAAA;QAEA,IAAI,CAAC61B,aAAa,CAAC,aAAA,CAAA,CAAA;IACrB,CAAA;IAOAgW,eAAAA,CAAgBxrC,IAAI,EAAE;QACpB,IAAI,IAAI,CAACw1B,aAAa,CAAC,sBAAwB,EAAA;YAACx1B,IAAAA;YAAM0hC,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YAClF,OAAA;SACD;QAED,IAAK,IAAIvqC,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACa,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YAC/D,IAAI,CAAC8P,cAAc,CAAC9P,CAAGkL,CAAAA,CAAAA,UAAU,CAACpG,SAAS,EAAA,CAAA;QAC7C,CAAA;QAEA,IAAK,IAAI9E,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACa,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YAC/D,IAAI,CAACo1C,cAAc,CAACp1C,CAAG2uC,MAAAA,yKAAAA,EAAW9lC,QAAQA,IAAK,CAAA;gBAACC,YAAc9I,EAAAA,CAAAA;YAAC,CAAA,CAAA,GAAK6I,IAAI,CAAA,CAAA;QAC1E,CAAA;QAEA,IAAI,CAACw1B,aAAa,CAAC,qBAAuB,EAAA;YAACx1B,IAAAA;QAAI,CAAA,CAAA,CAAA;IACjD,CAAA;IAOAusC,cAAe5sC,CAAAA,KAAK,EAAEK,IAAI,EAAE;QAC1B,MAAMQ,IAAO,GAAA,IAAI,CAACyG,cAAc,CAACtH,KAAAA,CAAAA,CAAAA;QACjC,MAAM6N,IAAO,GAAA;YAAChN,IAAAA;YAAMb,KAAAA;YAAOK,IAAAA;YAAM0hC,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA;QAEjD,IAAI,IAAI,CAAClM,aAAa,CAAC,qBAAuBhoB,EAAAA,IAAAA,CAAAA,KAAU,KAAK,EAAE;YAC7D,OAAA;SACD;QAEDhN,IAAK6B,CAAAA,UAAU,CAACzL,OAAO,CAACoJ,IAAAA,CAAAA,CAAAA;QAExBwN,IAAKk0B,CAAAA,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAAClM,aAAa,CAAC,oBAAsBhoB,EAAAA,IAAAA,CAAAA,CAAAA;IAC3C,CAAA;IAEAm8B,MAAS,GAAA;QACP,IAAI,IAAI,CAACnU,aAAa,CAAC,cAAgB,EAAA;YAACkM,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YACpE,OAAA;SACD;QAED,IAAI5jC,QAASzF,CAAAA,GAAG,CAAC,IAAI,CAAG,EAAA;YACtB,IAAI,IAAI,CAACuwC,QAAQ,IAAI,CAAC9qC,QAAS9G,CAAAA,OAAO,CAAC,IAAI,CAAG,EAAA;gBAC5C8G,QAASvH,CAAAA,KAAK,CAAC,IAAI,CAAA,CAAA;aACpB;SACI,MAAA;YACL,IAAI,CAACa,IAAI,EAAA,CAAA;YACTyvC,oBAAqB,CAAA;gBAACpxC,KAAAA,EAAO,IAAI;YAAA,CAAA,CAAA,CAAA;SAClC;IACH,CAAA;IAEA2B,IAAO,GAAA;QACL,IAAID,CAAAA,CAAAA;QACJ,IAAI,IAAI,CAACoyC,iBAAiB,EAAE;YAC1B,MAAM,EAACt2B,KAAAA,EAAOD,MAAAA,EAAO,GAAG,IAAI,CAACu2B,iBAAiB,CAAA;YAE9C,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAA;YAC7B,IAAI,CAACD,OAAO,CAACr2B,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;SACrB;QACD,IAAI,CAACkyB,KAAK,EAAA,CAAA;QAEV,IAAI,IAAI,CAACjyB,KAAK,IAAI,KAAK,IAAI,CAACD,MAAM,IAAI,CAAG,EAAA;YACvC,OAAA;SACD;QAED,IAAI,IAAI,CAACwiB,aAAa,CAAC,YAAc,EAAA;YAACkM,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YAClE,OAAA;SACD;QAKD,MAAM8K,MAAAA,GAAS,IAAI,CAACllB,OAAO,CAAA;QAC3B,IAAKnwB,CAAI,GAAA,CAAA,EAAGA,CAAIq1C,GAAAA,MAAAA,CAAOt1C,MAAM,IAAIs1C,MAAM,CAACr1C,CAAAA,CAAE,CAACowB,CAAC,IAAI,CAAA,EAAG,EAAEpwB,CAAG,CAAA;YACtDq1C,MAAM,CAACr1C,CAAE,CAAA,CAACC,IAAI,CAAC,IAAI,CAACqT,SAAS,CAAA,CAAA;QAC/B,CAAA;QAEA,IAAI,CAACgiC,aAAa,EAAA,CAAA;QAGlB,MAAOt1C,CAAIq1C,GAAAA,MAAAA,CAAOt1C,MAAM,EAAE,EAAEC,CAAG,CAAA;YAC7Bq1C,MAAM,CAACr1C,CAAE,CAAA,CAACC,IAAI,CAAC,IAAI,CAACqT,SAAS,CAAA,CAAA;QAC/B,CAAA;QAEA,IAAI,CAAC+qB,aAAa,CAAC,WAAA,CAAA,CAAA;IACrB,CAAA;IAKA/1B,sBAAAA,CAAuBF,aAAa,EAAE;QACpC,MAAMC,QAAAA,GAAW,IAAI,CAACipC,eAAe,CAAA;QACrC,MAAMjoB,SAAS,EAAE,CAAA;QACjB,IAAIrpB,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACjD,MAAMqJ,IAAAA,GAAOhB,QAAQ,CAACrI,CAAE,CAAA,CAAA;YACxB,IAAI,CAACoI,aAAAA,IAAiBiB,IAAKsqC,CAAAA,OAAO,EAAE;gBAClCtqB,MAAAA,CAAOroB,IAAI,CAACqI,IAAAA,CAAAA,CAAAA;aACb;QACH,CAAA;QAEA,OAAOggB,MAAAA,CAAAA;IACT,CAAA;IAMAY,4BAA+B,GAAA;QAC7B,OAAO,IAAI,CAAC3hB,sBAAsB,CAAC,IAAI,CAAA,CAAA;IACzC,CAAA;IAOAgtC,aAAgB,GAAA;QACd,IAAI,IAAI,CAACjX,aAAa,CAAC,oBAAsB,EAAA;YAACkM,UAAAA,EAAY,IAAI;QAAA,CAAA,CAAA,KAAO,KAAK,EAAE;YAC1E,OAAA;SACD;QAED,MAAMliC,QAAAA,GAAW,IAAI,CAAC4hB,4BAA4B,EAAA,CAAA;QAClD,IAAK,IAAIjqB,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;YAC7C,IAAI,CAACu1C,YAAY,CAACltC,QAAQ,CAACrI,CAAE,CAAA,CAAA,CAAA;QAC/B,CAAA;QAEA,IAAI,CAACq+B,aAAa,CAAC,mBAAA,CAAA,CAAA;IACrB,CAAA;IAOAkX,YAAAA,CAAalsC,IAAI,EAAE;QACjB,MAAMkE,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAM8I,IAAO,GAAA;YACXhN,IAAAA;YACAb,KAAAA,EAAOa,KAAKb,KAAK;YACjB+hC,UAAAA,EAAY,IAAI;QAClB,CAAA,CAAA;QAEA,MAAMp3B,IAAAA,OAAOqiC,yKAAmB,EAAA,IAAI,EAAEnsC,IAAAA,CAAAA,CAAAA;QAEtC,IAAI,IAAI,CAACg1B,aAAa,CAAC,mBAAqBhoB,EAAAA,IAAAA,CAAAA,KAAU,KAAK,EAAE;YAC3D,OAAA;SACD;QAED,IAAIlD,IAAM,EAAA;gBACR8yB,wKAAAA,EAAS14B,GAAK4F,EAAAA,IAAAA,CAAAA,CAAAA;SACf;QAED9J,IAAK6B,CAAAA,UAAU,CAACjL,IAAI,EAAA,CAAA;QAEpB,IAAIkT,IAAM,EAAA;gBACRizB,wKAAW74B,EAAAA,GAAAA,CAAAA,CAAAA;SACZ;QAED8I,IAAKk0B,CAAAA,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAAClM,aAAa,CAAC,kBAAoBhoB,EAAAA,IAAAA,CAAAA,CAAAA;IACzC,CAAA;IAOA0U,aAAAA,CAAczM,KAAK,EAAE;QACnB,WAAO2M,wKAAAA,EAAe3M,OAAO,IAAI,CAAChL,SAAS,EAAE,IAAI,CAAC4gC,WAAW,CAAA,CAAA;IAC/D,CAAA;IAEAuB,yBAAAA,CAA0BnzB,CAAC,EAAEzZ,IAAI,EAAE/C,OAAO,EAAE+kB,gBAAgB,EAAE;QAC5D,MAAMpmB,MAASixC,GAAAA,WAAAA,CAAY1pB,KAAK,CAACnjB,IAAK,CAAA,CAAA;QACtC,IAAI,OAAOpE,WAAW,UAAY,EAAA;YAChC,OAAOA,MAAO,CAAA,IAAI,EAAE6d,CAAAA,EAAGxc,OAAS+kB,EAAAA,gBAAAA,CAAAA,CAAAA;SACjC;QAED,OAAO,EAAE,CAAA;IACX,CAAA;IAEA/a,cAAAA,CAAehH,YAAY,EAAE;QAC3B,MAAMsD,UAAU,IAAI,CAAChD,IAAI,CAACyG,QAAQ,CAAC/G,YAAa,CAAA,CAAA;QAChD,MAAMT,QAAAA,GAAW,IAAI,CAAC6oC,SAAS,CAAA;QAC/B,IAAI7nC,IAAAA,GAAOhB,QAAS0D,CAAAA,MAAM,CAACxE,CAAAA,CAAKA,GAAAA,CAAAA,IAAKA,CAAE4d,CAAAA,QAAQ,KAAK/Y,OAAAA,CAAAA,CAAS9L,GAAG,EAAA,CAAA;QAEhE,IAAI,CAAC+I,IAAM,EAAA;YACTA,IAAO,GAAA;gBACL5K,IAAAA,EAAM,IAAI;gBACV2K,IAAAA,EAAM,EAAE;gBACRgD,OAAAA,EAAS,IAAI;gBACblB,UAAAA,EAAY,IAAI;gBAChB+B,MAAAA,EAAQ,IAAI;gBACZ+B,OAAAA,EAAS,IAAI;gBACbG,OAAAA,EAAS,IAAI;gBACbukC,KAAOtnC,EAAAA,OAAAA,IAAWA,OAAQsnC,CAAAA,KAAK,IAAI,CAAA;gBACnClrC,KAAOM,EAAAA,YAAAA;gBACPqc,QAAU/Y,EAAAA,OAAAA;gBACVM,OAAAA,EAAS,EAAE;gBACX4E,OAAAA,EAAS,KAAK;YAChB,CAAA,CAAA;YACAjJ,QAAAA,CAASrH,IAAI,CAACqI,IAAAA,CAAAA,CAAAA;SACf;QAED,OAAOA,IAAAA,CAAAA;IACT,CAAA;IAEA4H,UAAa,GAAA;QACX,OAAO,IAAI,CAAC9C,QAAQ,IAAA,CAAK,IAAI,CAACA,QAAQ,OAAGhC,wKAAc,EAAA,IAAI,EAAE;YAAC7N,KAAAA,EAAO,IAAI;YAAEG,IAAM,EAAA,OAAA;SAAQ,CAAA,CAAA,CAAA;IAC3F,CAAA;IAEAsoB,sBAAyB,GAAA;QACvB,OAAO,IAAI,CAACkD,4BAA4B,EAAA,CAAGlqB,MAAM,CAAA;IACnD,CAAA;IAEAijB,gBAAAA,CAAiBla,YAAY,EAAE;QAC7B,MAAMsD,UAAU,IAAI,CAAChD,IAAI,CAACyG,QAAQ,CAAC/G,YAAa,CAAA,CAAA;QAChD,IAAI,CAACsD,OAAS,EAAA;YACZ,OAAO,KAAK,CAAA;SACb;QAED,MAAM/C,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;QAIjC,OAAO,OAAOO,IAAK4D,CAAAA,MAAM,KAAK,SAAA,GAAY,CAAC5D,IAAAA,CAAK4D,MAAM,GAAG,CAACb,OAAAA,CAAQa,MAAM,CAAA;IAC1E,CAAA;IAEA0oC,oBAAqB7sC,CAAAA,YAAY,EAAE6qC,OAAO,EAAE;QAC1C,MAAMtqC,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;QACjCO,IAAK4D,CAAAA,MAAM,GAAG,CAAC0mC,OAAAA,CAAAA;IACjB,CAAA;IAEAnxB,oBAAAA,CAAqBha,KAAK,EAAE;QAC1B,IAAI,CAACgpC,cAAc,CAAChpC,KAAM,CAAA,GAAG,CAAC,IAAI,CAACgpC,cAAc,CAAChpC,KAAM,CAAA,CAAA;IAC1D,CAAA;IAEA6U,iBAAAA,CAAkB7U,KAAK,EAAE;QACvB,OAAO,CAAC,IAAI,CAACgpC,cAAc,CAAChpC,KAAM,CAAA,CAAA;IACpC,CAAA;IAKAotC,kBAAkB9sC,YAAY,EAAEyD,SAAS,EAAEonC,OAAO,EAAE;QAClD,MAAM9qC,IAAAA,GAAO8qC,OAAU,GAAA,MAAA,GAAS,MAAM,CAAA;QACtC,MAAMtqC,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;QACjC,MAAMvK,QAAQ8K,IAAK6B,CAAAA,UAAU,CAACqJ,kBAAkB,CAACnW,SAAWyK,EAAAA,IAAAA,CAAAA,CAAAA;QAE5D,QAAIoL,wKAAAA,EAAQ1H,SAAY,CAAA,EAAA;YACtBlD,IAAAA,CAAKD,IAAI,CAACmD,SAAAA,CAAU,CAACU,MAAM,GAAG,CAAC0mC,OAAAA,CAAAA;YAC/B,IAAI,CAAC3vC,MAAM,EAAA,CAAA;SACN,MAAA;YACL,IAAI,CAAC2xC,oBAAoB,CAAC7sC,YAAc6qC,EAAAA,OAAAA,CAAAA,CAAAA;YAExCp1C,KAAMyF,CAAAA,MAAM,CAACqF,IAAM,EAAA;gBAACsqC,OAAAA;YAAO,CAAA,CAAA,CAAA;YAC3B,IAAI,CAAC3vC,MAAM,CAAC,CAACuJ,GAAAA,GAAQA,IAAIzE,YAAY,KAAKA,YAAeD,GAAAA,IAAAA,GAAOzK,SAAS,CAAA,CAAA;SAC1E;IACH,CAAA;IAEAy3C,IAAK/sC,CAAAA,YAAY,EAAEyD,SAAS,EAAE;QAC5B,IAAI,CAACqpC,iBAAiB,CAAC9sC,YAAAA,EAAcyD,WAAW,KAAK,CAAA,CAAA;IACvD,CAAA;IAEAupC,IAAKhtC,CAAAA,YAAY,EAAEyD,SAAS,EAAE;QAC5B,IAAI,CAACqpC,iBAAiB,CAAC9sC,YAAAA,EAAcyD,WAAW,IAAI,CAAA,CAAA;IACtD,CAAA;IAKA+mC,mBAAAA,CAAoBxqC,YAAY,EAAE;QAChC,MAAMO,IAAO,GAAA,IAAI,CAAC6nC,SAAS,CAACpoC,YAAa,CAAA,CAAA;QACzC,IAAIO,IAAAA,IAAQA,IAAK6B,CAAAA,UAAU,EAAE;YAC3B7B,IAAK6B,CAAAA,UAAU,CAACgF,QAAQ,EAAA,CAAA;SACzB;QACD,OAAO,IAAI,CAACghC,SAAS,CAACpoC,YAAa,CAAA,CAAA;IACrC,CAAA;IAEAitC,KAAQ,GAAA;QACN,IAAI/1C,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,IAAI,CAAC/G,IAAI,EAAA,CAAA;QACTmF,QAASjF,CAAAA,MAAM,CAAC,IAAI,CAAA,CAAA;QAEpB,IAAK1B,CAAI,GAAA,CAAA,EAAGuI,IAAO,GAAA,IAAI,CAACa,IAAI,CAACyG,QAAQ,CAAC9P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;YAC3D,IAAI,CAACszC,mBAAmB,CAACtzC,CAAAA,CAAAA,CAAAA;QAC3B,CAAA;IACF,CAAA;IAEAg2C,OAAU,GAAA;QACR,IAAI,CAAC3X,aAAa,CAAC,eAAA,CAAA,CAAA;QACnB,MAAM,EAACrN,MAAM,EAAEzjB,GAAG,EAAC,GAAG,IAAI,CAAA;QAE1B,IAAI,CAACwoC,KAAK,EAAA,CAAA;QACV,IAAI,CAACpxC,MAAM,CAACmpC,UAAU,EAAA,CAAA;QAEtB,IAAI9c,MAAQ,EAAA;YACV,IAAI,CAAC4jB,YAAY,EAAA,CAAA;gBACjB1C,yKAAAA,EAAYlhB,MAAQzjB,EAAAA,GAAAA,CAAAA,CAAAA;YACpB,IAAI,CAACsgC,QAAQ,CAAC5c,cAAc,CAAC1jB,GAAAA,CAAAA,CAAAA;YAC7B,IAAI,CAACyjB,MAAM,GAAG,IAAI,CAAA;YAClB,IAAI,CAACzjB,GAAG,GAAG,IAAI,CAAA;SAChB;QAED,OAAOyiC,SAAS,CAAC,IAAI,CAAC9lC,EAAE,CAAC,CAAA;QAEzB,IAAI,CAACm0B,aAAa,CAAC,cAAA,CAAA,CAAA;IACrB,CAAA;IAEA4X,aAAc,CAAA,GAAG5/B,IAAI,EAAE;QACrB,OAAO,IAAI,CAAC2a,MAAM,CAACklB,SAAS,CAAI7/B,GAAAA,IAAAA,CAAAA,CAAAA;IAClC,CAAA;IAKA47B,UAAa,GAAA;QACX,IAAI,CAACkE,cAAc,EAAA,CAAA;QACnB,IAAI,IAAI,CAACrwC,OAAO,CAACisC,UAAU,EAAE;YAC3B,IAAI,CAACqE,oBAAoB,EAAA,CAAA;SACpB,MAAA;YACL,IAAI,CAAC3E,QAAQ,GAAG,IAAI,CAAA;SACrB;IACH,CAAA;IAKA0E,cAAiB,GAAA;QACf,MAAMx3C,SAAAA,GAAY,IAAI,CAACyyC,UAAU,CAAA;QACjC,MAAMvD,QAAAA,GAAW,IAAI,CAACA,QAAQ,CAAA;QAE9B,MAAMwI,IAAAA,GAAO,CAAC53C,IAAAA,EAAM0yB,QAAa,GAAA;YAC/B0c,QAAAA,CAAS3c,gBAAgB,CAAC,IAAI,EAAEzyB,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;YACtCxyB,SAAS,CAACF,KAAK,GAAG0yB,QAAAA,CAAAA;QACpB,CAAA,CAAA;QAEA,MAAMA,QAAW,GAAA,CAAC7O,CAAG/a,EAAAA,CAAAA,EAAGC,CAAM,GAAA;YAC5B8a,CAAAA,CAAEtD,OAAO,GAAGzX,CAAAA,CAAAA;YACZ+a,CAAAA,CAAErD,OAAO,GAAGzX,CAAAA,CAAAA;YACZ,IAAI,CAAC8sC,aAAa,CAAChyB,CAAAA,CAAAA,CAAAA;QACrB,CAAA,CAAA;YAEAqO,wKAAK,EAAA,IAAI,CAAC7qB,OAAO,CAAC4uC,MAAM,EAAE,CAACj2C,IAAS43C,GAAAA,IAAAA,CAAK53C,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;IACjD,CAAA;IAKAilB,oBAAuB,GAAA;QACrB,IAAI,CAAC,IAAI,CAAC/E,oBAAoB,EAAE;YAC9B,IAAI,CAACA,oBAAoB,GAAG,CAAA,CAAC,CAAA;SAC9B;QACD,MAAM1yC,SAAAA,GAAY,IAAI,CAAC0yC,oBAAoB,CAAA;QAC3C,MAAMxD,QAAAA,GAAW,IAAI,CAACA,QAAQ,CAAA;QAE9B,MAAMwI,IAAAA,GAAO,CAAC53C,IAAAA,EAAM0yB,QAAa,GAAA;YAC/B0c,QAAAA,CAAS3c,gBAAgB,CAAC,IAAI,EAAEzyB,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;YACtCxyB,SAAS,CAACF,KAAK,GAAG0yB,QAAAA,CAAAA;QACpB,CAAA,CAAA;QACA,MAAMmlB,OAAAA,GAAU,CAAC73C,IAAAA,EAAM0yB,QAAa,GAAA;YAClC,IAAIxyB,SAAS,CAACF,IAAAA,CAAK,EAAE;gBACnBovC,QAAAA,CAASzc,mBAAmB,CAAC,IAAI,EAAE3yB,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;gBACzC,OAAOxyB,SAAS,CAACF,IAAK,CAAA,CAAA;aACvB;QACH,CAAA,CAAA;QAEA,MAAM0yB,QAAAA,GAAW,CAACrV,KAAAA,EAAOD,MAAW,GAAA;YAClC,IAAI,IAAI,CAACmV,MAAM,EAAE;gBACf,IAAI,CAAC0D,MAAM,CAAC5Y,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aACpB;QACH,CAAA,CAAA;QAEA,IAAI06B;QACJ,MAAM9E,WAAW,IAAM;YACrB6E,OAAAA,CAAQ,QAAU7E,EAAAA,QAAAA,CAAAA,CAAAA;YAElB,IAAI,CAACA,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,CAAC/c,MAAM,EAAA,CAAA;YAEX2hB,IAAAA,CAAK,QAAUllB,EAAAA,QAAAA,CAAAA,CAAAA;YACfklB,IAAAA,CAAK,QAAUE,EAAAA,QAAAA,CAAAA,CAAAA;QACjB,CAAA,CAAA;QAEAA,QAAAA,GAAW,IAAM;YACf,IAAI,CAAC9E,QAAQ,GAAG,KAAK,CAAA;YAErB6E,OAAAA,CAAQ,QAAUnlB,EAAAA,QAAAA,CAAAA,CAAAA;YAGlB,IAAI,CAAC4kB,KAAK,EAAA,CAAA;YACV,IAAI,CAAC5D,OAAO,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA;YAEhBkE,IAAAA,CAAK,QAAU5E,EAAAA,QAAAA,CAAAA,CAAAA;QACjB,CAAA,CAAA;QAEA,IAAI5D,SAAStc,UAAU,CAAC,IAAI,CAACP,MAAM,CAAG,EAAA;YACpCygB,QAAAA,EAAAA,CAAAA;SACK,MAAA;YACL8E,QAAAA,EAAAA,CAAAA;SACD;IACH,CAAA;IAKA3B,YAAe,GAAA;YACbjkB,wKAAAA,EAAK,IAAI,CAACygB,UAAU,EAAE,CAACjgB,UAAU1yB,IAAS,GAAA;YACxC,IAAI,CAACovC,QAAQ,CAACzc,mBAAmB,CAAC,IAAI,EAAE3yB,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;QAChD,CAAA,CAAA,CAAA;QACA,IAAI,CAACigB,UAAU,GAAG,CAAA,CAAC,CAAA;YAEnBzgB,wKAAAA,EAAK,IAAI,CAAC0gB,oBAAoB,EAAE,CAAClgB,UAAU1yB,IAAS,GAAA;YAClD,IAAI,CAACovC,QAAQ,CAACzc,mBAAmB,CAAC,IAAI,EAAE3yB,IAAM0yB,EAAAA,QAAAA,CAAAA,CAAAA;QAChD,CAAA,CAAA,CAAA;QACA,IAAI,CAACkgB,oBAAoB,GAAGjzC,SAAAA,CAAAA;IAC9B,CAAA;IAEAo4C,gBAAAA,CAAiB12C,KAAK,EAAE+I,IAAI,EAAEsuB,OAAO,EAAE;QACrC,MAAMsf,MAAAA,GAAStf,OAAU,GAAA,KAAA,GAAQ,QAAQ,CAAA;QACzC,IAAI9tB,IAAAA,EAAMnJ,MAAMF,CAAGuI,EAAAA,IAAAA,CAAAA;QAEnB,IAAIM,SAAS,SAAW,EAAA;YACtBQ,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAChQ,KAAK,CAAC,CAAA,CAAE,CAACgJ,YAAY,CAAA,CAAA;YAChDO,IAAAA,CAAK6B,UAAU,CAAC,GAAMurC,GAAAA,MAAAA,GAAS,mBAAoB,CAAA,EAAA,CAAA;SACpD;QAED,IAAKz2C,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9CE,IAAOJ,GAAAA,KAAK,CAACE,CAAE,CAAA,CAAA;YACf,MAAMkL,UAAAA,GAAahL,QAAQ,IAAI,CAAC4P,cAAc,CAAC5P,IAAAA,CAAK4I,YAAY,CAAA,CAAEoC,UAAU,CAAA;YAC5E,IAAIA,UAAY,EAAA;gBACdA,UAAU,CAACurC,MAAS,GAAA,YAAA,CAAa,CAACv2C,IAAAA,CAAKoM,OAAO,EAAEpM,IAAK4I,CAAAA,YAAY,EAAE5I,IAAAA,CAAKsI,KAAK,CAAA,CAAA;aAC9E;QACH,CAAA;IACF,CAAA;IAMAkuC,iBAAoB,GAAA;QAClB,OAAO,IAAI,CAACv2C,OAAO,IAAI,EAAE,CAAA;IAC3B,CAAA;IAMAw2C,iBAAAA,CAAkBC,cAAc,EAAE;QAChC,MAAMC,UAAa,GAAA,IAAI,CAAC12C,OAAO,IAAI,EAAE,CAAA;QACrC,MAAM4D,MAAAA,GAAS6yC,cAAev1B,CAAAA,GAAG,CAAC,CAAC,EAACvY,YAAY,EAAEN,KAAK,EAAC,GAAK;YAC3D,MAAMa,IAAO,GAAA,IAAI,CAACyG,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;YACjC,IAAI,CAACO,IAAM,EAAA;gBACT,MAAM,IAAI6e,KAAM,CAAA,4BAAA,GAA+Bpf,YAAc,CAAA,CAAA;aAC9D;YAED,OAAO;gBACLA,YAAAA;gBACAwD,OAASjD,EAAAA,IAAAA,CAAKD,IAAI,CAACZ,KAAM,CAAA;gBACzBA,KAAAA;YACF,CAAA,CAAA;QACF,CAAA,CAAA,CAAA;QACA,MAAMqnB,OAAAA,GAAU,KAACinB,yKAAAA,EAAe/yC,MAAQ8yC,EAAAA,UAAAA,CAAAA,CAAAA;QAExC,IAAIhnB,OAAS,EAAA;YACX,IAAI,CAAC1vB,OAAO,GAAG4D,MAAAA,CAAAA;YAEf,IAAI,CAACotC,UAAU,GAAG,IAAI,CAAA;YACtB,IAAI,CAACoD,kBAAkB,CAACxwC,MAAQ8yC,EAAAA,UAAAA,CAAAA,CAAAA;SACjC;IACH,CAAA;IAWAxY,cAAc4L,IAAI,EAAE5zB,IAAI,EAAEtK,MAAM,EAAE;QAChC,OAAO,IAAI,CAACwlC,QAAQ,CAACvH,MAAM,CAAC,IAAI,EAAEC,IAAAA,EAAM5zB,IAAMtK,EAAAA,MAAAA,CAAAA,CAAAA;IAChD,CAAA;IAOA0C,eAAAA,CAAgBsoC,QAAQ,EAAE;QACxB,OAAO,IAAI,CAACxF,QAAQ,CAACx6B,MAAM,CAAChL,MAAM,CAACkjC,CAAAA,CAAAA,GAAKA,EAAE5E,MAAM,CAACngC,EAAE,KAAK6sC,QAAAA,CAAAA,CAAUh3C,MAAM,KAAK,CAAA,CAAA;IAC/E,CAAA;IAKAw0C,mBAAmBxwC,MAAM,EAAE8yC,UAAU,EAAEG,MAAM,EAAE;QAC7C,MAAMC,YAAe,GAAA,IAAI,CAACnxC,OAAO,CAACoxC,KAAK,CAAA;QACvC,MAAMxuB,IAAAA,GAAO,CAACrR,CAAAA,EAAGrP,CAAMqP,GAAAA,CAAAA,CAAEtL,MAAM,CAACxE,CAAAA,CAAK,GAAA,CAACS,CAAE8iC,CAAAA,IAAI,CAACtjC,CAAAA,CAAAA,GAAKD,CAAEuB,CAAAA,YAAY,KAAKtB,CAAAA,CAAEsB,YAAY,IAAIvB,CAAEiB,CAAAA,KAAK,KAAKhB,CAAAA,CAAEgB,KAAK,CAAA,CAAA,CAAA;QAC1G,MAAM2uC,WAAAA,GAAczuB,KAAKmuB,UAAY9yC,EAAAA,MAAAA,CAAAA,CAAAA;QACrC,MAAMqzC,SAAYJ,GAAAA,MAAAA,GAASjzC,MAAS2kB,GAAAA,IAAAA,CAAK3kB,QAAQ8yC,UAAW,CAAA,CAAA;QAE5D,IAAIM,WAAAA,CAAYp3C,MAAM,EAAE;YACtB,IAAI,CAACy2C,gBAAgB,CAACW,aAAaF,YAAapuC,CAAAA,IAAI,EAAE,KAAK,CAAA,CAAA;SAC5D;QAED,IAAIuuC,SAAUr3C,CAAAA,MAAM,IAAIk3C,YAAAA,CAAapuC,IAAI,EAAE;YACzC,IAAI,CAAC2tC,gBAAgB,CAACY,WAAWH,YAAapuC,CAAAA,IAAI,EAAE,IAAI,CAAA,CAAA;SACzD;IACH,CAAA;IAKAyrC,aAAchyB,CAAAA,CAAC,EAAE00B,MAAM,EAAE;QACvB,MAAM3gC,IAAO,GAAA;YACXvV,KAAOwhB,EAAAA,CAAAA;YACP00B,MAAAA;YACAzM,UAAAA,EAAY,IAAI;YAChBgG,WAAa,EAAA,IAAI,CAACxlB,aAAa,CAACzI,CAAAA,CAAAA;QAClC,CAAA,CAAA;QACA,MAAM+0B,WAAAA,GAAc,CAAChN,MAAW,GAACA,CAAAA,MAAOvkC,CAAAA,OAAO,CAAC4uC,MAAM,IAAI,IAAI,CAAC5uC,OAAO,CAAC4uC,MAAM,EAAExnB,QAAQ,CAAC5K,CAAAA,CAAE+Q,MAAM,CAAC50B,IAAI,CAAA,CAAA;QAErG,IAAI,IAAI,CAAC4/B,aAAa,CAAC,eAAehoB,IAAMghC,EAAAA,WAAAA,CAAAA,KAAiB,KAAK,EAAE;YAClE,OAAA;SACD;QAED,MAAMxnB,OAAAA,GAAU,IAAI,CAACynB,YAAY,CAACh1B,CAAG00B,EAAAA,MAAAA,EAAQ3gC,KAAKk6B,WAAW,CAAA,CAAA;QAE7Dl6B,IAAKk0B,CAAAA,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAAClM,aAAa,CAAC,YAAA,EAAchoB,IAAMghC,EAAAA,WAAAA,CAAAA,CAAAA;QAEvC,IAAIxnB,OAAAA,IAAWxZ,IAAKwZ,CAAAA,OAAO,EAAE;YAC3B,IAAI,CAAC2iB,MAAM,EAAA,CAAA;SACZ;QAED,OAAO,IAAI,CAAA;IACb,CAAA;IAUA8E,aAAah1B,CAAC,EAAE00B,MAAM,EAAEzG,WAAW,EAAE;QACnC,MAAM,EAACpwC,SAAS02C,UAAa,GAAA,EAAE,EAAE/wC,OAAAA,EAAQ,GAAG,IAAI,CAAA;QAehD,MAAM+kB,gBAAmBmsB,GAAAA,MAAAA,CAAAA;QACzB,MAAMjzC,SAAS,IAAI,CAACwzC,kBAAkB,CAACj1B,CAAAA,EAAGu0B,YAAYtG,WAAa1lB,EAAAA,gBAAAA,CAAAA,CAAAA;QACnE,MAAM2lB,cAAUgH,yKAAcl1B,EAAAA,CAAAA,CAAAA,CAAAA;QAC9B,MAAMguB,YAAYD,kBAAmB/tB,CAAAA,CAAAA,EAAG,IAAI,CAAC6uB,UAAU,EAAEZ,WAAaC,EAAAA,OAAAA,CAAAA,CAAAA;QAEtE,IAAID,WAAa,EAAA;YAGf,IAAI,CAACY,UAAU,GAAG,IAAI,CAAA;gBAGtB7G,wKAAaxkC,EAAAA,OAAAA,CAAQ2xC,OAAO,EAAE;gBAACn1B,CAAAA;gBAAGve,MAAAA;gBAAQ,IAAI;aAAC,EAAE,IAAI,CAAA,CAAA;YAErD,IAAIysC,OAAS,EAAA;oBACXlG,wKAAaxkC,EAAAA,OAAAA,CAAQuc,OAAO,EAAE;oBAACC,CAAAA;oBAAGve,MAAAA;oBAAQ,IAAI;iBAAC,EAAE,IAAI,CAAA,CAAA;aACtD;SACF;QAED,MAAM8rB,OAAAA,GAAU,KAACinB,yKAAAA,EAAe/yC,MAAQ8yC,EAAAA,UAAAA,CAAAA,CAAAA;QACxC,IAAIhnB,WAAWmnB,MAAQ,EAAA;YACrB,IAAI,CAAC72C,OAAO,GAAG4D,MAAAA,CAAAA;YACf,IAAI,CAACwwC,kBAAkB,CAACxwC,MAAAA,EAAQ8yC,UAAYG,EAAAA,MAAAA,CAAAA,CAAAA;SAC7C;QAED,IAAI,CAAC7F,UAAU,GAAGb,SAAAA,CAAAA;QAElB,OAAOzgB,OAAAA,CAAAA;IACT,CAAA;IAUA0nB,kBAAAA,CAAmBj1B,CAAC,EAAEu0B,UAAU,EAAEtG,WAAW,EAAE1lB,gBAAgB,EAAE;QAC/D,IAAIvI,CAAAA,CAAE7jB,IAAI,KAAK,UAAY,EAAA;YACzB,OAAO,EAAE,CAAA;SACV;QAED,IAAI,CAAC8xC,WAAa,EAAA;YAEhB,OAAOsG,UAAAA,CAAAA;SACR;QAED,MAAMI,YAAe,GAAA,IAAI,CAACnxC,OAAO,CAACoxC,KAAK,CAAA;QACvC,OAAO,IAAI,CAACzB,yBAAyB,CAACnzB,GAAG20B,YAAapuC,CAAAA,IAAI,EAAEouC,YAAcpsB,EAAAA,gBAAAA,CAAAA,CAAAA;IAC5E,CAAA;AACF,CAAA;AAGA,SAAS8lB,iBAAoB,GAAA;IAC3B,WAAOhgB,wKAAAA,EAAK8f,MAAMT,SAAS,EAAE,CAAC1xC,KAAUA,GAAAA,KAAAA,CAAMizC,QAAQ,CAAC/G,UAAU,EAAA,CAAA,CAAA;AACnE;AC5uCA,SAASkN,SAASnqC,GAA6B,EAAEjB,OAAmB,EAAE8S,QAAgB,EAAE;IACtF,MAAM,EAACD,UAAAA,EAAY5X,CAAAA,EAAGC,CAAAA,EAAGkb,WAAAA,EAAaD,WAAAA,EAAa3c,OAAAA,EAAQ,GAAGwG,OAAAA,CAAAA;IAC9D,MAAM,EAAC4V,WAAAA,EAAaF,eAAAA,EAAgB,GAAGlc,OAAAA,CAAAA;IACvC,MAAM6xC,iBAAiBz4C,IAAKC,CAAAA,GAAG,CAAC+iB,WAAcQ,GAAAA,WAAAA,MAAak1B,yKAAAA,EAAgBz4B,UAAaC,GAAAA,QAAAA,CAAAA,CAAAA,CAAAA;IACxF7R,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IACbl4B,GAAI+W,CAAAA,GAAG,CAAC/c,CAAAA,EAAGC,CAAGkb,EAAAA,WAAAA,GAAcR,WAAc,GAAA,CAAA,EAAG/C,UAAaw4B,GAAAA,cAAAA,GAAiB,CAAGv4B,EAAAA,QAAAA,GAAWu4B,cAAiB,GAAA,CAAA,CAAA,CAAA;IAE1G,IAAIl1B,cAAc,CAAG,EAAA;QACnB,MAAMo1B,iBAAiB34C,IAAKC,CAAAA,GAAG,CAAC+iB,WAAcO,GAAAA,WAAAA,MAAam1B,yKAAAA,EAAgBz4B,UAAaC,GAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QACxF7R,GAAAA,CAAI+W,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGib,WAAcP,GAAAA,WAAAA,GAAc,CAAG9C,EAAAA,QAAAA,GAAWy4B,cAAiB,GAAA,CAAA,EAAG14B,UAAa04B,GAAAA,cAAAA,GAAiB,GAAG,IAAI,CAAA,CAAA;KAC5G,MAAA;QACL,MAAMC,SAAAA,GAAY54C,KAAKC,GAAG,CAAC+iB,cAAc,CAAGQ,EAAAA,WAAAA,OAAck1B,yKAAAA,EAAgBz4B,UAAaC,GAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QAEvF,IAAI4C,oBAAoB,OAAS,EAAA;YAC/BzU,GAAI+W,CAAAA,GAAG,CAAC/c,CAAAA,EAAGC,CAAGswC,EAAAA,SAAAA,EAAW14B,QAAWe,GAAAA,wKAAAA,GAAK,CAAGhB,EAAAA,UAAAA,GAAagB,wKAAK,GAAA,CAAA,EAAG,IAAI,CAAA,CAAA;SAChE,MAAA,IAAI6B,oBAAoB,OAAS,EAAA;YACtC,MAAMja,CAAAA,GAAI,IAAI+vC,SAAYA,GAAAA,SAAAA,CAAAA;YAC1B,MAAMr4B,IAAAA,GAAO,CAAC1X,CAAI7I,GAAAA,IAAAA,CAAKogB,GAAG,CAACF,QAAAA,GAAWe,wKAAAA,GAAK,CAAK5Y,CAAAA,GAAAA,CAAAA,CAAAA;YAChD,MAAMmY,IAAAA,GAAO,CAAC3X,CAAI7I,GAAAA,IAAAA,CAAKsgB,GAAG,CAACJ,QAAAA,GAAWe,wKAAAA,GAAK,CAAK3Y,CAAAA,GAAAA,CAAAA,CAAAA;YAChD,MAAM6X,SAAStX,CAAI7I,GAAAA,IAAAA,CAAKogB,GAAG,CAACH,UAAAA,GAAagB,wKAAAA,GAAK,CAAK5Y,CAAAA,GAAAA,CAAAA,CAAAA;YACnD,MAAMgY,SAASxX,CAAI7I,GAAAA,IAAAA,CAAKsgB,GAAG,CAACL,UAAAA,GAAagB,wKAAAA,GAAK,CAAK3Y,CAAAA,GAAAA,CAAAA,CAAAA;YACnD+F,GAAIo4B,CAAAA,MAAM,CAAClmB,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;YACjBnS,GAAIo4B,CAAAA,MAAM,CAACtmB,MAAQE,EAAAA,MAAAA,CAAAA,CAAAA;SACpB;KACF;IACDhS,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;IAEbxqC,GAAIm4B,CAAAA,MAAM,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA;IACdn4B,GAAAA,CAAIyqC,IAAI,CAAC,CAAG,EAAA,CAAA,EAAGzqC,GAAIyjB,CAAAA,MAAM,CAAClV,KAAK,EAAEvO,GAAAA,CAAIyjB,MAAM,CAACnV,MAAM,CAAA,CAAA;IAElDtO,GAAAA,CAAI4F,IAAI,CAAC,SAAA,CAAA,CAAA;AACX,CAAA;AAGA,SAAS8kC,QAAQ1qC,GAA6B,EAAEjB,OAAmB,EAAE8S,QAAgB,EAAE;IACrF,MAAM,EAACD,UAAAA,EAAY+4B,WAAAA,EAAa3wC,CAAAA,EAAGC,CAAAA,EAAGkb,WAAAA,EAAaD,WAAAA,EAAY,GAAGnW,OAAAA,CAAAA;IAClE,IAAI6rC,cAAcD,WAAcx1B,GAAAA,WAAAA,CAAAA;;;IAIhCnV,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IACbl4B,GAAAA,CAAI+W,GAAG,CAAC/c,CAAAA,EAAGC,GAAGkb,WAAavD,EAAAA,UAAAA,GAAag5B,aAAa/4B,QAAW+4B,GAAAA,WAAAA,CAAAA,CAAAA;IAChE,IAAI11B,cAAcy1B,WAAa,EAAA;QAC7BC,WAAAA,GAAcD,WAAcz1B,GAAAA,WAAAA,CAAAA;QAC5BlV,GAAI+W,CAAAA,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGib,aAAarD,QAAW+4B,GAAAA,WAAAA,EAAah5B,UAAag5B,GAAAA,WAAAA,EAAa,IAAI,CAAA,CAAA;KAC5E,MAAA;QACL5qC,GAAAA,CAAI+W,GAAG,CAAC/c,CAAAA,EAAGC,GAAG0wC,WAAa94B,EAAAA,QAAAA,GAAWa,wKAAAA,EAASd,UAAac,GAAAA,wKAAAA,CAAAA,CAAAA;KAC7D;IACD1S,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;IACbxqC,GAAAA,CAAI4F,IAAI,EAAA,CAAA;AACV,CAAA;AAEA,SAASilC,eAAAA,CAAgB5xC,KAAK,EAAE;IAC9B,WAAO6xC,yKAAAA,EAAkB7xC,KAAO,EAAA;QAAC,YAAA;QAAc,UAAA;QAAY,YAAA;QAAc,UAAA;KAAW,CAAA,CAAA;AACtF,CAAA;AAEA;;IAGA,SAAS8xC,oBAAkBh0B,GAAe,EAAE7B,WAAmB,EAAEC,WAAmB,EAAE61B,UAAkB,EAAE;IACxG,MAAMC,CAAIJ,GAAAA,eAAAA,CAAgB9zB,GAAIxe,CAAAA,OAAO,CAACsb,YAAY,CAAA,CAAA;IAClD,MAAMq3B,aAAgB,GAAC/1B,CAAAA,WAAAA,GAAcD,WAAU,IAAK,CAAA,CAAA;IACpD,MAAMi2B,aAAax5C,IAAKC,CAAAA,GAAG,CAACs5C,aAAAA,EAAeF,aAAa91B,WAAc,GAAA,CAAA,CAAA,CAAA;;;;;;;;IAStE,MAAMk2B,iBAAAA,GAAoB,CAACt8B,GAAQ,GAAA;QACjC,MAAMu8B,aAAAA,GAAgB,CAACl2B,WAAcxjB,GAAAA,IAAAA,CAAKC,GAAG,CAACs5C,aAAAA,EAAep8B,GAAG,CAAA,IAAKk8B,UAAa,GAAA,CAAA,CAAA;QAClF,WAAOjZ,wKAAAA,EAAYjjB,GAAK,EAAA,CAAA,EAAGnd,IAAKC,CAAAA,GAAG,CAACs5C,aAAeG,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;IACrD,CAAA,CAAA;IAEA,OAAO;QACLC,UAAYF,EAAAA,iBAAAA,CAAkBH,EAAEK,UAAU,CAAA;QAC1CC,QAAUH,EAAAA,iBAAAA,CAAkBH,EAAEM,QAAQ,CAAA;QACtCC,UAAAA,MAAYzZ,wKAAYkZ,EAAAA,CAAAA,CAAEO,UAAU,EAAE,CAAGL,EAAAA,UAAAA,CAAAA;QACzCM,QAAAA,MAAU1Z,wKAAYkZ,EAAAA,CAAAA,CAAEQ,QAAQ,EAAE,CAAGN,EAAAA,UAAAA,CAAAA;IACvC,CAAA,CAAA;AACF,CAAA;AAEA;;IAGA,SAASO,WAAWlxC,CAAS,EAAEmxC,KAAa,EAAE3xC,CAAS,EAAEC,CAAS,EAAE;IAClE,OAAO;QACLD,CAAAA,EAAGA,CAAIQ,GAAAA,CAAAA,GAAI7I,IAAKogB,CAAAA,GAAG,CAAC45B,KAAAA,CAAAA;QACpB1xC,CAAAA,EAAGA,CAAIO,GAAAA,CAAAA,GAAI7I,IAAKsgB,CAAAA,GAAG,CAAC05B,KAAAA,CAAAA;IACtB,CAAA,CAAA;AACF,CAAA;AAGA;;;;;;;;;;;;;CAaC,GACD,SAASC,OAAAA,CACP5rC,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACdyF,OAAe,EACfrZ,GAAW,EACXqf,QAAiB,EACjB;IACA,MAAM,EAACjf,CAAAA,EAAGC,CAAAA,EAAG2X,UAAAA,EAAY/f,KAAK,EAAE84C,WAAW,EAAEz1B,WAAa22B,EAAAA,MAAAA,EAAO,GAAG9sC,OAAAA,CAAAA;IAEpE,MAAMoW,WAAAA,GAAcxjB,KAAKoC,GAAG,CAACgL,QAAQoW,WAAW,GAAGlC,OAAUzF,GAAAA,MAAAA,GAASm9B,WAAa,EAAA,CAAA,CAAA,CAAA;IACnF,MAAMz1B,cAAc22B,MAAS,GAAA,CAAA,GAAIA,SAAS54B,OAAUzF,GAAAA,MAAAA,GAASm9B,cAAc,CAAC,CAAA;IAE5E,IAAImB,aAAgB,GAAA,CAAA,CAAA;IACpB,MAAMC,QAAQnyC,GAAM/H,GAAAA,KAAAA,CAAAA;IAEpB,IAAIohB,OAAS,EAAA;;;;QAIX,MAAM+4B,oBAAuBH,GAAAA,MAAAA,GAAS,CAAIA,GAAAA,MAAAA,GAAS54B,UAAU,CAAC,CAAA;QAC9D,MAAMg5B,oBAAuB92B,GAAAA,WAAAA,GAAc,CAAIA,GAAAA,WAAAA,GAAclC,UAAU,CAAC,CAAA;QACxE,MAAMi5B,kBAAqB,GAACF,CAAAA,oBAAAA,GAAuBC,oBAAmB,IAAK,CAAA,CAAA;QAC3E,MAAME,aAAAA,GAAgBD,kBAAuB,KAAA,CAAA,GAAI,KAACH,GAAQG,qBAAAA,CAAuBA,kBAAAA,GAAqBj5B,OAAM,CAAA,GAAK84B,KAAK,CAAA;QACtHD,aAAAA,GAAgB,CAACC,KAAQI,GAAAA,aAAY,IAAK,CAAA,CAAA;KAC3C;IAED,MAAMC,IAAAA,GAAOz6C,KAAKoC,GAAG,CAAC,OAAOg4C,KAAQ52B,GAAAA,WAAAA,GAAc3H,SAASoF,wKAAMuC,CAAAA,GAAAA,WAAAA,CAAAA;IAClE,MAAMk3B,WAAc,GAACN,CAAAA,KAAAA,GAAQK,IAAG,IAAK,CAAA,CAAA;IACrC,MAAMx6B,UAAAA,GAAa/f,QAAQw6C,WAAcP,GAAAA,aAAAA,CAAAA;IACzC,MAAMj6B,QAAAA,GAAWjY,MAAMyyC,WAAcP,GAAAA,aAAAA,CAAAA;IACrC,MAAM,EAACR,UAAAA,EAAYC,QAAAA,EAAUC,UAAU,EAAEC,QAAQ,EAAC,GAAGV,mBAAAA,CAAkBhsC,OAASmW,EAAAA,WAAAA,EAAaC,aAAatD,QAAWD,GAAAA,UAAAA,CAAAA,CAAAA;IAErH,MAAM06B,2BAA2Bn3B,WAAcm2B,GAAAA,UAAAA,CAAAA;IAC/C,MAAMiB,yBAAyBp3B,WAAco2B,GAAAA,QAAAA,CAAAA;IAC7C,MAAMiB,uBAAAA,GAA0B56B,aAAa05B,UAAagB,GAAAA,wBAAAA,CAAAA;IAC1D,MAAMG,qBAAAA,GAAwB56B,WAAW05B,QAAWgB,GAAAA,sBAAAA,CAAAA;IAEpD,MAAMG,2BAA2Bx3B,WAAcs2B,GAAAA,UAAAA,CAAAA;IAC/C,MAAMmB,yBAAyBz3B,WAAcu2B,GAAAA,QAAAA,CAAAA;IAC7C,MAAMmB,uBAAAA,GAA0Bh7B,aAAa45B,UAAakB,GAAAA,wBAAAA,CAAAA;IAC1D,MAAMG,qBAAAA,GAAwBh7B,WAAW45B,QAAWkB,GAAAA,sBAAAA,CAAAA;IAEpD3sC,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IAEb,IAAIjf,QAAU,EAAA;;QAEZ,MAAM6zB,qBAAwB,GAACN,CAAAA,uBAAAA,GAA0BC,qBAAoB,IAAK,CAAA,CAAA;QAClFzsC,GAAAA,CAAI+W,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGkb,aAAaq3B,uBAAyBM,EAAAA,qBAAAA,CAAAA,CAAAA;QACpD9sC,GAAAA,CAAI+W,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGkb,aAAa23B,qBAAuBL,EAAAA,qBAAAA,CAAAA,CAAAA;;QAGlD,IAAIlB,WAAW,CAAG,EAAA;YAChB,MAAMwB,OAAUrB,GAAAA,UAAAA,CAAWa,sBAAwBE,EAAAA,qBAAAA,EAAuBzyC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YAC7E+F,GAAI+W,CAAAA,GAAG,CAACg2B,OAAAA,CAAQ/yC,CAAC,EAAE+yC,QAAQ9yC,CAAC,EAAEsxC,QAAUkB,EAAAA,qBAAAA,EAAuB56B,QAAWa,GAAAA,wKAAAA,CAAAA,CAAAA;SAC3E;;QAGD,MAAMs6B,EAAKtB,GAAAA,UAAAA,CAAWiB,sBAAwB96B,EAAAA,QAAAA,EAAU7X,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;QAC3D+F,GAAAA,CAAIo4B,MAAM,CAAC4U,EAAAA,CAAGhzC,CAAC,EAAEgzC,GAAG/yC,CAAC,CAAA,CAAA;;QAGrB,IAAIwxC,WAAW,CAAG,EAAA;YAChB,MAAMsB,OAAUrB,GAAAA,UAAAA,CAAWiB,sBAAwBE,EAAAA,qBAAAA,EAAuB7yC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YAC7E+F,GAAAA,CAAI+W,GAAG,CAACg2B,OAAQ/yC,CAAAA,CAAC,EAAE+yC,OAAAA,CAAQ9yC,CAAC,EAAEwxC,QAAU55B,EAAAA,QAAAA,GAAWa,wKAASm6B,EAAAA,qBAAAA,GAAwBl7C,KAAKihB,EAAE,CAAA,CAAA;SAC5F;;QAGD,MAAMq6B,qBAAwB,GAAC,CAACp7B,QAAY45B,GAAAA,QAAAA,GAAWv2B,WAAiBtD,GAAAA,CAAAA,UAAc45B,GAAAA,UAAAA,GAAat2B,WAAW,CAAC,IAAK,CAAA,CAAA;QACpHlV,GAAI+W,CAAAA,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGib,aAAarD,QAAY45B,GAAAA,QAAAA,GAAWv2B,WAAc+3B,EAAAA,qBAAAA,EAAuB,IAAI,CAAA,CAAA;QAC3FjtC,GAAI+W,CAAAA,GAAG,CAAC/c,CAAGC,EAAAA,CAAAA,EAAGib,aAAa+3B,qBAAuBr7B,EAAAA,UAAAA,GAAc45B,UAAat2B,GAAAA,WAAAA,EAAc,IAAI,CAAA,CAAA;;QAG/F,IAAIs2B,aAAa,CAAG,EAAA;YAClB,MAAMuB,OAAUrB,GAAAA,UAAAA,CAAWgB,wBAA0BE,EAAAA,uBAAAA,EAAyB5yC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YACjF+F,GAAAA,CAAI+W,GAAG,CAACg2B,OAAQ/yC,CAAAA,CAAC,EAAE+yC,OAAAA,CAAQ9yC,CAAC,EAAEuxC,UAAYoB,EAAAA,uBAAAA,GAA0Bj7C,IAAKihB,CAAAA,EAAE,EAAEhB,UAAac,GAAAA,wKAAAA,CAAAA,CAAAA;SAC3F;;QAGD,MAAMw6B,EAAKxB,GAAAA,UAAAA,CAAWY,wBAA0B16B,EAAAA,UAAAA,EAAY5X,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;QAC/D+F,GAAAA,CAAIo4B,MAAM,CAAC8U,EAAAA,CAAGlzC,CAAC,EAAEkzC,GAAGjzC,CAAC,CAAA,CAAA;;QAGrB,IAAIqxC,aAAa,CAAG,EAAA;YAClB,MAAMyB,OAAUrB,GAAAA,UAAAA,CAAWY,wBAA0BE,EAAAA,uBAAAA,EAAyBxyC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YACjF+F,GAAI+W,CAAAA,GAAG,CAACg2B,OAAAA,CAAQ/yC,CAAC,EAAE+yC,QAAQ9yC,CAAC,EAAEqxC,UAAY15B,EAAAA,UAAAA,GAAac,wKAAS85B,EAAAA,uBAAAA,CAAAA,CAAAA;SACjE;KACI,MAAA;QACLxsC,GAAIm4B,CAAAA,MAAM,CAACn+B,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;QAEd,MAAMkzC,WAAcx7C,GAAAA,IAAAA,CAAKogB,GAAG,CAACy6B,2BAA2Br3B,WAAcnb,GAAAA,CAAAA,CAAAA;QACtE,MAAMozC,WAAcz7C,GAAAA,IAAAA,CAAKsgB,GAAG,CAACu6B,2BAA2Br3B,WAAclb,GAAAA,CAAAA,CAAAA;QACtE+F,GAAIo4B,CAAAA,MAAM,CAAC+U,WAAaC,EAAAA,WAAAA,CAAAA,CAAAA;QAExB,MAAMC,SAAY17C,GAAAA,IAAAA,CAAKogB,GAAG,CAAC06B,yBAAyBt3B,WAAcnb,GAAAA,CAAAA,CAAAA;QAClE,MAAMszC,SAAY37C,GAAAA,IAAAA,CAAKsgB,GAAG,CAACw6B,yBAAyBt3B,WAAclb,GAAAA,CAAAA,CAAAA;QAClE+F,GAAIo4B,CAAAA,MAAM,CAACiV,SAAWC,EAAAA,SAAAA,CAAAA,CAAAA;KACvB;IAEDttC,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;AACf,CAAA;AAEA,SAAS+C,OAAAA,CACPvtC,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACdyF,OAAe,EACfgG,QAAiB,EACjB;IACA,MAAM,EAACu0B,WAAW,EAAE57B,UAAAA,EAAYP,aAAAA,EAAc,GAAGtS,OAAAA,CAAAA;IACjD,IAAI8S,QAAAA,GAAW9S,QAAQ8S,QAAQ,CAAA;IAC/B,IAAI27B,WAAa,EAAA;QACf5B,OAAAA,CAAQ5rC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQyF,EAAAA,OAAAA,EAASpB,QAAUoH,EAAAA,QAAAA,CAAAA,CAAAA;QACjD,IAAK,IAAIxmB,CAAI,GAAA,CAAA,EAAGA,CAAI+6C,GAAAA,WAAAA,EAAa,EAAE/6C,CAAG,CAAA;YACpCuN,GAAAA,CAAIiB,IAAI,EAAA,CAAA;QACV,CAAA;QACA,IAAI,CAAC8N,MAAMsC,aAAgB,CAAA,EAAA;YACzBQ,QAAAA,GAAWD,UAAcP,GAAAA,CAAAA,aAAgBM,GAAAA,wKAAAA,IAAOA,wKAAE,CAAA,CAAA;SACnD;KACF;IACDi6B,OAAAA,CAAQ5rC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQyF,EAAAA,OAAAA,EAASpB,QAAUoH,EAAAA,QAAAA,CAAAA,CAAAA;IACjDjZ,GAAAA,CAAIiB,IAAI,EAAA,CAAA;IACR,OAAO4Q,QAAAA,CAAAA;AACT,CAAA;AAEA,SAAS0mB,UAAAA,CACPv4B,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACdyF,OAAe,EACfgG,QAAiB,EACjB;IACA,MAAM,EAACu0B,WAAAA,EAAa57B,UAAAA,EAAYP,aAAa,EAAE9Y,OAAO,EAAC,GAAGwG,OAAAA,CAAAA;IAC1D,MAAM,EAAC4V,WAAW,EAAEF,eAAe,EAAEJ,UAAU,EAAEE,gBAAgB,EAAEV,YAAY,EAAC,GAAGtb,OAAAA,CAAAA;IACnF,MAAMk1C,KAAAA,GAAQl1C,OAAQ4e,CAAAA,WAAW,KAAK,OAAA,CAAA;IAEtC,IAAI,CAACxC,WAAa,EAAA;QAChB,OAAA;KACD;IAED3U,GAAIi4B,CAAAA,WAAW,CAAC5jB,UAAAA,IAAc,EAAE,CAAA,CAAA;IAChCrU,GAAAA,CAAIsU,cAAc,GAAGC,gBAAAA,CAAAA;IAErB,IAAIk5B,KAAO,EAAA;QACTztC,GAAI0U,CAAAA,SAAS,GAAGC,WAAc,GAAA,CAAA,CAAA;QAC9B3U,GAAIwU,CAAAA,QAAQ,GAAGC,eAAmB,IAAA,OAAA,CAAA;KAC7B,MAAA;QACLzU,GAAAA,CAAI0U,SAAS,GAAGC,WAAAA,CAAAA;QAChB3U,GAAIwU,CAAAA,QAAQ,GAAGC,eAAmB,IAAA,OAAA,CAAA;KACnC;IAED,IAAI5C,QAAAA,GAAW9S,QAAQ8S,QAAQ,CAAA;IAC/B,IAAI27B,WAAa,EAAA;QACf5B,OAAAA,CAAQ5rC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQyF,EAAAA,OAAAA,EAASpB,QAAUoH,EAAAA,QAAAA,CAAAA,CAAAA;QACjD,IAAK,IAAIxmB,CAAI,GAAA,CAAA,EAAGA,CAAI+6C,GAAAA,WAAAA,EAAa,EAAE/6C,CAAG,CAAA;YACpCuN,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;QACZ,CAAA;QACA,IAAI,CAACtpB,MAAMsC,aAAgB,CAAA,EAAA;YACzBQ,QAAAA,GAAWD,UAAcP,GAAAA,CAAAA,aAAgBM,GAAAA,wKAAAA,IAAOA,wKAAE,CAAA,CAAA;SACnD;KACF;IAED,IAAI87B,KAAO,EAAA;QACT/C,OAAAA,CAAQ1qC,KAAKjB,OAAS8S,EAAAA,QAAAA,CAAAA,CAAAA;KACvB;IAED,IAAItZ,OAAAA,CAAQm1C,QAAQ,IAAI77B,QAAAA,GAAWD,cAAcgB,wKAAMiB,IAAAA,YAAAA,KAAiB,CAAKY,IAAAA,eAAAA,KAAoB,OAAS,EAAA;QACxG01B,QAAAA,CAASnqC,KAAKjB,OAAS8S,EAAAA,QAAAA,CAAAA,CAAAA;KACxB;IAED,IAAI,CAAC27B,WAAa,EAAA;QAChB5B,OAAAA,CAAQ5rC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQyF,EAAAA,OAAAA,EAASpB,QAAUoH,EAAAA,QAAAA,CAAAA,CAAAA;QACjDjZ,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;KACX;AACH,CAAA;AAUe,MAAMsV,UAAmB7kB,SAAAA,OAAAA,CAAAA;IAEtC,OAAOnsB,KAAK,KAAM,CAAA;IAElB,OAAO/E,QAAW,GAAA;QAChBuf,WAAa,EAAA,QAAA;QACbtC,WAAa,EAAA,MAAA;QACbR,UAAAA,EAAY,EAAE;QACdE,gBAAkB,EAAA,CAAA;QAClBE,eAAiB5jB,EAAAA,SAAAA;QACjBgjB,YAAc,EAAA,CAAA;QACdc,WAAa,EAAA,CAAA;QACbnH,MAAQ,EAAA,CAAA;QACRyF,OAAS,EAAA,CAAA;QACTZ,KAAOxhB,EAAAA,SAAAA;QACPooB,QAAAA,EAAU,IAAI;QACdy0B,QAAAA,EAAU,KAAK;KACf,CAAA;IAEF,OAAO3kB,aAAgB,GAAA;QACrB7U,eAAiB,EAAA,iBAAA;KACjB,CAAA;IAEF,OAAOhB,WAAc,GAAA;QACnBC,WAAAA,EAAa,IAAI;QACjBC,UAAY,EAAA,CAAC5D,OAASA,IAAS,KAAA,YAAA;KAC/B,CAAA;IAEF6B,aAAsB,CAAA;IACtBQ,QAAiB,CAAA;IACjB27B,WAAoB,CAAA;IACpBt4B,WAAoB,CAAA;IACpBC,WAAoB,CAAA;IACpBw1B,WAAoB,CAAA;IACpB/4B,UAAmB,CAAA;IAEnBrhB,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,EAAA,CAAA;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAACwgB,aAAa,GAAGxgB,SAAAA,CAAAA;QACrB,IAAI,CAAC+gB,UAAU,GAAG/gB,SAAAA,CAAAA;QAClB,IAAI,CAACghB,QAAQ,GAAGhhB,SAAAA,CAAAA;QAChB,IAAI,CAACqkB,WAAW,GAAGrkB,SAAAA,CAAAA;QACnB,IAAI,CAACskB,WAAW,GAAGtkB,SAAAA,CAAAA;QACnB,IAAI,CAAC85C,WAAW,GAAG,CAAA,CAAA;QACnB,IAAI,CAAC6C,WAAW,GAAG,CAAA,CAAA;QAEnB,IAAIp4C,GAAK,EAAA;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;IACH,CAAA;IAEAuoB,OAAAA,CAAQiwB,MAAc,EAAEC,MAAc,EAAEvwB,gBAAyB,EAAE;QACjE,MAAMvM,KAAQ,GAAA,IAAI,CAAC8M,QAAQ,CAAC;YAAC,GAAA;YAAK,GAAA;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACxC,MAAM,EAACjL,KAAK,EAAE+L,QAAAA,EAAS,OAAGN,wKAAAA,EAAkB/M,KAAO,EAAA;YAAC/W,CAAG4zC,EAAAA,MAAAA;YAAQ3zC,CAAG4zC,EAAAA,MAAAA;QAAM,CAAA,CAAA,CAAA;QACxE,MAAM,EAACj8B,UAAAA,EAAYC,QAAAA,EAAUqD,WAAW,EAAEC,WAAW,EAAE9D,aAAAA,EAAc,GAAG,IAAI,CAACwM,QAAQ,CAAC;YACpF,YAAA;YACA,UAAA;YACA,aAAA;YACA,aAAA;YACA,eAAA;SACD,EAAEP,gBAAAA,CAAAA,CAAAA;QACH,MAAMwwB,OAAU,GAAC,CAAA,IAAI,CAACv1C,OAAO,CAAC0a,OAAO,GAAG,IAAI,CAAC1a,OAAO,CAACoc,WAAW,IAAI,CAAA,CAAA;QACpE,MAAM+B,cAAAA,OAAiBhV,wKAAe2P,EAAAA,aAAAA,EAAeQ,QAAWD,GAAAA,UAAAA,CAAAA,CAAAA;QAChE,MAAMm8B,cAAiBz7B,OAAAA,wKAAAA,EAAcD,KAAOT,EAAAA,UAAAA,EAAYC,aAAaD,UAAeC,KAAAA,QAAAA,CAAAA;QACpF,MAAMm8B,aAAAA,GAAgBt3B,kBAAkB/E,wKAAOo8B,IAAAA,cAAAA,CAAAA;QAC/C,MAAME,YAAeC,OAAAA,yKAAAA,EAAW9vB,QAAUlJ,EAAAA,WAAAA,GAAc44B,SAAS34B,WAAc24B,GAAAA,OAAAA,CAAAA,CAAAA;QAE/E,OAAQE,aAAiBC,IAAAA,YAAAA,CAAAA;IAC3B,CAAA;IAEA/vB,cAAAA,CAAeZ,gBAAyB,EAAE;QACxC,MAAM,EAACtjB,CAAC,EAAEC,CAAC,EAAE2X,UAAAA,EAAYC,QAAAA,EAAUqD,WAAAA,EAAaC,WAAW,EAAC,GAAG,IAAI,CAAC0I,QAAQ,CAAC;YAC3E,GAAA;YACA,GAAA;YACA,YAAA;YACA,UAAA;YACA,aAAA;YACA,aAAA;SACD,EAAEP,gBAAAA,CAAAA,CAAAA;QACH,MAAM,EAAC9P,MAAAA,EAAQyF,OAAAA,EAAQ,GAAG,IAAI,CAAC1a,OAAO,CAAA;QACtC,MAAM41C,SAAY,GAACv8B,CAAAA,UAAAA,GAAaC,QAAO,IAAK,CAAA,CAAA;QAC5C,MAAMu8B,aAAa,CAACl5B,cAAcC,WAAclC,GAAAA,OAAAA,GAAUzF,MAAK,IAAK,CAAA,CAAA;QACpE,OAAO;YACLxT,CAAAA,EAAGA,CAAIrI,GAAAA,IAAAA,CAAKogB,GAAG,CAACo8B,SAAaC,CAAAA,GAAAA,UAAAA;YAC7Bn0C,CAAAA,EAAGA,CAAItI,GAAAA,IAAAA,CAAKsgB,GAAG,CAACk8B,SAAaC,CAAAA,GAAAA,UAAAA;QAC/B,CAAA,CAAA;IACF,CAAA;IAEAplB,eAAAA,CAAgB1L,gBAAyB,EAAE;QACzC,OAAO,IAAI,CAACY,cAAc,CAACZ,gBAAAA,CAAAA,CAAAA;IAC7B,CAAA;IAEA5qB,IAAAA,CAAKsN,GAA6B,EAAE;QAClC,MAAM,EAACzH,OAAO,EAAE8Y,aAAa,EAAC,GAAG,IAAI,CAAA;QACrC,MAAM7D,SAAS,CAACjV,QAAQiV,MAAM,IAAI,CAAA,IAAK,CAAA,CAAA;QACvC,MAAMyF,UAAU,CAAC1a,QAAQ0a,OAAO,IAAI,CAAA,IAAK,CAAA,CAAA;QACzC,MAAMgG,QAAAA,GAAW1gB,QAAQ0gB,QAAQ,CAAA;QACjC,IAAI,CAAC0xB,WAAW,GAAIpyC,QAAQ4e,WAAW,KAAK,OAAW,GAAA,IAAA,GAAO,CAAC,CAAA;QAC/D,IAAI,CAACq2B,WAAW,GAAGn8B,aAAgBM,GAAAA,wKAAAA,GAAMhgB,KAAKoE,KAAK,CAACsb,aAAgBM,GAAAA,wKAAAA,CAAAA,GAAO,CAAC,CAAA;QAE5E,IAAIN,aAAAA,KAAkB,CAAK,IAAA,IAAI,CAAC6D,WAAW,GAAG,CAAA,IAAK,IAAI,CAACC,WAAW,GAAG,CAAG,EAAA;YACvE,OAAA;SACD;QAEDnV,GAAAA,CAAI03B,IAAI,EAAA,CAAA;QAER,MAAMyW,SAAAA,GAAY,CAAC,IAAI,CAACv8B,UAAU,GAAG,IAAI,CAACC,QAAO,IAAK,CAAA,CAAA;QACtD7R,GAAIquC,CAAAA,SAAS,CAAC18C,IAAAA,CAAKogB,GAAG,CAACo8B,aAAa3gC,MAAQ7b,EAAAA,IAAAA,CAAKsgB,GAAG,CAACk8B,SAAa3gC,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;QAClE,MAAM8gC,GAAAA,GAAM,IAAI38C,IAAKsgB,CAAAA,GAAG,CAACtgB,IAAKC,CAAAA,GAAG,CAACghB,wKAAAA,EAAIvB,aAAiB,IAAA,CAAA,CAAA,CAAA,CAAA;QACvD,MAAMk9B,eAAe/gC,MAAS8gC,GAAAA,GAAAA,CAAAA;QAE9BtuC,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ2b,eAAe,CAAA;QACvClU,GAAI4U,CAAAA,WAAW,GAAGrc,OAAAA,CAAQsc,WAAW,CAAA;QAErC04B,OAAAA,CAAQvtC,GAAK,EAAA,IAAI,EAAEuuC,YAAAA,EAAct7B,OAASgG,EAAAA,QAAAA,CAAAA,CAAAA;QAC1Csf,UAAAA,CAAWv4B,GAAK,EAAA,IAAI,EAAEuuC,YAAAA,EAAct7B,OAASgG,EAAAA,QAAAA,CAAAA,CAAAA;QAE7CjZ,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IACb,CAAA;AACF;ACzZA,SAAS4W,SAASxuC,GAAG,EAAEzH,OAAO,EAAEwb,KAAAA,GAAQxb,OAAO,EAAE;IAC/CyH,GAAAA,CAAIyuC,OAAO,OAAG/sC,wKAAAA,EAAeqS,MAAM26B,cAAc,EAAEn2C,QAAQm2C,cAAc,CAAA,CAAA;IACzE1uC,GAAAA,CAAIi4B,WAAW,KAACv2B,wKAAAA,EAAeqS,MAAMM,UAAU,EAAE9b,QAAQ8b,UAAU,CAAA,CAAA,CAAA;IACnErU,GAAAA,CAAIsU,cAAc,OAAG5S,wKAAAA,EAAeqS,MAAMQ,gBAAgB,EAAEhc,QAAQgc,gBAAgB,CAAA,CAAA;IACpFvU,GAAAA,CAAIwU,QAAQ,OAAG9S,wKAAAA,EAAeqS,MAAMU,eAAe,EAAElc,QAAQkc,eAAe,CAAA,CAAA;IAC5EzU,GAAAA,CAAI0U,SAAS,OAAGhT,wKAAAA,EAAeqS,MAAMY,WAAW,EAAEpc,QAAQoc,WAAW,CAAA,CAAA;IACrE3U,GAAAA,CAAI4U,WAAW,OAAGlT,wKAAAA,EAAeqS,MAAMc,WAAW,EAAEtc,QAAQsc,WAAW,CAAA,CAAA;AACzE,CAAA;AAEA,SAASujB,OAAOp4B,GAAG,EAAE2uC,QAAQ,EAAEt5C,MAAM,EAAE;IACrC2K,GAAAA,CAAIo4B,MAAM,CAAC/iC,MAAAA,CAAO2E,CAAC,EAAE3E,OAAO4E,CAAC,CAAA,CAAA;AAC/B,CAAA;AAKA,SAAS20C,aAAcr2C,CAAAA,OAAO,EAAE;IAC9B,IAAIA,OAAAA,CAAQs2C,OAAO,EAAE;QACnB,OAAOC,yKAAAA,CAAAA;KACR;IAED,IAAIv2C,QAAQw2C,OAAO,IAAIx2C,OAAQy2C,CAAAA,sBAAsB,KAAK,UAAY,EAAA;QACpE,OAAOC,yKAAAA,CAAAA;KACR;IAED,OAAO7W,MAAAA,CAAAA;AACT,CAAA;AAEA,SAAS8W,QAAAA,CAASp+B,MAAM,EAAEoH,OAAO,EAAE6H,MAAS,GAAA,CAAA,CAAE,EAAE;IAC9C,MAAMlc,KAAAA,GAAQiN,OAAOte,MAAM,CAAA;IAC3B,MAAM,EAACX,KAAAA,EAAOs9C,WAAc,GAAA,CAAC,EAAEv1C,GAAKw1C,EAAAA,SAAAA,GAAYvrC,KAAQ,GAAA,CAAC,EAAC,GAAGkc,MAAAA,CAAAA;IAC7D,MAAM,EAACluB,KAAOw9C,EAAAA,YAAAA,EAAcz1C,GAAK01C,EAAAA,UAAAA,EAAW,GAAGp3B,OAAAA,CAAAA;IAC/C,MAAMrmB,KAAQF,GAAAA,IAAAA,CAAKoC,GAAG,CAACo7C,WAAaE,EAAAA,YAAAA,CAAAA,CAAAA;IACpC,MAAMz1C,GAAMjI,GAAAA,IAAAA,CAAKC,GAAG,CAACw9C,SAAWE,EAAAA,UAAAA,CAAAA,CAAAA;IAChC,MAAMC,UAAUJ,WAAcE,GAAAA,YAAAA,IAAgBD,YAAYC,YAAgBF,IAAAA,WAAAA,GAAcG,cAAcF,SAAYE,GAAAA,UAAAA,CAAAA;IAElH,OAAO;QACLzrC,KAAAA;QACAhS,KAAAA;QACAqE,IAAAA,EAAMgiB,QAAQhiB,IAAI;QAClB8E,IAAMpB,EAAAA,GAAAA,GAAM/H,SAAS,CAAC09C,OAAAA,GAAU1rC,QAAQjK,GAAM/H,GAAAA,KAAAA,GAAQ+H,MAAM/H,KAAK;IACnE,CAAA,CAAA;AACF,CAAA;AAiBA,SAAS29C,YAAYxvC,GAAG,EAAE2X,IAAI,EAAEO,OAAO,EAAE6H,MAAM,EAAE;IAC/C,MAAM,EAACjP,MAAAA,EAAQvY,OAAAA,EAAQ,GAAGof,IAAAA,CAAAA;IAC1B,MAAM,EAAC9T,KAAAA,EAAOhS,KAAAA,EAAOqE,IAAAA,EAAM8E,IAAAA,EAAK,GAAGk0C,QAASp+B,CAAAA,MAAAA,EAAQoH,OAAS6H,EAAAA,MAAAA,CAAAA,CAAAA;IAC7D,MAAM0vB,aAAab,aAAcr2C,CAAAA,OAAAA,CAAAA,CAAAA;IAEjC,IAAI,EAACiQ,OAAO,IAAI,EAAE7O,OAAO,EAAC,GAAGomB,MAAAA,IAAU,CAAA,CAAC,CAAA;IACxC,IAAIttB,GAAGse,KAAO/M,EAAAA,IAAAA,CAAAA;IAEd,IAAKvR,CAAI,GAAA,CAAA,EAAGA,CAAKuI,IAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QAC1Bse,KAAAA,GAAQD,MAAM,CAAC,CAACjf,KAAS8H,GAAAA,CAAAA,OAAUqB,GAAAA,IAAAA,GAAOvI,CAAIA,GAAAA,CAAC,CAAA,IAAKoR,KAAM,CAAA,CAAA;QAE1D,IAAIkN,KAAAA,CAAMG,IAAI,EAAE;YAEd,SAAS;QACX,CAAA,MAAO,IAAI1I,IAAM,EAAA;YACfxI,GAAAA,CAAIm4B,MAAM,CAACpnB,KAAAA,CAAM/W,CAAC,EAAE+W,MAAM9W,CAAC,CAAA,CAAA;YAC3BuO,IAAAA,GAAO,KAAK,CAAA;SACP,MAAA;YACLinC,UAAAA,CAAWzvC,GAAKgE,EAAAA,IAAAA,EAAM+M,KAAOpX,EAAAA,OAAAA,EAASpB,QAAQs2C,OAAO,CAAA,CAAA;SACtD;QAED7qC,IAAO+M,GAAAA,KAAAA,CAAAA;IACT,CAAA;IAEA,IAAI7a,IAAM,EAAA;QACR6a,KAAAA,GAAQD,MAAM,CAAC,CAACjf,KAAS8H,GAAAA,CAAAA,OAAUqB,GAAAA,IAAAA,GAAO,CAAA,CAAC,IAAK6I,KAAM,CAAA,CAAA;QACtD4rC,UAAAA,CAAWzvC,GAAKgE,EAAAA,IAAAA,EAAM+M,KAAOpX,EAAAA,OAAAA,EAASpB,QAAQs2C,OAAO,CAAA,CAAA;KACtD;IAED,OAAO,CAAC,CAAC34C,IAAAA,CAAAA;AACX,CAAA;AAiBA,SAASw5C,gBAAgB1vC,GAAG,EAAE2X,IAAI,EAAEO,OAAO,EAAE6H,MAAM,EAAE;IACnD,MAAMjP,MAAAA,GAAS6G,KAAK7G,MAAM,CAAA;IAC1B,MAAM,EAACjN,KAAK,EAAEhS,KAAK,EAAEmJ,IAAAA,EAAK,GAAGk0C,QAASp+B,CAAAA,MAAAA,EAAQoH,OAAS6H,EAAAA,MAAAA,CAAAA,CAAAA;IACvD,MAAM,EAACvX,OAAO,IAAI,EAAE7O,OAAO,EAAC,GAAGomB,MAAAA,IAAU,CAAA,CAAC,CAAA;IAC1C,IAAI4vB,IAAO,GAAA,CAAA,CAAA;IACX,IAAIC,MAAS,GAAA,CAAA,CAAA;IACb,IAAIn9C,CAAGse,EAAAA,KAAAA,EAAO8+B,KAAOh9B,EAAAA,IAAAA,EAAMJ,IAAMq9B,EAAAA,KAAAA,CAAAA;IAEjC,MAAMC,UAAa,GAAA,CAAC90C,KAAU,GAACpJ,CAAAA,KAAAA,GAAAA,CAAS8H,OAAAA,GAAUqB,IAAOC,GAAAA,KAAAA,GAAQA,KAAI,CAAC,IAAK4I,KAAAA,CAAAA;IAC3E,MAAMmsC,QAAQ,IAAM;QAClB,IAAIn9B,SAASJ,IAAM,EAAA;YAEjBzS,GAAIo4B,CAAAA,MAAM,CAACuX,IAAMl9B,EAAAA,IAAAA,CAAAA,CAAAA;YACjBzS,GAAIo4B,CAAAA,MAAM,CAACuX,IAAM98B,EAAAA,IAAAA,CAAAA,CAAAA;YAGjB7S,GAAIo4B,CAAAA,MAAM,CAACuX,IAAMG,EAAAA,KAAAA,CAAAA,CAAAA;SAClB;IACH,CAAA,CAAA;IAEA,IAAItnC,IAAM,EAAA;QACRuI,KAAQD,GAAAA,MAAM,CAACi/B,UAAAA,CAAW,CAAG,CAAA,CAAA,CAAA;QAC7B/vC,GAAAA,CAAIm4B,MAAM,CAACpnB,KAAAA,CAAM/W,CAAC,EAAE+W,MAAM9W,CAAC,CAAA,CAAA;KAC5B;IAED,IAAKxH,CAAI,GAAA,CAAA,EAAGA,CAAKuI,IAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QAC1Bse,KAAQD,GAAAA,MAAM,CAACi/B,UAAAA,CAAWt9C,CAAG,CAAA,CAAA,CAAA;QAE7B,IAAIse,KAAAA,CAAMG,IAAI,EAAE;YAEd,SAAS;SACV;QAED,MAAMlX,CAAAA,GAAI+W,MAAM/W,CAAC,CAAA;QACjB,MAAMC,CAAAA,GAAI8W,MAAM9W,CAAC,CAAA;QACjB,MAAMg2C,MAAAA,GAASj2C,CAAI,GAAA,CAAA,CAAA;QAEnB,IAAIi2C,WAAWJ,KAAO,EAAA;YAEpB,IAAI51C,IAAI4Y,IAAM,EAAA;gBACZA,IAAO5Y,GAAAA,CAAAA,CAAAA;aACF,MAAA,IAAIA,IAAIwY,IAAM,EAAA;gBACnBA,IAAOxY,GAAAA,CAAAA,CAAAA;aACR;YAED01C,IAAAA,GAAO,CAACC,MAAAA,GAASD,IAAO31C,GAAAA,CAAAA,IAAK,EAAE41C,MAAAA,CAAAA;SAC1B,MAAA;YACLI,KAAAA,EAAAA,CAAAA;YAGAhwC,GAAIo4B,CAAAA,MAAM,CAACp+B,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YAEd41C,KAAQI,GAAAA,MAAAA,CAAAA;YACRL,MAAS,GAAA,CAAA,CAAA;YACT/8B,IAAAA,GAAOJ,IAAOxY,GAAAA,CAAAA,CAAAA;SACf;QAED61C,KAAQ71C,GAAAA,CAAAA,CAAAA;IACV,CAAA;IACA+1C,KAAAA,EAAAA,CAAAA;AACF,CAAA;AAOA,SAASE,iBAAkBv4B,CAAAA,IAAI,EAAE;IAC/B,MAAMje,IAAAA,GAAOie,KAAKpf,OAAO,CAAA;IACzB,MAAM8b,aAAa3a,IAAK2a,CAAAA,UAAU,IAAI3a,IAAK2a,CAAAA,UAAU,CAAC7hB,MAAM,CAAA;IAC5D,MAAM29C,WAAAA,GAAc,CAACx4B,IAAKM,CAAAA,UAAU,IAAI,CAACN,IAAAA,CAAK1hB,KAAK,IAAI,CAACyD,KAAKq1C,OAAO,IAAIr1C,KAAKs1C,sBAAsB,KAAK,cAAc,CAACt1C,IAAAA,CAAKm1C,OAAO,IAAI,CAACx6B,UAAAA,CAAAA;IACxI,OAAO87B,WAAAA,GAAcT,kBAAkBF,WAAW,CAAA;AACpD,CAAA;AAKA,SAASY,uBAAwB73C,CAAAA,OAAO,EAAE;IACxC,IAAIA,OAAAA,CAAQs2C,OAAO,EAAE;QACnB,OAAOwB,yKAAAA,CAAAA;KACR;IAED,IAAI93C,QAAQw2C,OAAO,IAAIx2C,OAAQy2C,CAAAA,sBAAsB,KAAK,UAAY,EAAA;QACpE,OAAOsB,yKAAAA,CAAAA;KACR;IAED,OAAOC,yKAAAA,CAAAA;AACT,CAAA;AAEA,SAASC,mBAAAA,CAAoBxwC,GAAG,EAAE2X,IAAI,EAAE9lB,KAAK,EAAEgS,KAAK,EAAE;IACpD,IAAI4sC,IAAAA,GAAO94B,KAAK+4B,KAAK,CAAA;IACrB,IAAI,CAACD,IAAM,EAAA;QACTA,IAAO94B,GAAAA,IAAAA,CAAK+4B,KAAK,GAAG,IAAIC,MAAAA,EAAAA,CAAAA;QACxB,IAAIh5B,IAAK84B,CAAAA,IAAI,CAACA,IAAAA,EAAM5+C,OAAOgS,KAAQ,CAAA,EAAA;YACjC4sC,IAAAA,CAAKjG,SAAS,EAAA,CAAA;SACf;KACF;IACDgE,QAASxuC,CAAAA,GAAAA,EAAK2X,KAAKpf,OAAO,CAAA,CAAA;IAC1ByH,GAAAA,CAAIq4B,MAAM,CAACoY,IAAAA,CAAAA,CAAAA;AACb,CAAA;AAEA,SAASG,gBAAAA,CAAiB5wC,GAAG,EAAE2X,IAAI,EAAE9lB,KAAK,EAAEgS,KAAK,EAAE;IACjD,MAAM,EAACgtC,QAAAA,EAAUt4C,OAAAA,EAAQ,GAAGof,IAAAA,CAAAA;IAC5B,MAAMm5B,gBAAgBZ,iBAAkBv4B,CAAAA,IAAAA,CAAAA,CAAAA;IAExC,KAAK,MAAMO,WAAW24B,QAAU,CAAA;QAC9BrC,QAASxuC,CAAAA,GAAAA,EAAKzH,OAAS2f,EAAAA,OAAAA,CAAQnE,KAAK,CAAA,CAAA;QACpC/T,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QACb,IAAI4Y,aAAAA,CAAc9wC,GAAK2X,EAAAA,IAAAA,EAAMO,OAAS,EAAA;YAACrmB,KAAAA;YAAO+H,GAAAA,EAAK/H,QAAQgS,KAAQ,GAAA,CAAA;SAAK,CAAA,EAAA;YACtE7D,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;SACd;QACDxqC,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;IACZ,CAAA;AACF,CAAA;AAEA,MAAM0Y,SAAAA,GAAY,OAAOJ,MAAW,KAAA,UAAA,CAAA;AAEpC,SAASj+C,IAAAA,CAAKsN,GAAG,EAAE2X,IAAI,EAAE9lB,KAAK,EAAEgS,KAAK,EAAE;IACrC,IAAIktC,aAAa,CAACp5B,IAAAA,CAAKpf,OAAO,CAAC2f,OAAO,EAAE;QACtCs4B,mBAAoBxwC,CAAAA,GAAAA,EAAK2X,MAAM9lB,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;KACjC,MAAA;QACL+sC,gBAAiB5wC,CAAAA,GAAAA,EAAK2X,MAAM9lB,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;KACpC;AACH,CAAA;AAEe,MAAMmtC,WAAoBloB,SAAAA,OAAAA,CAAAA;IAEvC,OAAOnsB,KAAK,MAAO,CAAA;IAKnB,OAAO/E,QAAW,GAAA;QAChB82C,cAAgB,EAAA,MAAA;QAChBr6B,UAAAA,EAAY,EAAE;QACdE,gBAAkB,EAAA,CAAA;QAClBE,eAAiB,EAAA,OAAA;QACjBE,WAAa,EAAA,CAAA;QACbs8B,eAAAA,EAAiB,IAAI;QACrBjC,sBAAwB,EAAA,SAAA;QACxB/tC,IAAAA,EAAM,KAAK;QACXyW,QAAAA,EAAU,KAAK;QACfm3B,OAAAA,EAAS,KAAK;QACdE,OAAS,EAAA,CAAA;KACT,CAAA;IAKF,OAAOhmB,aAAgB,GAAA;QACrB7U,eAAiB,EAAA,iBAAA;QACjBW,WAAa,EAAA,aAAA;KACb,CAAA;IAGF,OAAO3B,WAAc,GAAA;QACnBC,WAAAA,EAAa,IAAI;QACjBC,UAAAA,EAAY,CAAC5D,IAAAA,GAASA,IAAS,KAAA,YAAA,IAAgBA,IAAS,KAAA,MAAA;KACxD,CAAA;IAGFjf,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,EAAA,CAAA;QAEL,IAAI,CAAC+iB,QAAQ,GAAG,IAAI,CAAA;QACpB,IAAI,CAAC5f,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAACwG,MAAM,GAAGxG,SAAAA,CAAAA;QACd,IAAI,CAACoF,KAAK,GAAGpF,SAAAA,CAAAA;QACb,IAAI,CAACspB,SAAS,GAAGtpB,SAAAA,CAAAA;QACjB,IAAI,CAAC6/C,KAAK,GAAG7/C,SAAAA,CAAAA;QACb,IAAI,CAACqgD,OAAO,GAAGrgD,SAAAA,CAAAA;QACf,IAAI,CAACsgD,SAAS,GAAGtgD,SAAAA,CAAAA;QACjB,IAAI,CAAConB,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAACm5B,cAAc,GAAG,KAAK,CAAA;QAC3B,IAAI,CAACp5B,aAAa,GAAGnnB,SAAAA,CAAAA;QAErB,IAAIuE,GAAK,EAAA;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;IACH,CAAA;IAEAyjB,mBAAoB9S,CAAAA,SAAS,EAAEhE,SAAS,EAAE;QACxC,MAAMxJ,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,IAAI,CAACA,OAAAA,CAAQw2C,OAAO,IAAIx2C,OAAAA,CAAQy2C,sBAAsB,KAAK,UAAS,KAAM,CAACz2C,QAAQs2C,OAAO,IAAI,CAAC,IAAI,CAACuC,cAAc,EAAE;YAClH,MAAMl7C,IAAAA,GAAOqC,OAAQmf,CAAAA,QAAQ,GAAG,IAAI,CAACzhB,KAAK,GAAG,IAAI,CAACkkB,SAAS,CAAA;gBAC3Dk3B,yKAAAA,EAA2B,IAAI,CAACH,OAAO,EAAE34C,OAAAA,EAASwN,WAAW7P,IAAM6L,EAAAA,SAAAA,CAAAA,CAAAA;YACnE,IAAI,CAACqvC,cAAc,GAAG,IAAI,CAAA;SAC3B;IACH,CAAA;IAEA,IAAItgC,MAAAA,CAAOA,MAAM,EAAE;QACjB,IAAI,CAACogC,OAAO,GAAGpgC,MAAAA,CAAAA;QACf,OAAO,IAAI,CAACqgC,SAAS,CAAA;QACrB,OAAO,IAAI,CAACT,KAAK,CAAA;QACjB,IAAI,CAACU,cAAc,GAAG,KAAK,CAAA;IAC7B,CAAA;IAEA,IAAItgC,MAAS,GAAA;QACX,OAAO,IAAI,CAACogC,OAAO,CAAA;IACrB,CAAA;IAEA,IAAIL,QAAW,GAAA;QACb,OAAO,IAAI,CAACM,SAAS,IAAA,CAAK,IAAI,CAACA,SAAS,OAAGG,yKAAAA,EAAiB,IAAI,EAAE,IAAI,CAAC/4C,OAAO,CAAC2f,OAAO,CAAA,CAAA,CAAA;IACxF,CAAA;IAMA6R,KAAQ,GAAA;QACN,MAAM8mB,QAAAA,GAAW,IAAI,CAACA,QAAQ,CAAA;QAC9B,MAAM//B,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,OAAO+/B,QAAAA,CAASr+C,MAAM,IAAIse,MAAM,CAAC+/B,QAAQ,CAAC,CAAA,CAAE,CAACh/C,KAAK,CAAC,CAAA;IACrD,CAAA;IAMA4c,IAAO,GAAA;QACL,MAAMoiC,QAAAA,GAAW,IAAI,CAACA,QAAQ,CAAA;QAC9B,MAAM//B,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,MAAMjN,KAAAA,GAAQgtC,SAASr+C,MAAM,CAAA;QAC7B,OAAOqR,KAAAA,IAASiN,MAAM,CAAC+/B,QAAQ,CAAChtC,KAAQ,GAAA,CAAA,CAAE,CAACjK,GAAG,CAAC,CAAA;IACjD,CAAA;IASA23C,WAAYxgC,CAAAA,KAAK,EAAEspB,QAAQ,EAAE;QAC3B,MAAM9hC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMU,KAAAA,GAAQ8X,KAAK,CAACspB,QAAS,CAAA,CAAA;QAC7B,MAAMvpB,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,MAAM+/B,QAAAA,OAAWW,yKAAe,EAAA,IAAI,EAAE;YAACnX,QAAAA;YAAUxoC,KAAOoH,EAAAA,KAAAA;YAAOW,GAAKX,EAAAA,KAAAA;QAAK,CAAA,CAAA,CAAA;QAEzE,IAAI,CAAC43C,QAASr+C,CAAAA,MAAM,EAAE;YACpB,OAAA;SACD;QAED,MAAMspB,SAAS,EAAE,CAAA;QACjB,MAAM21B,eAAerB,uBAAwB73C,CAAAA,OAAAA,CAAAA,CAAAA;QAC7C,IAAI9F,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAO61C,GAAAA,QAAAA,CAASr+C,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACjD,MAAM,EAACZ,KAAAA,EAAO+H,GAAAA,EAAI,GAAGi3C,QAAQ,CAACp+C,CAAE,CAAA,CAAA;YAChC,MAAMslC,EAAAA,GAAKjnB,MAAM,CAACjf,KAAM,CAAA,CAAA;YACxB,MAAMmmC,EAAAA,GAAKlnB,MAAM,CAAClX,GAAI,CAAA,CAAA;YACtB,IAAIm+B,OAAOC,EAAI,EAAA;gBACblc,MAAAA,CAAOroB,IAAI,CAACskC,EAAAA,CAAAA,CAAAA;gBACZ,SAAS;aACV;YACD,MAAMx9B,CAAAA,GAAI5I,KAAKwY,GAAG,CAAC,CAAClR,KAAAA,GAAQ8+B,EAAE,CAACsC,QAAAA,CAAS,IAAA,CAAKrC,EAAE,CAACqC,QAAAA,CAAS,GAAGtC,EAAE,CAACsC,SAAS,CAAD,CAAA,CAAA;YACvE,MAAMqX,eAAeD,YAAa1Z,CAAAA,EAAAA,EAAIC,EAAIz9B,EAAAA,CAAAA,EAAGhC,QAAQs2C,OAAO,CAAA,CAAA;YAC5D6C,YAAY,CAACrX,QAAAA,CAAS,GAAGtpB,KAAK,CAACspB,QAAS,CAAA,CAAA;YACxCve,MAAAA,CAAOroB,IAAI,CAACi+C,YAAAA,CAAAA,CAAAA;QACd,CAAA;QACA,OAAO51B,MAAAA,CAAOtpB,MAAM,KAAK,CAAA,GAAIspB,MAAM,CAAC,CAAA,CAAE,GAAGA,MAAM,CAAA;IACjD,CAAA;IAgBA0zB,YAAYxvC,GAAG,EAAEkY,OAAO,EAAE6H,MAAM,EAAE;QAChC,MAAM+wB,aAAAA,GAAgBZ,kBAAkB,IAAI,CAAA,CAAA;QAC5C,OAAOY,aAAc9wC,CAAAA,GAAAA,EAAK,IAAI,EAAEkY,OAAS6H,EAAAA,MAAAA,CAAAA,CAAAA;IAC3C,CAAA;IASA0wB,KAAKzwC,GAAG,EAAEnO,KAAK,EAAEgS,KAAK,EAAE;QACtB,MAAMgtC,QAAAA,GAAW,IAAI,CAACA,QAAQ,CAAA;QAC9B,MAAMC,aAAAA,GAAgBZ,kBAAkB,IAAI,CAAA,CAAA;QAC5C,IAAIh6C,IAAAA,GAAO,IAAI,CAACD,KAAK,CAAA;QAErBpE,KAAAA,GAAQA,KAAS,IAAA,CAAA,CAAA;QACjBgS,KAAAA,GAAQA,SAAU,IAAI,CAACiN,MAAM,CAACte,MAAM,GAAGX,KAAAA,CAAAA;QAEvC,KAAK,MAAMqmB,WAAW24B,QAAU,CAAA;YAC9B36C,IAAAA,IAAQ46C,aAAc9wC,CAAAA,GAAAA,EAAK,IAAI,EAAEkY,OAAS,EAAA;gBAACrmB,KAAAA;gBAAO+H,GAAAA,EAAK/H,QAAQgS,KAAQ,GAAA,CAAA;YAAC,CAAA,CAAA,CAAA;QAC1E,CAAA;QACA,OAAO,CAAC,CAAC3N,IAAAA,CAAAA;IACX,CAAA;IASAxD,IAAAA,CAAKsN,GAAG,EAAE+F,SAAS,EAAElU,KAAK,EAAEgS,KAAK,EAAE;QACjC,MAAMtL,OAAU,GAAA,IAAI,CAACA,OAAO,IAAI,CAAA,CAAC,CAAA;QACjC,MAAMuY,MAAS,GAAA,IAAI,CAACA,MAAM,IAAI,EAAE,CAAA;QAEhC,IAAIA,MAAOte,CAAAA,MAAM,IAAI+F,OAAAA,CAAQoc,WAAW,EAAE;YACxC3U,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YAERhlC,IAAKsN,CAAAA,GAAAA,EAAK,IAAI,EAAEnO,KAAOgS,EAAAA,KAAAA,CAAAA,CAAAA;YAEvB7D,GAAAA,CAAI43B,OAAO,EAAA,CAAA;SACZ;QAED,IAAI,IAAI,CAACzf,QAAQ,EAAE;YAEjB,IAAI,CAACi5B,cAAc,GAAG,KAAK,CAAA;YAC3B,IAAI,CAACV,KAAK,GAAG7/C,SAAAA,CAAAA;SACd;IACH,CAAA;AACF;AClbA,SAAS8sB,SAAAA,CAAQtB,EAAgB,EAAE0C,GAAW,EAAE7iB,IAAe,EAAEohB,gBAA0B,EAAE;IAC3F,MAAM/kB,OAAAA,GAAU8jB,GAAG9jB,OAAO,CAAA;IAC1B,MAAM,EAAC,CAAC2D,IAAK,CAAA,EAAEjD,KAAAA,EAAM,GAAGojB,EAAGwB,CAAAA,QAAQ,CAAC;QAAC3hB,IAAAA;KAAK,EAAEohB,gBAAAA,CAAAA,CAAAA;IAE5C,OAAQ3rB,IAAAA,CAAKwY,GAAG,CAAC4U,GAAAA,GAAM9lB,SAASV,OAAQsY,CAAAA,MAAM,GAAGtY,OAAAA,CAAQo5C,SAAS,CAAA;AACpE,CAAA;AAIe,MAAMC,YAAqB9oB,SAAAA,OAAAA,CAAAA;IAExC,OAAOnsB,KAAK,OAAQ,CAAA;IAEpBiB,MAA4B,CAAA;IAC5BsT,IAAe,CAAA;IACfjd,IAAe,CAAA;IAEf;;GAEC,GACD,OAAO2D,QAAW,GAAA;QAChB+c,WAAa,EAAA,CAAA;QACbg9B,SAAW,EAAA,CAAA;QACXv6B,gBAAkB,EAAA,CAAA;QAClBy6B,WAAa,EAAA,CAAA;QACbn+B,UAAY,EAAA,QAAA;QACZ7C,MAAQ,EAAA,CAAA;QACRO,QAAU,EAAA,CAAA;KACV,CAAA;IAEF;;GAEC,GACD,OAAO2X,aAAgB,GAAA;QACrB7U,eAAiB,EAAA,iBAAA;QACjBW,WAAa,EAAA,aAAA;KACb,CAAA;IAEFtkB,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,EAAA,CAAA;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAAC+M,MAAM,GAAG/M,SAAAA,CAAAA;QACd,IAAI,CAACqgB,IAAI,GAAGrgB,SAAAA,CAAAA;QACZ,IAAI,CAACoD,IAAI,GAAGpD,SAAAA,CAAAA;QAEZ,IAAIuE,GAAK,EAAA;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;IACH,CAAA;IAEAuoB,OAAAA,CAAQm0B,MAAc,EAAEC,MAAc,EAAEz0B,gBAA0B,EAAE;QAClE,MAAM/kB,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM,EAACyB,CAAAA,EAAGC,CAAAA,EAAE,GAAG,IAAI,CAAC4jB,QAAQ,CAAC;YAAC,GAAA;YAAK,GAAA;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAAS3rB,KAAKyrB,GAAG,CAAC00B,SAAS93C,CAAG,EAAA,CAAA,CAAA,GAAKrI,KAAKyrB,GAAG,CAAC20B,SAAS93C,CAAG,EAAA,CAAA,CAAA,GAAMtI,KAAKyrB,GAAG,CAAC7kB,QAAQo5C,SAAS,GAAGp5C,OAAQsY,CAAAA,MAAM,EAAE,CAAA,CAAA,CAAA;IAC7G,CAAA;IAEAmhC,QAASF,CAAAA,MAAc,EAAEx0B,gBAA0B,EAAE;QACnD,OAAOK,SAAQ,CAAA,IAAI,EAAEm0B,MAAAA,EAAQ,GAAKx0B,EAAAA,gBAAAA,CAAAA,CAAAA;IACpC,CAAA;IAEA20B,QAASF,CAAAA,MAAc,EAAEz0B,gBAA0B,EAAE;QACnD,OAAOK,SAAQ,CAAA,IAAI,EAAEo0B,MAAAA,EAAQ,GAAKz0B,EAAAA,gBAAAA,CAAAA,CAAAA;IACpC,CAAA;IAEAY,cAAAA,CAAeZ,gBAA0B,EAAE;QACzC,MAAM,EAACtjB,CAAAA,EAAGC,CAAAA,EAAE,GAAG,IAAI,CAAC4jB,QAAQ,CAAC;YAAC,GAAA;YAAK,GAAA;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAAO;YAACtjB,CAAAA;YAAGC,CAAAA;QAAC,CAAA,CAAA;IACd,CAAA;IAEAf,IAAAA,CAAKX,OAAmD,EAAE;QACxDA,OAAAA,GAAUA,OAAW,IAAA,IAAI,CAACA,OAAO,IAAI,CAAA,CAAC,CAAA;QACtC,IAAIsY,MAAAA,GAAStY,OAAQsY,CAAAA,MAAM,IAAI,CAAA,CAAA;QAC/BA,MAAAA,GAASlf,KAAKoC,GAAG,CAAC8c,QAAQA,MAAUtY,IAAAA,OAAAA,CAAQs5C,WAAW,IAAI,CAAA,CAAA,CAAA;QAC3D,MAAMl9B,WAAc9D,GAAAA,MAAAA,IAAUtY,OAAQoc,CAAAA,WAAW,IAAI,CAAA,CAAA;QACrD,OAAO,CAAC9D,MAAS8D,GAAAA,WAAU,IAAK,CAAA,CAAA;IAClC,CAAA;IAEAjiB,IAAKsN,CAAAA,GAA6B,EAAE8F,IAAe,EAAE;QACnD,MAAMvN,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAE5B,IAAI,IAAI,CAAC2Y,IAAI,IAAI3Y,OAAQsY,CAAAA,MAAM,GAAG,GAAO,IAAA,KAAC6M,wKAAe,EAAA,IAAI,EAAE5X,IAAM,EAAA,IAAI,CAAC5M,IAAI,CAACX,WAAW,CAAI,CAAA,EAAA;YAC5F,OAAA;SACD;QAEDyH,GAAI4U,CAAAA,WAAW,GAAGrc,OAAAA,CAAQsc,WAAW,CAAA;QACrC7U,GAAI0U,CAAAA,SAAS,GAAGnc,OAAAA,CAAQoc,WAAW,CAAA;QACnC3U,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ2b,eAAe,CAAA;YACvCg+B,yKAAUlyC,EAAAA,GAAAA,EAAKzH,SAAS,IAAI,CAACyB,CAAC,EAAE,IAAI,CAACC,CAAC,CAAA,CAAA;IACxC,CAAA;IAEAqiB,QAAW,GAAA;QACT,MAAM/jB,OAAU,GAAA,IAAI,CAACA,OAAO,IAAI,CAAA,CAAC,CAAA;;QAEjC,OAAOA,OAAQsY,CAAAA,MAAM,GAAGtY,OAAAA,CAAQo5C,SAAS,CAAA;IAC3C,CAAA;AACF;AC5FA,SAASQ,YAAAA,CAAaC,GAAG,EAAE90B,gBAAgB,EAAE;IAC3C,MAAM,EAACtjB,CAAC,EAAEC,CAAC,EAAEoS,IAAAA,EAAMkC,KAAAA,EAAOD,MAAAA,EAAO,GAA4B8jC,GAAAA,CAAIv0B,QAAQ,CAAC;QAAC,GAAA;QAAK,GAAA;QAAK,MAAA;QAAQ,OAAA;QAAS,QAAA;KAAS,EAAEP,gBAAAA,CAAAA,CAAAA;IAEjH,IAAIjjB,IAAAA,EAAMF,KAAOD,EAAAA,GAAAA,EAAKE,MAAQi4C,EAAAA,IAAAA,CAAAA;IAE9B,IAAID,GAAAA,CAAIhmC,UAAU,EAAE;QAClBimC,IAAAA,GAAO/jC,MAAS,GAAA,CAAA,CAAA;QAChBjU,IAAO1I,GAAAA,IAAAA,CAAKC,GAAG,CAACoI,CAAGqS,EAAAA,IAAAA,CAAAA,CAAAA;QACnBlS,KAAQxI,GAAAA,IAAAA,CAAKoC,GAAG,CAACiG,CAAGqS,EAAAA,IAAAA,CAAAA,CAAAA;QACpBnS,GAAAA,GAAMD,CAAIo4C,GAAAA,IAAAA,CAAAA;QACVj4C,MAAAA,GAASH,CAAIo4C,GAAAA,IAAAA,CAAAA;KACR,MAAA;QACLA,IAAAA,GAAO9jC,KAAQ,GAAA,CAAA,CAAA;QACflU,IAAAA,GAAOL,CAAIq4C,GAAAA,IAAAA,CAAAA;QACXl4C,KAAAA,GAAQH,CAAIq4C,GAAAA,IAAAA,CAAAA;QACZn4C,GAAMvI,GAAAA,IAAAA,CAAKC,GAAG,CAACqI,CAAGoS,EAAAA,IAAAA,CAAAA,CAAAA;QAClBjS,MAASzI,GAAAA,IAAAA,CAAKoC,GAAG,CAACkG,CAAGoS,EAAAA,IAAAA,CAAAA,CAAAA;KACtB;IAED,OAAO;QAAChS,IAAAA;QAAMH,GAAAA;QAAKC,KAAAA;QAAOC,MAAAA;IAAM,CAAA,CAAA;AAClC,CAAA;AAEA,SAASk4C,WAAAA,CAAYphC,IAAI,EAAEjY,KAAK,EAAErH,GAAG,EAAEmC,GAAG,EAAE;IAC1C,OAAOmd,IAAO,GAAA,CAAA,OAAI6gB,wKAAY94B,EAAAA,KAAAA,EAAOrH,KAAKmC,GAAI,CAAA,CAAA;AAChD,CAAA;AAEA,SAASw+C,iBAAiBH,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;IACzC,MAAMx5C,KAAQm5C,GAAAA,GAAAA,CAAI75C,OAAO,CAACoc,WAAW,CAAA;IACrC,MAAMzD,IAAAA,GAAOkhC,IAAI5lC,aAAa,CAAA;IAC9B,MAAMy+B,QAAIyH,yKAAOz5C,EAAAA,KAAAA,CAAAA,CAAAA;IAEjB,OAAO;QACLsB,CAAAA,EAAG+3C,YAAYphC,IAAKhX,CAAAA,GAAG,EAAE+wC,CAAE/wC,CAAAA,GAAG,EAAE,CAAGu4C,EAAAA,IAAAA,CAAAA;QACnCj4C,CAAAA,EAAG83C,YAAYphC,IAAK/W,CAAAA,KAAK,EAAE8wC,CAAE9wC,CAAAA,KAAK,EAAE,CAAGq4C,EAAAA,IAAAA,CAAAA;QACvC/3C,CAAAA,EAAG63C,YAAYphC,IAAK9W,CAAAA,MAAM,EAAE6wC,CAAE7wC,CAAAA,MAAM,EAAE,CAAGq4C,EAAAA,IAAAA,CAAAA;QACzC/3C,CAAAA,EAAG43C,YAAYphC,IAAK7W,CAAAA,IAAI,EAAE4wC,CAAE5wC,CAAAA,IAAI,EAAE,CAAGm4C,EAAAA,IAAAA,CAAAA;IACvC,CAAA,CAAA;AACF,CAAA;AAEA,SAASzH,kBAAkBqH,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;IAC1C,MAAM,EAAChmC,kBAAkB,EAAC,GAAG2lC,GAAAA,CAAIv0B,QAAQ,CAAC;QAAC,oBAAA;KAAqB,CAAA,CAAA;IAChE,MAAM5kB,KAAQm5C,GAAAA,GAAAA,CAAI75C,OAAO,CAACsb,YAAY,CAAA;IACtC,MAAMo3B,QAAI0H,yKAAc15C,EAAAA,KAAAA,CAAAA,CAAAA;IACxB,MAAM25C,IAAOjhD,GAAAA,IAAAA,CAAKC,GAAG,CAAC4gD,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;IAC5B,MAAMvhC,IAAAA,GAAOkhC,IAAI5lC,aAAa,CAAA;IAI9B,MAAMqmC,YAAAA,GAAepmC,0BAAsBjV,wKAASyB,EAAAA,KAAAA,CAAAA,CAAAA;IAEpD,OAAO;QACL65C,OAAAA,EAASR,WAAY,CAAA,CAACO,YAAgB3hC,IAAAA,IAAAA,CAAKhX,GAAG,IAAIgX,IAAK7W,CAAAA,IAAI,EAAE4wC,CAAAA,CAAE6H,OAAO,EAAE,CAAGF,EAAAA,IAAAA,CAAAA;QAC3EG,QAAAA,EAAUT,WAAY,CAAA,CAACO,YAAgB3hC,IAAAA,IAAAA,CAAKhX,GAAG,IAAIgX,IAAK/W,CAAAA,KAAK,EAAE8wC,CAAAA,CAAE8H,QAAQ,EAAE,CAAGH,EAAAA,IAAAA,CAAAA;QAC9EI,UAAAA,EAAYV,WAAY,CAAA,CAACO,YAAgB3hC,IAAAA,IAAAA,CAAK9W,MAAM,IAAI8W,IAAK7W,CAAAA,IAAI,EAAE4wC,CAAAA,CAAE+H,UAAU,EAAE,CAAGJ,EAAAA,IAAAA,CAAAA;QACpFK,WAAAA,EAAaX,WAAY,CAAA,CAACO,YAAgB3hC,IAAAA,IAAAA,CAAK9W,MAAM,IAAI8W,IAAK/W,CAAAA,KAAK,EAAE8wC,CAAAA,CAAEgI,WAAW,EAAE,CAAGL,EAAAA,IAAAA,CAAAA;IACzF,CAAA,CAAA;AACF,CAAA;AAEA,SAASM,aAAAA,CAAcd,GAAG,EAAE;IAC1B,MAAMe,SAAShB,YAAaC,CAAAA,GAAAA,CAAAA,CAAAA;IAC5B,MAAM7jC,KAAQ4kC,GAAAA,MAAAA,CAAOh5C,KAAK,GAAGg5C,OAAO94C,IAAI,CAAA;IACxC,MAAMiU,MAAS6kC,GAAAA,MAAAA,CAAO/4C,MAAM,GAAG+4C,OAAOj5C,GAAG,CAAA;IACzC,MAAMwe,MAAS65B,GAAAA,gBAAAA,CAAiBH,GAAK7jC,EAAAA,KAAAA,GAAQ,GAAGD,MAAS,GAAA,CAAA,CAAA,CAAA;IACzD,MAAMuC,MAASk6B,GAAAA,iBAAAA,CAAkBqH,GAAK7jC,EAAAA,KAAAA,GAAQ,GAAGD,MAAS,GAAA,CAAA,CAAA,CAAA;IAE1D,OAAO;QACL8kC,KAAO,EAAA;YACLp5C,CAAAA,EAAGm5C,OAAO94C,IAAI;YACdJ,CAAAA,EAAGk5C,OAAOj5C,GAAG;YACbqnB,CAAGhT,EAAAA,KAAAA;YACHkT,CAAGnT,EAAAA,MAAAA;YACHuC,MAAAA;QACF,CAAA;QACA48B,KAAO,EAAA;YACLzzC,CAAAA,EAAGm5C,MAAO94C,CAAAA,IAAI,GAAGqe,MAAAA,CAAOhe,CAAC;YACzBT,CAAAA,EAAGk5C,MAAOj5C,CAAAA,GAAG,GAAGwe,MAAAA,CAAOne,CAAC;YACxBgnB,CAAAA,EAAGhT,KAAQmK,GAAAA,MAAAA,CAAOhe,CAAC,GAAGge,OAAOle,CAAC;YAC9BinB,CAAAA,EAAGnT,MAASoK,GAAAA,MAAAA,CAAOne,CAAC,GAAGme,OAAOje,CAAC;YAC/BoW,MAAQ,EAAA;gBACNiiC,OAAAA,EAASnhD,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAG8c,OAAOiiC,OAAO,GAAGnhD,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,CAAOne,CAAC,EAAEme,OAAOhe,CAAC,CAAA,CAAA;gBACjEq4C,QAAAA,EAAUphD,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAG8c,OAAOkiC,QAAQ,GAAGphD,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,CAAOne,CAAC,EAAEme,OAAOle,CAAC,CAAA,CAAA;gBACnEw4C,UAAAA,EAAYrhD,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAG8c,OAAOmiC,UAAU,GAAGrhD,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,CAAOje,CAAC,EAAEie,OAAOhe,CAAC,CAAA,CAAA;gBACvEu4C,WAAAA,EAAathD,IAAKoC,CAAAA,GAAG,CAAC,CAAA,EAAG8c,OAAOoiC,WAAW,GAAGthD,IAAKoC,CAAAA,GAAG,CAAC2kB,MAAAA,CAAOje,CAAC,EAAEie,OAAOle,CAAC,CAAA,CAAA;YAC3E,CAAA;QACF,CAAA;IACF,CAAA,CAAA;AACF,CAAA;AAEA,SAASmjB,OAAAA,CAAQy0B,GAAG,EAAEp4C,CAAC,EAAEC,CAAC,EAAEqjB,gBAAgB,EAAE;IAC5C,MAAM+1B,KAAAA,GAAQr5C,MAAM,IAAI,CAAA;IACxB,MAAMs5C,KAAAA,GAAQr5C,MAAM,IAAI,CAAA;IACxB,MAAMs5C,WAAWF,KAASC,IAAAA,KAAAA,CAAAA;IAC1B,MAAMH,MAASf,GAAAA,GAAAA,IAAO,CAACmB,QAAAA,IAAYpB,aAAaC,GAAK90B,EAAAA,gBAAAA,CAAAA,CAAAA;IAErD,OAAO61B,MAAAA,IAAAA,CACHE,KAASnF,QAAAA,yKAAAA,EAAWl0C,GAAGm5C,MAAO94C,CAAAA,IAAI,EAAE84C,MAAOh5C,CAAAA,KAAK,CAAA,CAChDm5C,IAAAA,CAAAA,aAASpF,yKAAWj0C,EAAAA,CAAAA,EAAGk5C,OAAOj5C,GAAG,EAAEi5C,MAAO/4C,CAAAA,MAAM,CAAA,CAAA,CAAA;AACtD,CAAA;AAEA,SAASo5C,SAAAA,CAAU3iC,MAAM,EAAE;IACzB,OAAOA,MAAAA,CAAOiiC,OAAO,IAAIjiC,MAAOkiC,CAAAA,QAAQ,IAAIliC,MAAOmiC,CAAAA,UAAU,IAAIniC,MAAAA,CAAOoiC,WAAW,CAAA;AACrF,CAAA;AAOA,SAASQ,iBAAAA,CAAkBzzC,GAAG,EAAEyqC,IAAI,EAAE;IACpCzqC,GAAAA,CAAIyqC,IAAI,CAACA,IAAKzwC,CAAAA,CAAC,EAAEywC,IAAAA,CAAKxwC,CAAC,EAAEwwC,IAAKlpB,CAAAA,CAAC,EAAEkpB,IAAAA,CAAKhpB,CAAC,CAAA,CAAA;AACzC,CAAA;AAEA,SAASiyB,WAAAA,CAAYjJ,IAAI,EAAEkJ,MAAM,EAAEC,OAAU,GAAA,CAAA,CAAE,EAAE;IAC/C,MAAM55C,CAAAA,GAAIywC,KAAKzwC,CAAC,KAAK45C,QAAQ55C,CAAC,GAAG,CAAC25C,MAAAA,GAAS,CAAC,CAAA;IAC5C,MAAM15C,CAAAA,GAAIwwC,KAAKxwC,CAAC,KAAK25C,QAAQ35C,CAAC,GAAG,CAAC05C,MAAAA,GAAS,CAAC,CAAA;IAC5C,MAAMpyB,IAAI,CAACkpB,KAAKzwC,CAAC,GAAGywC,KAAKlpB,CAAC,KAAKqyB,OAAQ55C,CAAAA,CAAC,GAAG45C,OAAQryB,CAAAA,CAAC,GAAGoyB,MAAS,GAAA,CAAC,IAAI35C,CAAAA,CAAAA;IACrE,MAAMynB,IAAI,CAACgpB,KAAKxwC,CAAC,GAAGwwC,KAAKhpB,CAAC,KAAKmyB,OAAQ35C,CAAAA,CAAC,GAAG25C,OAAQnyB,CAAAA,CAAC,GAAGkyB,MAAS,GAAA,CAAC,IAAI15C,CAAAA,CAAAA;IACrE,OAAO;QACLD,CAAGywC,EAAAA,IAAAA,CAAKzwC,CAAC,GAAGA,CAAAA;QACZC,CAAGwwC,EAAAA,IAAAA,CAAKxwC,CAAC,GAAGA,CAAAA;QACZsnB,CAAGkpB,EAAAA,IAAAA,CAAKlpB,CAAC,GAAGA,CAAAA;QACZE,CAAGgpB,EAAAA,IAAAA,CAAKhpB,CAAC,GAAGA,CAAAA;QACZ5Q,MAAAA,EAAQ45B,KAAK55B,MAAM;IACrB,CAAA,CAAA;AACF,CAAA;AAEe,MAAMgjC,UAAmB/qB,SAAAA,OAAAA,CAAAA;IAEtC,OAAOnsB,KAAK,KAAM,CAAA;IAKlB,OAAO/E,QAAW,GAAA;QAChB4U,aAAe,EAAA,OAAA;QACfmI,WAAa,EAAA,CAAA;QACbd,YAAc,EAAA,CAAA;QACd3G,aAAe,EAAA,MAAA;QACfwG,UAAY7iB,EAAAA,SAAAA;KACZ,CAAA;IAKF,OAAOk4B,aAAgB,GAAA;QACrB7U,eAAiB,EAAA,iBAAA;QACjBW,WAAa,EAAA,aAAA;KACb,CAAA;IAEFtkB,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,EAAA,CAAA;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAACub,UAAU,GAAGvb,SAAAA,CAAAA;QAClB,IAAI,CAACwb,IAAI,GAAGxb,SAAAA,CAAAA;QACZ,IAAI,CAAC0d,KAAK,GAAG1d,SAAAA,CAAAA;QACb,IAAI,CAACyd,MAAM,GAAGzd,SAAAA,CAAAA;QACd,IAAI,CAACqc,aAAa,GAAGrc,SAAAA,CAAAA;QAErB,IAAIuE,GAAK,EAAA;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;IACH,CAAA;IAEA1C,IAAAA,CAAKsN,GAAG,EAAE;QACR,MAAM,EAACkN,aAAAA,EAAe3U,OAAAA,EAAS,EAACsc,WAAAA,EAAaX,eAAAA,EAAgB,EAAC,GAAG,IAAI,CAAA;QACrE,MAAM,EAACu5B,KAAK,EAAE2F,KAAAA,EAAM,GAAGF,cAAc,IAAI,CAAA,CAAA;QACzC,MAAMY,cAAcN,SAAUJ,CAAAA,KAAAA,CAAMviC,MAAM,CAAA,GAAIkjC,yKAAAA,GAAqBN,iBAAiB,CAAA;QAEpFzzC,GAAAA,CAAI03B,IAAI,EAAA,CAAA;QAER,IAAI0b,KAAAA,CAAM7xB,CAAC,KAAKksB,KAAMlsB,CAAAA,CAAC,IAAI6xB,KAAAA,CAAM3xB,CAAC,KAAKgsB,KAAMhsB,CAAAA,CAAC,EAAE;YAC9CzhB,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;YACb4b,WAAY9zC,CAAAA,GAAAA,EAAK0zC,WAAYN,CAAAA,KAAAA,EAAOlmC,aAAeugC,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;YACnDztC,GAAAA,CAAI4F,IAAI,EAAA,CAAA;YACRkuC,WAAAA,CAAY9zC,GAAK0zC,EAAAA,WAAAA,CAAYjG,KAAO,EAAA,CAACvgC,aAAekmC,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;YACpDpzC,GAAAA,CAAIiU,SAAS,GAAGY,WAAAA,CAAAA;YAChB7U,GAAAA,CAAIiB,IAAI,CAAC,SAAA,CAAA,CAAA;SACV;QAEDjB,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QACb4b,WAAY9zC,CAAAA,GAAAA,EAAK0zC,YAAYjG,KAAOvgC,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;QACpClN,GAAAA,CAAIiU,SAAS,GAAGC,eAAAA,CAAAA;QAChBlU,GAAAA,CAAIiB,IAAI,EAAA,CAAA;QAERjB,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IACb,CAAA;IAEAja,OAAAA,CAAQm0B,MAAM,EAAEC,MAAM,EAAEz0B,gBAAgB,EAAE;QACxC,OAAOK,OAAQ,CAAA,IAAI,EAAEm0B,MAAAA,EAAQC,MAAQz0B,EAAAA,gBAAAA,CAAAA,CAAAA;IACvC,CAAA;IAEA00B,QAASF,CAAAA,MAAM,EAAEx0B,gBAAgB,EAAE;QACjC,OAAOK,OAAQ,CAAA,IAAI,EAAEm0B,MAAAA,EAAQ,IAAI,EAAEx0B,gBAAAA,CAAAA,CAAAA;IACrC,CAAA;IAEA20B,QAASF,CAAAA,MAAM,EAAEz0B,gBAAgB,EAAE;QACjC,OAAOK,OAAQ,CAAA,IAAI,EAAE,IAAI,EAAEo0B,MAAQz0B,EAAAA,gBAAAA,CAAAA,CAAAA;IACrC,CAAA;IAEAY,cAAAA,CAAeZ,gBAAgB,EAAE;QAC/B,MAAM,EAACtjB,CAAAA,EAAGC,CAAAA,EAAGoS,IAAI,EAAED,UAAU,EAAC,GAA4B,IAAI,CAACyR,QAAQ,CAAC;YAAC,GAAA;YAAK,GAAA;YAAK,MAAA;YAAQ,YAAA;SAAa,EAAEP,gBAAAA,CAAAA,CAAAA;QAC1G,OAAO;YACLtjB,CAAAA,EAAGoS,aAAa,CAACpS,IAAIqS,IAAG,IAAK,IAAIrS,CAAC;YAClCC,CAAAA,EAAGmS,aAAanS,CAAI,GAACA,CAAAA,CAAIoS,GAAAA,IAAG,IAAK,CAAC;QACpC,CAAA,CAAA;IACF,CAAA;IAEAiQ,QAAAA,CAASpgB,IAAI,EAAE;QACb,OAAOA,IAAAA,KAAS,GAAM,GAAA,IAAI,CAACqS,KAAK,GAAG,CAAA,GAAI,IAAI,CAACD,MAAM,GAAG,CAAC,CAAA;IACxD,CAAA;AACF;;;;;;;;ACpNA,MAAM0lC,aAAgB,GAAA;IACpB,mBAAA;IACA,mBAAA;IACA,mBAAA;IACA,mBAAA;IACA,mBAAA;IACA,oBAAA;IACA,oBAAA,CAAA,OAAA;CACD,CAAA;AAED,sCAAA;AACA,MAAMC,iBAAoB,GAAA,aAAA,GAAgBD,aAAAA,CAAclgC,GAAG,CAACnf,CAAAA,KAASA,GAAAA,KAAAA,CAAMu/C,OAAO,CAAC,MAAA,EAAQ,OAASA,CAAAA,CAAAA,OAAO,CAAC,GAAK,EAAA,QAAA,CAAA,CAAA,CAAA;AAEjH,SAASC,cAAAA,CAAe1hD,CAAS,EAAE;IACjC,OAAOuhD,aAAa,CAACvhD,CAAIuhD,GAAAA,aAAAA,CAAcxhD,MAAM,CAAC,CAAA;AAChD,CAAA;AAEA,SAAS4hD,kBAAAA,CAAmB3hD,CAAS,EAAE;IACrC,OAAOwhD,iBAAiB,CAACxhD,CAAIwhD,GAAAA,iBAAAA,CAAkBzhD,MAAM,CAAC,CAAA;AACxD,CAAA;AAEA,SAAS6hD,sBAAuBx1C,CAAAA,OAAqB,EAAEpM,CAAS,EAAE;IAChEoM,OAAQgW,CAAAA,WAAW,GAAGs/B,cAAe1hD,CAAAA,CAAAA,CAAAA,CAAAA;IACrCoM,OAAQqV,CAAAA,eAAe,GAAGkgC,kBAAmB3hD,CAAAA,CAAAA,CAAAA,CAAAA;IAE7C,OAAO,EAAEA,CAAAA,CAAAA;AACX,CAAA;AAEA,SAAS6hD,uBAAwBz1C,CAAAA,OAAqB,EAAEpM,CAAS,EAAE;IACjEoM,OAAQqV,CAAAA,eAAe,GAAGrV,OAAQhD,CAAAA,IAAI,CAACiY,GAAG,CAAC,IAAMqgC,cAAe1hD,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;IAEhE,OAAOA,CAAAA,CAAAA;AACT,CAAA;AAEA,SAAS8hD,wBAAyB11C,CAAAA,OAAqB,EAAEpM,CAAS,EAAE;IAClEoM,OAAQqV,CAAAA,eAAe,GAAGrV,OAAQhD,CAAAA,IAAI,CAACiY,GAAG,CAAC,IAAMsgC,kBAAmB3hD,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;IAEpE,OAAOA,CAAAA,CAAAA;AACT,CAAA;AAEA,SAAS+hD,YAAAA,CAAazjD,KAAY,EAAE;IAClC,IAAI0B,CAAI,GAAA,CAAA,CAAA;IAER,OAAO,CAACoM,SAAuBtD,YAAyB,GAAA;QACtD,MAAMoC,UAAa5M,GAAAA,KAAAA,CAAMwR,cAAc,CAAChH,cAAcoC,UAAU,CAAA;QAEhE,IAAIA,sBAAsBmV,kBAAoB,EAAA;YAC5CrgB,CAAAA,GAAI6hD,wBAAwBz1C,OAASpM,EAAAA,CAAAA,CAAAA,CAAAA;SAChC,MAAA,IAAIkL,sBAAsBmb,mBAAqB,EAAA;YACpDrmB,CAAAA,GAAI8hD,yBAAyB11C,OAASpM,EAAAA,CAAAA,CAAAA,CAAAA;QACxC,CAAA,MAAO,IAAIkL,UAAY,EAAA;YACrBlL,CAAAA,GAAI4hD,uBAAuBx1C,OAASpM,EAAAA,CAAAA,CAAAA,CAAAA;SACrC;IACH,CAAA,CAAA;AACF,CAAA;AAEA,SAASgiD,yBAAAA,CACPvhC,WAAkE,EAClE;IACA,IAAIwhC,CAAAA,CAAAA;IAEJ,IAAKA,KAAKxhC,WAAa,CAAA;QACrB,IAAIA,WAAW,CAACwhC,CAAAA,CAAE,CAAC7/B,WAAW,IAAI3B,WAAW,CAACwhC,CAAAA,CAAE,CAACxgC,eAAe,EAAE;YAChE,OAAO,IAAI,CAAA;SACZ;IACH,CAAA;IAEA,OAAO,KAAK,CAAA;AACd,CAAA;AAEA,SAASygC,wBAAAA,CACP9X,UAA4B,EAC5B;IACA,OAAOA,cAAAA,CAAeA,UAAAA,CAAWhoB,WAAW,IAAIgoB,UAAAA,CAAW3oB,eAAe,CAAD,CAAA;AAC3E,CAAA;AAEA,SAAS0gC,gCAAmC,GAAA;IAC1C,OAAOh9C,wKAAAA,CAASid,WAAW,KAAK,iBAAqBjd,IAAAA,wKAAAA,CAASsc,eAAe,KAAK,iBAAA,CAAA;AACpF,CAAA;AAEA,IAAA,gBAAe;IACbvX,EAAI,EAAA,QAAA;IAEJ/E,QAAU,EAAA;QACRgyB,OAAAA,EAAS,IAAI;QACbirB,aAAAA,EAAe,KAAK;IACtB,CAAA;IAEAxxB,YAAAA,CAAAA,CAAatyB,KAAY,EAAE+jD,KAAK,EAAEv8C,OAA4B,EAAE;QAC9D,IAAI,CAACA,OAAQqxB,CAAAA,OAAO,EAAE;YACpB,OAAA;SACD;QAED,MAAM,EACJ/tB,IAAAA,EAAM,EAACyG,QAAAA,EAAS,EAChB/J,OAAAA,EAASw8C,YAAY,EACtB,GAAGhkD,KAAAA,CAAMqG,MAAM,CAAA;QAChB,MAAM,EAACyO,QAAQ,EAAC,GAAGkvC,YAAAA,CAAAA;QAEnB,MAAMC,0BACJP,yBAA0BnyC,CAAAA,QAAAA,CAAAA,IAC1BqyC,yBAAyBI,YACxBlvC,CAAAA,IAAAA,QAAAA,IAAY4uC,0BAA0B5uC,QACvC+uC,CAAAA,IAAAA,gCAAAA,EAAAA,CAAAA;QAEF,IAAI,CAACr8C,OAAAA,CAAQs8C,aAAa,IAAIG,uBAAyB,EAAA;YACrD,OAAA;SACD;QAED,MAAMC,YAAYT,YAAazjD,CAAAA,KAAAA,CAAAA,CAAAA;QAE/BuR,QAAAA,CAAS/Q,OAAO,CAAC0jD,SAAAA,CAAAA,CAAAA;IACnB,CAAA;AACF,CAAE;AC5HF,SAASC,cAAAA,CAAer5C,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAEuc,cAAc,EAAE7nB,OAAO,EAAE;IASnE,MAAM48C,OAAAA,GAAU58C,OAAQ48C,CAAAA,OAAO,IAAI/0B,cAAAA,CAAAA;IAEnC,IAAI+0B,WAAWtxC,KAAO,EAAA;QACpB,OAAOhI,IAAKmgB,CAAAA,KAAK,CAACnqB,KAAAA,EAAOA,KAAQgS,GAAAA,KAAAA,CAAAA,CAAAA;KAClC;IAED,MAAMuxC,YAAY,EAAE,CAAA;IAEpB,MAAMC,WAAAA,GAAc,CAACxxC,KAAAA,GAAQ,CAAA,IAAA,CAAMsxC,UAAU,CAAA,CAAA,CAAA;IAC7C,IAAIG,YAAe,GAAA,CAAA,CAAA;IACnB,MAAMC,QAAAA,GAAW1jD,QAAQgS,KAAQ,GAAA,CAAA,CAAA;IAEjC,IAAIiG,CAAIjY,GAAAA,KAAAA,CAAAA;IACR,IAAIY,CAAAA,EAAG+iD,YAAcC,EAAAA,OAAAA,EAAS3vC,IAAM4vC,EAAAA,KAAAA,CAAAA;IAEpCN,SAAS,CAACE,YAAAA,EAAAA,CAAe,GAAGz5C,IAAI,CAACiO,CAAE,CAAA,CAAA;IAEnC,IAAKrX,CAAI,GAAA,CAAA,EAAGA,CAAI0iD,GAAAA,OAAAA,GAAU,GAAG1iD,CAAK,EAAA,CAAA;QAChC,IAAIk9C,IAAO,GAAA,CAAA,CAAA;QACX,IAAIgG,IAAO,GAAA,CAAA,CAAA;QACX,IAAIh5B,CAAAA,CAAAA;QAGJ,MAAMi5B,aAAAA,GAAgBjkD,IAAKoE,CAAAA,KAAK,CAAEtD,CAAAA,CAAI,GAAA,CAAA,IAAK4iD,WAAAA,CAAAA,GAAe,CAAIxjD,GAAAA,KAAAA,CAAAA;QAC9D,MAAMgkD,WAAclkD,GAAAA,IAAAA,CAAKC,GAAG,CAACD,KAAKoE,KAAK,CAAC,CAACtD,CAAI,GAAA,CAAA,IAAK4iD,WAAAA,CAAAA,GAAe,GAAGxxC,KAAShS,CAAAA,GAAAA,KAAAA,CAAAA;QAC7E,MAAMikD,iBAAiBD,WAAcD,GAAAA,aAAAA,CAAAA;QAErC,IAAKj5B,CAAIi5B,GAAAA,aAAAA,EAAej5B,CAAIk5B,GAAAA,WAAAA,EAAal5B,CAAK,EAAA,CAAA;YAC5CgzB,IAAAA,IAAQ9zC,IAAI,CAAC8gB,CAAE,CAAA,CAAC3iB,CAAC,CAAA;YACjB27C,IAAAA,IAAQ95C,IAAI,CAAC8gB,CAAE,CAAA,CAAC1iB,CAAC,CAAA;QACnB,CAAA;QAEA01C,IAAQmG,IAAAA,cAAAA,CAAAA;QACRH,IAAQG,IAAAA,cAAAA,CAAAA;QAGR,MAAMC,YAAYpkD,IAAKoE,CAAAA,KAAK,CAACtD,CAAAA,GAAI4iD,eAAe,CAAIxjD,GAAAA,KAAAA,CAAAA;QACpD,MAAMmkD,OAAUrkD,GAAAA,IAAAA,CAAKC,GAAG,CAACD,KAAKoE,KAAK,CAAC,CAACtD,CAAI,GAAA,CAAA,IAAK4iD,WAAAA,CAAAA,GAAe,GAAGxxC,KAAShS,CAAAA,GAAAA,KAAAA,CAAAA;QACzE,MAAM,EAACmI,CAAGi8C,EAAAA,OAAAA,EAASh8C,CAAAA,EAAGi8C,OAAAA,EAAQ,GAAGr6C,IAAI,CAACiO,CAAE,CAAA,CAAA;QAOxC2rC,OAAAA,GAAU3vC,OAAO,CAAC,CAAA,CAAA;QAElB,IAAK6W,CAAIo5B,GAAAA,SAAAA,EAAWp5B,CAAIq5B,GAAAA,OAAAA,EAASr5B,CAAK,EAAA,CAAA;YACpC7W,IAAAA,GAAO,GAAMnU,GAAAA,IAAAA,CAAKwY,GAAG,CACnB,CAAC8rC,OAAUtG,GAAAA,IAAG,IAAA,CAAM9zC,IAAI,CAAC8gB,EAAE,CAAC1iB,CAAC,GAAGi8C,OAAM,CACtC,GAACD,CAAAA,OAAAA,GAAUp6C,IAAI,CAAC8gB,CAAE,CAAA,CAAC3iB,CAAAA,IAAAA,CAAM27C,OAAOO,OAAM,CAAA,CAAA,CAAA;YAGxC,IAAIpwC,OAAO2vC,OAAS,EAAA;gBAClBA,OAAU3vC,GAAAA,IAAAA,CAAAA;gBACV0vC,YAAe35C,GAAAA,IAAI,CAAC8gB,CAAE,CAAA,CAAA;gBACtB+4B,KAAQ/4B,GAAAA,CAAAA,CAAAA;aACT;QACH,CAAA;QAEAy4B,SAAS,CAACE,eAAe,GAAGE,YAAAA,CAAAA;QAC5B1rC,CAAI4rC,GAAAA,KAAAA,CAAAA;IACN,CAAA;IAGAN,SAAS,CAACE,YAAAA,EAAAA,CAAe,GAAGz5C,IAAI,CAAC05C,QAAS,CAAA,CAAA;IAE1C,OAAOH,SAAAA,CAAAA;AACT,CAAA;AAEA,SAASe,gBAAAA,CAAiBt6C,IAAI,EAAEhK,KAAK,EAAEgS,KAAK,EAAEuc,cAAc,EAAE;IAC5D,IAAIuvB,IAAO,GAAA,CAAA,CAAA;IACX,IAAIC,MAAS,GAAA,CAAA,CAAA;IACb,IAAIn9C,CAAAA,EAAGse,OAAO/W,CAAGC,EAAAA,CAAAA,EAAG41C,OAAOuG,QAAUC,EAAAA,QAAAA,EAAUC,YAAYzjC,IAAMJ,EAAAA,IAAAA,CAAAA;IACjE,MAAM2iC,YAAY,EAAE,CAAA;IACpB,MAAMG,QAAAA,GAAW1jD,QAAQgS,KAAQ,GAAA,CAAA,CAAA;IAEjC,MAAM0yC,IAAO16C,GAAAA,IAAI,CAAChK,KAAAA,CAAM,CAACmI,CAAC,CAAA;IAC1B,MAAMw8C,IAAO36C,GAAAA,IAAI,CAAC05C,QAAAA,CAAS,CAACv7C,CAAC,CAAA;IAC7B,MAAMy8C,KAAKD,IAAOD,GAAAA,IAAAA,CAAAA;IAElB,IAAK9jD,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQgS,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;QACtCse,KAAQlV,GAAAA,IAAI,CAACpJ,CAAE,CAAA,CAAA;QACfuH,CAAAA,GAAI,CAAC+W,KAAAA,CAAM/W,CAAC,GAAGu8C,IAAG,IAAKE,EAAKr2B,GAAAA,cAAAA,CAAAA;QAC5BnmB,CAAAA,GAAI8W,MAAM9W,CAAC,CAAA;QACX,MAAMg2C,SAASj2C,CAAI,GAAA,CAAA,CAAA;QAEnB,IAAIi2C,WAAWJ,KAAO,EAAA;YAEpB,IAAI51C,IAAI4Y,IAAM,EAAA;gBACZA,IAAO5Y,GAAAA,CAAAA,CAAAA;gBACPm8C,QAAW3jD,GAAAA,CAAAA,CAAAA;aACN,MAAA,IAAIwH,IAAIwY,IAAM,EAAA;gBACnBA,IAAOxY,GAAAA,CAAAA,CAAAA;gBACPo8C,QAAW5jD,GAAAA,CAAAA,CAAAA;aACZ;YAGDk9C,IAAO,GAACC,CAAAA,MAASD,GAAAA,IAAAA,GAAO5+B,MAAM/W,CAAAA,IAAK,EAAE41C,MAAAA,CAAAA;SAChC,MAAA;YAEL,MAAM8G,YAAYjkD,CAAI,GAAA,CAAA,CAAA;YAEtB,IAAI,KAACoY,wKAAAA,EAAcurC,QAAa,CAAA,IAAA,KAACvrC,wKAAAA,EAAcwrC,QAAW,CAAA,EAAA;gBAKxD,MAAMM,kBAAqBhlD,GAAAA,IAAAA,CAAKC,GAAG,CAACwkD,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA;gBAC9C,MAAMO,kBAAqBjlD,GAAAA,IAAAA,CAAKoC,GAAG,CAACqiD,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA;gBAE9C,IAAIM,kBAAAA,KAAuBL,UAAcK,IAAAA,kBAAAA,KAAuBD,SAAW,EAAA;oBACzEtB,SAAAA,CAAU3hD,IAAI,CAAC;wBACb,GAAGoI,IAAI,CAAC86C,kBAAmB,CAAA;wBAC3B38C,CAAG21C,EAAAA,IAAAA;oBACL,CAAA,CAAA,CAAA;iBACD;gBACD,IAAIiH,kBAAAA,KAAuBN,UAAcM,IAAAA,kBAAAA,KAAuBF,SAAW,EAAA;oBACzEtB,SAAAA,CAAU3hD,IAAI,CAAC;wBACb,GAAGoI,IAAI,CAAC+6C,kBAAmB,CAAA;wBAC3B58C,CAAG21C,EAAAA,IAAAA;oBACL,CAAA,CAAA,CAAA;iBACD;aACF;YAID,IAAIl9C,CAAAA,GAAI,CAAKikD,IAAAA,SAAAA,KAAcJ,UAAY,EAAA;gBAErClB,SAAAA,CAAU3hD,IAAI,CAACoI,IAAI,CAAC66C,SAAU,CAAA,CAAA,CAAA;aAC/B;YAGDtB,SAAAA,CAAU3hD,IAAI,CAACsd,KAAAA,CAAAA,CAAAA;YACf8+B,KAAQI,GAAAA,MAAAA,CAAAA;YACRL,MAAS,GAAA,CAAA,CAAA;YACT/8B,IAAAA,GAAOJ,IAAOxY,GAAAA,CAAAA,CAAAA;YACdm8C,QAAAA,GAAWC,WAAWC,UAAa7jD,GAAAA,CAAAA,CAAAA;SACpC;IACH,CAAA;IAEA,OAAO2iD,SAAAA,CAAAA;AACT,CAAA;AAEA,SAASyB,qBAAAA,CAAsBh4C,OAAO,EAAE;IACtC,IAAIA,OAAAA,CAAQoZ,UAAU,EAAE;QACtB,MAAMpc,IAAAA,GAAOgD,QAAQwB,KAAK,CAAA;QAC1B,OAAOxB,QAAQoZ,UAAU,CAAA;QACzB,OAAOpZ,QAAQwB,KAAK,CAAA;QACpB3I,MAAOo/C,CAAAA,cAAc,CAACj4C,OAAAA,EAAS,MAAQ,EAAA;YACrCk4C,YAAAA,EAAc,IAAI;YAClBC,UAAAA,EAAY,IAAI;YAChBC,QAAAA,EAAU,IAAI;YACdh+C,KAAO4C,EAAAA,IAAAA;QACT,CAAA,CAAA,CAAA;KACD;AACH,CAAA;AAEA,SAASq7C,kBAAAA,CAAmBnmD,KAAK,EAAE;IACjCA,KAAAA,CAAM8K,IAAI,CAACyG,QAAQ,CAAC/Q,OAAO,CAAC,CAACsN,OAAY,GAAA;QACvCg4C,qBAAsBh4C,CAAAA,OAAAA,CAAAA,CAAAA;IACxB,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAASs4C,yCAA0Cr7C,CAAAA,IAAI,EAAEgV,MAAM,EAAE;IAC/D,MAAMsmC,UAAAA,GAAatmC,OAAOte,MAAM,CAAA;IAEhC,IAAIX,KAAQ,GAAA,CAAA,CAAA;IACZ,IAAIgS,KAAAA,CAAAA;IAEJ,MAAM,EAAC9H,MAAM,EAAC,GAAGD,IAAAA,CAAAA;IACjB,MAAM,EAAClK,GAAG,EAAEmC,GAAG,EAAE8I,UAAU,EAAEC,UAAU,EAAC,GAAGf,MAAAA,CAAOa,aAAa,EAAA,CAAA;IAE/D,IAAIC,UAAY,EAAA;QACdhL,KAAQkgC,OAAAA,wKAAAA,MAAYlW,wKAAa/K,EAAAA,MAAAA,EAAQ/U,MAAOG,CAAAA,IAAI,EAAEtK,GAAKqqB,CAAAA,CAAAA,EAAE,EAAE,CAAA,EAAGm7B,UAAa,GAAA,CAAA,CAAA,CAAA;KAChF;IACD,IAAIt6C,UAAY,EAAA;QACd+G,KAAQkuB,OAAAA,wKAAAA,MAAYlW,wKAAa/K,EAAAA,MAAAA,EAAQ/U,MAAOG,CAAAA,IAAI,EAAEnI,GAAAA,CAAAA,CAAKqoB,EAAE,GAAG,CAAGvqB,EAAAA,KAAAA,EAAOulD,UAAcvlD,CAAAA,GAAAA,KAAAA,CAAAA;KACnF,MAAA;QACLgS,KAAAA,GAAQuzC,UAAavlD,GAAAA,KAAAA,CAAAA;KACtB;IAED,OAAO;QAACA,KAAAA;QAAOgS,KAAAA;IAAK,CAAA,CAAA;AACtB,CAAA;AAEA,IAAA,oBAAe;IACblH,EAAI,EAAA,YAAA;IAEJ/E,QAAU,EAAA;QACRy/C,SAAW,EAAA,SAAA;QACXztB,OAAAA,EAAS,KAAK;IAChB,CAAA;IAEA0tB,oBAAsB,EAAA,CAACvmD,KAAO+X,EAAAA,IAAAA,EAAMvQ,OAAY,GAAA;QAC9C,IAAI,CAACA,OAAQqxB,CAAAA,OAAO,EAAE;YAEpBstB,kBAAmBnmD,CAAAA,KAAAA,CAAAA,CAAAA;YACnB,OAAA;SACD;QAGD,MAAMqvB,cAAAA,GAAiBrvB,MAAMwd,KAAK,CAAA;QAElCxd,KAAM8K,CAAAA,IAAI,CAACyG,QAAQ,CAAC/Q,OAAO,CAAC,CAACsN,SAAStD,YAAiB,GAAA;YACrD,MAAM,EAAC8E,KAAAA,EAAO0B,SAAAA,EAAU,GAAGlD,OAAAA,CAAAA;YAC3B,MAAM/C,IAAAA,GAAO/K,KAAMwR,CAAAA,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;YAClC,MAAMM,IAAAA,GAAOwE,KAASxB,IAAAA,OAAAA,CAAQhD,IAAI,CAAA;YAElC,QAAIrG,wKAAQ,EAAA;gBAACuM,SAAAA;gBAAWhR,KAAMwH,CAAAA,OAAO,CAACwJ,SAAS;aAAC,CAAA,KAAM,GAAK,EAAA;gBAEzD,OAAA;aACD;YAED,IAAI,CAACjG,IAAAA,CAAK6B,UAAU,CAACgD,kBAAkB,EAAE;gBAEvC,OAAA;aACD;YAED,MAAM42C,QAAQxmD,KAAMwN,CAAAA,MAAM,CAACzC,IAAAA,CAAK2F,OAAO,CAAC,CAAA;YACxC,IAAI81C,MAAMrmD,IAAI,KAAK,YAAYqmD,KAAMrmD,CAAAA,IAAI,KAAK,MAAQ,EAAA;gBAEpD,OAAA;aACD;YAED,IAAIH,KAAMwH,CAAAA,OAAO,CAACoL,OAAO,EAAE;gBAEzB,OAAA;aACD;YAED,IAAI,EAAC9R,KAAK,EAAEgS,KAAAA,EAAM,GAAGszC,0CAA0Cr7C,IAAMD,EAAAA,IAAAA,CAAAA,CAAAA;YACrE,MAAM27C,SAAYj/C,GAAAA,OAAAA,CAAQi/C,SAAS,IAAI,CAAIp3B,GAAAA,cAAAA,CAAAA;YAC3C,IAAIvc,SAAS2zC,SAAW,EAAA;gBAEtBX,qBAAsBh4C,CAAAA,OAAAA,CAAAA,CAAAA;gBACtB,OAAA;aACD;YAED,QAAIgM,wKAAAA,EAAcxK,KAAQ,CAAA,EAAA;gBAIxBxB,OAAAA,CAAQwB,KAAK,GAAGxE,IAAAA,CAAAA;gBAChB,OAAOgD,QAAQhD,IAAI,CAAA;gBACnBnE,MAAOo/C,CAAAA,cAAc,CAACj4C,OAAAA,EAAS,MAAQ,EAAA;oBACrCk4C,YAAAA,EAAc,IAAI;oBAClBC,UAAAA,EAAY,IAAI;oBAChB9jD,GAAAA,EAAK,WAAW;wBACd,OAAO,IAAI,CAAC+kB,UAAU,CAAA;oBACxB,CAAA;oBACA5kB,GAAK,EAAA,SAASwrC,CAAC,EAAE;wBACf,IAAI,CAACx+B,KAAK,GAAGw+B,CAAAA,CAAAA;oBACf,CAAA;gBACF,CAAA,CAAA,CAAA;aACD;YAGD,IAAIuW,SAAAA,CAAAA;YACJ,OAAQ78C,QAAQ8+C,SAAS;gBACzB,KAAK,MAAA;oBACHjC,SAAAA,GAAYF,cAAer5C,CAAAA,IAAAA,EAAMhK,KAAOgS,EAAAA,KAAAA,EAAOuc,cAAgB7nB,EAAAA,OAAAA,CAAAA,CAAAA;oBAC/D,MAAM;gBACR,KAAK,SAAA;oBACH68C,SAAYe,GAAAA,gBAAAA,CAAiBt6C,IAAMhK,EAAAA,KAAAA,EAAOgS,KAAOuc,EAAAA,cAAAA,CAAAA,CAAAA;oBACjD,MAAM;gBACR;oBACE,MAAM,IAAIzF,KAAM,CAAA,CAAC,kCAAkC,EAAEpiB,QAAQ8+C,SAAS,CAAC,CAAC,CAAC,CAAE,CAAA;YAC7E,CAAA;YAEAx4C,OAAAA,CAAQoZ,UAAU,GAAGm9B,SAAAA,CAAAA;QACvB,CAAA,CAAA,CAAA;IACF,CAAA;IAEA3M,OAAAA,CAAAA,CAAQ13C,KAAK,EAAE;QACbmmD,kBAAmBnmD,CAAAA,KAAAA,CAAAA,CAAAA;IACrB,CAAA;AACF,CAAE;AC5RK,SAASogD,SAAUx5B,CAAAA,IAAI,EAAEtiB,MAAM,EAAEglC,QAAQ,EAAE;IAChD,MAAMwW,QAAAA,GAAWl5B,KAAKk5B,QAAQ,CAAA;IAC9B,MAAM//B,MAAAA,GAAS6G,KAAK7G,MAAM,CAAA;IAC1B,MAAM2mC,OAAAA,GAAUpiD,OAAOyb,MAAM,CAAA;IAC7B,MAAM6pB,QAAQ,EAAE,CAAA;IAEhB,KAAK,MAAMziB,WAAW24B,QAAU,CAAA;QAC9B,IAAI,EAACh/C,KAAAA,EAAO+H,GAAAA,EAAI,GAAGse,OAAAA,CAAAA;QACnBte,GAAM89C,GAAAA,eAAAA,CAAgB7lD,OAAO+H,GAAKkX,EAAAA,MAAAA,CAAAA,CAAAA;QAElC,MAAMqiC,MAASwE,GAAAA,UAAAA,CAAWtd,QAAUvpB,EAAAA,MAAM,CAACjf,KAAAA,CAAM,EAAEif,MAAM,CAAClX,GAAAA,CAAI,EAAEse,OAAAA,CAAQhiB,IAAI,CAAA,CAAA;QAE5E,IAAI,CAACb,MAAOw7C,CAAAA,QAAQ,EAAE;YAGpBlW,KAAAA,CAAMlnC,IAAI,CAAC;gBACT28B,MAAQlY,EAAAA,OAAAA;gBACR7iB,MAAQ89C,EAAAA,MAAAA;gBACRthD,KAAOif,EAAAA,MAAM,CAACjf,KAAM,CAAA;gBACpB+H,GAAKkX,EAAAA,MAAM,CAAClX,GAAI,CAAA;YAClB,CAAA,CAAA,CAAA;YACA,SAAS;SACV;QAGD,MAAMg+C,cAAAA,OAAiBpG,yKAAAA,EAAen8C,MAAQ89C,EAAAA,MAAAA,CAAAA,CAAAA;QAE9C,KAAK,MAAM0E,OAAOD,cAAgB,CAAA;YAChC,MAAME,YAAYH,UAAWtd,CAAAA,QAAAA,EAAUod,OAAO,CAACI,IAAIhmD,KAAK,CAAC,EAAE4lD,OAAO,CAACI,GAAIj+C,CAAAA,GAAG,CAAC,EAAEi+C,IAAI3hD,IAAI,CAAA,CAAA;YACrF,MAAM6hD,WAAAA,OAAcC,yKAAc9/B,EAAAA,OAAAA,EAASpH,MAAQgnC,EAAAA,SAAAA,CAAAA,CAAAA;YAEnD,KAAK,MAAMG,cAAcF,WAAa,CAAA;gBACpCpd,KAAAA,CAAMlnC,IAAI,CAAC;oBACT28B,MAAQ6nB,EAAAA,UAAAA;oBACR5iD,MAAQwiD,EAAAA,GAAAA;oBACRhmD,KAAO,EAAA;wBACL,CAACwoC,SAAAA,EAAW6d,QAAAA,CAAS/E,QAAQ2E,SAAW,EAAA,OAAA,EAASnmD,KAAKoC,GAAG,CAAA;oBAC3D,CAAA;oBACA6F,GAAK,EAAA;wBACH,CAACygC,SAAAA,EAAW6d,QAAAA,CAAS/E,QAAQ2E,SAAW,EAAA,KAAA,EAAOnmD,KAAKC,GAAG,CAAA;oBACzD,CAAA;gBACF,CAAA,CAAA,CAAA;YACF,CAAA;QACF,CAAA;IACF,CAAA;IACA,OAAO+oC,KAAAA,CAAAA;AACT,CAAC;AAEM,SAASgd,WAAWtd,QAAQ,EAAEtQ,KAAK,EAAEtb,IAAI,EAAEvY,IAAI,EAAE;IACtD,IAAIA,IAAM,EAAA;QACR,OAAA;KACD;IACD,IAAIrE,KAAAA,GAAQk4B,KAAK,CAACsQ,QAAS,CAAA,CAAA;IAC3B,IAAIzgC,GAAAA,GAAM6U,IAAI,CAAC4rB,QAAS,CAAA,CAAA;IAExB,IAAIA,aAAa,OAAS,EAAA;QACxBxoC,KAAAA,OAAQw4C,yKAAgBx4C,EAAAA,KAAAA,CAAAA,CAAAA;QACxB+H,GAAAA,OAAMywC,yKAAgBzwC,EAAAA,GAAAA,CAAAA,CAAAA;KACvB;IACD,OAAO;QAACygC,QAAAA;QAAUxoC,KAAAA;QAAO+H,GAAAA;IAAG,CAAA,CAAA;AAC9B,CAAC;AAEM,SAASu+C,mBAAAA,CAAoBC,QAAQ,EAAEzgC,IAAI,EAAE;IAClD,MAAM,EAAC3d,CAAI,GAAA,IAAI,EAAEC,CAAI,GAAA,IAAI,EAAC,GAAGm+C,QAAAA,IAAY,CAAA,CAAC,CAAA;IAC1C,MAAMC,UAAAA,GAAa1gC,KAAK7G,MAAM,CAAA;IAC9B,MAAMA,SAAS,EAAE,CAAA;IACjB6G,IAAKk5B,CAAAA,QAAQ,CAACt/C,OAAO,CAAC,CAAC,EAACM,KAAK,EAAE+H,GAAG,EAAC,GAAK;QACtCA,GAAM89C,GAAAA,eAAAA,CAAgB7lD,OAAO+H,GAAKy+C,EAAAA,UAAAA,CAAAA,CAAAA;QAClC,MAAMtuB,KAAAA,GAAQsuB,UAAU,CAACxmD,KAAM,CAAA,CAAA;QAC/B,MAAM4c,IAAAA,GAAO4pC,UAAU,CAACz+C,GAAI,CAAA,CAAA;QAC5B,IAAIK,CAAAA,KAAM,IAAI,EAAE;YACd6W,MAAAA,CAAOrd,IAAI,CAAC;gBAACuG,CAAAA,EAAG+vB,MAAM/vB,CAAC;gBAAEC,CAAAA;YAAC,CAAA,CAAA,CAAA;YAC1B6W,MAAAA,CAAOrd,IAAI,CAAC;gBAACuG,CAAAA,EAAGyU,KAAKzU,CAAC;gBAAEC,CAAAA;YAAC,CAAA,CAAA,CAAA;SACpB,MAAA,IAAID,CAAM,KAAA,IAAI,EAAE;YACrB8W,MAAAA,CAAOrd,IAAI,CAAC;gBAACuG,CAAAA;gBAAGC,CAAAA,EAAG8vB,MAAM9vB,CAAC;YAAA,CAAA,CAAA,CAAA;YAC1B6W,MAAAA,CAAOrd,IAAI,CAAC;gBAACuG,CAAAA;gBAAGC,CAAAA,EAAGwU,KAAKxU,CAAC;YAAA,CAAA,CAAA,CAAA;SAC1B;IACH,CAAA,CAAA,CAAA;IACA,OAAO6W,MAAAA,CAAAA;AACT,CAAC;AAEM,SAAS4mC,eAAgB7lD,CAAAA,KAAK,EAAE+H,GAAG,EAAEkX,MAAM,EAAE;IAClD,MAAMlX,GAAAA,GAAM/H,OAAO+H,GAAO,EAAA,CAAA;QACxB,MAAMmX,KAAAA,GAAQD,MAAM,CAAClX,GAAI,CAAA,CAAA;QACzB,IAAI,CAACmV,MAAMgC,KAAM/W,CAAAA,CAAC,KAAK,CAAC+U,KAAAA,CAAMgC,KAAM9W,CAAAA,CAAC,CAAG,EAAA;YACtC,MAAM;SACP;IACH,CAAA;IACA,OAAOL,GAAAA,CAAAA;AACT,CAAC;AAED,SAASs+C,QAAAA,CAASpuC,CAAC,EAAErP,CAAC,EAAEnF,IAAI,EAAE9D,EAAE,EAAE;IAChC,IAAIsY,KAAKrP,CAAG,EAAA;QACV,OAAOjJ,GAAGsY,CAAC,CAACxU,KAAK,EAAEmF,CAAC,CAACnF,IAAK,CAAA,CAAA,CAAA;KAC3B;IACD,OAAOwU,CAAAA,GAAIA,CAAC,CAACxU,IAAK,CAAA,GAAGmF,IAAIA,CAAC,CAACnF,IAAK,CAAA,GAAG,CAAC,CAAA;AACtC;ACnFO,SAASgjD,mBAAAA,CAAoBF,QAAQ,EAAEzgC,IAAI,EAAE;IAClD,IAAI7G,SAAS,EAAE,CAAA;IACf,IAAI7a,QAAQ,KAAK,CAAA;IAEjB,QAAIiC,wKAAAA,EAAQkgD,QAAW,CAAA,EAAA;QACrBniD,KAAAA,GAAQ,IAAI,CAAA;QAEZ6a,MAASsnC,GAAAA,QAAAA,CAAAA;KACJ,MAAA;QACLtnC,MAAAA,GAASqnC,oBAAoBC,QAAUzgC,EAAAA,IAAAA,CAAAA,CAAAA;KACxC;IAED,OAAO7G,MAAOte,CAAAA,MAAM,GAAG,IAAIw+C,WAAY,CAAA;QACrClgC,MAAAA;QACAvY,OAAS,EAAA;YAACw2C,OAAS,EAAA,CAAA;QAAC,CAAA;QACpB94C,KAAAA;QACAkkB,SAAWlkB,EAAAA,KAAAA;IACb,CAAA,CAAA,GAAK,IAAI,CAAA;AACX,CAAC;AAEM,SAASsiD,gBAAiBnoB,CAAAA,MAAM,EAAE;IACvC,OAAOA,MAAUA,IAAAA,MAAAA,CAAOnvB,IAAI,KAAK,KAAK,CAAA;AACxC;AC5BO,SAASu3C,cAAeC,CAAAA,OAAO,EAAEx9C,KAAK,EAAEy9C,SAAS,EAAE;IACxD,MAAMtoB,MAAAA,GAASqoB,OAAO,CAACx9C,KAAM,CAAA,CAAA;IAC7B,IAAIgG,IAAAA,GAAOmvB,OAAOnvB,IAAI,CAAA;IACtB,MAAM03C,OAAU,GAAA;QAAC19C,KAAAA;KAAM,CAAA;IACvB,IAAI5F,MAAAA,CAAAA;IAEJ,IAAI,CAACqjD,SAAW,EAAA;QACd,OAAOz3C,IAAAA,CAAAA;KACR;IAED,MAAOA,IAAAA,KAAS,KAAK,IAAI03C,OAAAA,CAAQ3pC,OAAO,CAAC/N,IAAAA,CAAAA,KAAU,CAAC,CAAG,CAAA;QACrD,IAAI,KAACvF,wKAAAA,EAASuF,IAAO,CAAA,EAAA;YACnB,OAAOA,IAAAA,CAAAA;SACR;QAED5L,MAASojD,GAAAA,OAAO,CAACx3C,IAAK,CAAA,CAAA;QACtB,IAAI,CAAC5L,MAAQ,EAAA;YACX,OAAO,KAAK,CAAA;SACb;QAED,IAAIA,MAAAA,CAAO+wC,OAAO,EAAE;YAClB,OAAOnlC,IAAAA,CAAAA;SACR;QAED03C,OAAAA,CAAQllD,IAAI,CAACwN,IAAAA,CAAAA,CAAAA;QACbA,IAAAA,GAAO5L,OAAO4L,IAAI,CAAA;IACpB,CAAA;IAEA,OAAO,KAAK,CAAA;AACd,CAAC;AAOM,SAAS23C,WAAYjhC,CAAAA,IAAI,EAAE1c,KAAK,EAAE4I,KAAK,EAAE;IAE9C,MAAM5C,IAAAA,GAAO43C,eAAgBlhC,CAAAA,IAAAA,CAAAA,CAAAA;IAE7B,QAAIngB,wKAAAA,EAASyJ,IAAO,CAAA,EAAA;QAClB,OAAO8N,MAAM9N,IAAKhI,CAAAA,KAAK,CAAI,GAAA,KAAK,GAAGgI,IAAI,CAAA;KACxC;IAED,IAAI5L,SAASyjD,UAAW73C,CAAAA,IAAAA,CAAAA,CAAAA;IAExB,QAAIvF,wKAAAA,EAASrG,MAAW1D,CAAAA,IAAAA,IAAAA,CAAKoE,KAAK,CAACV,YAAYA,MAAQ,EAAA;QACrD,OAAO0jD,kBAAkB93C,IAAI,CAAC,CAAE,CAAA,EAAEhG,OAAO5F,MAAQwO,EAAAA,KAAAA,CAAAA,CAAAA;KAClD;IAED,OAAO;QAAC,QAAA;QAAU,OAAA;QAAS,KAAA;QAAO,OAAA;QAAS,OAAA;KAAQ,CAACmL,OAAO,CAAC/N,IAAAA,CAAAA,IAAS,CAAKA,IAAAA,IAAAA,CAAAA;AAC5E,CAAC;AAED,SAAS83C,iBAAAA,CAAkBC,OAAO,EAAE/9C,KAAK,EAAE5F,MAAM,EAAEwO,KAAK,EAAE;IACxD,IAAIm1C,OAAAA,KAAY,GAAOA,IAAAA,OAAAA,KAAY,GAAK,EAAA;QACtC3jD,MAAAA,GAAS4F,KAAQ5F,GAAAA,MAAAA,CAAAA;KAClB;IAED,IAAIA,MAAW4F,KAAAA,KAAAA,IAAS5F,MAAS,GAAA,CAAA,IAAKA,UAAUwO,KAAO,EAAA;QACrD,OAAO,KAAK,CAAA;KACb;IAED,OAAOxO,MAAAA,CAAAA;AACT,CAAA;AAOO,SAAS4jD,eAAAA,CAAgBh4C,IAAI,EAAEzH,KAAK,EAAE;IAC3C,IAAIw6B,QAAQ,IAAI,CAAA;IAChB,IAAI/yB,SAAS,OAAS,EAAA;QACpB+yB,KAAAA,GAAQx6B,MAAMY,MAAM,CAAA;KACf,MAAA,IAAI6G,SAAS,KAAO,EAAA;QACzB+yB,KAAAA,GAAQx6B,MAAMU,GAAG,CAAA;KACZ,MAAA,QAAI1C,wKAAAA,EAASyJ,IAAO,CAAA,EAAA;QAEzB+yB,KAAAA,GAAQx6B,KAAM4Q,CAAAA,gBAAgB,CAACnJ,IAAAA,CAAKhI,KAAK,CAAA,CAAA;KACpC,MAAA,IAAIO,KAAMsU,CAAAA,YAAY,EAAE;QAC7BkmB,KAAAA,GAAQx6B,MAAMsU,YAAY,EAAA,CAAA;KAC3B;IACD,OAAOkmB,KAAAA,CAAAA;AACT,CAAC;AAQM,SAASklB,eAAgBj4C,CAAAA,IAAI,EAAEzH,KAAK,EAAE+R,UAAU,EAAE;IACvD,IAAItS,KAAAA,CAAAA;IAEJ,IAAIgI,SAAS,OAAS,EAAA;QACpBhI,KAAQsS,GAAAA,UAAAA,CAAAA;KACH,MAAA,IAAItK,SAAS,KAAO,EAAA;QACzBhI,KAAQO,GAAAA,KAAAA,CAAMjB,OAAO,CAACoB,OAAO,GAAGH,KAAM5H,CAAAA,GAAG,GAAG4H,KAAAA,CAAMzF,GAAG,CAAA;KAChD,MAAA,QAAIyD,wKAAAA,EAASyJ,IAAO,CAAA,EAAA;QAEzBhI,KAAAA,GAAQgI,KAAKhI,KAAK,CAAA;KACb,MAAA;QACLA,KAAAA,GAAQO,MAAM66B,YAAY,EAAA,CAAA;KAC3B;IACD,OAAOp7B,KAAAA,CAAAA;AACT,CAAC;AAKD,SAAS4/C,eAAgBlhC,CAAAA,IAAI,EAAE;IAC7B,MAAMpf,OAAAA,GAAUof,KAAKpf,OAAO,CAAA;IAC5B,MAAM4gD,UAAAA,GAAa5gD,QAAQ0I,IAAI,CAAA;IAC/B,IAAIA,IAAOS,OAAAA,wKAAAA,EAAey3C,UAAcA,IAAAA,UAAAA,CAAW9jD,MAAM,EAAE8jD,UAAAA,CAAAA,CAAAA;IAE3D,IAAIl4C,SAASpQ,SAAW,EAAA;QACtBoQ,IAAO,GAAA,CAAC,CAAC1I,OAAAA,CAAQ2b,eAAe,CAAA;KACjC;IAED,IAAIjT,IAAS,KAAA,KAAK,IAAIA,IAAAA,KAAS,IAAI,EAAE;QACnC,OAAO,KAAK,CAAA;KACb;IAED,IAAIA,IAAAA,KAAS,IAAI,EAAE;QACjB,OAAO,QAAA,CAAA;KACR;IACD,OAAOA,IAAAA,CAAAA;AACT;AC1HO,SAASm4C,eAAgBhpB,CAAAA,MAAM,EAAE;IACtC,MAAM,EAAC52B,KAAK,EAAEyB,KAAAA,EAAO0c,IAAAA,EAAK,GAAGyY,MAAAA,CAAAA;IAC7B,MAAMtf,SAAS,EAAE,CAAA;IACjB,MAAM+/B,QAAAA,GAAWl5B,KAAKk5B,QAAQ,CAAA;IAC9B,MAAMwI,YAAAA,GAAe1hC,KAAK7G,MAAM,CAAA;IAChC,MAAMwoC,UAAAA,GAAaC,cAAc//C,KAAOyB,EAAAA,KAAAA,CAAAA,CAAAA;IACxCq+C,UAAW7lD,CAAAA,IAAI,CAAC6kD,mBAAoB,CAAA;QAACt+C,CAAAA,EAAG,IAAI;QAAEC,CAAAA,EAAGT,MAAMY,MAAM;KAAGud,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;IAEhE,IAAK,IAAIllB,CAAI,GAAA,CAAA,EAAGA,IAAIo+C,QAASr+C,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACxC,MAAMylB,OAAAA,GAAU24B,QAAQ,CAACp+C,CAAE,CAAA,CAAA;QAC3B,IAAK,IAAIkqB,IAAIzE,OAAQrmB,CAAAA,KAAK,EAAE8qB,CAAKzE,IAAAA,OAAAA,CAAQte,GAAG,EAAE+iB,CAAK,EAAA,CAAA;YACjD68B,cAAAA,CAAe1oC,MAAQuoC,EAAAA,YAAY,CAAC18B,CAAAA,CAAE,EAAE28B,UAAAA,CAAAA,CAAAA;QAC1C,CAAA;IACF,CAAA;IACA,OAAO,IAAItI,WAAY,CAAA;QAAClgC,MAAAA;QAAQvY,OAAAA,EAAS,CAAA,CAAC;IAAC,CAAA,CAAA,CAAA;AAC7C,CAAC;AAOD,SAASghD,aAAAA,CAAc//C,KAAK,EAAEyB,KAAK,EAAE;IACnC,MAAMw+C,QAAQ,EAAE,CAAA;IAChB,MAAM9qB,KAAAA,GAAQn1B,KAAMiE,CAAAA,uBAAuB,CAAC,MAAA,CAAA,CAAA;IAE5C,IAAK,IAAIhL,CAAI,GAAA,CAAA,EAAGA,IAAIk8B,KAAMn8B,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACrC,MAAMqJ,IAAAA,GAAO6yB,KAAK,CAACl8B,CAAE,CAAA,CAAA;QACrB,IAAIqJ,IAAAA,CAAKb,KAAK,KAAKA,KAAO,EAAA;YACxB,MAAM;SACP;QACD,IAAI,CAACa,IAAK4D,CAAAA,MAAM,EAAE;YAChB+5C,KAAMC,CAAAA,OAAO,CAAC59C,IAAAA,CAAK+C,OAAO,CAAA,CAAA;SAC3B;IACH,CAAA;IACA,OAAO46C,KAAAA,CAAAA;AACT,CAAA;AAOA,SAASD,cAAe1oC,CAAAA,MAAM,EAAE6oC,WAAW,EAAEL,UAAU,EAAE;IACvD,MAAMM,YAAY,EAAE,CAAA;IACpB,IAAK,IAAIj9B,CAAI,GAAA,CAAA,EAAGA,IAAI28B,UAAW9mD,CAAAA,MAAM,EAAEmqB,CAAK,EAAA,CAAA;QAC1C,MAAMhF,IAAAA,GAAO2hC,UAAU,CAAC38B,CAAE,CAAA,CAAA;QAC1B,MAAM,EAACoN,KAAK,EAAEtb,IAAI,EAAEsC,KAAAA,EAAM,GAAG8oC,SAAUliC,CAAAA,IAAAA,EAAMgiC,WAAa,EAAA,GAAA,CAAA,CAAA;QAE1D,IAAI,CAAC5oC,KAAUgZ,IAAAA,KAAAA,IAAStb,IAAO,EAAA;YAC7B,SAAS;SACV;QACD,IAAIsb,KAAO,EAAA;YAET6vB,SAAAA,CAAUF,OAAO,CAAC3oC,KAAAA,CAAAA,CAAAA;SACb,MAAA;YACLD,MAAAA,CAAOrd,IAAI,CAACsd,KAAAA,CAAAA,CAAAA;YACZ,IAAI,CAACtC,IAAM,EAAA;gBAET,MAAM;aACP;SACF;IACH,CAAA;IACAqC,MAAAA,CAAOrd,IAAI,CAAImmD,GAAAA,SAAAA,CAAAA,CAAAA;AACjB,CAAA;AAQA,SAASC,SAAUliC,CAAAA,IAAI,EAAEgiC,WAAW,EAAEtf,QAAQ,EAAE;IAC9C,MAAMtpB,KAAQ4G,GAAAA,IAAAA,CAAK45B,WAAW,CAACoI,WAAatf,EAAAA,QAAAA,CAAAA,CAAAA;IAC5C,IAAI,CAACtpB,KAAO,EAAA;QACV,OAAO,CAAA,CAAC,CAAA;KACT;IAED,MAAM+oC,UAAAA,GAAa/oC,KAAK,CAACspB,QAAS,CAAA,CAAA;IAClC,MAAMwW,QAAAA,GAAWl5B,KAAKk5B,QAAQ,CAAA;IAC9B,MAAMwH,UAAAA,GAAa1gC,KAAK7G,MAAM,CAAA;IAC9B,IAAIiZ,QAAQ,KAAK,CAAA;IACjB,IAAItb,OAAO,KAAK,CAAA;IAChB,IAAK,IAAIhc,CAAI,GAAA,CAAA,EAAGA,IAAIo+C,QAASr+C,CAAAA,MAAM,EAAEC,CAAK,EAAA,CAAA;QACxC,MAAMylB,OAAAA,GAAU24B,QAAQ,CAACp+C,CAAE,CAAA,CAAA;QAC3B,MAAMsnD,aAAa1B,UAAU,CAACngC,QAAQrmB,KAAK,CAAC,CAACwoC,QAAS,CAAA,CAAA;QACtD,MAAM2f,YAAY3B,UAAU,CAACngC,QAAQte,GAAG,CAAC,CAACygC,QAAS,CAAA,CAAA;QACnD,QAAI6T,yKAAAA,EAAW4L,UAAYC,EAAAA,UAAAA,EAAYC,SAAY,CAAA,EAAA;YACjDjwB,KAAAA,GAAQ+vB,UAAeC,KAAAA,UAAAA,CAAAA;YACvBtrC,IAAAA,GAAOqrC,UAAeE,KAAAA,SAAAA,CAAAA;YACtB,MAAM;SACP;IACH,CAAA;IACA,OAAO;QAACjwB,KAAAA;QAAOtb,IAAAA;QAAMsC,KAAAA;IAAK,CAAA,CAAA;AAC5B;ACzGO,MAAMkpC,SAAAA,CAAAA;IACX1pD,WAAAA,CAAYmJ,IAAI,CAAE;QAChB,IAAI,CAACM,CAAC,GAAGN,IAAAA,CAAKM,CAAC,CAAA;QACf,IAAI,CAACC,CAAC,GAAGP,IAAAA,CAAKO,CAAC,CAAA;QACf,IAAI,CAAC4W,MAAM,GAAGnX,IAAAA,CAAKmX,MAAM,CAAA;IAC3B,CAAA;IAEA2+B,WAAAA,CAAYxvC,GAAG,EAAEmzC,MAAM,EAAEz5C,IAAI,EAAE;QAC7B,MAAM,EAACM,CAAAA,EAAGC,CAAAA,EAAG4W,MAAM,EAAC,GAAG,IAAI,CAAA;QAC3BsiC,MAAAA,GAASA,MAAU,IAAA;YAACthD,KAAO,EAAA,CAAA;YAAG+H,GAAK+X,EAAAA,wKAAAA;QAAG,CAAA,CAAA;QACtC3R,GAAI+W,CAAAA,GAAG,CAAC/c,CAAAA,EAAGC,CAAG4W,EAAAA,MAAAA,EAAQsiC,MAAOv5C,CAAAA,GAAG,EAAEu5C,MAAAA,CAAOthD,KAAK,EAAE,IAAI,CAAA,CAAA;QACpD,OAAO,CAAC6H,KAAKy5C,MAAM,CAAA;IACrB,CAAA;IAEA5B,WAAAA,CAAYxgC,KAAK,EAAE;QACjB,MAAM,EAAC/W,CAAAA,EAAGC,CAAAA,EAAG4W,MAAM,EAAC,GAAG,IAAI,CAAA;QAC3B,MAAMwB,KAAAA,GAAQtB,MAAMsB,KAAK,CAAA;QACzB,OAAO;YACLrY,CAAAA,EAAGA,CAAIrI,GAAAA,IAAAA,CAAKogB,GAAG,CAACM,KAASxB,CAAAA,GAAAA,MAAAA;YACzB5W,CAAAA,EAAGA,CAAItI,GAAAA,IAAAA,CAAKsgB,GAAG,CAACI,KAASxB,CAAAA,GAAAA,MAAAA;YACzBwB,KAAAA;QACF,CAAA,CAAA;IACF,CAAA;AACF;ACdO,SAAS6nC,UAAW9pB,CAAAA,MAAM,EAAE;IACjC,MAAM,EAACr/B,KAAK,EAAEkQ,IAAAA,EAAM0W,IAAAA,EAAK,GAAGyY,MAAAA,CAAAA;IAE5B,QAAI10B,wKAAAA,EAASuF,IAAO,CAAA,EAAA;QAClB,OAAOk5C,eAAeppD,KAAOkQ,EAAAA,IAAAA,CAAAA,CAAAA;KAC9B;IAED,IAAIA,SAAS,OAAS,EAAA;QACpB,OAAOm4C,eAAgBhpB,CAAAA,MAAAA,CAAAA,CAAAA;KACxB;IAED,IAAInvB,SAAS,OAAS,EAAA;QACpB,OAAO,IAAI,CAAA;KACZ;IAED,MAAMm3C,WAAWgC,eAAgBhqB,CAAAA,MAAAA,CAAAA,CAAAA;IAEjC,IAAIgoB,oBAAoB6B,SAAW,EAAA;QACjC,OAAO7B,QAAAA,CAAAA;KACR;IAED,OAAOE,oBAAoBF,QAAUzgC,EAAAA,IAAAA,CAAAA,CAAAA;AACvC,CAAC;AAMD,SAASwiC,cAAAA,CAAeppD,KAAK,EAAEkK,KAAK,EAAE;IACpC,MAAMa,IAAAA,GAAO/K,KAAMwR,CAAAA,cAAc,CAACtH,KAAAA,CAAAA,CAAAA;IAClC,MAAMmrC,OAAUtqC,GAAAA,IAAAA,IAAQ/K,KAAM0kB,CAAAA,gBAAgB,CAACxa,KAAAA,CAAAA,CAAAA;IAC/C,OAAOmrC,OAAUtqC,GAAAA,IAAAA,CAAK+C,OAAO,GAAG,IAAI,CAAA;AACtC,CAAA;AAEA,SAASu7C,eAAAA,CAAgBhqB,MAAM,EAAE;IAC/B,MAAM52B,KAAQ42B,GAAAA,MAAAA,CAAO52B,KAAK,IAAI,CAAA,CAAC,CAAA;IAE/B,IAAIA,KAAAA,CAAM6gB,wBAAwB,EAAE;QAClC,OAAOggC,uBAAwBjqB,CAAAA,MAAAA,CAAAA,CAAAA;KAChC;IACD,OAAOkqB,qBAAsBlqB,CAAAA,MAAAA,CAAAA,CAAAA;AAC/B,CAAA;AAGA,SAASkqB,qBAAAA,CAAsBlqB,MAAM,EAAE;IACrC,MAAM,EAAC52B,KAAQ,GAAA,CAAA,CAAA,EAAIyH,IAAAA,EAAK,GAAGmvB,MAAAA,CAAAA;IAC3B,MAAM4D,KAAAA,GAAQilB,gBAAgBh4C,IAAMzH,EAAAA,KAAAA,CAAAA,CAAAA;IAEpC,QAAIkC,wKAAAA,EAASs4B,KAAQ,CAAA,EAAA;QACnB,MAAM5nB,UAAAA,GAAa5S,MAAM0S,YAAY,EAAA,CAAA;QAErC,OAAO;YACLlS,CAAGoS,EAAAA,UAAAA,GAAa4nB,QAAQ,IAAI;YAC5B/5B,CAAGmS,EAAAA,UAAAA,GAAa,IAAI,GAAG4nB,KAAK;QAC9B,CAAA,CAAA;KACD;IAED,OAAO,IAAI,CAAA;AACb,CAAA;AAEA,SAASqmB,uBAAAA,CAAwBjqB,MAAM,EAAE;IACvC,MAAM,EAAC52B,KAAAA,EAAOyH,IAAAA,EAAK,GAAGmvB,MAAAA,CAAAA;IACtB,MAAM73B,OAAAA,GAAUiB,MAAMjB,OAAO,CAAA;IAC7B,MAAM/F,MAASgH,GAAAA,KAAAA,CAAM8K,SAAS,EAAA,CAAG9R,MAAM,CAAA;IACvC,MAAMX,KAAAA,GAAQ0G,QAAQoB,OAAO,GAAGH,MAAMzF,GAAG,GAAGyF,MAAM5H,GAAG,CAAA;IACrD,MAAMqH,KAAAA,GAAQigD,eAAgBj4C,CAAAA,IAAAA,EAAMzH,KAAO3H,EAAAA,KAAAA,CAAAA,CAAAA;IAC3C,MAAMwD,SAAS,EAAE,CAAA;IAEjB,IAAIkD,OAAQkV,CAAAA,IAAI,CAACwL,QAAQ,EAAE;QACzB,MAAM5K,MAAS7U,GAAAA,KAAAA,CAAM6gB,wBAAwB,CAAC,CAAGxoB,EAAAA,KAAAA,CAAAA,CAAAA;QACjD,OAAO,IAAIooD,SAAU,CAAA;YACnBjgD,CAAAA,EAAGqU,OAAOrU,CAAC;YACXC,CAAAA,EAAGoU,OAAOpU,CAAC;YACX4W,MAAQrX,EAAAA,KAAAA,CAAMwgB,6BAA6B,CAAC/gB,KAAAA,CAAAA;QAC9C,CAAA,CAAA,CAAA;KACD;IAED,IAAK,IAAIxG,CAAI,GAAA,CAAA,EAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG,CAAA;QAC/B4C,MAAAA,CAAO5B,IAAI,CAAC+F,KAAM6gB,CAAAA,wBAAwB,CAAC5nB,CAAGwG,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;IAChD,CAAA;IACA,OAAO5D,MAAAA,CAAAA;AACT;ACzFO,SAASklD,SAAUv6C,CAAAA,GAAG,EAAEowB,MAAM,EAAEtqB,IAAI,EAAE;IAC3C,MAAMzQ,SAAS6kD,UAAW9pB,CAAAA,MAAAA,CAAAA,CAAAA;IAC1B,MAAM,EAACr/B,KAAK,EAAEkK,KAAK,EAAE0c,IAAI,EAAEne,KAAK,EAAE0C,IAAI,EAAC,GAAGk0B,MAAAA,CAAAA;IAC1C,MAAMoqB,QAAAA,GAAW7iC,KAAKpf,OAAO,CAAA;IAC7B,MAAM4gD,UAAAA,GAAaqB,SAASv5C,IAAI,CAAA;IAChC,MAAMtM,KAAAA,GAAQ6lD,SAAStmC,eAAe,CAAA;IACtC,MAAM,EAACumC,QAAQ9lD,KAAK,EAAE8kD,QAAQ9kD,KAAK,EAAC,GAAGwkD,UAAAA,IAAc,CAAA,CAAC,CAAA;IACtD,MAAMr9C,IAAAA,GAAO/K,KAAMwR,CAAAA,cAAc,CAACtH,KAAAA,CAAAA,CAAAA;IAClC,MAAM2K,IAAAA,OAAOqiC,yKAAAA,EAAmBl3C,KAAO+K,EAAAA,IAAAA,CAAAA,CAAAA;IACvC,IAAIzG,MAAUsiB,IAAAA,IAAAA,CAAK7G,MAAM,CAACte,MAAM,EAAE;YAChCkmC,wKAAAA,EAAS14B,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;QACd40C,MAAAA,CAAO16C,GAAK,EAAA;YAAC2X,IAAAA;YAAMtiB,MAAAA;YAAQolD,KAAAA;YAAOhB,KAAAA;YAAO3zC,IAAAA;YAAMtM,KAAAA;YAAO0C,IAAAA;YAAM0J,IAAAA;QAAI,CAAA,CAAA,CAAA;YAChEizB,wKAAW74B,EAAAA,GAAAA,CAAAA,CAAAA;KACZ;AACH,CAAC;AAED,SAAS06C,MAAO16C,CAAAA,GAAG,EAAE5K,GAAG,EAAE;IACxB,MAAM,EAACuiB,IAAAA,EAAMtiB,MAAAA,EAAQolD,KAAK,EAAEhB,KAAK,EAAE3zC,IAAAA,EAAMtM,KAAAA,EAAOoM,IAAAA,EAAK,GAAGxQ,GAAAA,CAAAA;IACxD,MAAMilC,WAAW1iB,IAAK1hB,CAAAA,KAAK,GAAG,OAAA,GAAUb,IAAI8G,IAAI,CAAA;IAEhD8D,GAAAA,CAAI03B,IAAI,EAAA,CAAA;IAER,IAAIijB,SAAYlB,GAAAA,KAAAA,CAAAA;IAChB,IAAIA,UAAUgB,KAAO,EAAA;QACnB,IAAIpgB,aAAa,GAAK,EAAA;YACpBugB,YAAa56C,CAAAA,GAAAA,EAAK3K,MAAQyQ,EAAAA,IAAAA,CAAK5L,GAAG,CAAA,CAAA;YAClC+G,IAAAA,CAAKjB,GAAK,EAAA;gBAAC2X,IAAAA;gBAAMtiB,MAAAA;gBAAQV,KAAO8lD,EAAAA,KAAAA;gBAAOjhD,KAAAA;gBAAO6gC,QAAAA;gBAAUz0B,IAAAA;YAAI,CAAA,CAAA,CAAA;YAC5D5F,GAAAA,CAAI43B,OAAO,EAAA,CAAA;YACX53B,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACRkjB,YAAa56C,CAAAA,GAAAA,EAAK3K,MAAQyQ,EAAAA,IAAAA,CAAK1L,MAAM,CAAA,CAAA;SAChC,MAAA,IAAIigC,aAAa,GAAK,EAAA;YAC3BwgB,cAAe76C,CAAAA,GAAAA,EAAK3K,MAAQyQ,EAAAA,IAAAA,CAAKzL,IAAI,CAAA,CAAA;YACrC4G,IAAAA,CAAKjB,GAAK,EAAA;gBAAC2X,IAAAA;gBAAMtiB,MAAAA;gBAAQV,KAAO8kD,EAAAA,KAAAA;gBAAOjgD,KAAAA;gBAAO6gC,QAAAA;gBAAUz0B,IAAAA;YAAI,CAAA,CAAA,CAAA;YAC5D5F,GAAAA,CAAI43B,OAAO,EAAA,CAAA;YACX53B,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACRmjB,cAAe76C,CAAAA,GAAAA,EAAK3K,MAAQyQ,EAAAA,IAAAA,CAAK3L,KAAK,CAAA,CAAA;YACtCwgD,SAAYF,GAAAA,KAAAA,CAAAA;SACb;KACF;IACDx5C,IAAAA,CAAKjB,GAAK,EAAA;QAAC2X,IAAAA;QAAMtiB,MAAAA;QAAQV,KAAOgmD,EAAAA,SAAAA;QAAWnhD,KAAAA;QAAO6gC,QAAAA;QAAUz0B,IAAAA;IAAI,CAAA,CAAA,CAAA;IAEhE5F,GAAAA,CAAI43B,OAAO,EAAA,CAAA;AACb,CAAA;AAEA,SAASgjB,aAAa56C,GAAG,EAAE3K,MAAM,EAAEylD,KAAK,EAAE;IACxC,MAAM,EAACjK,QAAAA,EAAU//B,MAAAA,EAAO,GAAGzb,MAAAA,CAAAA;IAC3B,IAAI00B,QAAQ,IAAI,CAAA;IAChB,IAAIgxB,WAAW,KAAK,CAAA;IAEpB/6C,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IACb,KAAK,MAAMhgB,WAAW24B,QAAU,CAAA;QAC9B,MAAM,EAACh/C,KAAAA,EAAO+H,GAAAA,EAAI,GAAGse,OAAAA,CAAAA;QACrB,MAAMS,UAAAA,GAAa7H,MAAM,CAACjf,KAAM,CAAA,CAAA;QAChC,MAAM+mB,YAAY9H,MAAM,CAAC4mC,eAAgB7lD,CAAAA,KAAAA,EAAO+H,KAAKkX,MAAQ,CAAA,CAAA,CAAA;QAC7D,IAAIiZ,KAAO,EAAA;YACT/pB,GAAAA,CAAIm4B,MAAM,CAACxf,UAAAA,CAAW3e,CAAC,EAAE2e,WAAW1e,CAAC,CAAA,CAAA;YACrC8vB,KAAAA,GAAQ,KAAK,CAAA;SACR,MAAA;YACL/pB,GAAAA,CAAIo4B,MAAM,CAACzf,UAAW3e,CAAAA,CAAC,EAAE8gD,KAAAA,CAAAA,CAAAA;YACzB96C,GAAAA,CAAIo4B,MAAM,CAACzf,UAAAA,CAAW3e,CAAC,EAAE2e,WAAW1e,CAAC,CAAA,CAAA;SACtC;QACD8gD,QAAAA,GAAW,CAAC,CAAC1lD,MAAAA,CAAOm6C,WAAW,CAACxvC,KAAKkY,OAAS,EAAA;YAAC1P,IAAMuyC,EAAAA,QAAAA;QAAQ,CAAA,CAAA,CAAA;QAC7D,IAAIA,QAAU,EAAA;YACZ/6C,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;SACR,MAAA;YACLxqC,GAAAA,CAAIo4B,MAAM,CAACxf,SAAU5e,CAAAA,CAAC,EAAE8gD,KAAAA,CAAAA,CAAAA;SACzB;IACH,CAAA;IAEA96C,GAAAA,CAAIo4B,MAAM,CAAC/iC,MAAAA,CAAO00B,KAAK,EAAA,CAAG/vB,CAAC,EAAE8gD,KAAAA,CAAAA,CAAAA;IAC7B96C,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;IACbxqC,GAAAA,CAAI4F,IAAI,EAAA,CAAA;AACV,CAAA;AAEA,SAASi1C,eAAe76C,GAAG,EAAE3K,MAAM,EAAE2lD,KAAK,EAAE;IAC1C,MAAM,EAACnK,QAAAA,EAAU//B,MAAAA,EAAO,GAAGzb,MAAAA,CAAAA;IAC3B,IAAI00B,QAAQ,IAAI,CAAA;IAChB,IAAIgxB,WAAW,KAAK,CAAA;IAEpB/6C,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IACb,KAAK,MAAMhgB,WAAW24B,QAAU,CAAA;QAC9B,MAAM,EAACh/C,KAAAA,EAAO+H,GAAAA,EAAI,GAAGse,OAAAA,CAAAA;QACrB,MAAMS,UAAAA,GAAa7H,MAAM,CAACjf,KAAM,CAAA,CAAA;QAChC,MAAM+mB,YAAY9H,MAAM,CAAC4mC,eAAgB7lD,CAAAA,KAAAA,EAAO+H,KAAKkX,MAAQ,CAAA,CAAA,CAAA;QAC7D,IAAIiZ,KAAO,EAAA;YACT/pB,GAAAA,CAAIm4B,MAAM,CAACxf,UAAAA,CAAW3e,CAAC,EAAE2e,WAAW1e,CAAC,CAAA,CAAA;YACrC8vB,KAAAA,GAAQ,KAAK,CAAA;SACR,MAAA;YACL/pB,GAAAA,CAAIo4B,MAAM,CAAC4iB,KAAOriC,EAAAA,UAAAA,CAAW1e,CAAC,CAAA,CAAA;YAC9B+F,GAAAA,CAAIo4B,MAAM,CAACzf,UAAAA,CAAW3e,CAAC,EAAE2e,WAAW1e,CAAC,CAAA,CAAA;SACtC;QACD8gD,QAAAA,GAAW,CAAC,CAAC1lD,MAAAA,CAAOm6C,WAAW,CAACxvC,KAAKkY,OAAS,EAAA;YAAC1P,IAAMuyC,EAAAA,QAAAA;QAAQ,CAAA,CAAA,CAAA;QAC7D,IAAIA,QAAU,EAAA;YACZ/6C,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;SACR,MAAA;YACLxqC,GAAAA,CAAIo4B,MAAM,CAAC4iB,KAAOpiC,EAAAA,SAAAA,CAAU3e,CAAC,CAAA,CAAA;SAC9B;IACH,CAAA;IAEA+F,GAAAA,CAAIo4B,MAAM,CAAC4iB,KAAAA,EAAO3lD,MAAO00B,CAAAA,KAAK,GAAG9vB,CAAC,CAAA,CAAA;IAClC+F,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;IACbxqC,GAAAA,CAAI4F,IAAI,EAAA,CAAA;AACV,CAAA;AAEA,SAAS3E,IAAKjB,CAAAA,GAAG,EAAE5K,GAAG,EAAE;IACtB,MAAM,EAACuiB,IAAAA,EAAMtiB,MAAAA,EAAQglC,QAAAA,EAAU1lC,KAAAA,EAAO6E,KAAAA,EAAOoM,IAAAA,EAAK,GAAGxQ,GAAAA,CAAAA;IACrD,MAAMy7C,QAAAA,GAAWM,SAAUx5B,CAAAA,IAAAA,EAAMtiB,MAAQglC,EAAAA,QAAAA,CAAAA,CAAAA;IAEzC,KAAK,MAAM,EAACjK,MAAQ6qB,EAAAA,GAAAA,EAAK5lD,MAAAA,EAAQwiD,GAAG,EAAEhmD,KAAK,EAAE+H,GAAG,EAAC,IAAIi3C,QAAU,CAAA;QAC7D,MAAM,EAAC98B,KAAO,EAAA,EAACG,eAAkBvf,GAAAA,KAAAA,EAAM,GAAG,CAAA,CAAE,EAAC,GAAGsmD,GAAAA,CAAAA;QAChD,MAAMC,QAAAA,GAAW7lD,WAAW,IAAI,CAAA;QAEhC2K,GAAAA,CAAI03B,IAAI,EAAA,CAAA;QACR13B,GAAAA,CAAIiU,SAAS,GAAGC,eAAAA,CAAAA;QAEhBinC,UAAAA,CAAWn7C,KAAKxG,KAAOoM,EAAAA,IAAAA,EAAMs1C,QAAYvD,IAAAA,UAAAA,CAAWtd,UAAUxoC,KAAO+H,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;QAErEoG,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QAEb,MAAM6iB,WAAW,CAAC,CAACpjC,IAAK63B,CAAAA,WAAW,CAACxvC,GAAKi7C,EAAAA,GAAAA,CAAAA,CAAAA;QAEzC,IAAI/kD,IAAAA,CAAAA;QACJ,IAAIglD,QAAU,EAAA;YACZ,IAAIH,QAAU,EAAA;gBACZ/6C,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;aACR,MAAA;gBACL4Q,kBAAmBp7C,CAAAA,GAAAA,EAAK3K,QAAQuE,GAAKygC,EAAAA,QAAAA,CAAAA,CAAAA;aACtC;YAED,MAAMghB,aAAa,CAAC,CAAChmD,OAAOm6C,WAAW,CAACxvC,KAAK63C,GAAK,EAAA;gBAACrvC,IAAMuyC,EAAAA,QAAAA;gBAAUphD,OAAAA,EAAS,IAAI;YAAA,CAAA,CAAA,CAAA;YAChFzD,IAAAA,GAAO6kD,QAAYM,IAAAA,UAAAA,CAAAA;YACnB,IAAI,CAACnlD,IAAM,EAAA;gBACTklD,kBAAmBp7C,CAAAA,GAAAA,EAAK3K,QAAQxD,KAAOwoC,EAAAA,QAAAA,CAAAA,CAAAA;aACxC;SACF;QAEDr6B,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;QACbxqC,GAAAA,CAAIiB,IAAI,CAAC/K,IAAO,GAAA,SAAA,GAAY,SAAS,CAAA,CAAA;QAErC8J,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IACb,CAAA;AACF,CAAA;AAEA,SAASujB,UAAAA,CAAWn7C,GAAG,EAAExG,KAAK,EAAEoM,IAAI,EAAEutC,MAAM,EAAE;IAC5C,MAAMptC,SAAYvM,GAAAA,KAAAA,CAAMzI,KAAK,CAACgV,SAAS,CAAA;IACvC,MAAM,EAACs0B,QAAAA,EAAUxoC,KAAAA,EAAO+H,GAAG,EAAC,GAAGu5C,MAAAA,IAAU,CAAA,CAAC,CAAA;IAE1C,IAAI9Y,QAAAA,KAAa,GAAOA,IAAAA,QAAAA,KAAa,GAAK,EAAA;QACxC,IAAIhgC,IAAAA,EAAMH,KAAKC,KAAOC,EAAAA,MAAAA,CAAAA;QAEtB,IAAIigC,aAAa,GAAK,EAAA;YACpBhgC,IAAOxI,GAAAA,KAAAA,CAAAA;YACPqI,GAAAA,GAAM6L,UAAU7L,GAAG,CAAA;YACnBC,KAAQP,GAAAA,GAAAA,CAAAA;YACRQ,MAAAA,GAAS2L,UAAU3L,MAAM,CAAA;SACpB,MAAA;YACLC,IAAAA,GAAO0L,UAAU1L,IAAI,CAAA;YACrBH,GAAMrI,GAAAA,KAAAA,CAAAA;YACNsI,KAAAA,GAAQ4L,UAAU5L,KAAK,CAAA;YACvBC,MAASR,GAAAA,GAAAA,CAAAA;SACV;QAEDoG,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QAEb,IAAItyB,IAAM,EAAA;YACRvL,IAAAA,GAAO1I,IAAKoC,CAAAA,GAAG,CAACsG,IAAAA,EAAMuL,KAAKvL,IAAI,CAAA,CAAA;YAC/BF,KAAAA,GAAQxI,IAAKC,CAAAA,GAAG,CAACuI,KAAAA,EAAOyL,KAAKzL,KAAK,CAAA,CAAA;YAClCD,GAAAA,GAAMvI,IAAKoC,CAAAA,GAAG,CAACmG,GAAAA,EAAK0L,KAAK1L,GAAG,CAAA,CAAA;YAC5BE,MAAAA,GAASzI,IAAKC,CAAAA,GAAG,CAACwI,MAAAA,EAAQwL,KAAKxL,MAAM,CAAA,CAAA;SACtC;QAED4F,GAAAA,CAAIyqC,IAAI,CAACpwC,IAAAA,EAAMH,GAAKC,EAAAA,KAAAA,GAAQE,MAAMD,MAASF,GAAAA,GAAAA,CAAAA,CAAAA;QAC3C8F,GAAAA,CAAI4F,IAAI,EAAA,CAAA;KACT;AACH,CAAA;AAEA,SAASw1C,kBAAAA,CAAmBp7C,GAAG,EAAE3K,MAAM,EAAE0b,KAAK,EAAEspB,QAAQ,EAAE;IACxD,MAAMihB,iBAAoBjmD,GAAAA,MAAAA,CAAOk8C,WAAW,CAACxgC,KAAOspB,EAAAA,QAAAA,CAAAA,CAAAA;IACpD,IAAIihB,iBAAmB,EAAA;QACrBt7C,GAAAA,CAAIo4B,MAAM,CAACkjB,iBAAAA,CAAkBthD,CAAC,EAAEshD,kBAAkBrhD,CAAC,CAAA,CAAA;KACpD;AACH;AC9KA,IAAA,QAAe;IACb0C,EAAI,EAAA,QAAA;IAEJ4+C,mBAAAA,CAAAA,CAAoBxqD,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QACzC,MAAMsL,KAAAA,GAAQ,CAAC9S,KAAM8K,CAAAA,IAAI,CAACyG,QAAQ,IAAI,EAAE,EAAE9P,MAAM,CAAA;QAChD,MAAMimD,UAAU,EAAE,CAAA;QAClB,IAAI38C,IAAAA,EAAMrJ,GAAGklB,IAAMyY,EAAAA,MAAAA,CAAAA;QAEnB,IAAK39B,CAAI,GAAA,CAAA,EAAGA,CAAIoR,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;YAC1BqJ,IAAO/K,GAAAA,KAAAA,CAAMwR,cAAc,CAAC9P,CAAAA,CAAAA,CAAAA;YAC5BklB,IAAAA,GAAO7b,KAAK+C,OAAO,CAAA;YACnBuxB,MAAAA,GAAS,IAAI,CAAA;YAEb,IAAIzY,IAAQA,IAAAA,IAAAA,CAAKpf,OAAO,IAAIof,gBAAgBq5B,WAAa,EAAA;gBACvD5gB,MAAS,GAAA;oBACPgW,OAASr1C,EAAAA,KAAAA,CAAM0kB,gBAAgB,CAAChjB,CAAAA,CAAAA;oBAChCwI,KAAOxI,EAAAA,CAAAA;oBACPwO,IAAM23C,EAAAA,WAAAA,CAAYjhC,MAAMllB,CAAGoR,EAAAA,KAAAA,CAAAA;oBAC3B9S,KAAAA;oBACAmL,IAAAA,EAAMJ,IAAK6B,CAAAA,UAAU,CAACpF,OAAO,CAACwJ,SAAS;oBACvCvI,KAAAA,EAAOsC,KAAKE,MAAM;oBAClB2b,IAAAA;gBACF,CAAA,CAAA;aACD;YAED7b,IAAAA,CAAK0/C,OAAO,GAAGprB,MAAAA,CAAAA;YACfqoB,OAAAA,CAAQhlD,IAAI,CAAC28B,MAAAA,CAAAA,CAAAA;QACf,CAAA;QAEA,IAAK39B,CAAI,GAAA,CAAA,EAAGA,CAAIoR,GAAAA,KAAAA,EAAO,EAAEpR,CAAG,CAAA;YAC1B29B,MAASqoB,GAAAA,OAAO,CAAChmD,CAAE,CAAA,CAAA;YACnB,IAAI,CAAC29B,MAAUA,IAAAA,MAAAA,CAAOnvB,IAAI,KAAK,KAAK,EAAE;gBACpC,SAAS;aACV;YAEDmvB,MAAAA,CAAOnvB,IAAI,GAAGu3C,cAAAA,CAAeC,OAAShmD,EAAAA,CAAAA,EAAG8F,QAAQmgD,SAAS,CAAA,CAAA;QAC5D,CAAA;IACF,CAAA;IAEA+C,UAAAA,CAAAA,CAAW1qD,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAChC,MAAM7F,IAAAA,GAAO6F,OAAQmjD,CAAAA,QAAQ,KAAK,YAAA,CAAA;QAClC,MAAM5gD,QAAAA,GAAW/J,MAAM2rB,4BAA4B,EAAA,CAAA;QACnD,MAAM5W,IAAAA,GAAO/U,MAAMgV,SAAS,CAAA;QAC5B,IAAK,IAAItT,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;YAC7C,MAAM29B,MAASt1B,GAAAA,QAAQ,CAACrI,CAAAA,CAAE,CAAC+oD,OAAO,CAAA;YAClC,IAAI,CAACprB,MAAQ,EAAA;gBACX,SAAS;aACV;YAEDA,MAAAA,CAAOzY,IAAI,CAACkB,mBAAmB,CAAC/S,IAAAA,EAAMsqB,OAAOl0B,IAAI,CAAA,CAAA;YACjD,IAAIxJ,IAAAA,IAAQ09B,MAAOnvB,CAAAA,IAAI,EAAE;gBACvBs5C,SAAUxpD,CAAAA,KAAAA,CAAMiP,GAAG,EAAEowB,MAAQtqB,EAAAA,IAAAA,CAAAA,CAAAA;aAC9B;QACH,CAAA;IACF,CAAA;IAEA61C,kBAAAA,CAAAA,CAAmB5qD,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QACxC,IAAIA,OAAAA,CAAQmjD,QAAQ,KAAK,oBAAsB,EAAA;YAC7C,OAAA;SACD;QAED,MAAM5gD,QAAAA,GAAW/J,MAAM2rB,4BAA4B,EAAA,CAAA;QACnD,IAAK,IAAIjqB,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,EAAA,EAAEA,CAAG,CAAA;YAC7C,MAAM29B,MAASt1B,GAAAA,QAAQ,CAACrI,CAAAA,CAAE,CAAC+oD,OAAO,CAAA;YAElC,IAAIjD,iBAAiBnoB,MAAS,CAAA,EAAA;gBAC5BmqB,SAAAA,CAAUxpD,KAAMiP,CAAAA,GAAG,EAAEowB,MAAAA,EAAQr/B,MAAMgV,SAAS,CAAA,CAAA;aAC7C;QACH,CAAA;IACF,CAAA;IAEA61C,iBAAAA,CAAAA,CAAkB7qD,KAAK,EAAE+X,IAAI,EAAEvQ,OAAO,EAAE;QACtC,MAAM63B,MAAStnB,GAAAA,IAAAA,CAAKhN,IAAI,CAAC0/C,OAAO,CAAA;QAEhC,IAAI,CAACjD,gBAAiBnoB,CAAAA,MAAAA,CAAAA,IAAW73B,OAAQmjD,CAAAA,QAAQ,KAAK,mBAAqB,EAAA;YACzE,OAAA;SACD;QAEDnB,SAAAA,CAAUxpD,KAAMiP,CAAAA,GAAG,EAAEowB,MAAAA,EAAQr/B,MAAMgV,SAAS,CAAA,CAAA;IAC9C,CAAA;IAEAnO,QAAU,EAAA;QACR8gD,SAAAA,EAAW,IAAI;QACfgD,QAAU,EAAA,mBAAA;IACZ,CAAA;AACF,CAAE;ACzEF,MAAMG,UAAAA,GAAa,CAACC,SAAAA,EAAW3iB,QAAa,GAAA;IAC1C,IAAI,EAAC4iB,SAAY5iB,GAAAA,QAAAA,EAAU6iB,QAAW7iB,GAAAA,QAAAA,EAAS,GAAG2iB,SAAAA,CAAAA;IAElD,IAAIA,SAAAA,CAAUG,aAAa,EAAE;QAC3BF,SAAYpqD,GAAAA,IAAAA,CAAKC,GAAG,CAACmqD,SAAW5iB,EAAAA,QAAAA,CAAAA,CAAAA;QAChC6iB,QAAAA,GAAWF,UAAUI,eAAe,IAAIvqD,IAAKC,CAAAA,GAAG,CAACoqD,QAAU7iB,EAAAA,QAAAA,CAAAA,CAAAA;KAC5D;IAED,OAAO;QACL6iB,QAAAA;QACAD,SAAAA;QACAI,UAAYxqD,EAAAA,IAAAA,CAAKoC,GAAG,CAAColC,QAAU4iB,EAAAA,SAAAA,CAAAA;IACjC,CAAA,CAAA;AACF,CAAA,CAAA;AAEA,MAAMK,UAAAA,GAAa,CAACtyC,CAAGrP,EAAAA,CAAAA,GAAMqP,MAAM,IAAI,IAAIrP,MAAM,IAAI,IAAIqP,EAAEvO,YAAY,KAAKd,EAAEc,YAAY,IAAIuO,EAAE7O,KAAK,KAAKR,EAAEQ,KAAK,CAAA;AAE1G,MAAMohD,MAAevzB,SAAAA,OAAAA,CAAAA;IAK1Bv4B,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK,EAAA,CAAA;QAEL,IAAI,CAACklD,MAAM,GAAG,KAAK,CAAA;QAGnB,IAAI,CAACC,cAAc,GAAG,EAAE,CAAA;QAKxB,IAAI,CAACC,YAAY,GAAG,IAAI,CAAA;QAGxB,IAAI,CAACC,YAAY,GAAG,KAAK,CAAA;QAEzB,IAAI,CAAC1rD,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK,CAAA;QACzB,IAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO,CAAA;QAC7B,IAAI,CAACyH,GAAG,GAAG5I,MAAAA,CAAO4I,GAAG,CAAA;QACrB,IAAI,CAAC08C,WAAW,GAAG7rD,SAAAA,CAAAA;QACnB,IAAI,CAAC8rD,WAAW,GAAG9rD,SAAAA,CAAAA;QACnB,IAAI,CAAC+rD,UAAU,GAAG/rD,SAAAA,CAAAA;QAClB,IAAI,CAACqlB,SAAS,GAAGrlB,SAAAA,CAAAA;QACjB,IAAI,CAAColB,QAAQ,GAAGplB,SAAAA,CAAAA;QAChB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAAA,CAAAA;QACX,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;QACd,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;QACZ,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;QACb,IAAI,CAACyd,MAAM,GAAGzd,SAAAA,CAAAA;QACd,IAAI,CAAC0d,KAAK,GAAG1d,SAAAA,CAAAA;QACb,IAAI,CAACw8B,QAAQ,GAAGx8B,SAAAA,CAAAA;QAChB,IAAI,CAAC2rB,QAAQ,GAAG3rB,SAAAA,CAAAA;QAChB,IAAI,CAAC0mB,MAAM,GAAG1mB,SAAAA,CAAAA;QACd,IAAI,CAACsvB,QAAQ,GAAGtvB,SAAAA,CAAAA;IAClB,CAAA;IAEA4F,MAAAA,CAAOwf,QAAQ,EAAEC,SAAS,EAAEgZ,OAAO,EAAE;QACnC,IAAI,CAACjZ,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACC,SAAS,GAAGA,SAAAA,CAAAA;QACjB,IAAI,CAACmX,QAAQ,GAAG6B,OAAAA,CAAAA;QAEhB,IAAI,CAACI,aAAa,EAAA,CAAA;QAClB,IAAI,CAACutB,WAAW,EAAA,CAAA;QAChB,IAAI,CAACtsB,GAAG,EAAA,CAAA;IACV,CAAA;IAEAjB,aAAgB,GAAA;QACd,IAAI,IAAI,CAACpjB,YAAY,EAAI,EAAA;YACvB,IAAI,CAACqC,KAAK,GAAG,IAAI,CAAC0H,QAAQ,CAAA;YAC1B,IAAI,CAAC5b,IAAI,GAAG,IAAI,CAACgzB,QAAQ,CAAChzB,IAAI,CAAA;YAC9B,IAAI,CAACF,KAAK,GAAG,IAAI,CAACoU,KAAK,CAAA;SAClB,MAAA;YACL,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC4H,SAAS,CAAA;YAC5B,IAAI,CAAChc,GAAG,GAAG,IAAI,CAACmzB,QAAQ,CAACnzB,GAAG,CAAA;YAC5B,IAAI,CAACE,MAAM,GAAG,IAAI,CAACkU,MAAM,CAAA;SAC1B;IACH,CAAA;IAEAuuC,WAAc,GAAA;QACZ,MAAMf,YAAY,IAAI,CAACvjD,OAAO,CAAC8L,MAAM,IAAI,CAAA,CAAC,CAAA;QAC1C,IAAIq4C,WAAc1qD,OAAAA,wKAAAA,EAAK8pD,SAAUroC,CAAAA,cAAc,EAAE;YAAC,IAAI,CAAC1iB,KAAK;SAAC,EAAE,IAAI,KAAK,EAAE,CAAA;QAE1E,IAAI+qD,SAAAA,CAAUt9C,MAAM,EAAE;YACpBk+C,WAAAA,GAAcA,WAAYl+C,CAAAA,MAAM,CAAC,CAAC7L,IAASmpD,GAAAA,SAAAA,CAAUt9C,MAAM,CAAC7L,IAAM,EAAA,IAAI,CAAC5B,KAAK,CAAC8K,IAAI,CAAA,CAAA,CAAA;SAClF;QAED,IAAIigD,SAAAA,CAAUjyC,IAAI,EAAE;YAClB6yC,WAAAA,GAAcA,WAAY7yC,CAAAA,IAAI,CAAC,CAACC,GAAGrP,CAAMqhD,GAAAA,SAAAA,CAAUjyC,IAAI,CAACC,GAAGrP,CAAG,EAAA,IAAI,CAAC1J,KAAK,CAAC8K,IAAI,CAAA,CAAA,CAAA;SAC9E;QAED,IAAI,IAAI,CAACtD,OAAO,CAACoB,OAAO,EAAE;YACxB+iD,WAAAA,CAAY/iD,OAAO,EAAA,CAAA;SACpB;QAED,IAAI,CAAC+iD,WAAW,GAAGA,WAAAA,CAAAA;IACrB,CAAA;IAEAnsB,GAAM,GAAA;QACJ,MAAM,EAACh4B,OAAO,EAAEyH,GAAG,EAAC,GAAG,IAAI,CAAA;QAM3B,IAAI,CAACzH,OAAQygB,CAAAA,OAAO,EAAE;YACpB,IAAI,CAACzK,KAAK,GAAG,IAAI,CAACD,MAAM,GAAG,CAAA,CAAA;YAC3B,OAAA;SACD;QAED,MAAMwtC,SAAAA,GAAYvjD,QAAQ8L,MAAM,CAAA;QAChC,MAAMy4C,SAAAA,OAAYtwB,yKAAOsvB,EAAAA,SAAAA,CAAUvvB,IAAI,CAAA,CAAA;QACvC,MAAM4M,QAAAA,GAAW2jB,UAAU5jD,IAAI,CAAA;QAC/B,MAAMm5B,WAAAA,GAAc,IAAI,CAAC0qB,mBAAmB,EAAA,CAAA;QAC5C,MAAM,EAACf,QAAQ,EAAEG,UAAAA,EAAW,GAAGN,WAAWC,SAAW3iB,EAAAA,QAAAA,CAAAA,CAAAA;QAErD,IAAI5qB,KAAOD,EAAAA,MAAAA,CAAAA;QAEXtO,GAAIusB,CAAAA,IAAI,GAAGuwB,SAAAA,CAAUlpB,MAAM,CAAA;QAE3B,IAAI,IAAI,CAAC1nB,YAAY,EAAI,EAAA;YACvBqC,KAAAA,GAAQ,IAAI,CAAC0H,QAAQ,CAAA;YACrB3H,MAAAA,GAAS,IAAI,CAAC0uC,QAAQ,CAAC3qB,WAAa8G,EAAAA,QAAAA,EAAU6iB,UAAUG,UAAc,CAAA,GAAA,EAAA,CAAA;SACjE,MAAA;YACL7tC,MAAAA,GAAS,IAAI,CAAC4H,SAAS,CAAA;YACvB3H,KAAAA,GAAQ,IAAI,CAAC0uC,QAAQ,CAAC5qB,WAAayqB,EAAAA,SAAAA,EAAWd,UAAUG,UAAc,CAAA,GAAA,EAAA,CAAA;SACvE;QAED,IAAI,CAAC5tC,KAAK,GAAG5c,IAAAA,CAAKC,GAAG,CAAC2c,KAAOhW,EAAAA,OAAAA,CAAQ0d,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAA,CAAA;QAC9D,IAAI,CAAC3H,MAAM,GAAG3c,IAAAA,CAAKC,GAAG,CAAC0c,MAAQ/V,EAAAA,OAAAA,CAAQ2d,SAAS,IAAI,IAAI,CAACA,SAAS,CAAA,CAAA;IACpE,CAAA;IAKA8mC,QAAAA,CAAS3qB,WAAW,EAAE8G,QAAQ,EAAE6iB,QAAQ,EAAEG,UAAU,EAAE;QACpD,MAAM,EAACn8C,GAAG,EAAEiW,QAAQ,EAAE1d,SAAS,EAAC8L,MAAAA,EAAQ,EAACqe,OAAAA,EAAQ,EAAC,EAAC,GAAG,IAAI,CAAA;QAC1D,MAAMw6B,QAAW,GAAA,IAAI,CAACX,cAAc,GAAG,EAAE,CAAA;QAEzC,MAAMK,UAAa,GAAA,IAAI,CAACA,UAAU,GAAG;YAAC,CAAA;SAAE,CAAA;QACxC,MAAMlwB,aAAayvB,UAAaz5B,GAAAA,OAAAA,CAAAA;QAChC,IAAIy6B,WAAc9qB,GAAAA,WAAAA,CAAAA;QAElBryB,GAAAA,CAAI2T,SAAS,GAAG,MAAA,CAAA;QAChB3T,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;QAEnB,IAAI4mB,MAAM,CAAC,CAAA,CAAA;QACX,IAAIljD,MAAM,CAACwyB,UAAAA,CAAAA;QACX,IAAI,CAACgwB,WAAW,CAACnrD,OAAO,CAAC,CAACyjB,YAAYviB,CAAM,GAAA;YAC1C,MAAM4qD,SAAAA,GAAYrB,QAAY7iB,GAAAA,QAAAA,GAAW,CAAKn5B,GAAAA,GAAAA,CAAIs9C,WAAW,CAACtoC,UAAAA,CAAWhB,IAAI,CAAA,CAAEzF,KAAK,CAAA;YAEpF,IAAI9b,CAAM,KAAA,CAAA,IAAKmqD,UAAU,CAACA,UAAWpqD,CAAAA,MAAM,GAAG,CAAA,CAAE,GAAG6qD,SAAAA,GAAY,CAAI36B,GAAAA,OAAAA,GAAUzM,QAAU,EAAA;gBACrFknC,WAAezwB,IAAAA,UAAAA,CAAAA;gBACfkwB,UAAU,CAACA,UAAWpqD,CAAAA,MAAM,GAAA,CAAIC,CAAI,GAAA,CAAA,GAAI,CAAI,GAAA,CAAC,CAAD,CAAG,GAAG,CAAA,CAAA;gBAClDyH,GAAOwyB,IAAAA,UAAAA,CAAAA;gBACP0wB,GAAAA,EAAAA,CAAAA;aACD;YAEDF,QAAQ,CAACzqD,EAAE,GAAG;gBAAC4H,IAAM,EAAA,CAAA;gBAAGH,GAAAA;gBAAKkjD,GAAAA;gBAAK7uC,KAAO8uC,EAAAA,SAAAA;gBAAW/uC,MAAQ6tC,EAAAA,UAAAA;YAAU,CAAA,CAAA;YAEtES,UAAU,CAACA,UAAWpqD,CAAAA,MAAM,GAAG,CAAA,CAAE,IAAI6qD,SAAY36B,GAAAA,OAAAA,CAAAA;QACnD,CAAA,CAAA,CAAA;QAEA,OAAOy6B,WAAAA,CAAAA;IACT,CAAA;IAEAF,QAAAA,CAAS5qB,WAAW,EAAEyqB,SAAS,EAAEd,QAAQ,EAAEuB,WAAW,EAAE;QACtD,MAAM,EAACv9C,GAAG,EAAEkW,SAAS,EAAE3d,SAAS,EAAC8L,MAAAA,EAAQ,EAACqe,OAAAA,EAAQ,EAAC,EAAC,GAAG,IAAI,CAAA;QAC3D,MAAMw6B,QAAW,GAAA,IAAI,CAACX,cAAc,GAAG,EAAE,CAAA;QACzC,MAAMI,WAAc,GAAA,IAAI,CAACA,WAAW,GAAG,EAAE,CAAA;QACzC,MAAMa,cAActnC,SAAYmc,GAAAA,WAAAA,CAAAA;QAEhC,IAAIorB,UAAa/6B,GAAAA,OAAAA,CAAAA;QACjB,IAAIg7B,eAAkB,GAAA,CAAA,CAAA;QACtB,IAAIC,gBAAmB,GAAA,CAAA,CAAA;QAEvB,IAAItjD,IAAO,GAAA,CAAA,CAAA;QACX,IAAIujD,GAAM,GAAA,CAAA,CAAA;QAEV,IAAI,CAAClB,WAAW,CAACnrD,OAAO,CAAC,CAACyjB,YAAYviB,CAAM,GAAA;YAC1C,MAAM,EAAC4qD,SAAS,EAAElB,UAAU,EAAC,GAAG0B,iBAAkB7B,CAAAA,QAAAA,EAAUc,SAAW98C,EAAAA,GAAAA,EAAKgV,UAAYuoC,EAAAA,WAAAA,CAAAA,CAAAA;YAGxF,IAAI9qD,IAAI,CAAKkrD,IAAAA,gBAAAA,GAAmBxB,UAAa,GAAA,CAAA,GAAIz5B,UAAU86B,WAAa,EAAA;gBACtEC,UAAAA,IAAcC,eAAkBh7B,GAAAA,OAAAA,CAAAA;gBAChCi6B,WAAAA,CAAYlpD,IAAI,CAAC;oBAAC8a,KAAOmvC,EAAAA,eAAAA;oBAAiBpvC,MAAQqvC,EAAAA,gBAAAA;gBAAgB,CAAA,CAAA,CAAA;gBAClEtjD,IAAAA,IAAQqjD,eAAkBh7B,GAAAA,OAAAA,CAAAA;gBAC1Bk7B,GAAAA,EAAAA,CAAAA;gBACAF,eAAAA,GAAkBC,gBAAmB,GAAA,CAAA,CAAA;aACtC;YAGDT,QAAQ,CAACzqD,EAAE,GAAG;gBAAC4H,IAAAA;gBAAMH,GAAKyjD,EAAAA,gBAAAA;gBAAkBC,GAAAA;gBAAKrvC,KAAO8uC,EAAAA,SAAAA;gBAAW/uC,MAAQ6tC,EAAAA,UAAAA;YAAU,CAAA,CAAA;YAGrFuB,eAAkB/rD,GAAAA,IAAAA,CAAKoC,GAAG,CAAC2pD,eAAiBL,EAAAA,SAAAA,CAAAA,CAAAA;YAC5CM,gBAAAA,IAAoBxB,UAAaz5B,GAAAA,OAAAA,CAAAA;QACnC,CAAA,CAAA,CAAA;QAEA+6B,UAAcC,IAAAA,eAAAA,CAAAA;QACdf,WAAAA,CAAYlpD,IAAI,CAAC;YAAC8a,KAAOmvC,EAAAA,eAAAA;YAAiBpvC,MAAQqvC,EAAAA,gBAAAA;QAAgB,CAAA,CAAA,CAAA;QAElE,OAAOF,UAAAA,CAAAA;IACT,CAAA;IAEAK,cAAiB,GAAA;QACf,IAAI,CAAC,IAAI,CAACvlD,OAAO,CAACygB,OAAO,EAAE;YACzB,OAAA;SACD;QACD,MAAMqZ,WAAAA,GAAc,IAAI,CAAC0qB,mBAAmB,EAAA,CAAA;QAC5C,MAAM,EAACR,cAAgBW,EAAAA,QAAAA,EAAU3kD,OAAS,EAAA,EAAC4yB,KAAAA,EAAO9mB,MAAAA,EAAQ,EAACqe,OAAO,EAAC,EAAEq7B,GAAAA,EAAI,EAAC,GAAG,IAAI,CAAA;QACjF,MAAMC,SAAAA,OAAYC,yKAAAA,EAAcF,GAAK,EAAA,IAAI,CAAC1jD,IAAI,EAAE,IAAI,CAACkU,KAAK,CAAA,CAAA;QAC1D,IAAI,IAAI,CAACrC,YAAY,EAAI,EAAA;YACvB,IAAIkxC,GAAM,GAAA,CAAA,CAAA;YACV,IAAI/iD,WAAO6yB,yKAAe/B,EAAAA,KAAAA,EAAO,IAAI,CAAC9wB,IAAI,GAAGqoB,OAAAA,EAAS,IAAI,CAACvoB,KAAK,GAAG,IAAI,CAACyiD,UAAU,CAACQ,GAAI,CAAA,CAAA,CAAA;YACvF,KAAK,MAAMc,UAAUhB,QAAU,CAAA;gBAC7B,IAAIE,GAAAA,KAAQc,MAAOd,CAAAA,GAAG,EAAE;oBACtBA,GAAAA,GAAMc,OAAOd,GAAG,CAAA;oBAChB/iD,IAAAA,OAAO6yB,yKAAe/B,EAAAA,KAAAA,EAAO,IAAI,CAAC9wB,IAAI,GAAGqoB,OAAAA,EAAS,IAAI,CAACvoB,KAAK,GAAG,IAAI,CAACyiD,UAAU,CAACQ,GAAI,CAAA,CAAA,CAAA;iBACpF;gBACDc,MAAAA,CAAOhkD,GAAG,IAAI,IAAI,CAACA,GAAG,GAAGm4B,WAAc3P,GAAAA,OAAAA,CAAAA;gBACvCw7B,MAAO7jD,CAAAA,IAAI,GAAG2jD,SAAAA,CAAUG,UAAU,CAACH,UAAUhkD,CAAC,CAACK,IAAO6jD,CAAAA,EAAAA,MAAAA,CAAO3vC,KAAK,CAAA,CAAA;gBAClElU,IAAQ6jD,IAAAA,MAAAA,CAAO3vC,KAAK,GAAGmU,OAAAA,CAAAA;YACzB,CAAA;SACK,MAAA;YACL,IAAIk7B,GAAM,GAAA,CAAA,CAAA;YACV,IAAI1jD,UAAMgzB,yKAAe/B,EAAAA,KAAAA,EAAO,IAAI,CAACjxB,GAAG,GAAGm4B,WAAc3P,GAAAA,OAAAA,EAAS,IAAI,CAACtoB,MAAM,GAAG,IAAI,CAACuiD,WAAW,CAACiB,GAAAA,CAAI,CAACtvC,MAAM,CAAA,CAAA;YAC5G,KAAK,MAAM4vC,UAAUhB,QAAU,CAAA;gBAC7B,IAAIgB,MAAAA,CAAON,GAAG,KAAKA,GAAK,EAAA;oBACtBA,GAAAA,GAAMM,OAAON,GAAG,CAAA;oBAChB1jD,GAAAA,OAAMgzB,yKAAAA,EAAe/B,KAAO,EAAA,IAAI,CAACjxB,GAAG,GAAGm4B,cAAc3P,OAAS,EAAA,IAAI,CAACtoB,MAAM,GAAG,IAAI,CAACuiD,WAAW,CAACiB,GAAAA,CAAI,CAACtvC,MAAM,CAAA,CAAA;iBACzG;gBACD4vC,MAAAA,CAAOhkD,GAAG,GAAGA,GAAAA,CAAAA;gBACbgkD,MAAAA,CAAO7jD,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGqoB,OAAAA,CAAAA;gBAC3Bw7B,MAAAA,CAAO7jD,IAAI,GAAG2jD,SAAUG,CAAAA,UAAU,CAACH,SAAAA,CAAUhkD,CAAC,CAACkkD,MAAO7jD,CAAAA,IAAI,CAAG6jD,EAAAA,MAAAA,CAAO3vC,KAAK,CAAA,CAAA;gBACzErU,GAAOgkD,IAAAA,MAAAA,CAAO5vC,MAAM,GAAGoU,OAAAA,CAAAA;YACzB,CAAA;SACD;IACH,CAAA;IAEAxW,YAAe,GAAA;QACb,OAAO,IAAI,CAAC3T,OAAO,CAACikB,QAAQ,KAAK,KAAS,IAAA,IAAI,CAACjkB,OAAO,CAACikB,QAAQ,KAAK,QAAA,CAAA;IACtE,CAAA;IAEA9pB,IAAO,GAAA;QACL,IAAI,IAAI,CAAC6F,OAAO,CAACygB,OAAO,EAAE;YACxB,MAAMhZ,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;gBACpB04B,wKAAAA,EAAS14B,KAAK,IAAI,CAAA,CAAA;YAElB,IAAI,CAACo+C,KAAK,EAAA,CAAA;gBAEVvlB,wKAAW74B,EAAAA,GAAAA,CAAAA,CAAAA;SACZ;IACH,CAAA;IAKAo+C,KAAQ,GAAA;QACN,MAAM,EAAC7lD,OAASmB,EAAAA,IAAAA,EAAMijD,WAAAA,EAAaC,UAAAA,EAAY58C,GAAAA,EAAI,GAAG,IAAI,CAAA;QAC1D,MAAM,EAACmrB,KAAK,EAAE9mB,MAAQy3C,EAAAA,SAAAA,EAAU,GAAGpiD,IAAAA,CAAAA;QACnC,MAAM2kD,YAAAA,GAAezmD,wKAAAA,CAASjD,KAAK,CAAA;QACnC,MAAMqpD,SAAAA,OAAYC,yKAAcvkD,EAAAA,IAAAA,CAAKqkD,GAAG,EAAE,IAAI,CAAC1jD,IAAI,EAAE,IAAI,CAACkU,KAAK,CAAA,CAAA;QAC/D,MAAMuuC,SAAAA,OAAYtwB,yKAAOsvB,EAAAA,SAAAA,CAAUvvB,IAAI,CAAA,CAAA;QACvC,MAAM,EAAC7J,OAAO,EAAC,GAAGo5B,SAAAA,CAAAA;QAClB,MAAM3iB,QAAAA,GAAW2jB,UAAU5jD,IAAI,CAAA;QAC/B,MAAMolD,eAAenlB,QAAW,GAAA,CAAA,CAAA;QAChC,IAAIolB,MAAAA,CAAAA;QAEJ,IAAI,CAACzlB,SAAS,EAAA,CAAA;QAGd94B,GAAAA,CAAI2T,SAAS,GAAGqqC,SAAUrqC,CAAAA,SAAS,CAAC,MAAA,CAAA,CAAA;QACpC3T,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;QACnBx2B,GAAAA,CAAI0U,SAAS,GAAG,GAAA,CAAA;QAChB1U,GAAIusB,CAAAA,IAAI,GAAGuwB,SAAAA,CAAUlpB,MAAM,CAAA;QAE3B,MAAM,EAACooB,QAAAA,EAAUD,SAAAA,EAAWI,UAAU,EAAC,GAAGN,UAAAA,CAAWC,SAAW3iB,EAAAA,QAAAA,CAAAA,CAAAA;QAGhE,MAAMqlB,gBAAgB,SAASxkD,CAAC,EAAEC,CAAC,EAAE+a,UAAU,EAAE;YAC/C,IAAIjG,MAAMitC,QAAaA,CAAAA,IAAAA,QAAAA,IAAY,KAAKjtC,KAAMgtC,CAAAA,SAAAA,CAAAA,IAAcA,YAAY,CAAG,EAAA;gBACzE,OAAA;aACD;YAGD/7C,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YAER,MAAMhjB,SAAYhT,OAAAA,wKAAAA,EAAesT,UAAWN,CAAAA,SAAS,EAAE,CAAA,CAAA,CAAA;YACvD1U,GAAAA,CAAIiU,SAAS,OAAGvS,wKAAesT,EAAAA,UAAAA,CAAWf,SAAS,EAAEoqC,YAAAA,CAAAA,CAAAA;YACrDr+C,GAAAA,CAAIyuC,OAAO,OAAG/sC,wKAAesT,EAAAA,UAAAA,CAAWy5B,OAAO,EAAE,MAAA,CAAA,CAAA;YACjDzuC,GAAAA,CAAIsU,cAAc,OAAG5S,wKAAesT,EAAAA,UAAAA,CAAWV,cAAc,EAAE,CAAA,CAAA,CAAA;YAC/DtU,GAAAA,CAAIwU,QAAQ,OAAG9S,wKAAesT,EAAAA,UAAAA,CAAWR,QAAQ,EAAE,OAAA,CAAA,CAAA;YACnDxU,GAAAA,CAAI0U,SAAS,GAAGA,SAAAA,CAAAA;YAChB1U,GAAAA,CAAI4U,WAAW,OAAGlT,wKAAesT,EAAAA,UAAAA,CAAWJ,WAAW,EAAEypC,YAAAA,CAAAA,CAAAA;YAEzDr+C,GAAAA,CAAIi4B,WAAW,KAACv2B,wKAAAA,EAAesT,UAAWZ,CAAAA,QAAQ,EAAE,EAAE,CAAA,CAAA,CAAA;YAEtD,IAAI0nC,SAAAA,CAAUG,aAAa,EAAE;gBAG3B,MAAMwC,WAAc,GAAA;oBAClB5tC,MAAQkrC,EAAAA,SAAAA,GAAYpqD,IAAK+sD,CAAAA,KAAK,GAAG,CAAA;oBACjChrC,UAAAA,EAAYsB,WAAWtB,UAAU;oBACjCtC,QAAAA,EAAU4D,WAAW5D,QAAQ;oBAC7BuD,WAAaD,EAAAA,SAAAA;gBACf,CAAA,CAAA;gBACA,MAAMmC,OAAUmnC,GAAAA,SAAAA,CAAUW,KAAK,CAAC3kD,GAAGgiD,QAAW,GAAA,CAAA,CAAA,CAAA;gBAC9C,MAAMllC,UAAU7c,CAAIqkD,GAAAA,YAAAA,CAAAA;oBAGpBM,yKAAAA,EAAgB5+C,KAAKy+C,WAAa5nC,EAAAA,OAAAA,EAASC,OAASglC,EAAAA,SAAAA,CAAUI,eAAe,IAAIF,QAAAA,CAAAA,CAAAA;aAC5E,MAAA;gBAGL,MAAM6C,OAAAA,GAAU5kD,CAAItI,GAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAColC,QAAAA,GAAW4iB,SAAQ,IAAK,CAAG,EAAA,CAAA,CAAA,CAAA;gBACzD,MAAM+C,QAAWd,GAAAA,SAAAA,CAAUG,UAAU,CAACnkD,CAAGgiD,EAAAA,QAAAA,CAAAA,CAAAA;gBACzC,MAAMnoC,YAAAA,OAAe8+B,yKAAc39B,EAAAA,UAAAA,CAAWnB,YAAY,CAAA,CAAA;gBAE1D7T,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;gBAEb,IAAIxgC,MAAAA,CAAOW,MAAM,CAACwb,YAAAA,CAAAA,CAAc0pB,IAAI,CAACvwB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI,CAAA,EAAA;wBAClD+mC,yKAAAA,EAAmB/zC,GAAK,EAAA;wBACtBhG,CAAG8kD,EAAAA,QAAAA;wBACH7kD,CAAG4kD,EAAAA,OAAAA;wBACHt9B,CAAGy6B,EAAAA,QAAAA;wBACHv6B,CAAGs6B,EAAAA,SAAAA;wBACHlrC,MAAQgD,EAAAA,YAAAA;oBACV,CAAA,CAAA,CAAA;iBACK,MAAA;oBACL7T,GAAAA,CAAIyqC,IAAI,CAACqU,QAAUD,EAAAA,OAAAA,EAAS7C,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;iBACvC;gBAED/7C,GAAAA,CAAIiB,IAAI,EAAA,CAAA;gBACR,IAAIyT,cAAc,CAAG,EAAA;oBACnB1U,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;iBACX;aACF;YAEDr4B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;QACb,CAAA,CAAA;QAEA,MAAMmnB,WAAW,SAAS/kD,CAAC,EAAEC,CAAC,EAAE+a,UAAU,EAAE;gBAC1C4jB,wKAAW54B,EAAAA,GAAAA,EAAKgV,WAAWhB,IAAI,EAAEha,GAAGC,CAAKkiD,GAAAA,UAAAA,GAAa,GAAIW,SAAW,EAAA;gBACnEkC,aAAAA,EAAehqC,WAAWtV,MAAM;gBAChCiU,SAAAA,EAAWqqC,SAAUrqC,CAAAA,SAAS,CAACqB,UAAAA,CAAWrB,SAAS,CAAA;YACrD,CAAA,CAAA,CAAA;QACF,CAAA,CAAA;QAGA,MAAMzH,YAAAA,GAAe,IAAI,CAACA,YAAY,EAAA,CAAA;QACtC,MAAMmmB,WAAAA,GAAc,IAAI,CAAC0qB,mBAAmB,EAAA,CAAA;QAC5C,IAAI7wC,YAAc,EAAA;YAChBqyC,MAAS,GAAA;gBACPvkD,CAAAA,MAAGkzB,yKAAe/B,EAAAA,KAAAA,EAAO,IAAI,CAAC9wB,IAAI,GAAGqoB,OAAS,EAAA,IAAI,CAACvoB,KAAK,GAAGyiD,UAAU,CAAC,CAAE,CAAA,CAAA;gBACxE3iD,CAAAA,EAAG,IAAI,CAACC,GAAG,GAAGwoB,OAAU2P,GAAAA,WAAAA;gBACxB1a,IAAM,EAAA,CAAA;YACR,CAAA,CAAA;SACK,MAAA;YACL4mC,MAAS,GAAA;gBACPvkD,CAAG,EAAA,IAAI,CAACK,IAAI,GAAGqoB,OAAAA;gBACfzoB,CAAAA,MAAGizB,yKAAAA,EAAe/B,KAAO,EAAA,IAAI,CAACjxB,GAAG,GAAGm4B,WAAc3P,GAAAA,OAAAA,EAAS,IAAI,CAACtoB,MAAM,GAAGuiD,WAAW,CAAC,CAAA,CAAE,CAACruC,MAAM,CAAA;gBAC9FqJ,IAAM,EAAA,CAAA;YACR,CAAA,CAAA;SACD;YAEDsnC,yKAAAA,EAAsB,IAAI,CAACj/C,GAAG,EAAEtG,KAAKwlD,aAAa,CAAA,CAAA;QAElD,MAAMxyB,aAAayvB,UAAaz5B,GAAAA,OAAAA,CAAAA;QAChC,IAAI,CAACg6B,WAAW,CAACnrD,OAAO,CAAC,CAACyjB,YAAYviB,CAAM,GAAA;YAC1CuN,GAAAA,CAAI4U,WAAW,GAAGI,UAAWb,CAAAA,SAAS;YACtCnU,GAAAA,CAAIiU,SAAS,GAAGe,UAAWb,CAAAA,SAAS;YAEpC,MAAMgrC,YAAYn/C,GAAIs9C,CAAAA,WAAW,CAACtoC,UAAWhB,CAAAA,IAAI,EAAEzF,KAAK,CAAA;YACxD,MAAMoF,SAAYqqC,GAAAA,SAAAA,CAAUrqC,SAAS,CAACqB,UAAWrB,CAAAA,SAAS,IAAA,CAAKqB,UAAWrB,CAAAA,SAAS,GAAGmoC,SAAAA,CAAUnoC,SAAS,CAAD,CAAA,CAAA;YACxG,MAAMpF,KAAAA,GAAQytC,WAAWsC,YAAea,GAAAA,SAAAA,CAAAA;YACxC,IAAInlD,CAAAA,GAAIukD,OAAOvkD,CAAC,CAAA;YAChB,IAAIC,CAAAA,GAAIskD,OAAOtkD,CAAC,CAAA;YAEhB+jD,SAAAA,CAAUoB,QAAQ,CAAC,IAAI,CAAC7wC,KAAK,CAAA,CAAA;YAE7B,IAAIrC,YAAc,EAAA;gBAChB,IAAIzZ,CAAAA,GAAI,KAAKuH,CAAIuU,GAAAA,KAAAA,GAAQmU,UAAU,IAAI,CAACvoB,KAAK,EAAE;oBAC7CF,CAAIskD,GAAAA,MAAAA,CAAOtkD,CAAC,IAAIyyB,UAAAA,CAAAA;oBAChB6xB,MAAAA,CAAO5mC,IAAI,EAAA,CAAA;oBACX3d,CAAAA,GAAIukD,OAAOvkD,CAAC,OAAGkzB,yKAAAA,EAAe/B,KAAO,EAAA,IAAI,CAAC9wB,IAAI,GAAGqoB,OAAS,EAAA,IAAI,CAACvoB,KAAK,GAAGyiD,UAAU,CAAC2B,MAAAA,CAAO5mC,IAAI,CAAC,CAAA,CAAA;iBAC/F;aACI,MAAA,IAAIllB,IAAI,CAAKwH,IAAAA,CAAAA,GAAIyyB,aAAa,IAAI,CAACtyB,MAAM,EAAE;gBAChDJ,CAAIukD,GAAAA,MAAAA,CAAOvkD,CAAC,GAAGA,CAAI2iD,GAAAA,WAAW,CAAC4B,MAAAA,CAAO5mC,IAAI,CAAC,CAACpJ,KAAK,GAAGmU,OAAAA,CAAAA;gBACpD67B,MAAAA,CAAO5mC,IAAI,EAAA,CAAA;gBACX1d,CAAIskD,GAAAA,MAAAA,CAAOtkD,CAAC,OAAGizB,yKAAAA,EAAe/B,OAAO,IAAI,CAACjxB,GAAG,GAAGm4B,WAAAA,GAAc3P,SAAS,IAAI,CAACtoB,MAAM,GAAGuiD,WAAW,CAAC4B,MAAO5mC,CAAAA,IAAI,CAAC,CAACrJ,MAAM,CAAA,CAAA;aACrH;YAED,MAAM+wC,KAAAA,GAAQrB,SAAUhkD,CAAAA,CAAC,CAACA,CAAAA,CAAAA,CAAAA;YAE1BwkD,aAAAA,CAAca,OAAOplD,CAAG+a,EAAAA,UAAAA,CAAAA,CAAAA;YAExBhb,CAAAA,OAAIslD,yKAAO3rC,EAAAA,SAAAA,EAAW3Z,CAAIgiD,GAAAA,QAAAA,GAAWsC,YAAcpyC,EAAAA,YAAAA,GAAelS,CAAIuU,GAAAA,KAAAA,GAAQ,IAAI,CAACpU,KAAK,EAAET,KAAKqkD,GAAG,CAAA,CAAA;YAGlGgB,QAAAA,CAASf,SAAUhkD,CAAAA,CAAC,CAACA,CAAAA,CAAAA,EAAIC,CAAG+a,EAAAA,UAAAA,CAAAA,CAAAA;YAE5B,IAAI9I,YAAc,EAAA;gBAChBqyC,MAAOvkD,CAAAA,CAAC,IAAIuU,KAAQmU,GAAAA,OAAAA,CAAAA;YACtB,CAAA,MAAO,IAAI,OAAO1N,UAAWhB,CAAAA,IAAI,KAAK,QAAU,EAAA;gBAC9C,MAAMurC,cAAAA,GAAiBzC,UAAUpwB,UAAU,CAAA;gBAC3C6xB,MAAAA,CAAOtkD,CAAC,IAAIulD,yBAA0BxqC,CAAAA,UAAAA,EAAYuqC,cAAkB78B,CAAAA,GAAAA,OAAAA,CAAAA;aAC/D,MAAA;gBACL67B,MAAAA,CAAOtkD,CAAC,IAAIyyB,UAAAA,CAAAA;aACb;QACH,CAAA,CAAA,CAAA;YAEA+yB,yKAAAA,EAAqB,IAAI,CAACz/C,GAAG,EAAEtG,KAAKwlD,aAAa,CAAA,CAAA;IACnD,CAAA;IAKApmB,SAAY,GAAA;QACV,MAAMp/B,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAM45B,SAAAA,GAAYz4B,KAAKs4B,KAAK,CAAA;QAC5B,MAAM0tB,SAAAA,OAAYlzB,yKAAO2F,EAAAA,SAAAA,CAAU5F,IAAI,CAAA,CAAA;QACvC,MAAMozB,YAAAA,OAAe18B,wKAAUkP,EAAAA,SAAAA,CAAUzP,OAAO,CAAA,CAAA;QAEhD,IAAI,CAACyP,SAAUnZ,CAAAA,OAAO,EAAE;YACtB,OAAA;SACD;QAED,MAAMglC,SAAAA,OAAYC,yKAAcvkD,EAAAA,IAAAA,CAAKqkD,GAAG,EAAE,IAAI,CAAC1jD,IAAI,EAAE,IAAI,CAACkU,KAAK,CAAA,CAAA;QAC/D,MAAMvO,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMwc,QAAAA,GAAW2V,UAAU3V,QAAQ,CAAA;QACnC,MAAM8hC,YAAAA,GAAeoB,SAAUxmD,CAAAA,IAAI,GAAG,CAAA,CAAA;QACtC,MAAM0mD,0BAAAA,GAA6BD,YAAazlD,CAAAA,GAAG,GAAGokD,YAAAA,CAAAA;QACtD,IAAIrkD,CAAAA,CAAAA;QAIJ,IAAII,IAAAA,GAAO,IAAI,CAACA,IAAI,CAAA;QACpB,IAAI4b,QAAAA,GAAW,IAAI,CAAC1H,KAAK,CAAA;QAEzB,IAAI,IAAI,CAACrC,YAAY,EAAI,EAAA;YAEvB+J,QAAAA,GAAWtkB,IAAKoC,CAAAA,GAAG,CAAI,GAAA,IAAI,CAAC6oD,UAAU,CAAA,CAAA;YACtC3iD,CAAI,GAAA,IAAI,CAACC,GAAG,GAAG0lD,0BAAAA,CAAAA;YACfvlD,IAAO6yB,OAAAA,yKAAAA,EAAexzB,KAAKyxB,KAAK,EAAE9wB,MAAM,IAAI,CAACF,KAAK,GAAG8b,QAAAA,CAAAA,CAAAA;SAChD,MAAA;YAEL,MAAMC,YAAY,IAAI,CAACymC,WAAW,CAAC/oD,MAAM,CAAC,CAACC,GAAKqF,EAAAA,IAAAA,GAASvH,KAAKoC,GAAG,CAACF,GAAKqF,EAAAA,IAAAA,CAAKoV,MAAM,CAAG,EAAA,CAAA,CAAA,CAAA;YACrFrU,CAAI2lD,GAAAA,0BAAAA,OAA6B1yB,yKAAAA,EAAexzB,IAAKyxB,CAAAA,KAAK,EAAE,IAAI,CAACjxB,GAAG,EAAE,IAAI,CAACE,MAAM,GAAG8b,YAAYxc,IAAK2K,CAAAA,MAAM,CAACqe,OAAO,GAAG,IAAI,CAACq6B,mBAAmB,EAAA,CAAA,CAAA;SAC/I;QAID,MAAM/iD,CAAIkzB,OAAAA,yKAAAA,EAAe1Q,QAAUniB,EAAAA,IAAAA,EAAMA,IAAO4b,GAAAA,QAAAA,CAAAA,CAAAA;QAGhDjW,GAAAA,CAAI2T,SAAS,GAAGqqC,SAAUrqC,CAAAA,SAAS,KAACmZ,yKAAmBtQ,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QACvDxc,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;QACnBx2B,GAAI4U,CAAAA,WAAW,GAAGud,SAAAA,CAAUx9B,KAAK,CAAA;QACjCqL,GAAIiU,CAAAA,SAAS,GAAGke,SAAAA,CAAUx9B,KAAK,CAAA;QAC/BqL,GAAIusB,CAAAA,IAAI,GAAGmzB,SAAAA,CAAU9rB,MAAM,CAAA;YAE3BgF,wKAAAA,EAAW54B,GAAKmyB,EAAAA,SAAAA,CAAUne,IAAI,EAAEha,GAAGC,CAAGylD,EAAAA,SAAAA,CAAAA,CAAAA;IACxC,CAAA;IAKA3C,mBAAsB,GAAA;QACpB,MAAM5qB,SAAY,GAAA,IAAI,CAAC55B,OAAO,CAACy5B,KAAK,CAAA;QACpC,MAAM0tB,SAAAA,OAAYlzB,yKAAO2F,EAAAA,SAAAA,CAAU5F,IAAI,CAAA,CAAA;QACvC,MAAMozB,YAAAA,OAAe18B,wKAAUkP,EAAAA,SAAAA,CAAUzP,OAAO,CAAA,CAAA;QAChD,OAAOyP,SAAAA,CAAUnZ,OAAO,GAAG0mC,SAAAA,CAAUhzB,UAAU,GAAGizB,YAAAA,CAAarxC,MAAM,GAAG,CAAC,CAAA;IAC3E,CAAA;IAKAuxC,gBAAiB7lD,CAAAA,CAAC,EAAEC,CAAC,EAAE;QACrB,IAAIxH,GAAGqtD,MAAQC,EAAAA,EAAAA,CAAAA;QAEf,QAAI7R,yKAAAA,EAAWl0C,CAAG,EAAA,IAAI,CAACK,IAAI,EAAE,IAAI,CAACF,KAAK,SAClC+zC,yKAAWj0C,EAAAA,CAAAA,EAAG,IAAI,CAACC,GAAG,EAAE,IAAI,CAACE,MAAM,CAAG,EAAA;YAEzC2lD,EAAK,GAAA,IAAI,CAACxD,cAAc,CAAA;YACxB,IAAK9pD,IAAI,CAAGA,EAAAA,CAAAA,GAAIstD,GAAGvtD,MAAM,EAAE,EAAEC,CAAG,CAAA;gBAC9BqtD,MAASC,GAAAA,EAAE,CAACttD,CAAE,CAAA,CAAA;gBAEd,QAAIy7C,yKAAAA,EAAWl0C,GAAG8lD,MAAOzlD,CAAAA,IAAI,EAAEylD,MAAOzlD,CAAAA,IAAI,GAAGylD,MAAOvxC,CAAAA,KAAK,SACpD2/B,yKAAWj0C,EAAAA,CAAAA,EAAG6lD,OAAO5lD,GAAG,EAAE4lD,OAAO5lD,GAAG,GAAG4lD,MAAOxxC,CAAAA,MAAM,CAAG,EAAA;oBAE1D,OAAO,IAAI,CAACouC,WAAW,CAACjqD,CAAE,CAAA,CAAA;iBAC3B;YACH,CAAA;SACD;QAED,OAAO,IAAI,CAAA;IACb,CAAA;IAMAutD,WAAAA,CAAYjrC,CAAC,EAAE;QACb,MAAMrb,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,IAAI,CAAC0nD,UAAAA,CAAWlrC,CAAE7jB,CAAAA,IAAI,EAAEwI,IAAO,CAAA,EAAA;YAC7B,OAAA;SACD;QAGD,MAAMwmD,WAAAA,GAAc,IAAI,CAACL,gBAAgB,CAAC9qC,CAAE/a,CAAAA,CAAC,EAAE+a,CAAAA,CAAE9a,CAAC,CAAA,CAAA;QAElD,IAAI8a,EAAE7jB,IAAI,KAAK,eAAe6jB,CAAE7jB,CAAAA,IAAI,KAAK,UAAY,EAAA;YACnD,MAAMy9C,QAAAA,GAAW,IAAI,CAAC6N,YAAY,CAAA;YAClC,MAAM2D,QAAAA,GAAW/D,WAAWzN,QAAUuR,EAAAA,WAAAA,CAAAA,CAAAA;YACtC,IAAIvR,QAAAA,IAAY,CAACwR,QAAU,EAAA;oBACzBnuD,wKAAK0H,EAAAA,IAAAA,CAAK0mD,OAAO,EAAE;oBAACrrC,CAAAA;oBAAG45B,QAAAA;oBAAU,IAAI;iBAAC,EAAE,IAAI,CAAA,CAAA;aAC7C;YAED,IAAI,CAAC6N,YAAY,GAAG0D,WAAAA,CAAAA;YAEpB,IAAIA,WAAAA,IAAe,CAACC,QAAU,EAAA;oBAC5BnuD,wKAAK0H,EAAAA,IAAAA,CAAKwwC,OAAO,EAAE;oBAACn1B,CAAAA;oBAAGmrC,WAAAA;oBAAa,IAAI;iBAAC,EAAE,IAAI,CAAA,CAAA;aAChD;QACH,CAAA,MAAO,IAAIA,WAAa,EAAA;gBACtBluD,wKAAK0H,EAAAA,IAAAA,CAAKob,OAAO,EAAE;gBAACC,CAAAA;gBAAGmrC,WAAAA;gBAAa,IAAI;aAAC,EAAE,IAAI,CAAA,CAAA;SAChD;IACH,CAAA;AACF,CAAC;AAED,SAASrC,iBAAAA,CAAkB7B,QAAQ,EAAEc,SAAS,EAAE98C,GAAG,EAAEgV,UAAU,EAAEuoC,WAAW,EAAE;IAC5E,MAAMF,SAAYgD,GAAAA,kBAAAA,CAAmBrrC,UAAYgnC,EAAAA,QAAAA,EAAUc,SAAW98C,EAAAA,GAAAA,CAAAA,CAAAA;IACtE,MAAMm8C,UAAamE,GAAAA,mBAAAA,CAAoB/C,WAAavoC,EAAAA,UAAAA,EAAY8nC,UAAUpwB,UAAU,CAAA,CAAA;IACpF,OAAO;QAAC2wB,SAAAA;QAAWlB,UAAAA;IAAU,CAAA,CAAA;AAC/B,CAAA;AAEA,SAASkE,kBAAAA,CAAmBrrC,UAAU,EAAEgnC,QAAQ,EAAEc,SAAS,EAAE98C,GAAG,EAAE;IAChE,IAAIugD,cAAAA,GAAiBvrC,WAAWhB,IAAI,CAAA;IACpC,IAAIusC,cAAAA,IAAkB,OAAOA,cAAAA,KAAmB,QAAU,EAAA;QACxDA,cAAAA,GAAiBA,cAAe3sD,CAAAA,MAAM,CAAC,CAACkW,CAAGrP,EAAAA,CAAAA,GAAMqP,CAAEtX,CAAAA,MAAM,GAAGiI,CAAAA,CAAEjI,MAAM,GAAGsX,IAAIrP,CAAC,CAAA,CAAA;KAC7E;IACD,OAAOuhD,QAAAA,GAAYc,UAAU5jD,IAAI,GAAG,IAAK8G,GAAIs9C,CAAAA,WAAW,CAACiD,cAAAA,CAAAA,CAAgBhyC,KAAK,CAAA;AAChF,CAAA;AAEA,SAAS+xC,oBAAoB/C,WAAW,EAAEvoC,UAAU,EAAEuqC,cAAc,EAAE;IACpE,IAAIpD,UAAaoB,GAAAA,WAAAA,CAAAA;IACjB,IAAI,OAAOvoC,UAAAA,CAAWhB,IAAI,KAAK,QAAU,EAAA;QACvCmoC,UAAAA,GAAaqD,0BAA0BxqC,UAAYuqC,EAAAA,cAAAA,CAAAA,CAAAA;KACpD;IACD,OAAOpD,UAAAA,CAAAA;AACT,CAAA;AAEA,SAASqD,yBAA0BxqC,CAAAA,UAAU,EAAEuqC,cAAc,EAAE;IAC7D,MAAM/sB,WAAAA,GAAcxd,WAAWhB,IAAI,GAAGgB,WAAWhB,IAAI,CAACxhB,MAAM,GAAG,CAAC,CAAA;IAChE,OAAO+sD,cAAiB/sB,GAAAA,WAAAA,CAAAA;AAC1B,CAAA;AAEA,SAASytB,UAAW/uD,CAAAA,IAAI,EAAEwI,IAAI,EAAE;IAC9B,IAAI,CAACxI,IAAS,KAAA,WAAA,IAAeA,SAAS,UAAS,KAAA,CAAOwI,IAAAA,CAAKwwC,OAAO,IAAIxwC,IAAK0mD,CAAAA,OAAO,CAAG,EAAA;QACnF,OAAO,IAAI,CAAA;KACZ;IACD,IAAI1mD,IAAAA,CAAKob,OAAO,IAAA,CAAK5jB,SAAS,OAAWA,IAAAA,IAAAA,KAAS,SAAQ,CAAI,EAAA;QAC5D,OAAO,IAAI,CAAA;KACZ;IACD,OAAO,KAAK,CAAA;AACd,CAAA;AAEA,IAAA,gBAAe;IACbyL,EAAI,EAAA,QAAA;IAMJ6jD,QAAUnE,EAAAA,MAAAA;IAEVxqD,KAAAA,CAAAA,CAAMd,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAC3B,MAAMib,MAASziB,GAAAA,KAAAA,CAAMyiB,MAAM,GAAG,IAAI6oC,MAAO,CAAA;YAACr8C,GAAAA,EAAKjP,MAAMiP,GAAG;YAAEzH,OAAAA;YAASxH,KAAAA;QAAK,CAAA,CAAA,CAAA;QACxE0uB,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOyiB,MAAQjb,EAAAA,OAAAA,CAAAA,CAAAA;QACjCknB,OAAQkD,CAAAA,MAAM,CAAC5xB,KAAOyiB,EAAAA,MAAAA,CAAAA,CAAAA;IACxB,CAAA;IAEAvf,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;QACV0uB,OAAAA,CAAQqD,SAAS,CAAC/xB,KAAOA,EAAAA,KAAAA,CAAMyiB,MAAM,CAAA,CAAA;QACrC,OAAOziB,MAAMyiB,MAAM,CAAA;IACrB,CAAA;IAKAyb,YAAAA,CAAAA,CAAal+B,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAClC,MAAMib,MAAAA,GAASziB,MAAMyiB,MAAM,CAAA;QAC3BiM,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOyiB,MAAQjb,EAAAA,OAAAA,CAAAA,CAAAA;QACjCib,MAAAA,CAAOjb,OAAO,GAAGA,OAAAA,CAAAA;IACnB,CAAA;IAIAk4B,WAAAA,CAAAA,CAAY1/B,KAAK,EAAE;QACjB,MAAMyiB,MAAAA,GAASziB,MAAMyiB,MAAM,CAAA;QAC3BA,MAAAA,CAAOqpC,WAAW,EAAA,CAAA;QAClBrpC,MAAAA,CAAOsqC,cAAc,EAAA,CAAA;IACvB,CAAA;IAGA2C,UAAW1vD,CAAAA,CAAAA,KAAK,EAAE+X,IAAI,EAAE;QACtB,IAAI,CAACA,IAAK2gC,CAAAA,MAAM,EAAE;YAChB14C,KAAAA,CAAMyiB,MAAM,CAACwsC,WAAW,CAACl3C,KAAKvV,KAAK,CAAA,CAAA;SACpC;IACH,CAAA;IAEAqE,QAAU,EAAA;QACRohB,OAAAA,EAAS,IAAI;QACbwD,QAAU,EAAA,KAAA;QACV2O,KAAO,EAAA,QAAA;QACPhL,QAAAA,EAAU,IAAI;QACdxmB,OAAAA,EAAS,KAAK;QACd4d,MAAQ,EAAA,IAAA;QAGRzC,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAExB,MAAM,EAAE;YAC7B,MAAMvY,KAAAA,GAAQ+Z,WAAWzZ,YAAY,CAAA;YACrC,MAAMmlD,EAAAA,GAAKltC,OAAOziB,KAAK,CAAA;YACvB,IAAI2vD,EAAAA,CAAGjrC,gBAAgB,CAACxa,KAAQ,CAAA,EAAA;gBAC9BylD,EAAAA,CAAGpY,IAAI,CAACrtC,KAAAA,CAAAA,CAAAA;gBACR+Z,UAAWtV,CAAAA,MAAM,GAAG,IAAI,CAAA;aACnB,MAAA;gBACLghD,EAAAA,CAAGnY,IAAI,CAACttC,KAAAA,CAAAA,CAAAA;gBACR+Z,UAAWtV,CAAAA,MAAM,GAAG,KAAK,CAAA;aAC1B;QACH,CAAA;QAEAwqC,OAAAA,EAAS,IAAI;QACbkW,OAAAA,EAAS,IAAI;QAEb/7C,MAAQ,EAAA;YACN1P,KAAAA,EAAO,CAACqL,GAAQA,GAAAA,GAAAA,CAAIjP,KAAK,CAACwH,OAAO,CAAC5D,KAAK;YACvCqnD,QAAU,EAAA,EAAA;YACVt5B,OAAS,EAAA,EAAA;YAYTjP,cAAAA,CAAAA,CAAe1iB,KAAK,EAAE;gBACpB,MAAMuR,QAAWvR,GAAAA,KAAAA,CAAM8K,IAAI,CAACyG,QAAQ,CAAA;gBACpC,MAAM,EAAC+B,QAAQ,EAAC43C,aAAAA,EAAevoC,UAAU,EAAEC,SAAAA,EAAWhf,KAAAA,EAAOif,eAAe,EAAEC,YAAAA,EAAa,EAAC,GAAG9iB,KAAAA,CAAMyiB,MAAM,CAACjb,OAAO,CAAA;gBAEnH,OAAOxH,MAAMgK,sBAAsB,EAAA,CAAG+Y,GAAG,CAAC,CAAChY,IAAS,GAAA;oBAClD,MAAMiY,KAAAA,GAAQjY,KAAK6B,UAAU,CAACsI,QAAQ,CAACg2C,aAAAA,GAAgB,IAAIprD,SAAS,CAAA,CAAA;oBACpE,MAAM8jB,WAAAA,OAAcsO,wKAAUlP,EAAAA,KAAAA,CAAMY,WAAW,CAAA,CAAA;oBAE/C,OAAO;wBACLX,IAAAA,EAAM1R,QAAQ,CAACxG,IAAAA,CAAKb,KAAK,CAAC,CAACwK,KAAK;wBAChCwO,SAAAA,EAAWF,MAAMG,eAAe;wBAChCC,SAAWxf,EAAAA,KAAAA;wBACX+K,MAAQ,EAAA,CAAC5D,KAAKsqC,OAAO;wBACrBqI,OAAAA,EAAS16B,MAAM26B,cAAc;wBAC7Bt6B,QAAAA,EAAUL,MAAMM,UAAU;wBAC1BC,cAAAA,EAAgBP,MAAMQ,gBAAgB;wBACtCC,QAAAA,EAAUT,MAAMU,eAAe;wBAC/BC,SAAW,EAACC,CAAAA,WAAYpG,CAAAA,KAAK,GAAGoG,WAAYrG,CAAAA,MAAM,IAAI,CAAA;wBACtDsG,WAAAA,EAAab,MAAMc,WAAW;wBAC9BnB,UAAYA,EAAAA,UAAAA,IAAcK,MAAML,UAAU;wBAC1CtC,QAAAA,EAAU2C,MAAM3C,QAAQ;wBACxBuC,SAAWA,EAAAA,SAAAA,IAAaI,MAAMJ,SAAS;wBACvCE,YAAAA,EAAcD,eAAoBC,IAAAA,CAAAA,YAAgBE,IAAAA,KAAAA,CAAMF,YAAY,CAAD;wBAGnEtY,YAAAA,EAAcO,KAAKb,KAAK;oBAC1B,CAAA,CAAA;gBACF,CAAA,EAAG,IAAI,CAAA,CAAA;YACT,CAAA;QACF,CAAA;QAEA+2B,KAAO,EAAA;YACLr9B,KAAAA,EAAO,CAACqL,GAAQA,GAAAA,GAAAA,CAAIjP,KAAK,CAACwH,OAAO,CAAC5D,KAAK;YACvCqkB,OAAAA,EAAS,KAAK;YACdwD,QAAU,EAAA,QAAA;YACVxI,IAAM,EAAA,EAAA;QACR,CAAA;IACF,CAAA;IAEAd,WAAa,EAAA;QACXC,WAAAA,EAAa,CAAC3D,IAAAA,GAAS,CAACA,IAAAA,CAAK6D,UAAU,CAAC,IAAA,CAAA;QACxChP,MAAQ,EAAA;YACN8O,WAAa,EAAA,CAAC3D,OAAS,CAAC;oBAAC,gBAAA;oBAAkB,QAAA;oBAAU,MAAA;iBAAO,CAACmQ,QAAQ,CAACnQ,IAAAA,CAAAA;QACxE,CAAA;IACF,CAAA;AACF,CAAE;ACzsBK,MAAMmxC,KAAc73B,SAAAA,OAAAA,CAAAA;IAIzBv4B,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK,EAAA,CAAA;QAEL,IAAI,CAACrG,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK,CAAA;QACzB,IAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO,CAAA;QAC7B,IAAI,CAACyH,GAAG,GAAG5I,MAAAA,CAAO4I,GAAG,CAAA;QACrB,IAAI,CAAC4gD,QAAQ,GAAG/vD,SAAAA,CAAAA;QAChB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAAA,CAAAA;QACX,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;QACd,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;QACZ,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;QACb,IAAI,CAAC0d,KAAK,GAAG1d,SAAAA,CAAAA;QACb,IAAI,CAACyd,MAAM,GAAGzd,SAAAA,CAAAA;QACd,IAAI,CAAC2rB,QAAQ,GAAG3rB,SAAAA,CAAAA;QAChB,IAAI,CAAC0mB,MAAM,GAAG1mB,SAAAA,CAAAA;QACd,IAAI,CAACsvB,QAAQ,GAAGtvB,SAAAA,CAAAA;IAClB,CAAA;IAEA4F,MAAOwf,CAAAA,QAAQ,EAAEC,SAAS,EAAE;QAC1B,MAAMxc,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QAEzB,IAAI,CAAC8B,IAAI,GAAG,CAAA,CAAA;QACZ,IAAI,CAACH,GAAG,GAAG,CAAA,CAAA;QAEX,IAAI,CAACR,IAAKsf,CAAAA,OAAO,EAAE;YACjB,IAAI,CAACzK,KAAK,GAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAACnU,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,CAAA,CAAA;YACtD,OAAA;SACD;QAED,IAAI,CAACmU,KAAK,GAAG,IAAI,CAACpU,KAAK,GAAG8b,QAAAA,CAAAA;QAC1B,IAAI,CAAC3H,MAAM,GAAG,IAAI,CAAClU,MAAM,GAAG8b,SAAAA,CAAAA;QAE5B,MAAMogB,SAAAA,OAAYp+B,wKAAQwB,EAAAA,IAAAA,CAAKsa,IAAI,CAAA,GAAIta,KAAKsa,IAAI,CAACxhB,MAAM,GAAG,CAAC,CAAA;QAC3D,IAAI,CAACouD,QAAQ,OAAG39B,wKAAAA,EAAUvpB,KAAKgpB,OAAO,CAAA,CAAA;QACtC,MAAMm+B,QAAWvqB,GAAAA,SAAAA,OAAY9J,yKAAO9yB,EAAAA,IAAAA,CAAK6yB,IAAI,CAAA,CAAEG,UAAU,GAAG,IAAI,CAACk0B,QAAQ,CAACtyC,MAAM,CAAA;QAEhF,IAAI,IAAI,CAACpC,YAAY,EAAI,EAAA;YACvB,IAAI,CAACoC,MAAM,GAAGuyC,QAAAA,CAAAA;SACT,MAAA;YACL,IAAI,CAACtyC,KAAK,GAAGsyC,QAAAA,CAAAA;SACd;IACH,CAAA;IAEA30C,YAAe,GAAA;QACb,MAAM6S,GAAM,GAAA,IAAI,CAACxmB,OAAO,CAACikB,QAAQ,CAAA;QACjC,OAAOuC,GAAAA,KAAQ,SAASA,GAAQ,KAAA,QAAA,CAAA;IAClC,CAAA;IAEA+hC,SAAAA,CAAUtzC,MAAM,EAAE;QAChB,MAAM,EAACtT,GAAAA,EAAKG,IAAAA,EAAMD,MAAAA,EAAQD,KAAAA,EAAO5B,OAAAA,EAAQ,GAAG,IAAI,CAAA;QAChD,MAAM4yB,KAAAA,GAAQ5yB,QAAQ4yB,KAAK,CAAA;QAC3B,IAAI/Z,QAAW,GAAA,CAAA,CAAA;QACf,IAAI6E,UAAU+W,MAAQC,EAAAA,MAAAA,CAAAA;QAEtB,IAAI,IAAI,CAAC/gB,YAAY,EAAI,EAAA;YACvB8gB,MAASE,OAAAA,yKAAAA,EAAe/B,OAAO9wB,IAAMF,EAAAA,KAAAA,CAAAA,CAAAA;YACrC8yB,MAAAA,GAAS/yB,GAAMsT,GAAAA,MAAAA,CAAAA;YACfyI,QAAAA,GAAW9b,KAAQE,GAAAA,IAAAA,CAAAA;SACd,MAAA;YACL,IAAI9B,OAAAA,CAAQikB,QAAQ,KAAK,MAAQ,EAAA;gBAC/BwQ,MAAAA,GAAS3yB,IAAOmT,GAAAA,MAAAA,CAAAA;gBAChByf,MAASC,OAAAA,yKAAAA,EAAe/B,OAAO/wB,MAAQF,EAAAA,GAAAA,CAAAA,CAAAA;gBACvCkX,QAAAA,GAAWwB,wKAAAA,GAAK,CAAC,GAAA,CAAA;aACZ,MAAA;gBACLoa,MAAAA,GAAS7yB,KAAQqT,GAAAA,MAAAA,CAAAA;gBACjByf,MAASC,OAAAA,yKAAAA,EAAe/B,OAAOjxB,GAAKE,EAAAA,MAAAA,CAAAA,CAAAA;gBACpCgX,QAAAA,GAAWwB,wKAAK,GAAA,GAAA,CAAA;aACjB;YACDqD,QAAAA,GAAW7b,MAASF,GAAAA,GAAAA,CAAAA;SACrB;QACD,OAAO;YAAC8yB,MAAAA;YAAQC,MAAAA;YAAQhX,QAAAA;YAAU7E,QAAAA;QAAQ,CAAA,CAAA;IAC5C,CAAA;IAEA1e,IAAO,GAAA;QACL,MAAMsN,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMtG,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QAEzB,IAAI,CAACmB,IAAKsf,CAAAA,OAAO,EAAE;YACjB,OAAA;SACD;QAED,MAAM+nC,QAAAA,OAAWv0B,yKAAO9yB,EAAAA,IAAAA,CAAK6yB,IAAI,CAAA,CAAA;QACjC,MAAMG,UAAAA,GAAaq0B,SAASr0B,UAAU,CAAA;QACtC,MAAMlf,SAASkf,UAAa,GAAA,CAAA,GAAI,IAAI,CAACk0B,QAAQ,CAAC1mD,GAAG,CAAA;QACjD,MAAM,EAAC8yB,MAAAA,EAAQC,MAAAA,EAAQhX,QAAAA,EAAU7E,QAAAA,EAAS,GAAG,IAAI,CAAC0vC,SAAS,CAACtzC,MAAAA,CAAAA,CAAAA;YAE5DorB,wKAAAA,EAAW54B,KAAKtG,IAAKsa,CAAAA,IAAI,EAAE,CAAA,EAAG,GAAG+sC,QAAU,EAAA;YACzCpsD,KAAAA,EAAO+E,KAAK/E,KAAK;YACjBshB,QAAAA;YACA7E,QAAAA;YACAuC,SAAWmZ,MAAAA,yKAAAA,EAAmBpzB,KAAKyxB,KAAK,CAAA;YACxCqL,YAAc,EAAA,QAAA;YACde,WAAa,EAAA;gBAACvK,MAAAA;gBAAQC,MAAAA;aAAO;QAC/B,CAAA,CAAA,CAAA;IACF,CAAA;AACF,CAAC;AAED,SAAS+zB,WAAYjwD,CAAAA,KAAK,EAAEohC,SAAS,EAAE;IACrC,MAAMH,KAAAA,GAAQ,IAAI2uB,KAAM,CAAA;QACtB3gD,GAAAA,EAAKjP,MAAMiP,GAAG;QACdzH,OAAS45B,EAAAA,SAAAA;QACTphC,KAAAA;IACF,CAAA,CAAA,CAAA;IAEA0uB,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOihC,KAAOG,EAAAA,SAAAA,CAAAA,CAAAA;IAChC1S,OAAQkD,CAAAA,MAAM,CAAC5xB,KAAOihC,EAAAA,KAAAA,CAAAA,CAAAA;IACtBjhC,KAAAA,CAAMkwD,UAAU,GAAGjvB,KAAAA,CAAAA;AACrB,CAAA;AAEA,IAAA,eAAe;IACbr1B,EAAI,EAAA,OAAA;IAMJ6jD,QAAUG,EAAAA,KAAAA;IAEV9uD,KAAAA,CAAAA,CAAMd,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAC3ByoD,WAAAA,CAAYjwD,KAAOwH,EAAAA,OAAAA,CAAAA,CAAAA;IACrB,CAAA;IAEAtE,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;QACV,MAAMkwD,UAAAA,GAAalwD,MAAMkwD,UAAU,CAAA;QACnCxhC,OAAQqD,CAAAA,SAAS,CAAC/xB,KAAOkwD,EAAAA,UAAAA,CAAAA,CAAAA;QACzB,OAAOlwD,MAAMkwD,UAAU,CAAA;IACzB,CAAA;IAEAhyB,YAAAA,CAAAA,CAAal+B,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAClC,MAAMy5B,KAAAA,GAAQjhC,MAAMkwD,UAAU,CAAA;QAC9BxhC,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOihC,KAAOz5B,EAAAA,OAAAA,CAAAA,CAAAA;QAChCy5B,KAAAA,CAAMz5B,OAAO,GAAGA,OAAAA,CAAAA;IAClB,CAAA;IAEAX,QAAU,EAAA;QACRuzB,KAAO,EAAA,QAAA;QACPnS,OAAAA,EAAS,KAAK;QACduT,IAAM,EAAA;YACJhV,MAAQ,EAAA,MAAA;QACV,CAAA;QACA4I,QAAAA,EAAU,IAAI;QACduC,OAAS,EAAA,EAAA;QACTlG,QAAU,EAAA,KAAA;QACVxI,IAAM,EAAA,EAAA;QACNuD,MAAAA,EAAQ;IACV,CAAA;IAEAwR,aAAe,EAAA;QACbp0B,KAAO,EAAA,OAAA;IACT,CAAA;IAEAue,WAAa,EAAA;QACXC,WAAAA,EAAa,IAAI;QACjBC,UAAAA,EAAY,KAAK;IACnB,CAAA;AACF,CAAE;AClKF,MAAMU,MAAM,IAAIotC,OAAAA,EAAAA,CAAAA;AAEhB,IAAA,kBAAe;IACbvkD,EAAI,EAAA,UAAA;IAEJ9K,KAAAA,CAAAA,CAAMd,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAC3B,MAAMy5B,KAAAA,GAAQ,IAAI2uB,KAAM,CAAA;YACtB3gD,GAAAA,EAAKjP,MAAMiP,GAAG;YACdzH,OAAAA;YACAxH,KAAAA;QACF,CAAA,CAAA,CAAA;QAEA0uB,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOihC,KAAOz5B,EAAAA,OAAAA,CAAAA,CAAAA;QAChCknB,OAAQkD,CAAAA,MAAM,CAAC5xB,KAAOihC,EAAAA,KAAAA,CAAAA,CAAAA;QACtBle,GAAIzgB,CAAAA,GAAG,CAACtC,KAAOihC,EAAAA,KAAAA,CAAAA,CAAAA;IACjB,CAAA;IAEA/9B,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;QACV0uB,OAAAA,CAAQqD,SAAS,CAAC/xB,KAAO+iB,EAAAA,GAAAA,CAAI5gB,GAAG,CAACnC,KAAAA,CAAAA,CAAAA,CAAAA;QACjC+iB,GAAAA,CAAI1f,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;IACb,CAAA;IAEAk+B,YAAAA,CAAAA,CAAal+B,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAClC,MAAMy5B,KAAAA,GAAQle,GAAI5gB,CAAAA,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QACtB0uB,OAAQloB,CAAAA,SAAS,CAACxG,KAAAA,EAAOihC,KAAOz5B,EAAAA,OAAAA,CAAAA,CAAAA;QAChCy5B,KAAAA,CAAMz5B,OAAO,GAAGA,OAAAA,CAAAA;IAClB,CAAA;IAEAX,QAAU,EAAA;QACRuzB,KAAO,EAAA,QAAA;QACPnS,OAAAA,EAAS,KAAK;QACduT,IAAM,EAAA;YACJhV,MAAQ,EAAA,QAAA;QACV,CAAA;QACA4I,QAAAA,EAAU,IAAI;QACduC,OAAS,EAAA,CAAA;QACTlG,QAAU,EAAA,KAAA;QACVxI,IAAM,EAAA,EAAA;QACNuD,MAAAA,EAAQ;IACV,CAAA;IAEAwR,aAAe,EAAA;QACbp0B,KAAO,EAAA,OAAA;IACT,CAAA;IAEAue,WAAa,EAAA;QACXC,WAAAA,EAAa,IAAI;QACjBC,UAAAA,EAAY,KAAK;IACnB,CAAA;AACF,CAAE;ACpCF,MAAM+tC,WAAc,GAAA;IAIlBC,OAAAA,CAAAA,CAAQ7uD,KAAK,EAAE;QACb,IAAI,CAACA,KAAMC,CAAAA,MAAM,EAAE;YACjB,OAAO,KAAK,CAAA;SACb;QAED,IAAIC,CAAGw4B,EAAAA,GAAAA,CAAAA;QACP,IAAIo2B,OAAO,IAAIvhB,GAAAA,EAAAA,CAAAA;QACf,IAAI7lC,CAAI,GAAA,CAAA,CAAA;QACR,IAAI4J,KAAQ,GAAA,CAAA,CAAA;QAEZ,IAAKpR,CAAAA,GAAI,GAAGw4B,GAAM14B,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIw4B,GAAK,EAAA,EAAEx4B,CAAG,CAAA;YAC5C,MAAM4pB,EAAK9pB,GAAAA,KAAK,CAACE,CAAAA,CAAE,CAACsM,OAAO,CAAA;YAC3B,IAAIsd,EAAAA,IAAMA,EAAG4M,CAAAA,QAAQ,EAAI,EAAA;gBACvB,MAAMlK,GAAAA,GAAM1C,GAAG2M,eAAe,EAAA,CAAA;gBAC9Bq4B,IAAK3tD,CAAAA,GAAG,CAACqrB,GAAAA,CAAI/kB,CAAC,CAAA,CAAA;gBACdC,CAAAA,IAAK8kB,IAAI9kB,CAAC,CAAA;gBACV,EAAE4J,KAAAA,CAAAA;aACH;QACH,CAAA;QAGA,IAAIA,KAAU,KAAA,CAAA,IAAKw9C,IAAKnoD,CAAAA,IAAI,KAAK,CAAG,EAAA;YAClC,OAAO,KAAK,CAAA;SACb;QAED,MAAMooD,QAAW,GAAA;eAAID,IAAAA;SAAK,CAACztD,MAAM,CAAC,CAACkW,CAAAA,EAAGrP,IAAMqP,CAAIrP,GAAAA,CAAAA,CAAAA,GAAK4mD,KAAKnoD,IAAI,CAAA;QAE9D,OAAO;YACLc,CAAGsnD,EAAAA,QAAAA;YACHrnD,CAAAA,EAAGA,CAAI4J,GAAAA,KAAAA;QACT,CAAA,CAAA;IACF,CAAA;IAKA8a,OAAQpsB,CAAAA,CAAAA,KAAK,EAAEgvD,aAAa,EAAE;QAC5B,IAAI,CAAChvD,KAAMC,CAAAA,MAAM,EAAE;YACjB,OAAO,KAAK,CAAA;SACb;QAED,IAAIwH,CAAAA,GAAIunD,cAAcvnD,CAAC,CAAA;QACvB,IAAIC,CAAAA,GAAIsnD,cAActnD,CAAC,CAAA;QACvB,IAAIgkB,WAAAA,GAAclhB,OAAOE,iBAAiB,CAAA;QAC1C,IAAIxK,GAAGw4B,GAAKu2B,EAAAA,cAAAA,CAAAA;QAEZ,IAAK/uD,CAAAA,GAAI,GAAGw4B,GAAM14B,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIw4B,GAAK,EAAA,EAAEx4B,CAAG,CAAA;YAC5C,MAAM4pB,EAAK9pB,GAAAA,KAAK,CAACE,CAAAA,CAAE,CAACsM,OAAO,CAAA;YAC3B,IAAIsd,EAAAA,IAAMA,EAAG4M,CAAAA,QAAQ,EAAI,EAAA;gBACvB,MAAM5a,MAAAA,GAASgO,GAAG6B,cAAc,EAAA,CAAA;gBAChC,MAAM2gB,CAAAA,OAAI4iB,yKAAAA,EAAsBF,aAAelzC,EAAAA,MAAAA,CAAAA,CAAAA;gBAE/C,IAAIwwB,IAAI5gB,WAAa,EAAA;oBACnBA,WAAc4gB,GAAAA,CAAAA,CAAAA;oBACd2iB,cAAiBnlC,GAAAA,EAAAA,CAAAA;iBAClB;aACF;QACH,CAAA;QAEA,IAAImlC,cAAgB,EAAA;YAClB,MAAME,EAAAA,GAAKF,eAAex4B,eAAe,EAAA,CAAA;YACzChvB,CAAAA,GAAI0nD,GAAG1nD,CAAC,CAAA;YACRC,CAAAA,GAAIynD,GAAGznD,CAAC,CAAA;SACT;QAED,OAAO;YACLD,CAAAA;YACAC,CAAAA;QACF,CAAA,CAAA;IACF,CAAA;AACF,CAAA,CAAA;AAGA,SAAS0nD,YAAat1C,CAAAA,IAAI,EAAEu1C,MAAM,EAAE;IAClC,IAAIA,MAAQ,EAAA;QACV,QAAI1pD,wKAAAA,EAAQ0pD,MAAS,CAAA,EAAA;YAEnBvlD,KAAAA,CAAM0e,SAAS,CAACtnB,IAAI,CAACouD,KAAK,CAACx1C,IAAMu1C,EAAAA,MAAAA,CAAAA,CAAAA;SAC5B,MAAA;YACLv1C,IAAAA,CAAK5Y,IAAI,CAACmuD,MAAAA,CAAAA,CAAAA;SACX;KACF;IAED,OAAOv1C,IAAAA,CAAAA;AACT,CAAA;AAQA,SAASy1C,aAAcC,CAAAA,GAAG,EAAE;IAC1B,IAAI,CAAC,OAAOA,GAAAA,KAAQ,QAAYA,IAAAA,GAAAA,YAAeC,MAAK,KAAMD,GAAI/yC,CAAAA,OAAO,CAAC,IAAA,CAAA,GAAQ,CAAC,CAAG,EAAA;QAChF,OAAO+yC,GAAAA,CAAIxnB,KAAK,CAAC,IAAA,CAAA,CAAA;KAClB;IACD,OAAOwnB,GAAAA,CAAAA;AACT,CAAA;AASA,SAASE,iBAAAA,CAAkBlxD,KAAK,EAAE4B,IAAI,EAAE;IACtC,MAAM,EAACoM,OAAO,EAAExD,YAAAA,EAAcN,KAAAA,EAAM,GAAGtI,IAAAA,CAAAA;IACvC,MAAMgL,UAAa5M,GAAAA,KAAAA,CAAMwR,cAAc,CAAChH,cAAcoC,UAAU,CAAA;IAChE,MAAM,EAAC8H,KAAAA,EAAOxM,KAAAA,EAAM,GAAG0E,UAAAA,CAAW6H,gBAAgB,CAACvK,KAAAA,CAAAA,CAAAA;IAEnD,OAAO;QACLlK,KAAAA;QACA0U,KAAAA;QACA7H,MAAQD,EAAAA,UAAAA,CAAWgH,SAAS,CAAC1J,KAAAA,CAAAA;QAC7BgE,GAAKlO,EAAAA,KAAAA,CAAM8K,IAAI,CAACyG,QAAQ,CAAC/G,YAAa,CAAA,CAACM,IAAI,CAACZ,KAAM,CAAA;QAClDinD,cAAgBjpD,EAAAA,KAAAA;QAChB4F,OAAAA,EAASlB,WAAW2D,UAAU,EAAA;QAC9BtC,SAAW/D,EAAAA,KAAAA;QACXM,YAAAA;QACAwD,OAAAA;IACF,CAAA,CAAA;AACF,CAAA;AAKA,SAASojD,cAAAA,CAAeC,OAAO,EAAE7pD,OAAO,EAAE;IACxC,MAAMyH,GAAMoiD,GAAAA,OAAAA,CAAQrxD,KAAK,CAACiP,GAAG,CAAA;IAC7B,MAAM,EAACqiD,IAAI,EAAEC,MAAAA,EAAQtwB,KAAAA,EAAM,GAAGowB,OAAAA,CAAAA;IAC9B,MAAM,EAACpG,QAAAA,EAAUD,SAAAA,EAAU,GAAGxjD,OAAAA,CAAAA;IAC9B,MAAMgqD,QAAAA,OAAW/1B,yKAAOj0B,EAAAA,OAAAA,CAAQgqD,QAAQ,CAAA,CAAA;IACxC,MAAM7C,SAAAA,OAAYlzB,yKAAOj0B,EAAAA,OAAAA,CAAQmnD,SAAS,CAAA,CAAA;IAC1C,MAAM8C,UAAAA,OAAah2B,yKAAOj0B,EAAAA,OAAAA,CAAQiqD,UAAU,CAAA,CAAA;IAC5C,MAAMC,cAAAA,GAAiBzwB,MAAMx/B,MAAM,CAAA;IACnC,MAAMkwD,eAAAA,GAAkBJ,OAAO9vD,MAAM,CAAA;IACrC,MAAMmwD,iBAAAA,GAAoBN,KAAK7vD,MAAM,CAAA;IAErC,MAAMkwB,OAAAA,OAAUO,wKAAU1qB,EAAAA,OAAAA,CAAQmqB,OAAO,CAAA,CAAA;IACzC,IAAIpU,MAAAA,GAASoU,QAAQpU,MAAM,CAAA;IAC3B,IAAIC,KAAQ,GAAA,CAAA,CAAA;IAGZ,IAAIq0C,kBAAAA,GAAqBP,KAAKzuD,MAAM,CAAC,CAACiQ,KAAOg/C,EAAAA,QAAAA,GAAah/C,KAAQg/C,GAAAA,QAAAA,CAASC,MAAM,CAACtwD,MAAM,GAAGqwD,QAAAA,CAASp2B,KAAK,CAACj6B,MAAM,GAAGqwD,QAASE,CAAAA,KAAK,CAACvwD,MAAM,EAAE,CAAA,CAAA,CAAA;IAC1IowD,kBAAsBR,IAAAA,OAAAA,CAAQY,UAAU,CAACxwD,MAAM,GAAG4vD,OAAQa,CAAAA,SAAS,CAACzwD,MAAM,CAAA;IAE1E,IAAIiwD,cAAgB,EAAA;QAClBn0C,MAAAA,IAAUm0C,cAAiB/C,GAAAA,SAAAA,CAAUhzB,UAAU,GAC9C,CAAC+1B,cAAiB,GAAA,CAAA,IAAKlqD,OAAAA,CAAQ2qD,YAAY,GAC3C3qD,QAAQ4qD,iBAAiB,CAAA;KAC3B;IACD,IAAIP,kBAAoB,EAAA;QAEtB,MAAMQ,cAAiB7qD,GAAAA,OAAAA,CAAQ8qD,aAAa,GAAG1xD,IAAKoC,CAAAA,GAAG,CAACgoD,SAAAA,EAAWwG,QAAS71B,CAAAA,UAAU,CAAI61B,GAAAA,QAAAA,CAAS71B,UAAU,CAAA;QAC7Gpe,MAAAA,IAAUq0C,oBAAoBS,cAC7B,GAACR,CAAAA,kBAAAA,GAAqBD,iBAAgB,IAAKJ,QAAAA,CAAS71B,UAAU,GAC9D,CAACk2B,kBAAAA,GAAqB,CAAA,IAAKrqD,QAAQ+qD,WAAW,CAAA;KAChD;IACD,IAAIZ,eAAiB,EAAA;QACnBp0C,MAAAA,IAAU/V,OAAQgrD,CAAAA,eAAe,GAChCb,eAAAA,GAAkBF,UAAW91B,CAAAA,UAAU,GACtCg2B,CAAAA,eAAAA,GAAkB,CAAA,IAAKnqD,QAAQirD,aAAa,CAAA;KAC/C;IAGD,IAAIC,YAAe,GAAA,CAAA,CAAA;IACnB,MAAMC,YAAAA,GAAe,SAAS/rC,IAAI,EAAE;QAClCpJ,KAAQ5c,GAAAA,IAAAA,CAAKoC,GAAG,CAACwa,KAAAA,EAAOvO,IAAIs9C,WAAW,CAAC3lC,IAAMpJ,CAAAA,CAAAA,KAAK,GAAGk1C,YAAAA,CAAAA,CAAAA;IACxD,CAAA,CAAA;IAEAzjD,GAAAA,CAAI03B,IAAI,EAAA,CAAA;IAER13B,GAAIusB,CAAAA,IAAI,GAAGmzB,SAAAA,CAAU9rB,MAAM,CAAA;QAC3BxQ,wKAAKg/B,EAAAA,OAAAA,CAAQpwB,KAAK,EAAE0xB,YAAAA,CAAAA,CAAAA;IAGpB1jD,GAAIusB,CAAAA,IAAI,GAAGg2B,QAAAA,CAAS3uB,MAAM,CAAA;QAC1BxQ,wKAAAA,EAAKg/B,QAAQY,UAAU,CAACr5C,MAAM,CAACy4C,OAAAA,CAAQa,SAAS,CAAGS,EAAAA,YAAAA,CAAAA,CAAAA;IAGnDD,YAAelrD,GAAAA,OAAAA,CAAQ8qD,aAAa,GAAIrH,QAAAA,GAAW,IAAIzjD,OAAQwoB,CAAAA,UAAU,GAAI,CAAC,CAAA;QAC9EqC,wKAAKi/B,EAAAA,IAAAA,EAAM,CAACQ,QAAa,GAAA;YACvBz/B,wKAAKy/B,EAAAA,QAAAA,CAASC,MAAM,EAAEY,YAAAA,CAAAA,CAAAA;YACtBtgC,wKAAKy/B,EAAAA,QAAAA,CAASp2B,KAAK,EAAEi3B,YAAAA,CAAAA,CAAAA;YACrBtgC,wKAAKy/B,EAAAA,QAAAA,CAASE,KAAK,EAAEW,YAAAA,CAAAA,CAAAA;IACvB,CAAA,CAAA,CAAA;IAGAD,YAAe,GAAA,CAAA,CAAA;IAGfzjD,GAAIusB,CAAAA,IAAI,GAAGi2B,UAAAA,CAAW5uB,MAAM,CAAA;QAC5BxQ,wKAAKg/B,EAAAA,OAAAA,CAAQE,MAAM,EAAEoB,YAAAA,CAAAA,CAAAA;IAErB1jD,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IAGXrpB,KAAAA,IAASmU,QAAQnU,KAAK,CAAA;IAEtB,OAAO;QAACA,KAAAA;QAAOD,MAAAA;IAAM,CAAA,CAAA;AACvB,CAAA;AAEA,SAASq1C,eAAgB5yD,CAAAA,KAAK,EAAEmI,IAAI,EAAE;IACpC,MAAM,EAACe,CAAAA,EAAGqU,MAAAA,EAAO,GAAGpV,IAAAA,CAAAA;IAEpB,IAAIe,CAAAA,GAAIqU,SAAS,CAAG,EAAA;QAClB,OAAO,KAAA,CAAA;IACT,CAAA,MAAO,IAAIrU,CAAKlJ,GAAAA,KAAAA,CAAMud,MAAM,GAAGA,SAAS,CAAI,EAAA;QAC1C,OAAO,QAAA,CAAA;KACR;IACD,OAAO,QAAA,CAAA;AACT,CAAA;AAEA,SAASs1C,mBAAAA,CAAoBC,MAAM,EAAE9yD,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAE;IACzD,MAAM,EAACc,CAAAA,EAAGuU,KAAAA,EAAM,GAAGrV,IAAAA,CAAAA;IACnB,MAAM4qD,KAAQvrD,GAAAA,OAAAA,CAAQwrD,SAAS,GAAGxrD,QAAQyrD,YAAY,CAAA;IACtD,IAAIH,WAAW,MAAU7pD,IAAAA,CAAAA,GAAIuU,QAAQu1C,KAAQ/yD,GAAAA,KAAAA,CAAMwd,KAAK,EAAE;QACxD,OAAO,IAAI,CAAA;KACZ;IAED,IAAIs1C,MAAW,KAAA,OAAA,IAAW7pD,CAAIuU,GAAAA,KAAAA,GAAQu1C,QAAQ,CAAG,EAAA;QAC/C,OAAO,IAAI,CAAA;KACZ;AACH,CAAA;AAEA,SAASG,eAAAA,CAAgBlzD,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAEgrD,MAAM,EAAE;IACrD,MAAM,EAAClqD,CAAAA,EAAGuU,KAAAA,EAAM,GAAGrV,IAAAA,CAAAA;IACnB,MAAM,EAACqV,KAAAA,EAAO41C,UAAU,EAAEp+C,SAAW,EAAA,EAAC1L,IAAI,EAAEF,KAAK,EAAC,EAAC,GAAGpJ,KAAAA,CAAAA;IACtD,IAAI8yD,MAAS,GAAA,QAAA,CAAA;IAEb,IAAIK,WAAW,QAAU,EAAA;QACvBL,MAAS7pD,GAAAA,CAAAA,IAAK,CAACK,IAAAA,GAAOF,KAAI,IAAK,CAAA,GAAI,SAAS,OAAO,CAAA;KAC9C,MAAA,IAAIH,CAAKuU,IAAAA,KAAAA,GAAQ,CAAG,EAAA;QACzBs1C,MAAS,GAAA,MAAA,CAAA;IACX,CAAA,MAAO,IAAI7pD,CAAAA,IAAKmqD,UAAa51C,GAAAA,KAAAA,GAAQ,CAAG,EAAA;QACtCs1C,MAAS,GAAA,OAAA,CAAA;KACV;IAED,IAAID,mBAAoBC,CAAAA,MAAAA,EAAQ9yD,KAAOwH,EAAAA,OAAAA,EAASW,IAAO,CAAA,EAAA;QACrD2qD,MAAS,GAAA,QAAA,CAAA;KACV;IAED,OAAOA,MAAAA,CAAAA;AACT,CAAA;AAKA,SAASO,kBAAmBrzD,CAAAA,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAE;IAChD,MAAMgrD,MAAAA,GAAShrD,KAAKgrD,MAAM,IAAI3rD,QAAQ2rD,MAAM,IAAIP,gBAAgB5yD,KAAOmI,EAAAA,IAAAA,CAAAA,CAAAA;IAEvE,OAAO;QACL2qD,MAAQ3qD,EAAAA,IAAAA,CAAK2qD,MAAM,IAAItrD,OAAAA,CAAQsrD,MAAM,IAAII,eAAAA,CAAgBlzD,KAAOwH,EAAAA,OAAAA,EAASW,IAAMgrD,EAAAA,MAAAA,CAAAA;QAC/EA,MAAAA;IACF,CAAA,CAAA;AACF,CAAA;AAEA,SAASG,MAAOnrD,CAAAA,IAAI,EAAE2qD,MAAM,EAAE;IAC5B,IAAI,EAAC7pD,CAAAA,EAAGuU,KAAAA,EAAM,GAAGrV,IAAAA,CAAAA;IACjB,IAAI2qD,WAAW,OAAS,EAAA;QACtB7pD,CAAKuU,IAAAA,KAAAA,CAAAA;KACA,MAAA,IAAIs1C,WAAW,QAAU,EAAA;QAC9B7pD,CAAAA,IAAMuU,KAAQ,GAAA,CAAA,CAAA;KACf;IACD,OAAOvU,CAAAA,CAAAA;AACT,CAAA;AAEA,SAASsqD,OAAOprD,IAAI,EAAEgrD,MAAM,EAAEK,cAAc,EAAE;IAE5C,IAAI,EAACtqD,CAAAA,EAAGqU,MAAAA,EAAO,GAAGpV,IAAAA,CAAAA;IAClB,IAAIgrD,WAAW,KAAO,EAAA;QACpBjqD,CAAKsqD,IAAAA,cAAAA,CAAAA;KACA,MAAA,IAAIL,WAAW,QAAU,EAAA;QAC9BjqD,CAAAA,IAAKqU,MAASi2C,GAAAA,cAAAA,CAAAA;KACT,MAAA;QACLtqD,CAAAA,IAAMqU,MAAS,GAAA,CAAA,CAAA;KAChB;IACD,OAAOrU,CAAAA,CAAAA;AACT,CAAA;AAKA,SAASuqD,mBAAmBjsD,OAAO,EAAEW,IAAI,EAAEurD,SAAS,EAAE1zD,KAAK,EAAE;IAC3D,MAAM,EAACgzD,SAAS,EAAEC,YAAAA,EAAcU,YAAAA,EAAa,GAAGnsD,OAAAA,CAAAA;IAChD,MAAM,EAACsrD,MAAAA,EAAQK,MAAAA,EAAO,GAAGO,SAAAA,CAAAA;IACzB,MAAMF,iBAAiBR,SAAYC,GAAAA,YAAAA,CAAAA;IACnC,MAAM,EAAClR,OAAO,EAAEC,QAAQ,EAAEC,UAAAA,EAAYC,WAAAA,EAAY,OAAGN,yKAAc+R,EAAAA,YAAAA,CAAAA,CAAAA;IAEnE,IAAI1qD,CAAAA,GAAIqqD,OAAOnrD,IAAM2qD,EAAAA,MAAAA,CAAAA,CAAAA;IACrB,MAAM5pD,CAAAA,GAAIqqD,MAAOprD,CAAAA,IAAAA,EAAMgrD,MAAQK,EAAAA,cAAAA,CAAAA,CAAAA;IAE/B,IAAIL,WAAW,QAAU,EAAA;QACvB,IAAIL,WAAW,MAAQ,EAAA;YACrB7pD,CAAKuqD,IAAAA,cAAAA,CAAAA;SACA,MAAA,IAAIV,WAAW,OAAS,EAAA;YAC7B7pD,CAAKuqD,IAAAA,cAAAA,CAAAA;SACN;KACI,MAAA,IAAIV,WAAW,MAAQ,EAAA;QAC5B7pD,CAAAA,IAAKrI,IAAKoC,CAAAA,GAAG,CAAC++C,OAAAA,EAASE,UAAc+Q,CAAAA,GAAAA,SAAAA,CAAAA;KAChC,MAAA,IAAIF,WAAW,OAAS,EAAA;QAC7B7pD,CAAAA,IAAKrI,IAAKoC,CAAAA,GAAG,CAACg/C,QAAAA,EAAUE,WAAe8Q,CAAAA,GAAAA,SAAAA,CAAAA;KACxC;IAED,OAAO;QACL/pD,CAAAA,MAAG+3B,wKAAAA,EAAY/3B,CAAG,EAAA,CAAA,EAAGjJ,MAAMwd,KAAK,GAAGrV,KAAKqV,KAAK,CAAA;QAC7CtU,CAAAA,MAAG83B,wKAAAA,EAAY93B,CAAG,EAAA,CAAA,EAAGlJ,MAAMud,MAAM,GAAGpV,KAAKoV,MAAM,CAAA;IACjD,CAAA,CAAA;AACF,CAAA;AAEA,SAASq2C,YAAYvC,OAAO,EAAEj3B,KAAK,EAAE5yB,OAAO,EAAE;IAC5C,MAAMmqB,OAAAA,OAAUO,wKAAU1qB,EAAAA,OAAAA,CAAQmqB,OAAO,CAAA,CAAA;IAEzC,OAAOyI,KAAAA,KAAU,QACbi3B,GAAAA,OAAAA,CAAQpoD,CAAC,GAAGooD,QAAQ7zC,KAAK,GAAG,CAC5B4c,GAAAA,KAAAA,KAAU,OACRi3B,GAAAA,OAAAA,CAAQpoD,CAAC,GAAGooD,OAAAA,CAAQ7zC,KAAK,GAAGmU,OAAQvoB,CAAAA,KAAK,GACzCioD,OAAQpoD,CAAAA,CAAC,GAAG0oB,OAAAA,CAAQroB,IAAI,CAAA;AAChC,CAAA;AAKA,SAASuqD,uBAAwB3zB,CAAAA,QAAQ,EAAE;IACzC,OAAO0wB,YAAAA,CAAa,EAAE,EAAEG,aAAc7wB,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACxC,CAAA;AAEA,SAAS4zB,qBAAqBlmD,MAAM,EAAEyjD,OAAO,EAAE0C,YAAY,EAAE;IAC3D,WAAOlmD,wKAAAA,EAAcD,MAAQ,EAAA;QAC3ByjD,OAAAA;QACA0C,YAAAA;QACA5zD,IAAM,EAAA,SAAA;IACR,CAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAAS6zD,iBAAkB5zD,CAAAA,SAAS,EAAEiV,OAAO,EAAE;IAC7C,MAAMyU,QAAWzU,GAAAA,OAAAA,IAAWA,OAAQvH,CAAAA,OAAO,IAAIuH,OAAQvH,CAAAA,OAAO,CAACujD,OAAO,IAAIh8C,OAAQvH,CAAAA,OAAO,CAACujD,OAAO,CAACjxD,SAAS,CAAA;IAC3G,OAAO0pB,QAAW1pB,GAAAA,SAAAA,CAAU0pB,QAAQ,CAACA,YAAY1pB,SAAS,CAAA;AAC5D,CAAA;AAEA,MAAM6zD,gBAAmB,GAAA;IAEvBC,WAAaC,EAAAA,yKAAAA;IACblzB,KAAAA,CAAAA,CAAM8yB,YAAY,EAAE;QAClB,IAAIA,YAAAA,CAAatyD,MAAM,GAAG,CAAG,EAAA;YAC3B,MAAMG,IAAAA,GAAOmyD,YAAY,CAAC,CAAE,CAAA,CAAA;YAC5B,MAAMzgD,SAAS1R,IAAK5B,CAAAA,KAAK,CAAC8K,IAAI,CAACwI,MAAM,CAAA;YACrC,MAAM8gD,UAAa9gD,GAAAA,MAAAA,GAASA,MAAO7R,CAAAA,MAAM,GAAG,CAAC,CAAA;YAE7C,IAAI,IAAI,IAAI,IAAI,CAAC+F,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC+C,IAAI,KAAK,SAAW,EAAA;gBAC3D,OAAO3I,IAAKkM,CAAAA,OAAO,CAAC4G,KAAK,IAAI,EAAA,CAAA;aACxB,MAAA,IAAI9S,IAAK8S,CAAAA,KAAK,EAAE;gBACrB,OAAO9S,KAAK8S,KAAK,CAAA;YACnB,CAAA,MAAO,IAAI0/C,UAAa,GAAA,CAAA,IAAKxyD,IAAKqM,CAAAA,SAAS,GAAGmmD,UAAY,EAAA;gBACxD,OAAO9gD,MAAM,CAAC1R,IAAKqM,CAAAA,SAAS,CAAC,CAAA;aAC9B;SACF;QAED,OAAO,EAAA,CAAA;IACT,CAAA;IACAomD,UAAYF,EAAAA,yKAAAA;IAGZlC,UAAYkC,EAAAA,yKAAAA;IAGZG,WAAaH,EAAAA,yKAAAA;IACbz/C,KAAAA,CAAAA,CAAM6/C,WAAW,EAAE;QACjB,IAAI,IAAI,IAAI,IAAI,CAAC/sD,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC+C,IAAI,KAAK,SAAW,EAAA;YAC3D,OAAOgqD,WAAAA,CAAY7/C,KAAK,GAAG,IAAA,GAAO6/C,YAAYpD,cAAc,IAAIoD,YAAYpD,cAAc,CAAA;SAC3F;QAED,IAAIz8C,KAAQ6/C,GAAAA,WAAAA,CAAYzmD,OAAO,CAAC4G,KAAK,IAAI,EAAA,CAAA;QAEzC,IAAIA,KAAO,EAAA;YACTA,KAAS,IAAA,IAAA,CAAA;SACV;QACD,MAAMxM,KAAAA,GAAQqsD,YAAYpD,cAAc,CAAA;QACxC,IAAI,KAACr3C,wKAAAA,EAAc5R,KAAQ,CAAA,EAAA;YACzBwM,KAASxM,IAAAA,KAAAA,CAAAA;SACV;QACD,OAAOwM,KAAAA,CAAAA;IACT,CAAA;IACA8/C,UAAAA,CAAAA,CAAWD,WAAW,EAAE;QACtB,MAAMxpD,OAAOwpD,WAAYv0D,CAAAA,KAAK,CAACwR,cAAc,CAAC+iD,YAAY/pD,YAAY,CAAA,CAAA;QACtE,MAAMhD,UAAUuD,IAAK6B,CAAAA,UAAU,CAACsI,QAAQ,CAACq/C,YAAYtmD,SAAS,CAAA,CAAA;QAC9D,OAAO;YACL6V,WAAAA,EAAatc,QAAQsc,WAAW;YAChCX,eAAAA,EAAiB3b,QAAQ2b,eAAe;YACxCS,WAAAA,EAAapc,QAAQoc,WAAW;YAChCN,UAAAA,EAAY9b,QAAQ8b,UAAU;YAC9BE,gBAAAA,EAAkBhc,QAAQgc,gBAAgB;YAC1CV,YAAc,EAAA,CAAA;QAChB,CAAA,CAAA;IACF,CAAA;IACA2xC,cAAiB,CAAA,GAAA;QACf,OAAO,IAAI,CAACjtD,OAAO,CAACktD,SAAS,CAAA;IAC/B,CAAA;IACAC,eAAAA,CAAAA,CAAgBJ,WAAW,EAAE;QAC3B,MAAMxpD,OAAOwpD,WAAYv0D,CAAAA,KAAK,CAACwR,cAAc,CAAC+iD,YAAY/pD,YAAY,CAAA,CAAA;QACtE,MAAMhD,UAAUuD,IAAK6B,CAAAA,UAAU,CAACsI,QAAQ,CAACq/C,YAAYtmD,SAAS,CAAA,CAAA;QAC9D,OAAO;YACL0U,UAAAA,EAAYnb,QAAQmb,UAAU;YAC9BtC,QAAAA,EAAU7Y,QAAQ6Y,QAAQ;QAC5B,CAAA,CAAA;IACF,CAAA;IACAu0C,UAAYT,EAAAA,yKAAAA;IAGZjC,SAAWiC,EAAAA,yKAAAA;IAGXU,YAAcV,EAAAA,yKAAAA;IACd5C,MAAQ4C,EAAAA,yKAAAA;IACRW,WAAaX,EAAAA,yKAAAA;AACf,CAAA,CAAA;AAWA,SAASY,2BAA2B30D,SAAS,EAAEqe,IAAI,EAAExP,GAAG,EAAE+7B,GAAG,EAAE;IAC7D,MAAMjgB,SAAS3qB,SAAS,CAACqe,KAAK,CAACxd,IAAI,CAACgO,GAAK+7B,EAAAA,GAAAA,CAAAA,CAAAA;IAEzC,IAAI,OAAOjgB,WAAW,WAAa,EAAA;QACjC,OAAOkpC,gBAAgB,CAACx1C,IAAAA,CAAK,CAACxd,IAAI,CAACgO,GAAK+7B,EAAAA,GAAAA,CAAAA,CAAAA;KACzC;IAED,OAAOjgB,MAAAA,CAAAA;AACT,CAAA;AAEO,MAAMiqC,OAAgBj9B,SAAAA,OAAAA,CAAAA;IAK3B,OAAOq4B,cAAcA,WAAY,CAAA;IAEjC5wD,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK,EAAA,CAAA;QAEL,IAAI,CAAC4uD,OAAO,GAAG,CAAA,CAAA;QACf,IAAI,CAACpzD,OAAO,GAAG,EAAE,CAAA;QACjB,IAAI,CAACqzD,cAAc,GAAGp1D,SAAAA,CAAAA;QACtB,IAAI,CAACq1D,KAAK,GAAGr1D,SAAAA,CAAAA;QACb,IAAI,CAACs1D,iBAAiB,GAAGt1D,SAAAA,CAAAA;QACzB,IAAI,CAACu1D,aAAa,GAAG,EAAE,CAAA;QACvB,IAAI,CAACvtD,WAAW,GAAGhI,SAAAA,CAAAA;QACnB,IAAI,CAAC+P,QAAQ,GAAG/P,SAAAA,CAAAA;QAChB,IAAI,CAACE,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK,CAAA;QACzB,IAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO,CAAA;QAC7B,IAAI,CAAC8tD,UAAU,GAAGx1D,SAAAA,CAAAA;QAClB,IAAI,CAACmhC,KAAK,GAAGnhC,SAAAA,CAAAA;QACb,IAAI,CAACmyD,UAAU,GAAGnyD,SAAAA,CAAAA;QAClB,IAAI,CAACwxD,IAAI,GAAGxxD,SAAAA,CAAAA;QACZ,IAAI,CAACoyD,SAAS,GAAGpyD,SAAAA,CAAAA;QACjB,IAAI,CAACyxD,MAAM,GAAGzxD,SAAAA,CAAAA;QACd,IAAI,CAACgzD,MAAM,GAAGhzD,SAAAA,CAAAA;QACd,IAAI,CAACqzD,MAAM,GAAGrzD,SAAAA,CAAAA;QACd,IAAI,CAACmJ,CAAC,GAAGnJ,SAAAA,CAAAA;QACT,IAAI,CAACoJ,CAAC,GAAGpJ,SAAAA,CAAAA;QACT,IAAI,CAACyd,MAAM,GAAGzd,SAAAA,CAAAA;QACd,IAAI,CAAC0d,KAAK,GAAG1d,SAAAA,CAAAA;QACb,IAAI,CAACy1D,MAAM,GAAGz1D,SAAAA,CAAAA;QACd,IAAI,CAAC01D,MAAM,GAAG11D,SAAAA,CAAAA;QAGd,IAAI,CAAC21D,WAAW,GAAG31D,SAAAA,CAAAA;QACnB,IAAI,CAAC41D,gBAAgB,GAAG51D,SAAAA,CAAAA;QACxB,IAAI,CAAC61D,eAAe,GAAG71D,SAAAA,CAAAA;IACzB,CAAA;IAEAiQ,UAAAA,CAAWvI,OAAO,EAAE;QAClB,IAAI,CAACA,OAAO,GAAGA,OAAAA,CAAAA;QACf,IAAI,CAAC4tD,iBAAiB,GAAGt1D,SAAAA,CAAAA;QACzB,IAAI,CAAC+P,QAAQ,GAAG/P,SAAAA,CAAAA;IAClB,CAAA;IAKAmW,kBAAqB,GAAA;QACnB,MAAM1H,MAAAA,GAAS,IAAI,CAAC6mD,iBAAiB,CAAA;QAErC,IAAI7mD,MAAQ,EAAA;YACV,OAAOA,MAAAA,CAAAA;SACR;QAED,MAAMvO,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMwH,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACg2B,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QACvD,MAAMhK,IAAAA,GAAOnB,OAAQqxB,CAAAA,OAAO,IAAI74B,KAAAA,CAAMwH,OAAO,CAACV,SAAS,IAAIU,OAAAA,CAAQE,UAAU,CAAA;QAC7E,MAAMA,aAAa,IAAItB,UAAAA,CAAW,IAAI,CAACpG,KAAK,EAAE2I,IAAAA,CAAAA,CAAAA;QAC9C,IAAIA,IAAAA,CAAKyN,UAAU,EAAE;YACnB,IAAI,CAACg/C,iBAAiB,GAAGzuD,MAAAA,CAAOqP,MAAM,CAACtO,UAAAA,CAAAA,CAAAA;SACxC;QAED,OAAOA,UAAAA,CAAAA;IACT,CAAA;IAKAiL,UAAa,GAAA;QACX,OAAO,IAAI,CAAC9C,QAAQ,IAAA,CACpB,IAAI,CAACA,QAAQ,GAAGikD,oBAAAA,CAAqB,IAAI,CAAC9zD,KAAK,CAAC2S,UAAU,EAAA,EAAI,IAAI,EAAE,IAAI,CAAC0iD,aAAa,CAAA,CAAA,CAAA;IACxF,CAAA;IAEAO,QAASvgD,CAAAA,OAAO,EAAE7N,OAAO,EAAE;QACzB,MAAM,EAACpH,SAAS,EAAC,GAAGoH,OAAAA,CAAAA;QAEpB,MAAM0sD,WAAca,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,aAAA,EAAe,IAAI,EAAEiV,OAAAA,CAAAA,CAAAA;QAC/E,MAAM4rB,KAAQ8zB,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,OAAA,EAAS,IAAI,EAAEiV,OAAAA,CAAAA,CAAAA;QACnE,MAAMg/C,UAAaU,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,YAAA,EAAc,IAAI,EAAEiV,OAAAA,CAAAA,CAAAA;QAE7E,IAAIqmB,QAAQ,EAAE,CAAA;QACdA,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAcmD,CAAAA,WAAAA,CAAAA,CAAAA,CAAAA;QAC1Cx4B,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAc9vB,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA;QAC1CvF,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAcsD,CAAAA,UAAAA,CAAAA,CAAAA,CAAAA;QAE1C,OAAO34B,KAAAA,CAAAA;IACT,CAAA;IAEAm6B,aAAc9B,CAAAA,YAAY,EAAEvsD,OAAO,EAAE;QACnC,OAAOqsD,wBACLkB,0BAA2BvtD,CAAAA,OAAAA,CAAQpH,SAAS,EAAE,YAAA,EAAc,IAAI,EAAE2zD,YAAAA,CAAAA,CAAAA,CAAAA;IAEtE,CAAA;IAEA+B,OAAQ/B,CAAAA,YAAY,EAAEvsD,OAAO,EAAE;QAC7B,MAAM,EAACpH,SAAS,EAAC,GAAGoH,OAAAA,CAAAA;QACpB,MAAMuuD,YAAY,EAAE,CAAA;YAEpB1jC,wKAAK0hC,EAAAA,YAAAA,EAAc,CAAC1+C,OAAY,GAAA;YAC9B,MAAMy8C,QAAW,GAAA;gBACfC,MAAAA,EAAQ,EAAE;gBACVr2B,KAAAA,EAAO,EAAE;gBACTs2B,KAAAA,EAAO,EAAE;YACX,CAAA,CAAA;YACA,MAAMgE,MAAAA,GAAShC,kBAAkB5zD,SAAWiV,EAAAA,OAAAA,CAAAA,CAAAA;YAC5Cu7C,YAAakB,CAAAA,QAAAA,CAASC,MAAM,EAAEhB,aAAAA,CAAcgE,2BAA2BiB,MAAQ,EAAA,aAAA,EAAe,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA;YACpGu7C,YAAAA,CAAakB,SAASp2B,KAAK,EAAEq5B,2BAA2BiB,MAAQ,EAAA,OAAA,EAAS,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA;YAC/Eu7C,YAAakB,CAAAA,QAAAA,CAASE,KAAK,EAAEjB,aAAAA,CAAcgE,2BAA2BiB,MAAQ,EAAA,YAAA,EAAc,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA;YAElG0gD,SAAAA,CAAUrzD,IAAI,CAACovD,QAAAA,CAAAA,CAAAA;QACjB,CAAA,CAAA,CAAA;QAEA,OAAOiE,SAAAA,CAAAA;IACT,CAAA;IAEAE,YAAalC,CAAAA,YAAY,EAAEvsD,OAAO,EAAE;QAClC,OAAOqsD,wBACLkB,0BAA2BvtD,CAAAA,OAAAA,CAAQpH,SAAS,EAAE,WAAA,EAAa,IAAI,EAAE2zD,YAAAA,CAAAA,CAAAA,CAAAA;IAErE,CAAA;IAGAmC,SAAUnC,CAAAA,YAAY,EAAEvsD,OAAO,EAAE;QAC/B,MAAM,EAACpH,SAAS,EAAC,GAAGoH,OAAAA,CAAAA;QAEpB,MAAMqtD,YAAeE,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,cAAA,EAAgB,IAAI,EAAE2zD,YAAAA,CAAAA,CAAAA;QACjF,MAAMxC,MAASwD,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,QAAA,EAAU,IAAI,EAAE2zD,YAAAA,CAAAA,CAAAA;QACrE,MAAMe,WAAcC,GAAAA,0BAAAA,CAA2B30D,SAAW,EAAA,aAAA,EAAe,IAAI,EAAE2zD,YAAAA,CAAAA,CAAAA;QAE/E,IAAIr4B,QAAQ,EAAE,CAAA;QACdA,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAc8D,CAAAA,YAAAA,CAAAA,CAAAA,CAAAA;QAC1Cn5B,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAcQ,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA;QAC1C71B,KAAQk1B,GAAAA,YAAAA,CAAal1B,OAAOq1B,aAAc+D,CAAAA,WAAAA,CAAAA,CAAAA,CAAAA;QAE1C,OAAOp5B,KAAAA,CAAAA;IACT,CAAA;IAKAy6B,YAAAA,CAAa3uD,OAAO,EAAE;QACpB,MAAM/B,MAAAA,GAAS,IAAI,CAAC5D,OAAO,CAAA;QAC3B,MAAMiJ,IAAO,GAAA,IAAI,CAAC9K,KAAK,CAAC8K,IAAI,CAAA;QAC5B,MAAM2qD,cAAc,EAAE,CAAA;QACtB,MAAMC,mBAAmB,EAAE,CAAA;QAC3B,MAAMC,kBAAkB,EAAE,CAAA;QAC1B,IAAI5B,eAAe,EAAE,CAAA;QACrB,IAAIryD,CAAGw4B,EAAAA,GAAAA,CAAAA;QAEP,IAAKx4B,CAAAA,GAAI,GAAGw4B,GAAMz0B,GAAAA,MAAAA,CAAOhE,MAAM,EAAEC,CAAAA,GAAIw4B,GAAK,EAAA,EAAEx4B,CAAG,CAAA;YAC7CqyD,YAAarxD,CAAAA,IAAI,CAACwuD,iBAAkB,CAAA,IAAI,CAAClxD,KAAK,EAAEyF,MAAM,CAAC/D,CAAE,CAAA,CAAA,CAAA,CAAA;QAC3D,CAAA;QAGA,IAAI8F,OAAAA,CAAQiG,MAAM,EAAE;YAClBsmD,YAAAA,GAAeA,YAAatmD,CAAAA,MAAM,CAAC,CAACO,OAAS9D,EAAAA,KAAAA,EAAO6jB,KAAUvmB,GAAAA,OAAAA,CAAQiG,MAAM,CAACO,OAAS9D,EAAAA,KAAAA,EAAO6jB,KAAOjjB,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;SACrG;QAGD,IAAItD,OAAAA,CAAQ4uD,QAAQ,EAAE;YACpBrC,YAAeA,GAAAA,YAAAA,CAAaj7C,IAAI,CAAC,CAACC,CAAAA,EAAGrP,IAAMlC,OAAQ4uD,CAAAA,QAAQ,CAACr9C,CAAAA,EAAGrP,CAAGoB,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;SACnE;YAGDunB,wKAAK0hC,EAAAA,YAAAA,EAAc,CAAC1+C,OAAY,GAAA;YAC9B,MAAM2gD,MAAShC,GAAAA,iBAAAA,CAAkBxsD,OAAQpH,CAAAA,SAAS,EAAEiV,OAAAA,CAAAA,CAAAA;YACpDogD,WAAAA,CAAY/yD,IAAI,CAACqyD,0BAAAA,CAA2BiB,MAAQ,EAAA,YAAA,EAAc,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA;YACxEqgD,gBAAAA,CAAiBhzD,IAAI,CAACqyD,0BAAAA,CAA2BiB,MAAQ,EAAA,iBAAA,EAAmB,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA;YAClFsgD,eAAAA,CAAgBjzD,IAAI,CAACqyD,0BAAAA,CAA2BiB,MAAQ,EAAA,gBAAA,EAAkB,IAAI,EAAE3gD,OAAAA,CAAAA,CAAAA,CAAAA;QAClF,CAAA,CAAA,CAAA;QAEA,IAAI,CAACogD,WAAW,GAAGA,WAAAA,CAAAA;QACnB,IAAI,CAACC,gBAAgB,GAAGA,gBAAAA,CAAAA;QACxB,IAAI,CAACC,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACL,UAAU,GAAGvB,YAAAA,CAAAA;QAClB,OAAOA,YAAAA,CAAAA;IACT,CAAA;IAEAruD,MAAO6rB,CAAAA,OAAO,EAAEmnB,MAAM,EAAE;QACtB,MAAMlxC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACg2B,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QACvD,MAAMlN,MAAAA,GAAS,IAAI,CAAC5D,OAAO,CAAA;QAC3B,IAAIuF,UAAAA,CAAAA;QACJ,IAAI2sD,eAAe,EAAE,CAAA;QAErB,IAAI,CAACtuD,MAAOhE,CAAAA,MAAM,EAAE;YAClB,IAAI,IAAI,CAACwzD,OAAO,KAAK,CAAG,EAAA;gBACtB7tD,UAAa,GAAA;oBACX6tD,OAAS,EAAA,CAAA;gBACX,CAAA,CAAA;aACD;SACI,MAAA;YACL,MAAMxpC,QAAW2kC,GAAAA,WAAW,CAAC5oD,OAAAA,CAAQikB,QAAQ,CAAC,CAACxqB,IAAI,CAAC,IAAI,EAAEwE,MAAQ,EAAA,IAAI,CAACyvD,cAAc,CAAA,CAAA;YACrFnB,YAAe,GAAA,IAAI,CAACoC,YAAY,CAAC3uD,OAAAA,CAAAA,CAAAA;YAEjC,IAAI,CAACy5B,KAAK,GAAG,IAAI,CAAC20B,QAAQ,CAAC7B,YAAcvsD,EAAAA,OAAAA,CAAAA,CAAAA;YACzC,IAAI,CAACyqD,UAAU,GAAG,IAAI,CAAC4D,aAAa,CAAC9B,YAAcvsD,EAAAA,OAAAA,CAAAA,CAAAA;YACnD,IAAI,CAAC8pD,IAAI,GAAG,IAAI,CAACwE,OAAO,CAAC/B,YAAcvsD,EAAAA,OAAAA,CAAAA,CAAAA;YACvC,IAAI,CAAC0qD,SAAS,GAAG,IAAI,CAAC+D,YAAY,CAAClC,YAAcvsD,EAAAA,OAAAA,CAAAA,CAAAA;YACjD,IAAI,CAAC+pD,MAAM,GAAG,IAAI,CAAC2E,SAAS,CAACnC,YAAcvsD,EAAAA,OAAAA,CAAAA,CAAAA;YAE3C,MAAMW,OAAO,IAAI,CAACgtD,KAAK,GAAG/D,cAAAA,CAAe,IAAI,EAAE5pD,OAAAA,CAAAA,CAAAA;YAC/C,MAAM6uD,kBAAkB1vD,MAAOyB,CAAAA,MAAM,CAAC,CAAA,GAAIqjB,QAAUtjB,EAAAA,IAAAA,CAAAA,CAAAA;YACpD,MAAMurD,YAAYL,kBAAmB,CAAA,IAAI,CAACrzD,KAAK,EAAEwH,OAAS6uD,EAAAA,eAAAA,CAAAA,CAAAA;YAC1D,MAAMC,kBAAkB7C,kBAAmBjsD,CAAAA,OAAAA,EAAS6uD,iBAAiB3C,SAAW,EAAA,IAAI,CAAC1zD,KAAK,CAAA,CAAA;YAE1F,IAAI,CAAC8yD,MAAM,GAAGY,SAAAA,CAAUZ,MAAM,CAAA;YAC9B,IAAI,CAACK,MAAM,GAAGO,SAAAA,CAAUP,MAAM,CAAA;YAE9B/rD,UAAa,GAAA;gBACX6tD,OAAS,EAAA,CAAA;gBACThsD,CAAAA,EAAGqtD,gBAAgBrtD,CAAC;gBACpBC,CAAAA,EAAGotD,gBAAgBptD,CAAC;gBACpBsU,KAAAA,EAAOrV,KAAKqV,KAAK;gBACjBD,MAAAA,EAAQpV,KAAKoV,MAAM;gBACnBg4C,MAAAA,EAAQ9pC,SAASxiB,CAAC;gBAClBusD,MAAAA,EAAQ/pC,SAASviB,CAAC;YACpB,CAAA,CAAA;SACD;QAED,IAAI,CAACmsD,aAAa,GAAGtB,YAAAA,CAAAA;QACrB,IAAI,CAAClkD,QAAQ,GAAG/P,SAAAA,CAAAA;QAEhB,IAAIsH,UAAY,EAAA;YACd,IAAI,CAAC6O,kBAAkB,EAAA,CAAGvQ,MAAM,CAAC,IAAI,EAAE0B,UAAAA,CAAAA,CAAAA;SACxC;QAED,IAAImqB,OAAAA,IAAW/pB,OAAQ+uD,CAAAA,QAAQ,EAAE;YAC/B/uD,OAAAA,CAAQ+uD,QAAQ,CAACt1D,IAAI,CAAC,IAAI,EAAE;gBAACjB,KAAO,EAAA,IAAI,CAACA,KAAK;gBAAEqxD,OAAAA,EAAS,IAAI;gBAAE3Y,MAAAA;YAAM,CAAA,CAAA,CAAA;SACtE;IACH,CAAA;IAEA8d,SAAAA,CAAUC,YAAY,EAAExnD,GAAG,EAAE9G,IAAI,EAAEX,OAAO,EAAE;QAC1C,MAAMkvD,gBAAgB,IAAI,CAACC,gBAAgB,CAACF,cAActuD,IAAMX,EAAAA,OAAAA,CAAAA,CAAAA;QAEhEyH,GAAAA,CAAIo4B,MAAM,CAACqvB,aAAAA,CAAcpyB,EAAE,EAAEoyB,cAAcnyB,EAAE,CAAA,CAAA;QAC7Ct1B,GAAAA,CAAIo4B,MAAM,CAACqvB,aAAAA,CAAclyB,EAAE,EAAEkyB,cAAcjyB,EAAE,CAAA,CAAA;QAC7Cx1B,GAAAA,CAAIo4B,MAAM,CAACqvB,aAAAA,CAAcE,EAAE,EAAEF,cAAcG,EAAE,CAAA,CAAA;IAC/C,CAAA;IAEAF,gBAAAA,CAAiBF,YAAY,EAAEtuD,IAAI,EAAEX,OAAO,EAAE;QAC5C,MAAM,EAACsrD,MAAM,EAAEK,MAAM,EAAC,GAAG,IAAI,CAAA;QAC7B,MAAM,EAACH,SAAAA,EAAWW,YAAAA,EAAa,GAAGnsD,OAAAA,CAAAA;QAClC,MAAM,EAACu6C,OAAO,EAAEC,QAAQ,EAAEC,UAAAA,EAAYC,WAAAA,EAAY,OAAGN,yKAAc+R,EAAAA,YAAAA,CAAAA,CAAAA;QACnE,MAAM,EAAC1qD,CAAG6tD,EAAAA,GAAAA,EAAK5tD,CAAG6tD,EAAAA,GAAAA,EAAI,GAAGN,YAAAA,CAAAA;QACzB,MAAM,EAACj5C,KAAAA,EAAOD,MAAAA,EAAO,GAAGpV,IAAAA,CAAAA;QACxB,IAAIm8B,EAAIE,EAAAA,EAAAA,EAAIoyB,EAAIryB,EAAAA,EAAAA,EAAIE,EAAIoyB,EAAAA,EAAAA,CAAAA;QAExB,IAAI1D,WAAW,QAAU,EAAA;YACvB1uB,EAAAA,GAAKsyB,MAAOx5C,MAAS,GAAA,CAAA,CAAA;YAErB,IAAIu1C,WAAW,MAAQ,EAAA;gBACrBxuB,EAAKwyB,GAAAA,GAAAA,CAAAA;gBACLtyB,EAAAA,GAAKF,EAAK0uB,GAAAA,SAAAA,CAAAA;gBAGVzuB,EAAAA,GAAKE,EAAKuuB,GAAAA,SAAAA,CAAAA;gBACV6D,EAAAA,GAAKpyB,EAAKuuB,GAAAA,SAAAA,CAAAA;aACL,MAAA;gBACL1uB,EAAAA,GAAKwyB,GAAMt5C,GAAAA,KAAAA,CAAAA;gBACXgnB,EAAAA,GAAKF,EAAK0uB,GAAAA,SAAAA,CAAAA;gBAGVzuB,EAAAA,GAAKE,EAAKuuB,GAAAA,SAAAA,CAAAA;gBACV6D,EAAAA,GAAKpyB,EAAKuuB,GAAAA,SAAAA,CAAAA;aACX;YAED4D,EAAKtyB,GAAAA,EAAAA,CAAAA;SACA,MAAA;YACL,IAAIwuB,WAAW,MAAQ,EAAA;gBACrBtuB,EAAAA,GAAKsyB,GAAMl2D,GAAAA,IAAAA,CAAKoC,GAAG,CAAC++C,SAASE,UAAe+Q,CAAAA,GAAAA,SAAAA,CAAAA;aACvC,MAAA,IAAIF,WAAW,OAAS,EAAA;gBAC7BtuB,EAAAA,GAAKsyB,MAAMt5C,KAAQ5c,GAAAA,IAAAA,CAAKoC,GAAG,CAACg/C,UAAUE,WAAe8Q,CAAAA,GAAAA,SAAAA,CAAAA;aAChD,MAAA;gBACLxuB,EAAK,GAAA,IAAI,CAAC+wB,MAAM,CAAA;aACjB;YAED,IAAIpC,WAAW,KAAO,EAAA;gBACpB5uB,EAAKwyB,GAAAA,GAAAA,CAAAA;gBACLtyB,EAAAA,GAAKF,EAAKyuB,GAAAA,SAAAA,CAAAA;gBAGV1uB,EAAAA,GAAKE,EAAKwuB,GAAAA,SAAAA,CAAAA;gBACV4D,EAAAA,GAAKpyB,EAAKwuB,GAAAA,SAAAA,CAAAA;aACL,MAAA;gBACLzuB,EAAAA,GAAKwyB,GAAMx5C,GAAAA,MAAAA,CAAAA;gBACXknB,EAAAA,GAAKF,EAAKyuB,GAAAA,SAAAA,CAAAA;gBAGV1uB,EAAAA,GAAKE,EAAKwuB,GAAAA,SAAAA,CAAAA;gBACV4D,EAAAA,GAAKpyB,EAAKwuB,GAAAA,SAAAA,CAAAA;aACX;YACD6D,EAAKtyB,GAAAA,EAAAA,CAAAA;SACN;QACD,OAAO;YAACD,EAAAA;YAAIE,EAAAA;YAAIoyB,EAAAA;YAAIryB,EAAAA;YAAIE,EAAAA;YAAIoyB,EAAAA;QAAE,CAAA,CAAA;IAChC,CAAA;IAEA9uB,SAAAA,CAAUivB,EAAE,EAAE/nD,GAAG,EAAEzH,OAAO,EAAE;QAC1B,MAAMy5B,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMx/B,MAAAA,GAASw/B,MAAMx/B,MAAM,CAAA;QAC3B,IAAIktD,WAAWwD,YAAczwD,EAAAA,CAAAA,CAAAA;QAE7B,IAAID,MAAQ,EAAA;YACV,MAAMwrD,SAAAA,OAAYC,yKAAc1lD,EAAAA,OAAAA,CAAQwlD,GAAG,EAAE,IAAI,CAAC/jD,CAAC,EAAE,IAAI,CAACuU,KAAK,CAAA,CAAA;YAE/Dw5C,EAAAA,CAAG/tD,CAAC,GAAG2qD,WAAAA,CAAY,IAAI,EAAEpsD,OAAAA,CAAQs0B,UAAU,EAAEt0B,OAAAA,CAAAA,CAAAA;YAE7CyH,GAAAA,CAAI2T,SAAS,GAAGqqC,SAAAA,CAAUrqC,SAAS,CAACpb,QAAQs0B,UAAU,CAAA,CAAA;YACtD7sB,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;YAEnBkpB,SAAYlzB,OAAAA,yKAAAA,EAAOj0B,QAAQmnD,SAAS,CAAA,CAAA;YACpCwD,YAAAA,GAAe3qD,QAAQ2qD,YAAY,CAAA;YAEnCljD,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQyvD,UAAU,CAAA;YAClChoD,GAAIusB,CAAAA,IAAI,GAAGmzB,SAAAA,CAAU9rB,MAAM,CAAA;YAE3B,IAAKnhC,CAAI,GAAA,CAAA,EAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG,CAAA;gBAC3BuN,GAAAA,CAAI++C,QAAQ,CAAC/sB,KAAK,CAACv/B,CAAAA,CAAE,EAAEurD,SAAUhkD,CAAAA,CAAC,CAAC+tD,EAAAA,CAAG/tD,CAAC,CAAG+tD,EAAAA,EAAAA,CAAG9tD,CAAC,GAAGylD,SAAAA,CAAUhzB,UAAU,GAAG,CAAA,CAAA,CAAA;gBACxEq7B,EAAAA,CAAG9tD,CAAC,IAAIylD,SAAAA,CAAUhzB,UAAU,GAAGw2B;gBAE/B,IAAIzwD,CAAAA,GAAI,MAAMD,MAAQ,EAAA;oBACpBu1D,EAAAA,CAAG9tD,CAAC,IAAI1B,OAAAA,CAAQ4qD,iBAAiB,GAAGD;iBACrC;YACH,CAAA;SACD;IACH,CAAA;IAKA+E,aAAAA,CAAcjoD,GAAG,EAAE+nD,EAAE,EAAEt1D,CAAC,EAAEurD,SAAS,EAAEzlD,OAAO,EAAE;QAC5C,MAAMgtD,UAAa,GAAA,IAAI,CAACiB,WAAW,CAAC/zD,CAAE,CAAA,CAAA;QACtC,MAAMizD,eAAkB,GAAA,IAAI,CAACe,gBAAgB,CAACh0D,CAAE,CAAA,CAAA;QAChD,MAAM,EAACspD,SAAAA,EAAWC,QAAAA,EAAS,GAAGzjD,OAAAA,CAAAA;QAC9B,MAAMgqD,QAAAA,OAAW/1B,yKAAOj0B,EAAAA,OAAAA,CAAQgqD,QAAQ,CAAA,CAAA;QACxC,MAAM2F,MAASvD,GAAAA,WAAAA,CAAY,IAAI,EAAE,MAAQpsD,EAAAA,OAAAA,CAAAA,CAAAA;QACzC,MAAM4vD,SAAAA,GAAYnK,SAAUhkD,CAAAA,CAAC,CAACkuD,MAAAA,CAAAA,CAAAA;QAC9B,MAAME,OAAUrM,GAAAA,SAAAA,GAAYwG,QAAS71B,CAAAA,UAAU,GAAI61B,CAAAA,QAAAA,CAAS71B,UAAU,GAAGqvB,SAAQ,IAAK,IAAI,CAAC,CAAA;QAC3F,MAAMsM,MAAAA,GAASN,EAAG9tD,CAAAA,CAAC,GAAGmuD,OAAAA,CAAAA;QAEtB,IAAI7vD,OAAAA,CAAQ0jD,aAAa,EAAE;YACzB,MAAMwC,WAAc,GAAA;gBAClB5tC,MAAAA,EAAQlf,IAAKC,CAAAA,GAAG,CAACoqD,QAAAA,EAAUD,SAAa,CAAA,GAAA,CAAA;gBACxCroC,UAAAA,EAAYgyC,gBAAgBhyC,UAAU;gBACtCtC,QAAAA,EAAUs0C,gBAAgBt0C,QAAQ;gBAClCuD,WAAa,EAAA,CAAA;YACf,CAAA,CAAA;YAGA,MAAMkC,UAAUmnC,SAAUG,CAAAA,UAAU,CAACgK,SAAAA,EAAWnM,YAAYA,QAAW,GAAA,CAAA,CAAA;YACvE,MAAMllC,OAAAA,GAAUuxC,SAAStM,SAAY,GAAA,CAAA,CAAA;YAGrC/7C,GAAI4U,CAAAA,WAAW,GAAGrc,OAAAA,CAAQ+vD,kBAAkB,CAAA;YAC5CtoD,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ+vD,kBAAkB,CAAA;gBAC1CpW,yKAAUlyC,EAAAA,GAAAA,EAAKy+C,aAAa5nC,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;YAGrC9W,GAAI4U,CAAAA,WAAW,GAAG2wC,UAAAA,CAAW1wC,WAAW,CAAA;YACxC7U,GAAIiU,CAAAA,SAAS,GAAGsxC,UAAAA,CAAWrxC,eAAe,CAAA;gBAC1Cg+B,yKAAUlyC,EAAAA,GAAAA,EAAKy+C,aAAa5nC,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;SAChC,MAAA;YAEL9W,GAAI0U,CAAAA,SAAS,OAAGld,wKAAS+tD,EAAAA,UAAAA,CAAW5wC,WAAW,CAAIhjB,GAAAA,IAAAA,CAAKoC,GAAG,CAAI2D,GAAAA,MAAAA,CAAOW,MAAM,CAACktD,UAAAA,CAAW5wC,WAAW,CAAM4wC,CAAAA,GAAAA,UAAAA,CAAW5wC,WAAW,IAAI,CAAE;YACrI3U,GAAI4U,CAAAA,WAAW,GAAG2wC,UAAAA,CAAW1wC,WAAW,CAAA;YACxC7U,GAAAA,CAAIi4B,WAAW,CAACstB,UAAWlxC,CAAAA,UAAU,IAAI,EAAE,CAAA,CAAA;YAC3CrU,GAAAA,CAAIsU,cAAc,GAAGixC,UAAWhxC,CAAAA,gBAAgB,IAAI,CAAA,CAAA;YAGpD,MAAMg0C,MAASvK,GAAAA,SAAAA,CAAUG,UAAU,CAACgK,SAAWnM,EAAAA,QAAAA,CAAAA,CAAAA;YAC/C,MAAMwM,MAAAA,GAASxK,UAAUG,UAAU,CAACH,UAAUW,KAAK,CAACwJ,SAAW,EAAA,CAAA,CAAA,EAAInM,QAAW,GAAA,CAAA,CAAA,CAAA;YAC9E,MAAMnoC,YAAAA,OAAe8+B,yKAAc4S,EAAAA,UAAAA,CAAW1xC,YAAY,CAAA,CAAA;YAE1D,IAAInc,MAAAA,CAAOW,MAAM,CAACwb,YAAAA,CAAAA,CAAc0pB,IAAI,CAACvwB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI,CAAA,EAAA;gBAClDhN,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;gBACbl4B,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ+vD,kBAAkB,CAAA;oBAC1CvU,yKAAAA,EAAmB/zC,GAAK,EAAA;oBACtBhG,CAAGuuD,EAAAA,MAAAA;oBACHtuD,CAAGouD,EAAAA,MAAAA;oBACH9mC,CAAGy6B,EAAAA,QAAAA;oBACHv6B,CAAGs6B,EAAAA,SAAAA;oBACHlrC,MAAQgD,EAAAA,YAAAA;gBACV,CAAA,CAAA,CAAA;gBACA7T,GAAAA,CAAIiB,IAAI,EAAA,CAAA;gBACRjB,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;gBAGVr4B,GAAIiU,CAAAA,SAAS,GAAGsxC,UAAAA,CAAWrxC,eAAe,CAAA;gBAC1ClU,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;oBACb6b,yKAAAA,EAAmB/zC,GAAK,EAAA;oBACtBhG,CAAGwuD,EAAAA,MAAAA;oBACHvuD,CAAAA,EAAGouD,MAAS,GAAA,CAAA;oBACZ9mC,CAAAA,EAAGy6B,QAAW,GAAA,CAAA;oBACdv6B,CAAAA,EAAGs6B,SAAY,GAAA,CAAA;oBACflrC,MAAQgD,EAAAA,YAAAA;gBACV,CAAA,CAAA,CAAA;gBACA7T,GAAAA,CAAIiB,IAAI,EAAA,CAAA;aACH,MAAA;gBAELjB,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ+vD,kBAAkB,CAAA;gBAC1CtoD,GAAAA,CAAI23B,QAAQ,CAAC4wB,MAAQF,EAAAA,MAAAA,EAAQrM,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;gBACvC/7C,GAAAA,CAAIyoD,UAAU,CAACF,MAAQF,EAAAA,MAAAA,EAAQrM,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;gBAEzC/7C,GAAIiU,CAAAA,SAAS,GAAGsxC,UAAAA,CAAWrxC,eAAe,CAAA;gBAC1ClU,GAAAA,CAAI23B,QAAQ,CAAC6wB,MAAAA,EAAQH,SAAS,CAAGrM,EAAAA,QAAAA,GAAW,GAAGD,SAAY,GAAA,CAAA,CAAA,CAAA;aAC5D;SACF;QAGD/7C,GAAAA,CAAIiU,SAAS,GAAG,IAAI,CAACyyC,eAAe,CAACj0D,CAAE,CAAA,CAAA;IACzC,CAAA;IAEAi2D,QAAAA,CAASX,EAAE,EAAE/nD,GAAG,EAAEzH,OAAO,EAAE;QACzB,MAAM,EAAC8pD,IAAAA,EAAK,GAAG,IAAI,CAAA;QACnB,MAAM,EAACiB,WAAAA,EAAaqF,SAAAA,EAAWtF,aAAAA,EAAetH,SAAAA,EAAWC,QAAAA,EAAUj7B,UAAAA,EAAW,GAAGxoB,OAAAA,CAAAA;QACjF,MAAMgqD,QAAAA,OAAW/1B,yKAAOj0B,EAAAA,OAAAA,CAAQgqD,QAAQ,CAAA,CAAA;QACxC,IAAIa,cAAAA,GAAiBb,SAAS71B,UAAU,CAAA;QACxC,IAAIk8B,YAAe,GAAA,CAAA,CAAA;QAEnB,MAAM5K,SAAAA,OAAYC,yKAAc1lD,EAAAA,OAAAA,CAAQwlD,GAAG,EAAE,IAAI,CAAC/jD,CAAC,EAAE,IAAI,CAACuU,KAAK,CAAA,CAAA;QAE/D,MAAMs6C,cAAAA,GAAiB,SAASlxC,IAAI,EAAE;YACpC3X,GAAAA,CAAI++C,QAAQ,CAACpnC,IAAMqmC,EAAAA,SAAAA,CAAUhkD,CAAC,CAAC+tD,EAAG/tD,CAAAA,CAAC,GAAG4uD,YAAAA,CAAAA,EAAeb,EAAG9tD,CAAAA,CAAC,GAAGmpD,cAAiB,GAAA,CAAA,CAAA,CAAA;YAC7E2E,EAAG9tD,CAAAA,CAAC,IAAImpD,cAAiBE,GAAAA,WAAAA,CAAAA;QAC3B,CAAA,CAAA;QAEA,MAAMwF,uBAAAA,GAA0B9K,SAAUrqC,CAAAA,SAAS,CAACg1C,SAAAA,CAAAA,CAAAA;QACpD,IAAI9F,QAAUkG,EAAAA,SAAAA,EAAWt8B,KAAOh6B,EAAAA,CAAAA,EAAGkqB,GAAG3hB,IAAMu4B,EAAAA,IAAAA,CAAAA;QAE5CvzB,GAAAA,CAAI2T,SAAS,GAAGg1C,SAAAA,CAAAA;QAChB3oD,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;QACnBx2B,GAAIusB,CAAAA,IAAI,GAAGg2B,QAAAA,CAAS3uB,MAAM,CAAA;QAE1Bm0B,EAAAA,CAAG/tD,CAAC,GAAG2qD,WAAY,CAAA,IAAI,EAAEmE,uBAAyBvwD,EAAAA,OAAAA,CAAAA,CAAAA;QAGlDyH,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQktD,SAAS,CAAA;YACjCriC,wKAAK,EAAA,IAAI,CAAC4/B,UAAU,EAAE6F,cAAAA,CAAAA,CAAAA;QAEtBD,YAAAA,GAAevF,aAAiByF,IAAAA,uBAAAA,KAA4B,OACxDH,GAAAA,SAAAA,KAAc,QAAY3M,GAAAA,QAAAA,GAAW,CAAIj7B,GAAAA,UAAAA,GAAei7B,QAAW,GAAA,CAAA,GAAIj7B,UAAW,GAClF,CAAC,CAAA;QAGL,IAAKtuB,CAAAA,GAAI,GAAGuI,IAAOqnD,GAAAA,IAAAA,CAAK7vD,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC7CowD,QAAWR,GAAAA,IAAI,CAAC5vD,CAAE,CAAA,CAAA;YAClBs2D,SAAAA,GAAY,IAAI,CAACrC,eAAe,CAACj0D,CAAE,CAAA,CAAA;YAEnCuN,GAAAA,CAAIiU,SAAS,GAAG80C,SAAAA,CAAAA;gBAChB3lC,wKAAKy/B,EAAAA,QAAAA,CAASC,MAAM,EAAE+F,cAAAA,CAAAA,CAAAA;YAEtBp8B,KAAAA,GAAQo2B,SAASp2B,KAAK,CAAA;YAEtB,IAAI42B,aAAAA,IAAiB52B,KAAMj6B,CAAAA,MAAM,EAAE;gBACjC,IAAI,CAACy1D,aAAa,CAACjoD,GAAK+nD,EAAAA,EAAAA,EAAIt1D,GAAGurD,SAAWzlD,EAAAA,OAAAA,CAAAA,CAAAA;gBAC1C6qD,cAAAA,GAAiBzxD,IAAKoC,CAAAA,GAAG,CAACwuD,QAAAA,CAAS71B,UAAU,EAAEqvB,SAAAA,CAAAA,CAAAA;aAChD;YAED,IAAKp/B,CAAAA,GAAI,GAAG4W,IAAO9G,GAAAA,KAAAA,CAAMj6B,MAAM,EAAEmqB,CAAAA,GAAI4W,IAAM,EAAA,EAAE5W,CAAG,CAAA;gBAC9CksC,cAAep8B,CAAAA,KAAK,CAAC9P,CAAE,CAAA,CAAA,CAAA;gBAEvBymC,cAAAA,GAAiBb,SAAS71B,UAAU,CAAA;YACtC,CAAA;gBAEAtJ,wKAAKy/B,EAAAA,QAAAA,CAASE,KAAK,EAAE8F,cAAAA,CAAAA,CAAAA;QACvB,CAAA;QAGAD,YAAe,GAAA,CAAA,CAAA;QACfxF,cAAAA,GAAiBb,SAAS71B,UAAU,CAAA;YAGpCtJ,wKAAK,EAAA,IAAI,CAAC6/B,SAAS,EAAE4F,cAAAA,CAAAA,CAAAA;QACrBd,EAAG9tD,CAAAA,CAAC,IAAIqpD,WAAAA,CAAAA;IACV,CAAA;IAEA0F,UAAAA,CAAWjB,EAAE,EAAE/nD,GAAG,EAAEzH,OAAO,EAAE;QAC3B,MAAM+pD,MAAAA,GAAS,IAAI,CAACA,MAAM,CAAA;QAC1B,MAAM9vD,MAAAA,GAAS8vD,OAAO9vD,MAAM,CAAA;QAC5B,IAAIgwD,UAAY/vD,EAAAA,CAAAA,CAAAA;QAEhB,IAAID,MAAQ,EAAA;YACV,MAAMwrD,SAAAA,OAAYC,yKAAc1lD,EAAAA,OAAAA,CAAQwlD,GAAG,EAAE,IAAI,CAAC/jD,CAAC,EAAE,IAAI,CAACuU,KAAK,CAAA,CAAA;YAE/Dw5C,EAAAA,CAAG/tD,CAAC,GAAG2qD,WAAAA,CAAY,IAAI,EAAEpsD,OAAAA,CAAQ0wD,WAAW,EAAE1wD,OAAAA,CAAAA,CAAAA;YAC9CwvD,EAAG9tD,CAAAA,CAAC,IAAI1B,OAAAA,CAAQgrD,eAAe,CAAA;YAE/BvjD,GAAAA,CAAI2T,SAAS,GAAGqqC,SAAAA,CAAUrqC,SAAS,CAACpb,QAAQ0wD,WAAW,CAAA,CAAA;YACvDjpD,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;YAEnBgsB,UAAah2B,OAAAA,yKAAAA,EAAOj0B,QAAQiqD,UAAU,CAAA,CAAA;YAEtCxiD,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ2wD,WAAW,CAAA;YACnClpD,GAAIusB,CAAAA,IAAI,GAAGi2B,UAAAA,CAAW5uB,MAAM,CAAA;YAE5B,IAAKnhC,CAAI,GAAA,CAAA,EAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG,CAAA;gBAC3BuN,GAAAA,CAAI++C,QAAQ,CAACuD,MAAM,CAAC7vD,CAAAA,CAAE,EAAEurD,SAAUhkD,CAAAA,CAAC,CAAC+tD,EAAAA,CAAG/tD,CAAC,CAAG+tD,EAAAA,EAAAA,CAAG9tD,CAAC,GAAGuoD,UAAAA,CAAW91B,UAAU,GAAG,CAAA,CAAA,CAAA;gBAC1Eq7B,EAAAA,CAAG9tD,CAAC,IAAIuoD,UAAAA,CAAW91B,UAAU,GAAGn0B,QAAQirD,aAAa,CAAA;YACvD,CAAA;SACD;IACH,CAAA;IAEA/rB,cAAAA,CAAeswB,EAAE,EAAE/nD,GAAG,EAAEmpD,WAAW,EAAE5wD,OAAO,EAAE;QAC5C,MAAM,EAACsrD,MAAM,EAAEK,MAAM,EAAC,GAAG,IAAI,CAAA;QAC7B,MAAM,EAAClqD,CAAAA,EAAGC,CAAAA,EAAE,GAAG8tD,EAAAA,CAAAA;QACf,MAAM,EAACx5C,KAAAA,EAAOD,MAAAA,EAAO,GAAG66C,WAAAA,CAAAA;QACxB,MAAM,EAACrW,OAAAA,EAASC,QAAAA,EAAUC,UAAAA,EAAYC,WAAAA,EAAY,OAAGN,yKAAcp6C,EAAAA,OAAAA,CAAQmsD,YAAY,CAAA,CAAA;QAEvF1kD,GAAIiU,CAAAA,SAAS,GAAG1b,OAAAA,CAAQ2b,eAAe,CAAA;QACvClU,GAAI4U,CAAAA,WAAW,GAAGrc,OAAAA,CAAQsc,WAAW,CAAA;QACrC7U,GAAI0U,CAAAA,SAAS,GAAGnc,OAAAA,CAAQoc,WAAW,CAAA;QAEnC3U,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;QACbl4B,GAAIm4B,CAAAA,MAAM,CAACn+B,CAAAA,GAAI84C,OAAS74C,EAAAA,CAAAA,CAAAA,CAAAA;QACxB,IAAIiqD,WAAW,KAAO,EAAA;YACpB,IAAI,CAACqD,SAAS,CAACQ,EAAAA,EAAI/nD,KAAKmpD,WAAa5wD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;QACDyH,GAAAA,CAAIo4B,MAAM,CAACp+B,CAAIuU,GAAAA,KAAAA,GAAQwkC,QAAU94C,EAAAA,CAAAA,CAAAA,CAAAA;QACjC+F,GAAAA,CAAIopD,gBAAgB,CAACpvD,CAAAA,GAAIuU,OAAOtU,CAAGD,EAAAA,CAAAA,GAAIuU,OAAOtU,CAAI84C,GAAAA,QAAAA,CAAAA,CAAAA;QAClD,IAAImR,MAAAA,KAAW,QAAYL,IAAAA,MAAAA,KAAW,OAAS,EAAA;YAC7C,IAAI,CAAC0D,SAAS,CAACQ,EAAAA,EAAI/nD,KAAKmpD,WAAa5wD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;QACDyH,GAAAA,CAAIo4B,MAAM,CAACp+B,CAAIuU,GAAAA,KAAAA,EAAOtU,IAAIqU,MAAS2kC,GAAAA,WAAAA,CAAAA,CAAAA;QACnCjzC,GAAIopD,CAAAA,gBAAgB,CAACpvD,CAAIuU,GAAAA,KAAAA,EAAOtU,IAAIqU,MAAQtU,EAAAA,CAAAA,GAAIuU,KAAQ0kC,GAAAA,WAAAA,EAAah5C,CAAIqU,GAAAA,MAAAA,CAAAA,CAAAA;QACzE,IAAI41C,WAAW,QAAU,EAAA;YACvB,IAAI,CAACqD,SAAS,CAACQ,EAAAA,EAAI/nD,KAAKmpD,WAAa5wD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;QACDyH,GAAAA,CAAIo4B,MAAM,CAACp+B,CAAIg5C,GAAAA,UAAAA,EAAY/4C,CAAIqU,GAAAA,MAAAA,CAAAA,CAAAA;QAC/BtO,GAAAA,CAAIopD,gBAAgB,CAACpvD,CAAAA,EAAGC,IAAIqU,MAAQtU,EAAAA,CAAAA,EAAGC,IAAIqU,MAAS0kC,GAAAA,UAAAA,CAAAA,CAAAA;QACpD,IAAIkR,MAAAA,KAAW,QAAYL,IAAAA,MAAAA,KAAW,MAAQ,EAAA;YAC5C,IAAI,CAAC0D,SAAS,CAACQ,EAAAA,EAAI/nD,KAAKmpD,WAAa5wD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;QACDyH,GAAIo4B,CAAAA,MAAM,CAACp+B,CAAAA,EAAGC,CAAI64C,GAAAA,OAAAA,CAAAA,CAAAA;QAClB9yC,GAAAA,CAAIopD,gBAAgB,CAACpvD,CAAGC,EAAAA,CAAAA,EAAGD,IAAI84C,OAAS74C,EAAAA,CAAAA,CAAAA,CAAAA;QACxC+F,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;QAEbxqC,GAAAA,CAAIiB,IAAI,EAAA,CAAA;QAER,IAAI1I,OAAAA,CAAQoc,WAAW,GAAG,CAAG,EAAA;YAC3B3U,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;SACX;IACH,CAAA;IAMAgxB,sBAAAA,CAAuB9wD,OAAO,EAAE;QAC9B,MAAMxH,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,MAAMC,KAAAA,GAAQ,IAAI,CAAC6H,WAAW,CAAA;QAC9B,MAAMywD,KAAAA,GAAQt4D,KAASA,IAAAA,KAAAA,CAAMgJ,CAAC,CAAA;QAC9B,MAAMuvD,KAAAA,GAAQv4D,KAASA,IAAAA,KAAAA,CAAMiJ,CAAC,CAAA;QAC9B,IAAIqvD,SAASC,KAAO,EAAA;YAClB,MAAM/sC,WAAW2kC,WAAW,CAAC5oD,OAAQikB,CAAAA,QAAQ,CAAC,CAACxqB,IAAI,CAAC,IAAI,EAAE,IAAI,CAACY,OAAO,EAAE,IAAI,CAACqzD,cAAc,CAAA,CAAA;YAC3F,IAAI,CAACzpC,QAAU,EAAA;gBACb,OAAA;aACD;YACD,MAAMtjB,OAAO,IAAI,CAACgtD,KAAK,GAAG/D,cAAAA,CAAe,IAAI,EAAE5pD,OAAAA,CAAAA,CAAAA;YAC/C,MAAM6uD,eAAAA,GAAkB1vD,OAAOyB,MAAM,CAAC,CAAA,CAAIqjB,EAAAA,QAAAA,EAAU,IAAI,CAAC0pC,KAAK,CAAA,CAAA;YAC9D,MAAMzB,SAAAA,GAAYL,kBAAmBrzD,CAAAA,KAAAA,EAAOwH,OAAS6uD,EAAAA,eAAAA,CAAAA,CAAAA;YACrD,MAAMr2C,KAAQyzC,GAAAA,kBAAAA,CAAmBjsD,OAAS6uD,EAAAA,eAAAA,EAAiB3C,SAAW1zD,EAAAA,KAAAA,CAAAA,CAAAA;YACtE,IAAIu4D,KAAAA,CAAMhzD,GAAG,KAAKya,KAAM/W,CAAAA,CAAC,IAAIuvD,KAAAA,CAAMjzD,GAAG,KAAKya,KAAM9W,CAAAA,CAAC,EAAE;gBAClD,IAAI,CAAC4pD,MAAM,GAAGY,SAAAA,CAAUZ,MAAM,CAAA;gBAC9B,IAAI,CAACK,MAAM,GAAGO,SAAAA,CAAUP,MAAM,CAAA;gBAC9B,IAAI,CAAC31C,KAAK,GAAGrV,IAAAA,CAAKqV,KAAK,CAAA;gBACvB,IAAI,CAACD,MAAM,GAAGpV,IAAAA,CAAKoV,MAAM,CAAA;gBACzB,IAAI,CAACg4C,MAAM,GAAG9pC,QAAAA,CAASxiB,CAAC,CAAA;gBACxB,IAAI,CAACusD,MAAM,GAAG/pC,QAAAA,CAASviB,CAAC,CAAA;gBACxB,IAAI,CAAC+M,kBAAkB,EAAA,CAAGvQ,MAAM,CAAC,IAAI,EAAEsa,KAAAA,CAAAA,CAAAA;aACxC;SACF;IACH,CAAA;IAMAy4C,WAAc,GAAA;QACZ,OAAO,CAAC,CAAC,IAAI,CAACxD,OAAO,CAAA;IACvB,CAAA;IAEAtzD,IAAAA,CAAKsN,GAAG,EAAE;QACR,MAAMzH,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACg2B,UAAU,CAAC,IAAI,CAAC7qB,UAAU,EAAA,CAAA,CAAA;QACvD,IAAIsiD,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAE1B,IAAI,CAACA,OAAS,EAAA;YACZ,OAAA;SACD;QAED,IAAI,CAACqD,sBAAsB,CAAC9wD,OAAAA,CAAAA,CAAAA;QAE5B,MAAM4wD,WAAc,GAAA;YAClB56C,KAAO,EAAA,IAAI,CAACA,KAAK;YACjBD,MAAQ,EAAA,IAAI,CAACA,MAAM;QACrB,CAAA,CAAA;QACA,MAAMy5C,EAAK,GAAA;YACT/tD,CAAG,EAAA,IAAI,CAACA,CAAC;YACTC,CAAG,EAAA,IAAI,CAACA,CAAC;QACX,CAAA,CAAA;QAGA+rD,OAAAA,GAAUr0D,KAAKwY,GAAG,CAAC67C,OAAW,CAAA,GAAA,IAAA,GAAO,IAAIA,OAAO,CAAA;QAEhD,MAAMtjC,OAAAA,OAAUO,wKAAU1qB,EAAAA,OAAAA,CAAQmqB,OAAO,CAAA,CAAA;QAGzC,MAAM+mC,iBAAoB,GAAA,IAAI,CAACz3B,KAAK,CAACx/B,MAAM,IAAI,IAAI,CAACwwD,UAAU,CAACxwD,MAAM,IAAI,IAAI,CAAC6vD,IAAI,CAAC7vD,MAAM,IAAI,IAAI,CAACywD,SAAS,CAACzwD,MAAM,IAAI,IAAI,CAAC8vD,MAAM,CAAC9vD,MAAM,CAAA;QAExI,IAAI+F,OAAAA,CAAQqxB,OAAO,IAAI6/B,iBAAmB,EAAA;YACxCzpD,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACR13B,GAAAA,CAAI0pD,WAAW,GAAG1D,OAAAA,CAAAA;YAGlB,IAAI,CAACvuB,cAAc,CAACswB,EAAAA,EAAI/nD,KAAKmpD,WAAa5wD,EAAAA,OAAAA,CAAAA,CAAAA;gBAE1C0mD,yKAAsBj/C,EAAAA,GAAAA,EAAKzH,QAAQ2mD,aAAa,CAAA,CAAA;YAEhD6I,EAAG9tD,CAAAA,CAAC,IAAIyoB,OAAAA,CAAQxoB,GAAG,CAAA;YAGnB,IAAI,CAAC4+B,SAAS,CAACivB,EAAAA,EAAI/nD,GAAKzH,EAAAA,OAAAA,CAAAA,CAAAA;YAGxB,IAAI,CAACmwD,QAAQ,CAACX,EAAAA,EAAI/nD,GAAKzH,EAAAA,OAAAA,CAAAA,CAAAA;YAGvB,IAAI,CAACywD,UAAU,CAACjB,EAAAA,EAAI/nD,GAAKzH,EAAAA,OAAAA,CAAAA,CAAAA;gBAEzBknD,yKAAqBz/C,EAAAA,GAAAA,EAAKzH,QAAQ2mD,aAAa,CAAA,CAAA;YAE/Cl/C,GAAAA,CAAI43B,OAAO,EAAA,CAAA;SACZ;IACH,CAAA;IAMAuR,iBAAoB,GAAA;QAClB,OAAO,IAAI,CAACv2C,OAAO,IAAI,EAAE,CAAA;IAC3B,CAAA;IAOAw2C,iBAAkBC,CAAAA,cAAc,EAAEkY,aAAa,EAAE;QAC/C,MAAMjY,UAAAA,GAAa,IAAI,CAAC12C,OAAO,CAAA;QAC/B,MAAM4D,MAAAA,GAAS6yC,cAAev1B,CAAAA,GAAG,CAAC,CAAC,EAACvY,YAAY,EAAEN,KAAK,EAAC,GAAK;YAC3D,MAAMa,OAAO,IAAI,CAAC/K,KAAK,CAACwR,cAAc,CAAChH,YAAAA,CAAAA,CAAAA;YAEvC,IAAI,CAACO,IAAM,EAAA;gBACT,MAAM,IAAI6e,KAAM,CAAA,iCAAA,GAAoCpf,YAAc,CAAA,CAAA;aACnE;YAED,OAAO;gBACLA,YAAAA;gBACAwD,OAASjD,EAAAA,IAAAA,CAAKD,IAAI,CAACZ,KAAM,CAAA;gBACzBA,KAAAA;YACF,CAAA,CAAA;QACF,CAAA,CAAA,CAAA;QACA,MAAMqnB,OAAAA,GAAU,KAACinB,yKAAAA,EAAeD,UAAY9yC,EAAAA,MAAAA,CAAAA,CAAAA;QAC5C,MAAMmzD,eAAkB,GAAA,IAAI,CAACC,gBAAgB,CAACpzD,MAAQ+qD,EAAAA,aAAAA,CAAAA,CAAAA;QAEtD,IAAIj/B,WAAWqnC,eAAiB,EAAA;YAC9B,IAAI,CAAC/2D,OAAO,GAAG4D,MAAAA,CAAAA;YACf,IAAI,CAACyvD,cAAc,GAAG1E,aAAAA,CAAAA;YACtB,IAAI,CAACsI,mBAAmB,GAAG,IAAI,CAAA;YAC/B,IAAI,CAACpzD,MAAM,CAAC,IAAI,CAAA,CAAA;SACjB;IACH,CAAA;IASAupD,YAAYjrC,CAAC,EAAE00B,MAAM,EAAEzG,WAAAA,GAAc,IAAI,EAAE;QACzC,IAAIyG,MAAU,IAAA,IAAI,CAACogB,mBAAmB,EAAE;YACtC,OAAO,KAAK,CAAA;SACb;QACD,IAAI,CAACA,mBAAmB,GAAG,KAAK,CAAA;QAEhC,MAAMtxD,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM+wC,UAAa,GAAA,IAAI,CAAC12C,OAAO,IAAI,EAAE,CAAA;QACrC,MAAM4D,SAAS,IAAI,CAACwzC,kBAAkB,CAACj1B,CAAAA,EAAGu0B,YAAYG,MAAQzG,EAAAA,WAAAA,CAAAA,CAAAA;QAK9D,MAAM2mB,eAAkB,GAAA,IAAI,CAACC,gBAAgB,CAACpzD,MAAQue,EAAAA,CAAAA,CAAAA,CAAAA;QAGtD,MAAMuN,OAAUmnB,GAAAA,MAAAA,IAAU,KAACF,yKAAAA,EAAe/yC,QAAQ8yC,UAAeqgB,CAAAA,IAAAA,eAAAA,CAAAA;QAGjE,IAAIrnC,OAAS,EAAA;YACX,IAAI,CAAC1vB,OAAO,GAAG4D,MAAAA,CAAAA;YAEf,IAAI+B,OAAQqxB,CAAAA,OAAO,IAAIrxB,OAAAA,CAAQ+uD,QAAQ,EAAE;gBACvC,IAAI,CAACrB,cAAc,GAAG;oBACpBjsD,CAAAA,EAAG+a,EAAE/a,CAAC;oBACNC,CAAAA,EAAG8a,EAAE9a,CAAC;gBACR,CAAA,CAAA;gBAEA,IAAI,CAACxD,MAAM,CAAC,IAAI,EAAEgzC,MAAAA,CAAAA,CAAAA;aACnB;SACF;QAED,OAAOnnB,OAAAA,CAAAA;IACT,CAAA;IAWA0nB,kBAAAA,CAAmBj1B,CAAC,EAAEu0B,UAAU,EAAEG,MAAM,EAAEzG,WAAW,EAAE;QACrD,MAAMzqC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAE5B,IAAIwc,CAAAA,CAAE7jB,IAAI,KAAK,UAAY,EAAA;YACzB,OAAO,EAAE,CAAA;SACV;QAED,IAAI,CAAC8xC,WAAa,EAAA;YAGhB,OAAOsG,UAAW9qC,CAAAA,MAAM,CAAC/L,CAAAA,IACvB,IAAI,CAAC1B,KAAK,CAAC8K,IAAI,CAACyG,QAAQ,CAAC7P,EAAE8I,YAAY,CAAC,IACxC,IAAI,CAACxK,KAAK,CAACwR,cAAc,CAAC9P,CAAE8I,CAAAA,YAAY,CAAEoC,CAAAA,UAAU,CAACgH,SAAS,CAAClS,CAAAA,CAAEwI,KAAK,CAAMpK,KAAAA,SAAAA,CAAAA,CAAAA;SAE/E;QAGD,MAAM2F,MAAAA,GAAS,IAAI,CAACzF,KAAK,CAACm3C,yBAAyB,CAACnzB,CAAGxc,EAAAA,OAAAA,CAAQ+C,IAAI,EAAE/C,OAASkxC,EAAAA,MAAAA,CAAAA,CAAAA;QAE9E,IAAIlxC,OAAAA,CAAQoB,OAAO,EAAE;YACnBnD,MAAAA,CAAOmD,OAAO,EAAA,CAAA;SACf;QAED,OAAOnD,MAAAA,CAAAA;IACT,CAAA;IASAozD,gBAAiBpzD,CAAAA,MAAM,EAAEue,CAAC,EAAE;QAC1B,MAAM,EAACuxC,MAAAA,EAAQC,MAAAA,EAAQhuD,OAAO,EAAC,GAAG,IAAI,CAAA;QACtC,MAAMikB,QAAAA,GAAW2kC,WAAW,CAAC5oD,OAAQikB,CAAAA,QAAQ,CAAC,CAACxqB,IAAI,CAAC,IAAI,EAAEwE,MAAQue,EAAAA,CAAAA,CAAAA,CAAAA;QAClE,OAAOyH,QAAAA,KAAa,KAAK,IAAA,CAAK8pC,MAAAA,KAAW9pC,QAASxiB,CAAAA,CAAC,IAAIusD,MAAAA,KAAW/pC,QAASviB,CAAAA,CAAC,CAADA,CAAAA;IAC7E,CAAA;AACF,CAAC;AAED,IAAA,iBAAe;IACb0C,EAAI,EAAA,SAAA;IACJ6jD,QAAUuF,EAAAA,OAAAA;IACV5E,WAAAA;IAEA2I,SAAAA,CAAAA,CAAU/4D,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAC/B,IAAIA,OAAS,EAAA;YACXxH,KAAMqxD,CAAAA,OAAO,GAAG,IAAI2D,OAAQ,CAAA;gBAACh1D,KAAAA;gBAAOwH,OAAAA;YAAO,CAAA,CAAA,CAAA;SAC5C;IACH,CAAA;IAEA02B,YAAAA,CAAAA,CAAal+B,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAClC,IAAIxH,KAAAA,CAAMqxD,OAAO,EAAE;YACjBrxD,KAAMqxD,CAAAA,OAAO,CAACthD,UAAU,CAACvI,OAAAA,CAAAA,CAAAA;SAC1B;IACH,CAAA;IAEAmK,KAAAA,CAAAA,CAAM3R,KAAK,EAAE+jD,KAAK,EAAEv8C,OAAO,EAAE;QAC3B,IAAIxH,KAAAA,CAAMqxD,OAAO,EAAE;YACjBrxD,KAAMqxD,CAAAA,OAAO,CAACthD,UAAU,CAACvI,OAAAA,CAAAA,CAAAA;SAC1B;IACH,CAAA;IAEAwxD,SAAAA,CAAAA,CAAUh5D,KAAK,EAAE;QACf,MAAMqxD,OAAAA,GAAUrxD,MAAMqxD,OAAO,CAAA;QAE7B,IAAIA,OAAAA,IAAWA,OAAQoH,CAAAA,WAAW,EAAI,EAAA;YACpC,MAAM1gD,IAAO,GAAA;gBACXs5C,OAAAA;YACF,CAAA,CAAA;YAEA,IAAIrxD,KAAAA,CAAM+/B,aAAa,CAAC,mBAAqB,EAAA;gBAAC,GAAGhoB,IAAI;gBAAEk0B,UAAAA,EAAY,IAAI;YAAA,CAAA,CAAA,KAAO,KAAK,EAAE;gBACnF,OAAA;aACD;YAEDolB,OAAQ1vD,CAAAA,IAAI,CAAC3B,KAAAA,CAAMiP,GAAG,CAAA,CAAA;YAEtBjP,KAAM+/B,CAAAA,aAAa,CAAC,kBAAoBhoB,EAAAA,IAAAA,CAAAA,CAAAA;SACzC;IACH,CAAA;IAEA23C,UAAW1vD,CAAAA,CAAAA,KAAK,EAAE+X,IAAI,EAAE;QACtB,IAAI/X,KAAAA,CAAMqxD,OAAO,EAAE;YAEjB,MAAM9kC,gBAAAA,GAAmBxU,KAAK2gC,MAAM,CAAA;YACpC,IAAI14C,KAAAA,CAAMqxD,OAAO,CAACpC,WAAW,CAACl3C,IAAKvV,CAAAA,KAAK,EAAE+pB,gBAAAA,EAAkBxU,IAAKk6B,CAAAA,WAAW,CAAG,EAAA;gBAE7El6B,IAAKwZ,CAAAA,OAAO,GAAG,IAAI,CAAA;aACpB;SACF;IACH,CAAA;IAEA1qB,QAAU,EAAA;QACRgyB,OAAAA,EAAS,IAAI;QACb09B,QAAAA,EAAU,IAAI;QACd9qC,QAAU,EAAA,SAAA;QACVtI,eAAiB,EAAA,iBAAA;QACjB8zC,UAAY,EAAA,MAAA;QACZtI,SAAW,EAAA;YACTnoC,MAAQ,EAAA,MAAA;QACV,CAAA;QACA2rC,YAAc,EAAA,CAAA;QACdC,iBAAmB,EAAA,CAAA;QACnBt2B,UAAY,EAAA,MAAA;QACZ44B,SAAW,EAAA,MAAA;QACXnC,WAAa,EAAA,CAAA;QACbf,QAAAA,EAAU,CAAA,CACV;QACAoG,SAAW,EAAA,MAAA;QACXO,WAAa,EAAA,MAAA;QACb1F,aAAe,EAAA,CAAA;QACfD,eAAiB,EAAA,CAAA;QACjBf,UAAY,EAAA;YACVjrC,MAAQ,EAAA,MAAA;QACV,CAAA;QACA0xC,WAAa,EAAA,MAAA;QACbvmC,OAAS,EAAA,CAAA;QACTshC,YAAc,EAAA,CAAA;QACdD,SAAW,EAAA,CAAA;QACXW,YAAc,EAAA,CAAA;QACd3I,SAAAA,EAAW,CAAC/7C,GAAKtG,EAAAA,IAAAA,GAASA,IAAK6oD,CAAAA,QAAQ,CAACrpD,IAAI;QAC5C8iD,QAAAA,EAAU,CAACh8C,GAAKtG,EAAAA,IAAAA,GAASA,IAAK6oD,CAAAA,QAAQ,CAACrpD,IAAI;QAC3CovD,kBAAoB,EAAA,MAAA;QACpBjF,aAAAA,EAAe,IAAI;QACnBtiC,UAAY,EAAA,CAAA;QACZlM,WAAa,EAAA,eAAA;QACbF,WAAa,EAAA,CAAA;QACb9c,SAAW,EAAA;YACTvG,QAAU,EAAA,GAAA;YACVsE,MAAQ,EAAA,cAAA;QACV,CAAA;QACA6C,UAAY,EAAA;YACV4U,OAAS,EAAA;gBACPnc,IAAM,EAAA,QAAA;gBACNiH,UAAY,EAAA;oBAAC,GAAA;oBAAK,GAAA;oBAAK,OAAA;oBAAS,QAAA;oBAAU,QAAA;oBAAU,QAAA;iBAAS;YAC/D,CAAA;YACA6tD,OAAS,EAAA;gBACPpwD,MAAQ,EAAA,QAAA;gBACRtE,QAAU,EAAA,GAAA;YACZ,CAAA;QACF,CAAA;QACAH,SAAW6zD,EAAAA,gBAAAA;IACb,CAAA;IAEAj8B,aAAe,EAAA;QACbw5B,QAAU,EAAA,MAAA;QACVC,UAAY,EAAA,MAAA;QACZ9C,SAAW,EAAA,MAAA;IACb,CAAA;IAEAxsC,WAAa,EAAA;QACXC,WAAAA,EAAa,CAAC3D,IAASA,GAAAA,IAAAA,KAAS,QAAYA,IAAAA,IAAAA,KAAS,cAAcA,IAAS,KAAA,UAAA;QAC5E4D,UAAAA,EAAY,KAAK;QACjBjiB,SAAW,EAAA;YACTgiB,WAAAA,EAAa,KAAK;YAClBC,UAAAA,EAAY,KAAK;QACnB,CAAA;QACAvb,SAAW,EAAA;YACTmyD,SAAAA,EAAW,KAAK;QAClB,CAAA;QACAvxD,UAAY,EAAA;YACVuxD,SAAW,EAAA,WAAA;QACb,CAAA;IACF,CAAA;IAGAtpB,sBAAwB,EAAA;QAAC,aAAA;KAAc;AACzC,CAAE;;;;;;;;;;;ACl0CF,MAAMupB,WAAc,GAAA,CAAC5lD,MAAQpF,EAAAA,GAAAA,EAAKhE,OAAOivD,WAAgB,GAAA;IACvD,IAAI,OAAOjrD,QAAQ,QAAU,EAAA;QAC3BhE,KAAQoJ,GAAAA,MAAAA,CAAO5Q,IAAI,CAACwL,GAAO,CAAA,GAAA,CAAA,CAAA;QAC3BirD,WAAAA,CAAYxQ,OAAO,CAAC;YAACz+C,KAAAA;YAAOwK,KAAOxG,EAAAA,GAAAA;QAAG,CAAA,CAAA,CAAA;KACjC,MAAA,IAAI8P,MAAM9P,GAAM,CAAA,EAAA;QACrBhE,KAAAA,GAAQ,IAAI,CAAA;KACb;IACD,OAAOA,KAAAA,CAAAA;AACT,CAAA,CAAA;AAEA,SAASkvD,cAAAA,CAAe9lD,MAAM,EAAEpF,GAAG,EAAEhE,KAAK,EAAEivD,WAAW,EAAE;IACvD,MAAMngC,KAAAA,GAAQ1lB,MAAO2K,CAAAA,OAAO,CAAC/P,GAAAA,CAAAA,CAAAA;IAC7B,IAAI8qB,KAAAA,KAAU,CAAC,CAAG,EAAA;QAChB,OAAOkgC,WAAAA,CAAY5lD,MAAQpF,EAAAA,GAAAA,EAAKhE,KAAOivD,EAAAA,WAAAA,CAAAA,CAAAA;KACxC;IACD,MAAMz7C,IAAAA,GAAOpK,MAAO+lD,CAAAA,WAAW,CAACnrD,GAAAA,CAAAA,CAAAA;IAChC,OAAO8qB,KAAAA,KAAUtb,IAAOxT,GAAAA,KAAAA,GAAQ8uB,KAAK,CAAA;AACvC,CAAA;AAEA,MAAM6B,UAAa,GAAA,CAAC3wB,KAAOlH,EAAAA,GAAAA,GAAQkH,UAAU,IAAI,GAAG,IAAI,OAAG82B,wKAAAA,EAAYpgC,IAAKy4B,CAAAA,KAAK,CAACnvB,KAAAA,CAAAA,EAAQ,GAAGlH,GAAI,CAAA,CAAA;AAEjG,SAASs2D,iBAAAA,CAAkBpxD,KAAK,EAAE;IAChC,MAAMoL,MAAAA,GAAS,IAAI,CAACC,SAAS,EAAA,CAAA;IAE7B,IAAIrL,KAAS,IAAA,CAAA,IAAKA,KAAQoL,GAAAA,MAAAA,CAAO7R,MAAM,EAAE;QACvC,OAAO6R,MAAM,CAACpL,KAAM,CAAA,CAAA;KACrB;IACD,OAAOA,KAAAA,CAAAA;AACT,CAAA;AAEe,MAAMqxD,aAAsBl9B,SAAAA,KAAAA,CAAAA;IAEzC,OAAOzwB,KAAK,UAAW,CAAA;IAKvB,OAAO/E,QAAW,GAAA;QAChByS,KAAO,EAAA;YACL4mB,QAAUo5B,EAAAA,iBAAAA;QACZ,CAAA;KACA,CAAA;IAEF95D,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,CAACA,GAAAA,CAAAA,CAAAA;QAGN,IAAI,CAACm1D,WAAW,GAAG15D,SAAAA,CAAAA;QACnB,IAAI,CAAC25D,WAAW,GAAG,CAAA,CAAA;QACnB,IAAI,CAACC,YAAY,GAAG,EAAE,CAAA;IACxB,CAAA;IAEAzvC,IAAAA,CAAKwjB,YAAY,EAAE;QACjB,MAAMksB,KAAAA,GAAQ,IAAI,CAACD,YAAY,CAAA;QAC/B,IAAIC,KAAAA,CAAMl4D,MAAM,EAAE;YAChB,MAAM6R,MAAAA,GAAS,IAAI,CAACC,SAAS,EAAA,CAAA;YAC7B,KAAK,MAAM,EAACrJ,KAAAA,EAAOwK,KAAK,EAAC,IAAIilD,KAAO,CAAA;gBAClC,IAAIrmD,MAAM,CAACpJ,KAAM,CAAA,KAAKwK,KAAO,EAAA;oBAC3BpB,MAAOuE,CAAAA,MAAM,CAAC3N,KAAO,EAAA,CAAA,CAAA,CAAA;iBACtB;YACH,CAAA;YACA,IAAI,CAACwvD,YAAY,GAAG,EAAE,CAAA;SACvB;QACD,KAAK,CAACzvC,IAAI,CAACwjB,YAAAA,CAAAA,CAAAA;IACb,CAAA;IAEA56B,KAAM3E,CAAAA,GAAG,EAAEhE,KAAK,EAAE;QAChB,QAAI4P,wKAAAA,EAAc5L,GAAM,CAAA,EAAA;YACtB,OAAO,IAAI,CAAA;SACZ;QACD,MAAMoF,MAAAA,GAAS,IAAI,CAACC,SAAS,EAAA,CAAA;QAC7BrJ,KAAAA,GAAQS,SAAST,KAAUoJ,CAAAA,IAAAA,MAAM,CAACpJ,KAAAA,CAAM,KAAKgE,GAAMhE,GAAAA,KAAAA,GAC/CkvD,cAAe9lD,CAAAA,MAAAA,EAAQpF,SAAKyC,wKAAezG,EAAAA,KAAAA,EAAOgE,MAAM,IAAI,CAACwrD,YAAY,CAAC,CAAA;QAC9E,OAAO7+B,UAAW3wB,CAAAA,KAAAA,EAAOoJ,MAAO7R,CAAAA,MAAM,GAAG,CAAA,CAAA,CAAA;IAC3C,CAAA;IAEAi9B,mBAAsB,GAAA;QACpB,MAAM,EAAC5yB,UAAAA,EAAYC,UAAAA,EAAW,GAAG,IAAI,CAACF,aAAa,EAAA,CAAA;QACnD,IAAI,EAAChL,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAACkR,SAAS,CAAC,IAAI,CAAA,CAAA;QAEpC,IAAI,IAAI,CAAC1M,OAAO,CAAC46C,MAAM,KAAK,OAAS,EAAA;YACnC,IAAI,CAACt2C,UAAY,EAAA;gBACfjL,GAAM,GAAA,CAAA,CAAA;aACP;YACD,IAAI,CAACkL,UAAY,EAAA;gBACf/I,GAAAA,GAAM,IAAI,CAACuQ,SAAS,EAAA,CAAG9R,MAAM,GAAG,CAAA,CAAA;aACjC;SACF;QAED,IAAI,CAACZ,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;IACb,CAAA;IAEA87B,UAAa,GAAA;QACX,MAAMj+B,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMyZ,MAAS,GAAA,IAAI,CAACjV,OAAO,CAACiV,MAAM,CAAA;QAClC,MAAMnD,QAAQ,EAAE,CAAA;QAChB,IAAIhG,MAAAA,GAAS,IAAI,CAACC,SAAS,EAAA,CAAA;QAG3BD,MAAAA,GAAS,GAACzS,KAAQ,CAAKmC,IAAAA,GAAAA,KAAQsQ,OAAO7R,MAAM,GAAG,CAAK6R,GAAAA,MAAAA,GAASA,MAAO2X,CAAAA,KAAK,CAACpqB,GAAAA,EAAKmC,MAAM,CAAE,CAAA,CAAA;QAEvF,IAAI,CAACy2D,WAAW,GAAG74D,IAAAA,CAAKoC,GAAG,CAACsQ,MAAAA,CAAO7R,MAAM,GAAA,CAAIgb,MAAAA,GAAS,CAAI,GAAA,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA;QAC9D,IAAI,CAAC+8C,WAAW,GAAG,IAAI,CAAC34D,GAAG,GAAA,CAAI4b,MAAAA,GAAS,GAAM,GAAA,CAAC,CAAD,CAAA;QAE9C,IAAK,IAAIvU,KAAAA,GAAQrH,GAAKqH,EAAAA,KAAAA,IAASlF,KAAKkF,KAAS,EAAA,CAAA;YAC3CoR,KAAAA,CAAM5W,IAAI,CAAC;gBAACwF,KAAAA;YAAK,CAAA,CAAA,CAAA;QACnB,CAAA;QACA,OAAOoR,KAAAA,CAAAA;IACT,CAAA;IAEA3E,gBAAAA,CAAiBzM,KAAK,EAAE;QACtB,OAAOoxD,iBAAkBr4D,CAAAA,IAAI,CAAC,IAAI,EAAEiH,KAAAA,CAAAA,CAAAA;IACtC,CAAA;IAKA1B,SAAY,GAAA;QACV,KAAK,CAACA,SAAS,EAAA,CAAA;QAEf,IAAI,CAAC,IAAI,CAAC2U,YAAY,EAAI,EAAA;YAExB,IAAI,CAACyP,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc,CAAA;SAC3C;IACH,CAAA;IAGAvR,gBAAAA,CAAiBnR,KAAK,EAAE;QACtB,IAAI,OAAOA,UAAU,QAAU,EAAA;YAC7BA,KAAQ,GAAA,IAAI,CAAC2K,KAAK,CAAC3K,KAAAA,CAAAA,CAAAA;SACpB;QAED,OAAOA,UAAU,IAAI,GAAG+L,MAAM,IAAI,CAACgL,kBAAkB,CAAE/W,CAAAA,KAAQ,GAAA,IAAI,CAACsxD,WAAU,IAAK,IAAI,CAACC,WAAW,CAAC,CAAA;IACtG,CAAA;IAIAlgD,eAAAA,CAAgBrP,KAAK,EAAE;QACrB,MAAMoP,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,IAAIpP,QAAQ,CAAKA,IAAAA,KAAAA,GAAQoP,KAAM7X,CAAAA,MAAM,GAAG,CAAG,EAAA;YACzC,OAAO,IAAI,CAAA;SACZ;QACD,OAAO,IAAI,CAAC4X,gBAAgB,CAACC,KAAK,CAACpP,KAAAA,CAAM,CAAChC,KAAK,CAAA,CAAA;IACjD,CAAA;IAEAiX,gBAAAA,CAAiB8jB,KAAK,EAAE;QACtB,OAAOriC,IAAKy4B,CAAAA,KAAK,CAAC,IAAI,CAACmgC,WAAW,GAAG,IAAI,CAACn2B,kBAAkB,CAACJ,KAAS,CAAA,GAAA,IAAI,CAACw2B,WAAW,CAAA,CAAA;IACxF,CAAA;IAEA18C,YAAe,GAAA;QACb,OAAO,IAAI,CAAC1T,MAAM,CAAA;IACpB,CAAA;AACF;ACrIA,SAASuwD,eAAAA,CAAcC,iBAAiB,EAAEC,SAAS,EAAE;IACnD,MAAMxgD,QAAQ,EAAE,CAAA;IAKhB,MAAMygD,WAAc,GAAA,KAAA,CAAA;IACpB,MAAM,EAAC3X,MAAM,EAAEzd,IAAAA,EAAM9jC,GAAAA,EAAKmC,GAAG,EAAEg3D,SAAAA,EAAWlnD,KAAAA,EAAOmnD,QAAQ,EAAEC,SAAAA,EAAWC,aAAAA,EAAc,GAAGN,iBAAAA,CAAAA;IACvF,MAAMO,OAAOz1B,IAAQ,IAAA,CAAA,CAAA;IACrB,MAAM01B,YAAYJ,QAAW,GAAA,CAAA,CAAA;IAC7B,MAAM,EAACp5D,GAAKy5D,EAAAA,IAAAA,EAAMt3D,GAAKu3D,EAAAA,IAAAA,EAAK,GAAGT,SAAAA,CAAAA;IAC/B,MAAMhuD,UAAAA,GAAa,KAACgO,wKAAcjZ,EAAAA,GAAAA,CAAAA,CAAAA;IAClC,MAAMkL,UAAAA,GAAa,KAAC+N,wKAAc9W,EAAAA,GAAAA,CAAAA,CAAAA;IAClC,MAAMw3D,YAAAA,GAAe,KAAC1gD,wKAAchH,EAAAA,KAAAA,CAAAA,CAAAA;IACpC,MAAM2nD,UAAAA,GAAa,CAACF,IAAAA,GAAOD,IAAG,IAAA,CAAMJ,YAAY,CAAA,CAAA,CAAA;IAChD,IAAIh4C,OAAAA,OAAUw4C,yKAAAA,EAAQ,CAACH,OAAOD,IAAG,IAAKD,YAAYD,IAAQA,CAAAA,GAAAA,IAAAA,CAAAA;IAC1D,IAAIz2D,MAAAA,EAAQg3D,SAASC,OAASC,EAAAA,SAAAA,CAAAA;IAI9B,IAAI34C,OAAU63C,GAAAA,WAAAA,IAAe,CAACjuD,UAAAA,IAAc,CAACC,UAAY,EAAA;QACvD,OAAO;YAAC;gBAAC7D,KAAOoyD,EAAAA,IAAAA;YAAI,CAAA;YAAG;gBAACpyD,KAAOqyD,EAAAA,IAAAA;YAAI,CAAA;SAAE,CAAA;KACtC;IAEDM,SAAYj6D,GAAAA,IAAAA,CAAKm5B,IAAI,CAACwgC,IAAAA,GAAOr4C,WAAWthB,IAAKoE,CAAAA,KAAK,CAACs1D,IAAOp4C,GAAAA,OAAAA,CAAAA,CAAAA;IAC1D,IAAI24C,YAAYR,SAAW,EAAA;QAEzBn4C,OAAAA,OAAUw4C,yKAAQG,EAAAA,SAAAA,GAAY34C,OAAUm4C,GAAAA,SAAAA,GAAYD,IAAQA,CAAAA,GAAAA,IAAAA,CAAAA;KAC7D;IAED,IAAI,KAACtgD,wKAAAA,EAAckgD,SAAY,CAAA,EAAA;QAE7Br2D,MAAS/C,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,EAAI2tC,EAAAA,SAAAA,CAAAA,CAAAA;QACtB93C,OAAAA,GAAUthB,IAAKm5B,CAAAA,IAAI,CAAC7X,OAAAA,GAAUve,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;KACzC;IAED,IAAIy+C,WAAW,OAAS,EAAA;QACtBuY,OAAAA,GAAU/5D,IAAKoE,CAAAA,KAAK,CAACs1D,IAAAA,GAAOp4C,OAAWA,CAAAA,GAAAA,OAAAA,CAAAA;QACvC04C,OAAAA,GAAUh6D,IAAKm5B,CAAAA,IAAI,CAACwgC,IAAAA,GAAOr4C,OAAWA,CAAAA,GAAAA,OAAAA,CAAAA;KACjC,MAAA;QACLy4C,OAAUL,GAAAA,IAAAA,CAAAA;QACVM,OAAUL,GAAAA,IAAAA,CAAAA;KACX;IAED,IAAIzuD,UAAAA,IAAcC,UAAc44B,IAAAA,IAAAA,QAAQm2B,yKAAY,EAAC93D,CAAAA,GAAAA,GAAMnC,GAAE,IAAK8jC,IAAMziB,EAAAA,OAAAA,GAAU,IAAO,CAAA,EAAA;QAKvF24C,SAAYj6D,GAAAA,IAAAA,CAAKy4B,KAAK,CAACz4B,IAAKC,CAAAA,GAAG,CAAEmC,CAAAA,GAAAA,GAAMnC,GAAE,IAAKqhB,OAAS+3C,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QACvD/3C,OAAAA,GAAU,CAAClf,GAAMnC,GAAAA,GAAE,IAAKg6D,SAAAA,CAAAA;QACxBF,OAAU95D,GAAAA,GAAAA,CAAAA;QACV+5D,OAAU53D,GAAAA,GAAAA,CAAAA;IACZ,CAAA,MAAO,IAAIw3D,YAAc,EAAA;QAIvBG,OAAU7uD,GAAAA,UAAAA,GAAajL,MAAM85D,OAAO,CAAA;QACpCC,OAAU7uD,GAAAA,UAAAA,GAAa/I,MAAM43D,OAAO,CAAA;QACpCC,SAAAA,GAAY/nD,KAAQ,GAAA,CAAA,CAAA;QACpBoP,OAAAA,GAAU,CAAC04C,OAAUD,GAAAA,OAAM,IAAKE,SAAAA,CAAAA;KAC3B,MAAA;QAELA,SAAAA,GAAY,CAACD,OAAUD,GAAAA,OAAM,IAAKz4C,OAAAA,CAAAA;QAGlC,QAAI64C,yKAAAA,EAAaF,SAAWj6D,EAAAA,IAAAA,CAAKy4B,KAAK,CAACwhC,SAAAA,CAAAA,EAAY34C,UAAU,IAAO,CAAA,EAAA;YAClE24C,SAAYj6D,GAAAA,IAAAA,CAAKy4B,KAAK,CAACwhC,SAAAA,CAAAA,CAAAA;SAClB,MAAA;YACLA,SAAYj6D,GAAAA,IAAAA,CAAKm5B,IAAI,CAAC8gC,SAAAA,CAAAA,CAAAA;SACvB;KACF;IAID,MAAMG,gBAAgBp6D,IAAKoC,CAAAA,GAAG,KAC5Bi4D,yKAAAA,EAAe/4C,cACf+4C,yKAAeN,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA;IAEjBh3D,MAAAA,GAAS/C,KAAKyrB,GAAG,CAAC,QAAIvS,wKAAckgD,EAAAA,SAAAA,CAAAA,GAAagB,gBAAgBhB,SAAS,CAAA,CAAA;IAC1EW,OAAAA,GAAU/5D,IAAKy4B,CAAAA,KAAK,CAACshC,OAAAA,GAAUh3D,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;IACzCi3D,OAAAA,GAAUh6D,IAAKy4B,CAAAA,KAAK,CAACuhC,OAAAA,GAAUj3D,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;IAEzC,IAAIioB,CAAI,GAAA,CAAA,CAAA;IACR,IAAI9f,UAAY,EAAA;QACd,IAAIquD,aAAAA,IAAiBQ,YAAY95D,GAAK,EAAA;YACpCyY,KAAAA,CAAM5W,IAAI,CAAC;gBAACwF,KAAOrH,EAAAA,GAAAA;YAAG,CAAA,CAAA,CAAA;YAEtB,IAAI85D,UAAU95D,GAAK,EAAA;gBACjB+qB,CAAAA,EAAAA,CAAAA;aACD;YAED,QAAImvC,yKAAAA,EAAan6D,IAAKy4B,CAAAA,KAAK,CAAEshC,CAAAA,OAAU/uC,GAAAA,CAAAA,GAAI1J,OAAM,IAAKve,UAAUA,MAAQ9C,EAAAA,GAAAA,EAAKq6D,iBAAkBr6D,CAAAA,GAAAA,EAAK45D,YAAYZ,iBAAqB,CAAA,CAAA,EAAA;gBACnIjuC,CAAAA,EAAAA,CAAAA;aACD;SACI,MAAA,IAAI+uC,UAAU95D,GAAK,EAAA;YACxB+qB,CAAAA,EAAAA,CAAAA;SACD;KACF;IAED,MAAOA,CAAAA,GAAIivC,SAAW,EAAA,EAAEjvC,CAAG,CAAA;QACzB,MAAMuvC,SAAAA,GAAYv6D,IAAKy4B,CAAAA,KAAK,CAAEshC,CAAAA,OAAU/uC,GAAAA,CAAAA,GAAI1J,OAAM,IAAKve,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;QACjE,IAAIoI,UAAAA,IAAcovD,YAAYn4D,GAAK,EAAA;YACjC,MAAM;SACP;QACDsW,KAAAA,CAAM5W,IAAI,CAAC;YAACwF,KAAOizD,EAAAA,SAAAA;QAAS,CAAA,CAAA,CAAA;IAC9B,CAAA;IAEA,IAAIpvD,UAAAA,IAAcouD,aAAiBS,IAAAA,OAAAA,KAAY53D,GAAK,EAAA;QAElD,IAAIsW,MAAM7X,MAAM,QAAIs5D,yKAAazhD,EAAAA,KAAK,CAACA,KAAM7X,CAAAA,MAAM,GAAG,CAAA,CAAE,CAACyG,KAAK,EAAElF,KAAKk4D,iBAAkBl4D,CAAAA,GAAAA,EAAKy3D,YAAYZ,iBAAqB,CAAA,CAAA,EAAA;YAC3HvgD,KAAK,CAACA,KAAM7X,CAAAA,MAAM,GAAG,CAAE,CAAA,CAACyG,KAAK,GAAGlF,GAAAA,CAAAA;SAC3B,MAAA;YACLsW,KAAAA,CAAM5W,IAAI,CAAC;gBAACwF,KAAOlF,EAAAA,GAAAA;YAAG,CAAA,CAAA,CAAA;SACvB;IACH,CAAA,MAAO,IAAI,CAAC+I,UAAc6uD,IAAAA,OAAAA,KAAY53D,GAAK,EAAA;QACzCsW,KAAAA,CAAM5W,IAAI,CAAC;YAACwF,KAAO0yD,EAAAA,OAAAA;QAAO,CAAA,CAAA,CAAA;KAC3B;IAED,OAAOthD,KAAAA,CAAAA;AACT,CAAA;AAEA,SAAS4hD,iBAAAA,CAAkBhzD,KAAK,EAAEuyD,UAAU,EAAE,EAACp/C,UAAU,EAAEglB,WAAW,EAAC,EAAE;IACvE,MAAM+6B,UAAM72C,wKAAU8b,EAAAA,WAAAA,CAAAA,CAAAA;IACtB,MAAMxmB,KAAQ,GAACwB,CAAAA,UAAAA,GAAaza,IAAKsgB,CAAAA,GAAG,CAACk6C,GAAAA,CAAAA,GAAOx6D,IAAKogB,CAAAA,GAAG,CAACo6C,GAAAA,CAAI,KAAK,KAAA,CAAA;IAC9D,MAAM35D,MAAAA,GAAS,OAAOg5D,UAAa,GAAC,CAAA,EAAKvyD,GAAAA,KAAI,EAAGzG,MAAM,CAAA;IACtD,OAAOb,IAAKC,CAAAA,GAAG,CAAC45D,UAAAA,GAAa5gD,KAAOpY,EAAAA,MAAAA,CAAAA,CAAAA;AACtC,CAAA;AAEe,MAAM45D,eAAwBh/B,SAAAA,KAAAA,CAAAA;IAE3C78B,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,CAACA,GAAAA,CAAAA,CAAAA;QAGN,IAAI,CAACvD,KAAK,GAAGhB,SAAAA,CAAAA;QAEb,IAAI,CAAC+I,GAAG,GAAG/I,SAAAA,CAAAA;QAEX,IAAI,CAAC05D,WAAW,GAAG15D,SAAAA,CAAAA;QAEnB,IAAI,CAACw7D,SAAS,GAAGx7D,SAAAA,CAAAA;QACjB,IAAI,CAAC25D,WAAW,GAAG,CAAA,CAAA;IACrB,CAAA;IAEA5mD,KAAM3E,CAAAA,GAAG,EAAEhE,KAAK,EAAE;QAChB,QAAI4P,wKAAAA,EAAc5L,GAAM,CAAA,EAAA;YACtB,OAAO,IAAI,CAAA;SACZ;QACD,IAAK,CAAA,OAAOA,GAAQ,KAAA,QAAA,IAAYA,GAAelC,YAAAA,MAAK,KAAM,CAACrB,QAAS,CAAA,CAACuD,GAAM,CAAA,EAAA;YACzE,OAAO,IAAI,CAAA;SACZ;QAED,OAAO,CAACA,GAAAA,CAAAA;IACV,CAAA;IAEAqtD,sBAAyB,GAAA;QACvB,MAAM,EAAC3+C,WAAW,EAAC,GAAG,IAAI,CAACpV,OAAO,CAAA;QAClC,MAAM,EAACsE,UAAAA,EAAYC,UAAAA,EAAW,GAAG,IAAI,CAACF,aAAa,EAAA,CAAA;QACnD,IAAI,EAAChL,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAAA;QAErB,MAAMw4D,SAASv/C,CAAAA,CAAAA,GAAMpb,GAAMiL,GAAAA,UAAAA,GAAajL,MAAMob,CAAC,CAAA;QAC/C,MAAMw/C,SAASx/C,CAAAA,CAAAA,GAAMjZ,GAAM+I,GAAAA,UAAAA,GAAa/I,MAAMiZ,CAAC,CAAA;QAE/C,IAAIW,WAAa,EAAA;YACf,MAAM8+C,cAAU9wD,wKAAK/J,EAAAA,GAAAA,CAAAA,CAAAA;YACrB,MAAM86D,cAAU/wD,wKAAK5H,EAAAA,GAAAA,CAAAA,CAAAA;YAErB,IAAI04D,OAAAA,GAAU,CAAKC,IAAAA,OAAAA,GAAU,CAAG,EAAA;gBAC9BF,MAAO,CAAA,CAAA,CAAA,CAAA;YACT,CAAA,MAAO,IAAIC,OAAAA,GAAU,CAAKC,IAAAA,OAAAA,GAAU,CAAG,EAAA;gBACrCH,MAAO,CAAA,CAAA,CAAA,CAAA;aACR;SACF;QAED,IAAI36D,QAAQmC,GAAK,EAAA;YACf,IAAIyZ,MAAAA,GAASzZ,QAAQ,CAAI,GAAA,CAAA,GAAIpC,KAAKwY,GAAG,CAACpW,MAAM,IAAK,CAAA,CAAA;YAEjDy4D,MAAAA,CAAOz4D,GAAMyZ,GAAAA,MAAAA,CAAAA,CAAAA;YAEb,IAAI,CAACG,WAAa,EAAA;gBAChB4+C,MAAAA,CAAO36D,GAAM4b,GAAAA,MAAAA,CAAAA,CAAAA;aACd;SACF;QACD,IAAI,CAAC5b,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;IACb,CAAA;IAEA44D,YAAe,GAAA;QACb,MAAMtjC,QAAW,GAAA,IAAI,CAAC9wB,OAAO,CAAC8R,KAAK,CAAA;QAEnC,IAAI,EAACof,aAAAA,EAAemjC,QAAAA,EAAS,GAAGvjC,QAAAA,CAAAA;QAChC,IAAI2hC,QAAAA,CAAAA;QAEJ,IAAI4B,QAAU,EAAA;YACZ5B,QAAAA,GAAWr5D,IAAKm5B,CAAAA,IAAI,CAAC,IAAI,CAAC/2B,GAAG,GAAG64D,QAAYj7D,CAAAA,GAAAA,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACnE,GAAG,GAAGg7D,QAAY,CAAA,GAAA,CAAA,CAAA;YAC9E,IAAI5B,WAAW,IAAM,EAAA;gBACnB7pD,OAAAA,CAAQC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAACzE,EAAE,CAAC,iBAAiB,EAAEiwD,QAAS,CAAA,+BAA+B,EAAE5B,QAAAA,CAAS,yBAAyB,CAAC,CAAA,CAAA;gBAC/HA,QAAW,GAAA,IAAA,CAAA;aACZ;SACI,MAAA;YACLA,QAAW,GAAA,IAAI,CAAC6B,gBAAgB,EAAA,CAAA;YAChCpjC,aAAAA,GAAgBA,aAAiB,IAAA,EAAA,CAAA;SAClC;QAED,IAAIA,aAAe,EAAA;YACjBuhC,QAAWr5D,GAAAA,IAAAA,CAAKC,GAAG,CAAC63B,aAAeuhC,EAAAA,QAAAA,CAAAA,CAAAA;SACpC;QAED,OAAOA,QAAAA,CAAAA;IACT,CAAA;IAKA6B,gBAAmB,GAAA;QACjB,OAAO9vD,OAAOE,iBAAiB,CAAA;IACjC,CAAA;IAEA4yB,UAAa,GAAA;QACX,MAAMn2B,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAM8wB,QAAAA,GAAW3vB,KAAK2Q,KAAK,CAAA;QAM3B,IAAI2gD,QAAAA,GAAW,IAAI,CAAC2B,YAAY,EAAA,CAAA;QAChC3B,QAAWr5D,GAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAGi3D,EAAAA,QAAAA,CAAAA,CAAAA;QAEvB,MAAM8B,uBAA0B,GAAA;YAC9B9B,QAAAA;YACA7X,MAAAA,EAAQz5C,KAAKy5C,MAAM;YACnBvhD,GAAAA,EAAK8H,KAAK9H,GAAG;YACbmC,GAAAA,EAAK2F,KAAK3F,GAAG;YACbg3D,SAAAA,EAAW1hC,SAAS0hC,SAAS;YAC7Br1B,IAAAA,EAAMrM,SAASujC,QAAQ;YACvB/oD,KAAAA,EAAOwlB,SAASxlB,KAAK;YACrBonD,SAAW,EAAA,IAAI,CAAC/xB,UAAU,EAAA;YAC1B9sB,UAAY,EAAA,IAAI,CAACF,YAAY,EAAA;YAC7BklB,WAAa/H,EAAAA,QAAAA,CAAS+H,WAAW,IAAI,CAAA;YACrC85B,aAAe7hC,EAAAA,QAAAA,CAAS6hC,aAAa,KAAK,KAAK;QACjD,CAAA,CAAA;QACA,MAAML,SAAY,GAAA,IAAI,CAACl9B,MAAM,IAAI,IAAI,CAAA;QACrC,MAAMtjB,KAAAA,GAAQsgD,gBAAcmC,uBAAyBjC,EAAAA,SAAAA,CAAAA,CAAAA;QAIrD,IAAInxD,IAAAA,CAAKy5C,MAAM,KAAK,OAAS,EAAA;gBAC3B4Z,yKAAmB1iD,EAAAA,KAAAA,EAAO,IAAI,EAAE,OAAA,CAAA,CAAA;SACjC;QAED,IAAI3Q,IAAAA,CAAKC,OAAO,EAAE;YAChB0Q,KAAAA,CAAM1Q,OAAO,EAAA,CAAA;YAEb,IAAI,CAAC9H,KAAK,GAAG,IAAI,CAACkC,GAAG,CAAA;YACrB,IAAI,CAAC6F,GAAG,GAAG,IAAI,CAAChI,GAAG,CAAA;SACd,MAAA;YACL,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,GAAG,CAAA;YACrB,IAAI,CAACgI,GAAG,GAAG,IAAI,CAAC7F,GAAG,CAAA;SACpB;QAED,OAAOsW,KAAAA,CAAAA;IACT,CAAA;IAKA9S,SAAY,GAAA;QACV,MAAM8S,KAAAA,GAAQ,IAAI,CAACA,KAAK,CAAA;QACxB,IAAIxY,KAAAA,GAAQ,IAAI,CAACD,GAAG,CAAA;QACpB,IAAIgI,GAAAA,GAAM,IAAI,CAAC7F,GAAG,CAAA;QAElB,KAAK,CAACwD,SAAS,EAAA,CAAA;QAEf,IAAI,IAAI,CAACgB,OAAO,CAACiV,MAAM,IAAInD,KAAAA,CAAM7X,MAAM,EAAE;YACvC,MAAMgb,MAAS,GAAC5T,CAAAA,GAAAA,GAAM/H,KAAI,IAAKF,IAAKoC,CAAAA,GAAG,CAACsW,KAAAA,CAAM7X,MAAM,GAAG,GAAG,CAAK,CAAA,GAAA,CAAA,CAAA;YAC/DX,KAAS2b,IAAAA,MAAAA,CAAAA;YACT5T,GAAO4T,IAAAA,MAAAA,CAAAA;SACR;QACD,IAAI,CAAC+8C,WAAW,GAAG14D,KAAAA,CAAAA;QACnB,IAAI,CAACw6D,SAAS,GAAGzyD,GAAAA,CAAAA;QACjB,IAAI,CAAC4wD,WAAW,GAAG5wD,GAAM/H,GAAAA,KAAAA,CAAAA;IAC3B,CAAA;IAEA6T,gBAAAA,CAAiBzM,KAAK,EAAE;QACtB,WAAOge,wKAAAA,EAAahe,KAAO,EAAA,IAAI,CAAClI,KAAK,CAACwH,OAAO,CAAC2e,MAAM,EAAE,IAAI,CAAC3e,OAAO,CAAC8R,KAAK,CAAC6Q,MAAM,CAAA,CAAA;IACjF,CAAA;AACF;ACnTe,MAAM8xC,WAAoBZ,SAAAA,eAAAA,CAAAA;IAEvC,OAAOzvD,KAAK,QAAS,CAAA;IAKrB,OAAO/E,QAAW,GAAA;QAChByS,KAAO,EAAA;YACL4mB,QAAUg8B,EAAAA,yKAAAA,CAAMC,UAAU,CAACC,OAAO;QACpC,CAAA;KACA,CAAA;IAGF19B,mBAAsB,GAAA;QACpB,MAAM,EAAC79B,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAACkR,SAAS,CAAC,IAAI,CAAA,CAAA;QAEtC,IAAI,CAACrT,GAAG,OAAG8J,wKAAS9J,EAAAA,GAAAA,CAAAA,GAAOA,MAAM,CAAC,CAAA;QAClC,IAAI,CAACmC,GAAG,OAAG2H,wKAAS3H,EAAAA,GAAAA,CAAAA,GAAOA,MAAM,CAAC,CAAA;QAGlC,IAAI,CAACu4D,sBAAsB,EAAA,CAAA;IAC7B,CAAA;IAMAO,gBAAmB,GAAA;QACjB,MAAMzgD,UAAAA,GAAa,IAAI,CAACF,YAAY,EAAA,CAAA;QACpC,MAAM1Z,MAAAA,GAAS4Z,aAAa,IAAI,CAACmC,KAAK,GAAG,IAAI,CAACD,MAAM,CAAA;QACpD,MAAM8iB,WAAAA,OAAc9b,wKAAAA,EAAU,IAAI,CAAC/c,OAAO,CAAC8R,KAAK,CAAC+mB,WAAW,CAAA,CAAA;QAC5D,MAAMxmB,KAAQ,GAACwB,CAAAA,UAAAA,GAAaza,IAAKsgB,CAAAA,GAAG,CAACmf,WAAAA,CAAAA,GAAez/B,IAAKogB,CAAAA,GAAG,CAACqf,WAAAA,CAAY,KAAK,KAAA,CAAA;QAC9E,MAAMoC,QAAW,GAAA,IAAI,CAACG,uBAAuB,CAAC,CAAA,CAAA,CAAA;QAC9C,OAAOhiC,IAAAA,CAAKm5B,IAAI,CAACt4B,MAASb,GAAAA,IAAAA,CAAKC,GAAG,CAAC,EAAA,EAAI4hC,QAAS9G,CAAAA,UAAU,GAAG9hB,KAAAA,CAAAA,CAAAA,CAAAA;IAC/D,CAAA;IAGAR,gBAAAA,CAAiBnR,KAAK,EAAE;QACtB,OAAOA,UAAU,IAAI,GAAG+L,MAAM,IAAI,CAACgL,kBAAkB,CAAE/W,CAAAA,KAAQ,GAAA,IAAI,CAACsxD,WAAU,IAAK,IAAI,CAACC,WAAW,CAAC,CAAA;IACtG,CAAA;IAEAt6C,gBAAAA,CAAiB8jB,KAAK,EAAE;QACtB,OAAO,IAAI,CAACu2B,WAAW,GAAG,IAAI,CAACn2B,kBAAkB,CAACJ,KAAAA,CAAAA,GAAS,IAAI,CAACw2B,WAAW,CAAA;IAC7E,CAAA;AACF;AC3CA,MAAM4C,aAAapgD,CAAAA,CAAAA,GAAKrb,IAAKoE,CAAAA,KAAK,KAACs3D,yKAAMrgD,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACzC,MAAMsgD,cAAAA,GAAiB,CAACtgD,CAAGugD,EAAAA,CAAAA,GAAM57D,KAAKyrB,GAAG,CAAC,EAAIgwC,EAAAA,UAAAA,CAAWpgD,CAAKugD,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAE9D,SAASC,OAAAA,CAAQC,OAAO,EAAE;IACxB,MAAM92D,SAAS82D,OAAW97D,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,IAAIgwC,UAAWK,CAAAA,OAAAA,CAAAA,CAAAA,CAAAA;IAClD,OAAO92D,MAAW,KAAA,CAAA,CAAA;AACpB,CAAA;AAEA,SAAS+2D,MAAM97D,GAAG,EAAEmC,GAAG,EAAE45D,QAAQ,EAAE;IACjC,MAAMC,SAAYj8D,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,EAAIuwC,EAAAA,QAAAA,CAAAA,CAAAA;IAC/B,MAAM97D,KAAQF,GAAAA,IAAAA,CAAKoE,KAAK,CAACnE,GAAMg8D,GAAAA,SAAAA,CAAAA,CAAAA;IAC/B,MAAMh0D,GAAMjI,GAAAA,IAAAA,CAAKm5B,IAAI,CAAC/2B,GAAM65D,GAAAA,SAAAA,CAAAA,CAAAA;IAC5B,OAAOh0D,GAAM/H,GAAAA,KAAAA,CAAAA;AACf,CAAA;AAEA,SAASg8D,QAASj8D,CAAAA,GAAG,EAAEmC,GAAG,EAAE;IAC1B,MAAM+Q,QAAQ/Q,GAAMnC,GAAAA,GAAAA,CAAAA;IACpB,IAAI+7D,WAAWP,UAAWtoD,CAAAA,KAAAA,CAAAA,CAAAA;IAC1B,MAAO4oD,KAAM97D,CAAAA,GAAAA,EAAKmC,GAAK45D,EAAAA,QAAAA,CAAAA,GAAY,EAAI,CAAA;QACrCA,QAAAA,EAAAA,CAAAA;IACF,CAAA;IACA,MAAOD,KAAM97D,CAAAA,GAAAA,EAAKmC,GAAK45D,EAAAA,QAAAA,CAAAA,GAAY,EAAI,CAAA;QACrCA,QAAAA,EAAAA,CAAAA;IACF,CAAA;IACA,OAAOh8D,IAAKC,CAAAA,GAAG,CAAC+7D,QAAAA,EAAUP,UAAWx7D,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AACvC,CAAA;AASA,SAAS+4D,cAAcC,iBAAiB,EAAE,EAACh5D,GAAG,EAAEmC,GAAG,EAAC,EAAE;IACpDnC,GAAM88B,OAAAA,wKAAAA,EAAgBk8B,iBAAkBh5D,CAAAA,GAAG,EAAEA,GAAAA,CAAAA,CAAAA;IAC7C,MAAMyY,QAAQ,EAAE,CAAA;IAChB,MAAMyjD,SAASV,UAAWx7D,CAAAA,GAAAA,CAAAA,CAAAA;IAC1B,IAAIm8D,GAAAA,GAAMF,SAASj8D,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;IACxB,IAAIg3D,SAAAA,GAAYgD,GAAM,GAAA,CAAA,GAAIp8D,IAAKyrB,CAAAA,GAAG,CAAC,EAAA,EAAIzrB,IAAKwY,CAAAA,GAAG,CAAC4jD,GAAAA,CAAAA,CAAAA,GAAQ,CAAC,CAAA;IACzD,MAAMnB,QAAWj7D,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,EAAI2wC,EAAAA,GAAAA,CAAAA,CAAAA;IAC9B,MAAM1hD,IAAAA,GAAOyhD,SAASC,GAAMp8D,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,EAAA,EAAI0wC,UAAU,CAAC,CAAA;IACpD,MAAMj8D,KAAAA,GAAQF,KAAKy4B,KAAK,CAAC,CAACx4B,GAAAA,GAAMya,IAAG,IAAK0+C,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA;IACrD,MAAMv9C,MAAAA,GAAS7b,IAAKoE,CAAAA,KAAK,CAAEnE,CAAAA,GAAAA,GAAMya,IAAG,IAAKugD,QAAW,GAAA,EAAA,CAAA,GAAMA,QAAW,GAAA,EAAA,CAAA;IACrE,IAAIoB,WAAcr8D,GAAAA,IAAAA,CAAKoE,KAAK,CAAC,CAAClE,KAAQ2b,GAAAA,MAAK,IAAK7b,IAAAA,CAAKyrB,GAAG,CAAC,EAAI2wC,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;IAC7D,IAAI90D,YAAQy1B,wKAAgBk8B,EAAAA,iBAAAA,CAAkBh5D,GAAG,EAAED,IAAAA,CAAKy4B,KAAK,CAAE/d,CAAAA,IAAOmB,GAAAA,MAAAA,GAASwgD,cAAcr8D,IAAKyrB,CAAAA,GAAG,CAAC,EAAI2wC,EAAAA,GAAAA,CAAG,IAAKhD,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA,CAAAA;IAC/H,MAAO9xD,QAAQlF,GAAK,CAAA;QAClBsW,KAAAA,CAAM5W,IAAI,CAAC;YAACwF,KAAAA;YAAO0wB,KAAAA,EAAO6jC,OAAQv0D,CAAAA,KAAAA,CAAAA;YAAQ+0D,WAAAA;QAAW,CAAA,CAAA,CAAA;QACrD,IAAIA,eAAe,EAAI,EAAA;YACrBA,WAAcA,GAAAA,WAAAA,GAAc,EAAK,GAAA,EAAA,GAAK,EAAE,CAAA;SACnC,MAAA;YACLA,WAAAA,EAAAA,CAAAA;SACD;QACD,IAAIA,eAAe,EAAI,EAAA;YACrBD,GAAAA,EAAAA,CAAAA;YACAC,WAAc,GAAA,CAAA,CAAA;YACdjD,SAAYgD,GAAAA,GAAAA,IAAO,CAAI,GAAA,CAAA,GAAIhD,SAAS,CAAA;SACrC;QACD9xD,KAAAA,GAAQtH,IAAKy4B,CAAAA,KAAK,CAAE/d,CAAAA,IAAOmB,GAAAA,MAAAA,GAASwgD,WAAcr8D,GAAAA,IAAAA,CAAKyrB,GAAG,CAAC,EAAI2wC,EAAAA,GAAAA,CAAG,IAAKhD,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA;IACtF,CAAA;IACA,MAAMkD,QAAWv/B,OAAAA,wKAAAA,EAAgBk8B,iBAAkB72D,CAAAA,GAAG,EAAEkF,KAAAA,CAAAA,CAAAA;IACxDoR,KAAAA,CAAM5W,IAAI,CAAC;QAACwF,KAAOg1D,EAAAA,QAAAA;QAAUtkC,KAAAA,EAAO6jC,OAAQS,CAAAA,QAAAA,CAAAA;QAAWD,WAAAA;IAAW,CAAA,CAAA,CAAA;IAElE,OAAO3jD,KAAAA,CAAAA;AACT,CAAA;AAEe,MAAM6jD,gBAAyB9gC,SAAAA,KAAAA,CAAAA;IAE5C,OAAOzwB,KAAK,aAAc,CAAA;IAK1B,OAAO/E,QAAW,GAAA;QAChByS,KAAO,EAAA;YACL4mB,QAAUg8B,EAAAA,yKAAAA,CAAMC,UAAU,CAACiB,WAAW;YACtCxkC,KAAO,EAAA;gBACLC,OAAAA,EAAS,IAAI;YACf,CAAA;QACF,CAAA;KACA,CAAA;IAGFr5B,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,CAACA,GAAAA,CAAAA,CAAAA;QAGN,IAAI,CAACvD,KAAK,GAAGhB,SAAAA,CAAAA;QAEb,IAAI,CAAC+I,GAAG,GAAG/I,SAAAA,CAAAA;QAEX,IAAI,CAAC05D,WAAW,GAAG15D,SAAAA,CAAAA;QACnB,IAAI,CAAC25D,WAAW,GAAG,CAAA,CAAA;IACrB,CAAA;IAEA5mD,KAAM3E,CAAAA,GAAG,EAAEhE,KAAK,EAAE;QAChB,MAAMhC,KAAAA,GAAQmzD,gBAAgBrxC,SAAS,CAACnX,KAAK,CAACi+C,KAAK,CAAC,IAAI,EAAE;YAAC5iD,GAAAA;YAAKhE,KAAAA;SAAM,CAAA,CAAA;QACtE,IAAIhC,UAAU,CAAG,EAAA;YACf,IAAI,CAACm1D,KAAK,GAAG,IAAI,CAAA;YACjB,OAAOv9D,SAAAA,CAAAA;SACR;QACD,WAAO6K,wKAASzC,EAAAA,KAAAA,CAAAA,IAAUA,KAAQ,GAAA,CAAA,GAAIA,QAAQ,IAAI,CAAA;IACpD,CAAA;IAEAw2B,mBAAsB,GAAA;QACpB,MAAM,EAAC79B,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAACkR,SAAS,CAAC,IAAI,CAAA,CAAA;QAEtC,IAAI,CAACrT,GAAG,OAAG8J,wKAAS9J,EAAAA,GAAAA,CAAAA,GAAOD,KAAKoC,GAAG,CAAC,CAAGnC,EAAAA,GAAAA,CAAAA,GAAO,IAAI,CAAA;QAClD,IAAI,CAACmC,GAAG,OAAG2H,wKAAS3H,EAAAA,GAAAA,CAAAA,GAAOpC,KAAKoC,GAAG,CAAC,CAAGA,EAAAA,GAAAA,CAAAA,GAAO,IAAI,CAAA;QAElD,IAAI,IAAI,CAACwE,OAAO,CAACoV,WAAW,EAAE;YAC5B,IAAI,CAACygD,KAAK,GAAG,IAAI,CAAA;SAClB;QAID,IAAI,IAAI,CAACA,KAAK,IAAI,IAAI,CAACx8D,GAAG,KAAK,IAAI,CAACu8B,aAAa,IAAI,KAACzyB,wKAAAA,EAAS,IAAI,CAACuyB,QAAQ,CAAG,EAAA;YAC7E,IAAI,CAACr8B,GAAG,GAAGA,GAAAA,KAAQ07D,eAAe,IAAI,CAAC17D,GAAG,EAAE,CAAK07D,CAAAA,GAAAA,cAAAA,CAAe,IAAI,CAAC17D,GAAG,EAAE,CAAC,CAAA,CAAA,GAAK07D,eAAe,IAAI,CAAC17D,GAAG,EAAE,CAAE,CAAA,CAAA;SAC5G;QAED,IAAI,CAAC06D,sBAAsB,EAAA,CAAA;IAC7B,CAAA;IAEAA,sBAAyB,GAAA;QACvB,MAAM,EAACzvD,UAAAA,EAAYC,UAAAA,EAAW,GAAG,IAAI,CAACF,aAAa,EAAA,CAAA;QACnD,IAAIhL,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QAClB,IAAImC,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QAElB,MAAMw4D,SAASv/C,CAAAA,CAAAA,GAAMpb,GAAMiL,GAAAA,UAAAA,GAAajL,MAAMob,CAAC,CAAA;QAC/C,MAAMw/C,SAASx/C,CAAAA,CAAAA,GAAMjZ,GAAM+I,GAAAA,UAAAA,GAAa/I,MAAMiZ,CAAC,CAAA;QAE/C,IAAIpb,QAAQmC,GAAK,EAAA;YACf,IAAInC,OAAO,CAAG,EAAA;gBACZ26D,MAAO,CAAA,CAAA,CAAA,CAAA;gBACPC,MAAO,CAAA,EAAA,CAAA,CAAA;aACF,MAAA;gBACLD,MAAOe,CAAAA,cAAAA,CAAe17D,KAAK,CAAC,CAAA,CAAA,CAAA,CAAA;gBAC5B46D,MAAOc,CAAAA,cAAAA,CAAev5D,KAAK,CAAC,CAAA,CAAA,CAAA,CAAA;aAC7B;SACF;QACD,IAAInC,OAAO,CAAG,EAAA;YACZ26D,MAAOe,CAAAA,cAAAA,CAAev5D,KAAK,CAAC,CAAA,CAAA,CAAA,CAAA;SAC7B;QACD,IAAIA,OAAO,CAAG,EAAA;YAEZy4D,MAAOc,CAAAA,cAAAA,CAAe17D,KAAK,CAAC,CAAA,CAAA,CAAA,CAAA;SAC7B;QAED,IAAI,CAACA,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;IACb,CAAA;IAEA87B,UAAa,GAAA;QACX,MAAMn2B,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QAEzB,MAAMqyD,iBAAoB,GAAA;YACxBh5D,GAAK,EAAA,IAAI,CAACq8B,QAAQ;YAClBl6B,GAAK,EAAA,IAAI,CAACi6B,QAAQ;QACpB,CAAA,CAAA;QACA,MAAM3jB,KAAAA,GAAQsgD,aAAcC,CAAAA,iBAAAA,EAAmB,IAAI,CAAA,CAAA;QAInD,IAAIlxD,IAAAA,CAAKy5C,MAAM,KAAK,OAAS,EAAA;gBAC3B4Z,yKAAmB1iD,EAAAA,KAAAA,EAAO,IAAI,EAAE,OAAA,CAAA,CAAA;SACjC;QAED,IAAI3Q,IAAAA,CAAKC,OAAO,EAAE;YAChB0Q,KAAAA,CAAM1Q,OAAO,EAAA,CAAA;YAEb,IAAI,CAAC9H,KAAK,GAAG,IAAI,CAACkC,GAAG,CAAA;YACrB,IAAI,CAAC6F,GAAG,GAAG,IAAI,CAAChI,GAAG,CAAA;SACd,MAAA;YACL,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,GAAG,CAAA;YACrB,IAAI,CAACgI,GAAG,GAAG,IAAI,CAAC7F,GAAG,CAAA;SACpB;QAED,OAAOsW,KAAAA,CAAAA;IACT,CAAA;IAMA3E,gBAAAA,CAAiBzM,KAAK,EAAE;QACtB,OAAOA,KAAAA,KAAUpI,YACb,GACAomB,OAAAA,wKAAAA,EAAahe,OAAO,IAAI,CAAClI,KAAK,CAACwH,OAAO,CAAC2e,MAAM,EAAE,IAAI,CAAC3e,OAAO,CAAC8R,KAAK,CAAC6Q,MAAM,CAAC,CAAA;IAC/E,CAAA;IAKA3jB,SAAY,GAAA;QACV,MAAM1F,KAAAA,GAAQ,IAAI,CAACD,GAAG,CAAA;QAEtB,KAAK,CAAC2F,SAAS,EAAA,CAAA;QAEf,IAAI,CAACgzD,WAAW,OAAG8C,yKAAMx7D,EAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAI,CAAC24D,WAAW,OAAG6C,yKAAAA,EAAM,IAAI,CAACt5D,GAAG,QAAIs5D,yKAAMx7D,EAAAA,KAAAA,CAAAA,CAAAA;IAC7C,CAAA;IAEAuY,gBAAAA,CAAiBnR,KAAK,EAAE;QACtB,IAAIA,KAAAA,KAAUpI,SAAaoI,IAAAA,KAAAA,KAAU,CAAG,EAAA;YACtCA,KAAQ,GAAA,IAAI,CAACrH,GAAG,CAAA;SACjB;QACD,IAAIqH,KAAU,KAAA,IAAI,IAAI8V,KAAAA,CAAM9V,KAAQ,CAAA,EAAA;YAClC,OAAO+L,GAAAA,CAAAA;SACR;QACD,OAAO,IAAI,CAACgL,kBAAkB,CAAC/W,UAAU,IAAI,CAACrH,GAAG,GAC7C,CAAA,GACA,KAACy7D,yKAAAA,EAAMp0D,SAAS,IAAI,CAACsxD,WAAW,IAAI,IAAI,CAACC,WAAW,CAAA,CAAA;IAC1D,CAAA;IAEAt6C,gBAAAA,CAAiB8jB,KAAK,EAAE;QACtB,MAAMC,OAAU,GAAA,IAAI,CAACG,kBAAkB,CAACJ,KAAAA,CAAAA,CAAAA;QACxC,OAAOriC,IAAAA,CAAKyrB,GAAG,CAAC,EAAI,EAAA,IAAI,CAACmtC,WAAW,GAAGt2B,OAAAA,GAAU,IAAI,CAACu2B,WAAW,CAAA,CAAA;IACnE,CAAA;AACF;ACzNA,SAAS6D,qBAAAA,CAAsB30D,IAAI,EAAE;IACnC,MAAM2vB,QAAAA,GAAW3vB,KAAK2Q,KAAK,CAAA;IAE3B,IAAIgf,QAASrQ,CAAAA,OAAO,IAAItf,IAAAA,CAAKsf,OAAO,EAAE;QACpC,MAAM0J,OAAAA,OAAUO,wKAAUoG,EAAAA,QAAAA,CAASgO,eAAe,CAAA,CAAA;QAClD,WAAO31B,wKAAe2nB,EAAAA,QAAAA,CAASkD,IAAI,IAAIlD,SAASkD,IAAI,CAACrzB,IAAI,EAAEtB,wKAAAA,CAAS20B,IAAI,CAACrzB,IAAI,CAAA,GAAIwpB,QAAQpU,MAAM,CAAA;KAChG;IACD,OAAO,CAAA,CAAA;AACT,CAAA;AAEA,SAASggD,iBAAiBtuD,GAAG,EAAEusB,IAAI,EAAE9mB,KAAK,EAAE;IAC1CA,KAAQvN,OAAAA,wKAAAA,EAAQuN,SAASA,KAAQ,GAAA;QAACA,KAAAA;KAAM,CAAA;IACxC,OAAO;QACL8b,CAAAA,MAAGgtC,yKAAavuD,EAAAA,GAAAA,EAAKusB,IAAKqH,CAAAA,MAAM,EAAEnuB,KAAAA,CAAAA;QAClCgc,CAAAA,EAAGhc,KAAMjT,CAAAA,MAAM,GAAG+5B,IAAAA,CAAKG,UAAU;IACnC,CAAA,CAAA;AACF,CAAA;AAEA,SAAS8hC,eAAAA,CAAgBn8C,KAAK,EAAE0M,GAAG,EAAE7lB,IAAI,EAAEtH,GAAG,EAAEmC,GAAG,EAAE;IACnD,IAAIse,KAAAA,KAAUzgB,GAAOygB,IAAAA,KAAAA,KAAUte,GAAK,EAAA;QAClC,OAAO;YACLlC,KAAAA,EAAOktB,MAAO7lB,IAAO,GAAA,CAAA;YACrBU,GAAAA,EAAKmlB,MAAO7lB,IAAO,GAAA,CAAA;QACrB,CAAA,CAAA;IACF,CAAA,MAAO,IAAImZ,KAAAA,GAAQzgB,GAAOygB,IAAAA,KAAAA,GAAQte,GAAK,EAAA;QACrC,OAAO;YACLlC,KAAAA,EAAOktB,GAAM7lB,GAAAA,IAAAA;YACbU,GAAKmlB,EAAAA,GAAAA;QACP,CAAA,CAAA;KACD;IAED,OAAO;QACLltB,KAAOktB,EAAAA,GAAAA;QACPnlB,GAAAA,EAAKmlB,GAAM7lB,GAAAA,IAAAA;IACb,CAAA,CAAA;AACF,CAAA;AAKA,SAASu1D,kBAAmBj1D,CAAAA,KAAK,EAAE;IA8BjC,MAAMqT,IAAO,GAAA;QACXnS,CAAAA,EAAGlB,MAAMa,IAAI,GAAGb,KAAMonD,CAAAA,QAAQ,CAACvmD,IAAI;QACnCG,CAAAA,EAAGhB,MAAMW,KAAK,GAAGX,KAAMonD,CAAAA,QAAQ,CAACzmD,KAAK;QACrCI,CAAAA,EAAGf,MAAMU,GAAG,GAAGV,KAAMonD,CAAAA,QAAQ,CAAC1mD,GAAG;QACjCO,CAAAA,EAAGjB,MAAMY,MAAM,GAAGZ,KAAMonD,CAAAA,QAAQ,CAACxmD,MAAM;IACzC,CAAA,CAAA;IACA,MAAMs0D,MAASh3D,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,CAAA,CAAI0T,EAAAA,IAAAA,CAAAA,CAAAA;IACjC,MAAM4kB,aAAa,EAAE,CAAA;IACrB,MAAM/O,UAAU,EAAE,CAAA;IAClB,MAAMisC,UAAan1D,GAAAA,KAAAA,CAAMo1D,YAAY,CAACp8D,MAAM,CAAA;IAC5C,MAAMq8D,cAAiBr1D,GAAAA,KAAAA,CAAMjB,OAAO,CAAC2gB,WAAW,CAAA;IAChD,MAAM41C,kBAAkBD,cAAeE,CAAAA,iBAAiB,GAAGn8C,wKAAAA,GAAK+7C,aAAa,CAAC,CAAA;IAE9E,IAAK,IAAIl8D,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIk8D,YAAYl8D,CAAK,EAAA,CAAA;QACnC,MAAMiH,OAAOm1D,cAAetgC,CAAAA,UAAU,CAAC/0B,KAAAA,CAAMw1D,oBAAoB,CAACv8D,CAAAA,CAAAA,CAAAA,CAAAA;QAClEiwB,OAAO,CAACjwB,CAAAA,CAAE,GAAGiH,IAAAA,CAAKgpB,OAAO,CAAA;QACzB,MAAMtI,aAAAA,GAAgB5gB,KAAMy1D,CAAAA,gBAAgB,CAACx8D,CAAAA,EAAG+G,KAAM01D,CAAAA,WAAW,GAAGxsC,OAAO,CAACjwB,CAAAA,CAAE,EAAEq8D,eAAAA,CAAAA,CAAAA;QAChF,MAAMK,MAAAA,OAAS3iC,yKAAO9yB,EAAAA,IAAAA,CAAK6yB,IAAI,CAAA,CAAA;QAC/B,MAAMs0B,QAAAA,GAAWyN,iBAAiB90D,KAAMwG,CAAAA,GAAG,EAAEmvD,MAAQ31D,EAAAA,KAAAA,CAAMo1D,YAAY,CAACn8D,CAAE,CAAA,CAAA,CAAA;QAC1Eg/B,UAAU,CAACh/B,EAAE,GAAGouD,QAAAA,CAAAA;QAEhB,MAAMtuB,YAAe8X,OAAAA,yKAAAA,EAAgB7wC,KAAMogB,CAAAA,aAAa,CAACnnB,CAAKq8D,CAAAA,GAAAA,eAAAA,CAAAA,CAAAA;QAC9D,MAAMz8C,KAAQ1gB,GAAAA,IAAAA,CAAKy4B,KAAK,KAAC6H,wKAAUM,EAAAA,YAAAA,CAAAA,CAAAA,CAAAA;QACnC,MAAM68B,OAAAA,GAAUZ,gBAAgBn8C,KAAO+H,EAAAA,aAAAA,CAAcpgB,CAAC,EAAE6mD,QAAAA,CAASt/B,CAAC,EAAE,CAAG,EAAA,GAAA,CAAA,CAAA;QACvE,MAAM8tC,OAAAA,GAAUb,gBAAgBn8C,KAAO+H,EAAAA,aAAAA,CAAcngB,CAAC,EAAE4mD,QAAAA,CAASp/B,CAAC,EAAE,EAAI,EAAA,GAAA,CAAA,CAAA;QACxE6tC,YAAaZ,CAAAA,MAAAA,EAAQ7hD,IAAM0lB,EAAAA,YAAAA,EAAc68B,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;IACpD,CAAA;IAEA71D,KAAM+1D,CAAAA,cAAc,CAClB1iD,IAAAA,CAAKnS,CAAC,GAAGg0D,OAAOh0D,CAAC,EACjBg0D,MAAOl0D,CAAAA,CAAC,GAAGqS,IAAAA,CAAKrS,CAAC,EACjBqS,IAAAA,CAAKtS,CAAC,GAAGm0D,MAAOn0D,CAAAA,CAAC,EACjBm0D,MAAOj0D,CAAAA,CAAC,GAAGoS,IAAAA,CAAKpS,CAAC,CAAA,CAAA;IAInBjB,KAAAA,CAAMg2D,gBAAgB,GAAGC,oBAAqBj2D,CAAAA,KAAAA,EAAOi4B,UAAY/O,EAAAA,OAAAA,CAAAA,CAAAA;AACnE,CAAA;AAEA,SAAS4sC,YAAAA,CAAaZ,MAAM,EAAE7hD,IAAI,EAAEwF,KAAK,EAAE+8C,OAAO,EAAEC,OAAO,EAAE;IAC3D,MAAMp9C,MAAMtgB,IAAKwY,CAAAA,GAAG,CAACxY,IAAAA,CAAKsgB,GAAG,CAACI,KAAAA,CAAAA,CAAAA,CAAAA;IAC9B,MAAMN,MAAMpgB,IAAKwY,CAAAA,GAAG,CAACxY,IAAAA,CAAKogB,GAAG,CAACM,KAAAA,CAAAA,CAAAA,CAAAA;IAC9B,IAAIrY,CAAI,GAAA,CAAA,CAAA;IACR,IAAIC,CAAI,GAAA,CAAA,CAAA;IACR,IAAIm1D,OAAQv9D,CAAAA,KAAK,GAAGgb,IAAAA,CAAKnS,CAAC,EAAE;QAC1BV,CAAI,GAAC6S,CAAAA,IAAKnS,CAAAA,CAAC,GAAG00D,OAAQv9D,CAAAA,KAAK,IAAIogB,GAAAA,CAAAA;QAC/By8C,MAAOh0D,CAAAA,CAAC,GAAG/I,IAAAA,CAAKC,GAAG,CAAC88D,OAAOh0D,CAAC,EAAEmS,IAAKnS,CAAAA,CAAC,GAAGV,CAAAA,CAAAA,CAAAA;IACzC,CAAA,MAAO,IAAIo1D,OAAQx1D,CAAAA,GAAG,GAAGiT,IAAAA,CAAKrS,CAAC,EAAE;QAC/BR,CAAI,GAACo1D,CAAAA,OAAQx1D,CAAAA,GAAG,GAAGiT,IAAKrS,CAAAA,CAAC,IAAIyX,GAAAA,CAAAA;QAC7By8C,MAAOl0D,CAAAA,CAAC,GAAG7I,IAAAA,CAAKoC,GAAG,CAAC26D,OAAOl0D,CAAC,EAAEqS,IAAKrS,CAAAA,CAAC,GAAGR,CAAAA,CAAAA,CAAAA;KACxC;IACD,IAAIq1D,OAAQx9D,CAAAA,KAAK,GAAGgb,IAAAA,CAAKtS,CAAC,EAAE;QAC1BN,CAAI,GAAC4S,CAAAA,IAAKtS,CAAAA,CAAC,GAAG80D,OAAQx9D,CAAAA,KAAK,IAAIkgB,GAAAA,CAAAA;QAC/B28C,MAAOn0D,CAAAA,CAAC,GAAG5I,IAAAA,CAAKC,GAAG,CAAC88D,OAAOn0D,CAAC,EAAEsS,IAAKtS,CAAAA,CAAC,GAAGN,CAAAA,CAAAA,CAAAA;IACzC,CAAA,MAAO,IAAIo1D,OAAQz1D,CAAAA,GAAG,GAAGiT,IAAAA,CAAKpS,CAAC,EAAE;QAC/BR,CAAI,GAACo1D,CAAAA,OAAQz1D,CAAAA,GAAG,GAAGiT,IAAKpS,CAAAA,CAAC,IAAIsX,GAAAA,CAAAA;QAC7B28C,MAAOj0D,CAAAA,CAAC,GAAG9I,IAAAA,CAAKoC,GAAG,CAAC26D,OAAOj0D,CAAC,EAAEoS,IAAKpS,CAAAA,CAAC,GAAGR,CAAAA,CAAAA,CAAAA;KACxC;AACH,CAAA;AAEA,SAASy1D,qBAAqBl2D,KAAK,EAAEyB,KAAK,EAAE00D,QAAQ,EAAE;IACpD,MAAMC,aAAAA,GAAgBp2D,MAAM01D,WAAW,CAAA;IACvC,MAAM,EAACW,KAAAA,EAAOf,eAAAA,EAAiBpsC,OAAO,EAAExpB,IAAI,EAAC,GAAGy2D,QAAAA,CAAAA;IAChD,MAAMG,qBAAqBt2D,KAAMy1D,CAAAA,gBAAgB,CAACh0D,KAAO20D,EAAAA,aAAAA,GAAgBC,QAAQntC,OAASosC,EAAAA,eAAAA,CAAAA,CAAAA;IAC1F,MAAMz8C,KAAAA,GAAQ1gB,KAAKy4B,KAAK,KAAC6H,wKAAAA,MAAUoY,yKAAgBylB,EAAAA,kBAAAA,CAAmBz9C,KAAK,GAAGK,wKAAAA,CAAAA,CAAAA,CAAAA,CAAAA;IAC9E,MAAMzY,IAAI81D,SAAUD,CAAAA,kBAAAA,CAAmB71D,CAAC,EAAEf,IAAAA,CAAKuoB,CAAC,EAAEpP,KAAAA,CAAAA,CAAAA;IAClD,MAAMsB,YAAYq8C,oBAAqB39C,CAAAA,KAAAA,CAAAA,CAAAA;IACvC,MAAMhY,OAAO41D,gBAAiBH,CAAAA,kBAAAA,CAAmB91D,CAAC,EAAEd,IAAAA,CAAKqoB,CAAC,EAAE5N,SAAAA,CAAAA,CAAAA;IAC5D,OAAO;QAELyyB,OAAAA,EAAS,IAAI;QAGbpsC,CAAAA,EAAG81D,mBAAmB91D,CAAC;QACvBC,CAAAA;QAGA0Z,SAAAA;QAGAtZ,IAAAA;QACAH,GAAKD,EAAAA,CAAAA;QACLE,KAAOE,EAAAA,IAAAA,GAAOnB,KAAKqoB,CAAC;QACpBnnB,MAAQH,EAAAA,CAAAA,GAAIf,KAAKuoB,CAAC;IACpB,CAAA,CAAA;AACF,CAAA;AAEA,SAASyuC,eAAgBv9D,CAAAA,IAAI,EAAEmT,IAAI,EAAE;IACnC,IAAI,CAACA,IAAM,EAAA;QACT,OAAO,IAAI,CAAA;KACZ;IACD,MAAM,EAACzL,IAAAA,EAAMH,GAAAA,EAAKC,KAAK,EAAEC,MAAM,EAAC,GAAGzH,IAAAA,CAAAA;IACnC,MAAMw9D,mBAAezyC,wKAAe,EAAA;QAAC1jB,CAAGK,EAAAA,IAAAA;QAAMJ,CAAGC,EAAAA,GAAAA;IAAG,CAAA,EAAG4L,aAAS4X,wKAAe,EAAA;QAAC1jB,CAAGK,EAAAA,IAAAA;QAAMJ,CAAGG,EAAAA,MAAAA;IAAM,CAAA,EAAG0L,aACnG4X,wKAAe,EAAA;QAAC1jB,CAAGG,EAAAA,KAAAA;QAAOF,CAAGC,EAAAA,GAAAA;IAAG,CAAA,EAAG4L,aAAS4X,wKAAe,EAAA;QAAC1jB,CAAGG,EAAAA,KAAAA;QAAOF,CAAGG,EAAAA,MAAAA;KAAS0L,EAAAA,IAAAA,CAAAA,CAAAA;IACpF,OAAO,CAACqqD,YAAAA,CAAAA;AACV,CAAA;AAEA,SAASV,qBAAqBj2D,KAAK,EAAEi4B,UAAU,EAAE/O,OAAO,EAAE;IACxD,MAAMnwB,QAAQ,EAAE,CAAA;IAChB,MAAMo8D,UAAan1D,GAAAA,KAAAA,CAAMo1D,YAAY,CAACp8D,MAAM,CAAA;IAC5C,MAAMkH,IAAAA,GAAOF,MAAMjB,OAAO,CAAA;IAC1B,MAAM,EAACw2D,iBAAiB,EAAE/1C,OAAAA,EAAQ,GAAGtf,KAAKwf,WAAW,CAAA;IACrD,MAAMy2C,QAAW,GAAA;QACfE,KAAAA,EAAOxB,sBAAsB30D,IAAQ,CAAA,GAAA,CAAA;QACrCo1D,eAAiBC,EAAAA,iBAAAA,GAAoBn8C,wKAAK+7C,GAAAA,UAAAA,GAAa,CAAC;IAC1D,CAAA,CAAA;IACA,IAAI7oD,IAAAA,CAAAA;IAEJ,IAAK,IAAIrT,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIk8D,YAAYl8D,CAAK,EAAA,CAAA;QACnCk9D,QAAAA,CAASjtC,OAAO,GAAGA,OAAO,CAACjwB,CAAE,CAAA,CAAA;QAC7Bk9D,QAAAA,CAASz2D,IAAI,GAAGu4B,UAAU,CAACh/B,CAAE,CAAA,CAAA;QAE7B,MAAME,IAAAA,GAAO+8D,oBAAqBl2D,CAAAA,KAAAA,EAAO/G,CAAGk9D,EAAAA,QAAAA,CAAAA,CAAAA;QAC5Cp9D,KAAAA,CAAMkB,IAAI,CAACd,IAAAA,CAAAA,CAAAA;QACX,IAAIqmB,YAAY,MAAQ,EAAA;YACtBrmB,IAAKyzC,CAAAA,OAAO,GAAG8pB,eAAAA,CAAgBv9D,IAAMmT,EAAAA,IAAAA,CAAAA,CAAAA;YACrC,IAAInT,IAAAA,CAAKyzC,OAAO,EAAE;gBAChBtgC,IAAOnT,GAAAA,IAAAA,CAAAA;aACR;SACF;IACH,CAAA;IACA,OAAOJ,KAAAA,CAAAA;AACT,CAAA;AAEA,SAASy9D,oBAAAA,CAAqB39C,KAAK,EAAE;IACnC,IAAIA,KAAAA,KAAU,CAAKA,IAAAA,KAAAA,KAAU,GAAK,EAAA;QAChC,OAAO,QAAA,CAAA;KACF,MAAA,IAAIA,QAAQ,GAAK,EAAA;QACtB,OAAO,MAAA,CAAA;KACR;IAED,OAAO,OAAA,CAAA;AACT,CAAA;AAEA,SAAS49C,iBAAiBj2D,CAAC,EAAEunB,CAAC,EAAE4J,KAAK,EAAE;IACrC,IAAIA,UAAU,OAAS,EAAA;QACrBnxB,CAAKunB,IAAAA,CAAAA,CAAAA;KACA,MAAA,IAAI4J,UAAU,QAAU,EAAA;QAC7BnxB,CAAAA,IAAMunB,CAAI,GAAA,CAAA,CAAA;KACX;IACD,OAAOvnB,CAAAA,CAAAA;AACT,CAAA;AAEA,SAAS+1D,UAAU91D,CAAC,EAAEwnB,CAAC,EAAEpP,KAAK,EAAE;IAC9B,IAAIA,KAAAA,KAAU,EAAMA,IAAAA,KAAAA,KAAU,GAAK,EAAA;QACjCpY,CAAAA,IAAMwnB,CAAI,GAAA,CAAA,CAAA;IACZ,CAAA,MAAO,IAAIpP,KAAAA,GAAQ,GAAOA,IAAAA,KAAAA,GAAQ,EAAI,EAAA;QACpCpY,CAAKwnB,IAAAA,CAAAA,CAAAA;KACN;IACD,OAAOxnB,CAAAA,CAAAA;AACT,CAAA;AAEA,SAASm2D,kBAAkBpwD,GAAG,EAAEtG,IAAI,EAAE/G,IAAI,EAAE;IAC1C,MAAM,EAAC0H,IAAAA,EAAMH,GAAAA,EAAKC,KAAK,EAAEC,MAAM,EAAC,GAAGzH,IAAAA,CAAAA;IACnC,MAAM,EAAC2kC,aAAa,EAAC,GAAG59B,IAAAA,CAAAA;IAExB,IAAI,KAACmR,wKAAAA,EAAcysB,aAAgB,CAAA,EAAA;QACjC,MAAMzjB,YAAAA,OAAe8+B,yKAAcj5C,EAAAA,IAAAA,CAAKma,YAAY,CAAA,CAAA;QACpD,MAAM6O,OAAAA,OAAUO,wKAAUvpB,EAAAA,IAAAA,CAAK29B,eAAe,CAAA,CAAA;QAC9Cr3B,GAAAA,CAAIiU,SAAS,GAAGqjB,aAAAA,CAAAA;QAEhB,MAAM+4B,YAAAA,GAAeh2D,IAAOqoB,GAAAA,OAAAA,CAAQroB,IAAI,CAAA;QACxC,MAAMi2D,WAAAA,GAAcp2D,GAAMwoB,GAAAA,OAAAA,CAAQxoB,GAAG,CAAA;QACrC,MAAMq2D,aAAgBp2D,GAAAA,KAAAA,GAAQE,IAAOqoB,GAAAA,OAAAA,CAAQnU,KAAK,CAAA;QAClD,MAAMiiD,cAAiBp2D,GAAAA,MAAAA,GAASF,GAAMwoB,GAAAA,OAAAA,CAAQpU,MAAM,CAAA;QAEpD,IAAI5W,MAAAA,CAAOW,MAAM,CAACwb,YAAAA,CAAAA,CAAc0pB,IAAI,CAACvwB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI,CAAA,EAAA;YAClDhN,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;gBACb6b,yKAAAA,EAAmB/zC,GAAK,EAAA;gBACtBhG,CAAGq2D,EAAAA,YAAAA;gBACHp2D,CAAGq2D,EAAAA,WAAAA;gBACH/uC,CAAGgvC,EAAAA,aAAAA;gBACH9uC,CAAG+uC,EAAAA,cAAAA;gBACH3/C,MAAQgD,EAAAA,YAAAA;YACV,CAAA,CAAA,CAAA;YACA7T,GAAAA,CAAIiB,IAAI,EAAA,CAAA;SACH,MAAA;YACLjB,GAAAA,CAAI23B,QAAQ,CAAC04B,YAAcC,EAAAA,WAAAA,EAAaC,aAAeC,EAAAA,cAAAA,CAAAA,CAAAA;SACxD;KACF;AACH,CAAA;AAEA,SAASC,eAAgBj3D,CAAAA,KAAK,EAAE2rD,UAAU,EAAE;IAC1C,MAAM,EAACnlD,GAAAA,EAAKzH,OAAAA,EAAS,EAAC2gB,WAAW,EAAC,EAAC,GAAG1f,KAAAA,CAAAA;IAEtC,IAAK,IAAI/G,CAAI0yD,GAAAA,UAAAA,GAAa,CAAG1yD,EAAAA,CAAAA,IAAK,GAAGA,CAAK,EAAA,CAAA;QACxC,MAAME,IAAO6G,GAAAA,KAAAA,CAAMg2D,gBAAgB,CAAC/8D,CAAE,CAAA,CAAA;QACtC,IAAI,CAACE,IAAKyzC,CAAAA,OAAO,EAAE;YAEjB,SAAS;SACV;QACD,MAAMzQ,cAAczc,WAAYqV,CAAAA,UAAU,CAAC/0B,KAAAA,CAAMw1D,oBAAoB,CAACv8D,CAAAA,CAAAA,CAAAA,CAAAA;QACtE29D,iBAAAA,CAAkBpwD,KAAK21B,WAAahjC,EAAAA,IAAAA,CAAAA,CAAAA;QACpC,MAAMw8D,MAAAA,OAAS3iC,yKAAOmJ,EAAAA,WAAAA,CAAYpJ,IAAI,CAAA,CAAA;QACtC,MAAM,EAACvyB,CAAC,EAAEC,CAAAA,EAAG0Z,SAAAA,EAAU,GAAGhhB,IAAAA,CAAAA;YAE1BimC,wKAAAA,EACE54B,GACAxG,EAAAA,KAAAA,CAAMo1D,YAAY,CAACn8D,CAAE,CAAA,EACrBuH,CACAC,EAAAA,CAAAA,GAAKk1D,MAAOziC,CAAAA,UAAU,GAAG,CAAA,EACzByiC,MACA,EAAA;YACEx6D,KAAAA,EAAOghC,YAAYhhC,KAAK;YACxBgf,SAAWA,EAAAA,SAAAA;YACX6iB,YAAc,EAAA,QAAA;QAChB,CAAA,CAAA,CAAA;IAEJ,CAAA;AACF,CAAA;AAEA,SAASk6B,cAAAA,CAAel3D,KAAK,EAAEqX,MAAM,EAAEoI,QAAQ,EAAEksC,UAAU,EAAE;IAC3D,MAAM,EAACnlD,GAAG,EAAC,GAAGxG,KAAAA,CAAAA;IACd,IAAIyf,QAAU,EAAA;QAEZjZ,GAAI+W,CAAAA,GAAG,CAACvd,KAAMigB,CAAAA,OAAO,EAAEjgB,KAAMkgB,CAAAA,OAAO,EAAE7I,MAAAA,EAAQ,CAAGc,EAAAA,wKAAAA,CAAAA,CAAAA;KAC5C,MAAA;QAEL,IAAIyI,aAAgB5gB,GAAAA,KAAAA,CAAMy1D,gBAAgB,CAAC,CAAGp+C,EAAAA,MAAAA,CAAAA,CAAAA;QAC9C7Q,GAAAA,CAAIm4B,MAAM,CAAC/d,aAAAA,CAAcpgB,CAAC,EAAEogB,cAAcngB,CAAC,CAAA,CAAA;QAE3C,IAAK,IAAIxH,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI0yD,YAAY1yD,CAAK,EAAA,CAAA;YACnC2nB,aAAgB5gB,GAAAA,KAAAA,CAAMy1D,gBAAgB,CAACx8D,CAAGoe,EAAAA,MAAAA,CAAAA,CAAAA;YAC1C7Q,GAAAA,CAAIo4B,MAAM,CAAChe,aAAAA,CAAcpgB,CAAC,EAAEogB,cAAcngB,CAAC,CAAA,CAAA;QAC7C,CAAA;KACD;AACH,CAAA;AAEA,SAAS02D,cAAAA,CAAen3D,KAAK,EAAEo3D,YAAY,EAAE//C,MAAM,EAAEs0C,UAAU,EAAExwB,UAAU,EAAE;IAC3E,MAAM30B,GAAAA,GAAMxG,MAAMwG,GAAG,CAAA;IACrB,MAAMiZ,QAAAA,GAAW23C,aAAa33C,QAAQ,CAAA;IAEtC,MAAM,EAACtkB,KAAAA,EAAO+f,SAAAA,EAAU,GAAGk8C,YAAAA,CAAAA;IAE3B,IAAK,CAAC33C,QAAAA,IAAY,CAACksC,UAAAA,IAAe,CAACxwD,KAAS,IAAA,CAAC+f,SAAa7D,IAAAA,MAAAA,GAAS,CAAG,EAAA;QACpE,OAAA;KACD;IAED7Q,GAAAA,CAAI03B,IAAI,EAAA,CAAA;IACR13B,GAAAA,CAAI4U,WAAW,GAAGjgB,KAAAA,CAAAA;IAClBqL,GAAAA,CAAI0U,SAAS,GAAGA,SAAAA,CAAAA;IAChB1U,GAAAA,CAAIi4B,WAAW,CAACtD,UAAWmB,CAAAA,IAAI,IAAI,EAAE,CAAA,CAAA;IACrC91B,GAAIsU,CAAAA,cAAc,GAAGqgB,UAAAA,CAAWoB,UAAU,CAAA;IAE1C/1B,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;IACbw4B,cAAel3D,CAAAA,KAAAA,EAAOqX,QAAQoI,QAAUksC,EAAAA,UAAAA,CAAAA,CAAAA;IACxCnlD,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;IACbxqC,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;IACVr4B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;AACb,CAAA;AAEA,SAASi5B,wBAAwBlyD,MAAM,EAAE1D,KAAK,EAAEwK,KAAK,EAAE;IACrD,WAAO7G,wKAAAA,EAAcD,MAAQ,EAAA;QAC3B8G,KAAAA;QACAxK,KAAAA;QACA/J,IAAM,EAAA,YAAA;IACR,CAAA,CAAA,CAAA;AACF,CAAA;AAEe,MAAM4/D,iBAA0B1E,SAAAA,eAAAA,CAAAA;IAE7C,OAAOzvD,KAAK,cAAe,CAAA;IAK3B,OAAO/E,QAAW,GAAA;QAChBohB,OAAAA,EAAS,IAAI;QAGb+3C,OAAAA,EAAS,IAAI;QACbv0C,QAAU,EAAA,WAAA;QAEVzD,UAAY,EAAA;YACVC,OAAAA,EAAS,IAAI;YACbtE,SAAW,EAAA,CAAA;YACXL,UAAAA,EAAY,EAAE;YACdE,gBAAkB,EAAA,GAAA;QACpB,CAAA;QAEA9G,IAAM,EAAA;YACJwL,QAAAA,EAAU,KAAK;QACjB,CAAA;QAEArH,UAAY,EAAA,CAAA;QAGZvH,KAAO,EAAA;YAEL6sB,iBAAAA,EAAmB,IAAI;YAEvBjG,QAAUg8B,EAAAA,yKAAAA,CAAMC,UAAU,CAACC,OAAO;QACpC,CAAA;QAEAj0C,WAAa,EAAA;YACXoe,aAAezmC,EAAAA,SAAAA;YAGfwmC,eAAiB,EAAA,CAAA;YAGjBre,OAAAA,EAAS,IAAI;YAGbuT,IAAM,EAAA;gBACJrzB,IAAM,EAAA,EAAA;YACR,CAAA;YAGA+3B,QAAAA,CAAAA,CAASxrB,KAAK,EAAE;gBACd,OAAOA,KAAAA,CAAAA;YACT,CAAA;YAGAid,OAAS,EAAA,CAAA;YAGTqsC,iBAAAA,EAAmB,KAAK;QAC1B,CAAA;KACA,CAAA;IAEF,OAAOhmC,aAAgB,GAAA;QACrB,kBAAoB,EAAA,aAAA;QACpB,mBAAqB,EAAA,OAAA;QACrB,aAAe,EAAA,OAAA;KACf,CAAA;IAEF,OAAO7V,WAAc,GAAA;QACnB6F,UAAY,EAAA;YACVixC,SAAW,EAAA,MAAA;QACb,CAAA;KACA,CAAA;IAEFz5D,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK,CAACA,GAAAA,CAAAA,CAAAA;QAGN,IAAI,CAACqkB,OAAO,GAAG5oB,SAAAA,CAAAA;QAEf,IAAI,CAAC6oB,OAAO,GAAG7oB,SAAAA,CAAAA;QAEf,IAAI,CAACq+D,WAAW,GAAGr+D,SAAAA,CAAAA;QAEnB,IAAI,CAAC+9D,YAAY,GAAG,EAAE,CAAA;QACtB,IAAI,CAACY,gBAAgB,GAAG,EAAE,CAAA;IAC5B,CAAA;IAEAlgC,aAAgB,GAAA;QAEd,MAAM5M,OAAAA,GAAU,IAAI,CAACk+B,QAAQ,OAAG39B,wKAAAA,EAAUorC,qBAAsB,CAAA,IAAI,CAAC91D,OAAO,CAAI,GAAA,CAAA,CAAA,CAAA;QAChF,MAAMgpB,CAAAA,GAAI,IAAI,CAAChT,KAAK,GAAG,IAAI,CAAC0H,QAAQ,GAAGyM,OAAAA,CAAQnU,KAAK,CAAA;QACpD,MAAMkT,CAAAA,GAAI,IAAI,CAACnT,MAAM,GAAG,IAAI,CAAC4H,SAAS,GAAGwM,OAAAA,CAAQpU,MAAM,CAAA;QACvD,IAAI,CAACmL,OAAO,GAAG9nB,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACsE,IAAI,GAAGknB,CAAI,GAAA,CAAA,GAAImB,QAAQroB,IAAI,CAAA,CAAA;QAC1D,IAAI,CAACqf,OAAO,GAAG/nB,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACmE,GAAG,GAAGunB,CAAI,GAAA,CAAA,GAAIiB,QAAQxoB,GAAG,CAAA,CAAA;QACxD,IAAI,CAACg1D,WAAW,GAAGv9D,IAAKoE,CAAAA,KAAK,CAACpE,IAAKC,CAAAA,GAAG,CAAC2vB,CAAAA,EAAGE,CAAK,CAAA,GAAA,CAAA,CAAA,CAAA;IACjD,CAAA;IAEAgO,mBAAsB,GAAA;QACpB,MAAM,EAAC79B,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAACkR,SAAS,CAAC,KAAK,CAAA,CAAA;QAEvC,IAAI,CAACrT,GAAG,OAAG8J,wKAAAA,EAAS9J,QAAQ,CAACmd,KAAAA,CAAMnd,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC,CAAA;QACjD,IAAI,CAACmC,GAAG,OAAG2H,wKAAAA,EAAS3H,QAAQ,CAACgb,KAAAA,CAAMhb,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC,CAAA;QAGjD,IAAI,CAACu4D,sBAAsB,EAAA,CAAA;IAC7B,CAAA;IAMAO,gBAAmB,GAAA;QACjB,OAAOl7D,IAAAA,CAAKm5B,IAAI,CAAC,IAAI,CAACokC,WAAW,GAAGb,qBAAAA,CAAsB,IAAI,CAAC91D,OAAO,CAAA,CAAA,CAAA;IACxE,CAAA;IAEAy4B,kBAAAA,CAAmB3mB,KAAK,EAAE;QACxB+hD,eAAAA,CAAgBrxC,SAAS,CAACiW,kBAAkB,CAACh/B,IAAI,CAAC,IAAI,EAAEqY,KAAAA,CAAAA,CAAAA;QAGxD,IAAI,CAACukD,YAAY,GAAG,IAAI,CAACtqD,SAAS,EAAA,CAC/BwP,GAAG,CAAC,CAAC7a,KAAAA,EAAOgC,KAAU,GAAA;YACrB,MAAMwK,KAAAA,OAAQs3B,wKAAAA,EAAa,IAAI,CAACxkC,OAAO,CAAC2gB,WAAW,CAAC+X,QAAQ,EAAE;gBAACh4B,KAAAA;gBAAOgC,KAAAA;aAAM,EAAE,IAAI,CAAA,CAAA;YAClF,OAAOwK,KAASA,IAAAA,KAAAA,KAAU,CAAIA,GAAAA,KAAAA,GAAQ,EAAE,CAAA;SAEzCjH,CAAAA,CAAAA,MAAM,CAAC,CAACwO,CAAGva,EAAAA,CAAAA,GAAM,IAAI,CAAC1B,KAAK,CAAC+e,iBAAiB,CAACrd,CAAAA,CAAAA,CAAAA,CAAAA;IACnD,CAAA;IAEA89B,GAAM,GAAA;QACJ,MAAM72B,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QAEzB,IAAImB,KAAKsf,OAAO,IAAItf,KAAKwf,WAAW,CAACF,OAAO,EAAE;YAC5Cy1C,kBAAAA,CAAmB,IAAI,CAAA,CAAA;SAClB,MAAA;YACL,IAAI,CAACc,cAAc,CAAC,CAAA,EAAG,GAAG,CAAG,EAAA,CAAA,CAAA,CAAA;SAC9B;IACH,CAAA;IAEAA,cAAAA,CAAeyB,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;QACvE,IAAI,CAAC13C,OAAO,IAAI9nB,IAAKoE,CAAAA,KAAK,CAAC,CAACi7D,YAAeC,GAAAA,aAAY,IAAK,CAAA,CAAA,CAAA;QAC5D,IAAI,CAACv3C,OAAO,IAAI/nB,IAAKoE,CAAAA,KAAK,CAAC,CAACm7D,WAAcC,GAAAA,cAAa,IAAK,CAAA,CAAA,CAAA;QAC5D,IAAI,CAACjC,WAAW,IAAIv9D,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACs9D,WAAW,GAAG,GAAGv9D,IAAKoC,CAAAA,GAAG,CAACi9D,YAAAA,EAAcC,eAAeC,WAAaC,EAAAA,cAAAA,CAAAA,CAAAA,CAAAA;IACxG,CAAA;IAEAv3C,aAAAA,CAAc3e,KAAK,EAAE;QACnB,MAAMm2D,eAAAA,GAAkBz/C,wKAAAA,GAAAA,CAAO,IAAI,CAACi9C,YAAY,CAACp8D,MAAM,IAAI,CAAA,CAAA,CAAA;QAC3D,MAAMof,aAAa,IAAI,CAACrZ,OAAO,CAACqZ,UAAU,IAAI,CAAA,CAAA;QAE9C,WAAOy4B,yKAAAA,EAAgBpvC,KAAQm2D,GAAAA,eAAAA,OAAkB97C,wKAAU1D,EAAAA,UAAAA,CAAAA,CAAAA,CAAAA;IAC7D,CAAA;IAEAoI,6BAAAA,CAA8B/gB,KAAK,EAAE;QACnC,QAAI4R,wKAAAA,EAAc5R,KAAQ,CAAA,EAAA;YACxB,OAAO+L,GAAAA,CAAAA;SACR;QAGD,MAAMqsD,aAAgB,GAAA,IAAI,CAACnC,WAAW,GAAA,CAAI,IAAI,CAACn7D,GAAG,GAAG,IAAI,CAACnC,GAAG,CAAD,CAAA;QAC5D,IAAI,IAAI,CAAC2G,OAAO,CAACoB,OAAO,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC5F,GAAG,GAAGkF,KAAI,IAAKo4D,aAAAA,CAAAA;SAC7B;QACD,OAAO,CAACp4D,KAAAA,GAAQ,IAAI,CAACrH,GAAG,IAAIy/D,aAAAA,CAAAA;IAC9B,CAAA;IAEAC,6BAAAA,CAA8BlzC,QAAQ,EAAE;QACtC,QAAIvT,wKAAAA,EAAcuT,QAAW,CAAA,EAAA;YAC3B,OAAOpZ,GAAAA,CAAAA;SACR;QAED,MAAMusD,iBAAiBnzC,QAAY,GAAA,CAAA,IAAI,CAAC8wC,WAAW,GAAA,CAAI,IAAI,CAACn7D,GAAG,GAAG,IAAI,CAACnC,GAAG,CAAA,CAAA,CAAA;QAC1E,OAAO,IAAI,CAAC2G,OAAO,CAACoB,OAAO,GAAG,IAAI,CAAC5F,GAAG,GAAGw9D,cAAiB,GAAA,IAAI,CAAC3/D,GAAG,GAAG2/D,cAAc,CAAA;IACrF,CAAA;IAEAvC,oBAAAA,CAAqB/zD,KAAK,EAAE;QAC1B,MAAMie,WAAc,GAAA,IAAI,CAAC01C,YAAY,IAAI,EAAE,CAAA;QAE3C,IAAI3zD,KAAS,IAAA,CAAA,IAAKA,KAAQie,GAAAA,WAAAA,CAAY1mB,MAAM,EAAE;YAC5C,MAAMg/D,UAAAA,GAAat4C,WAAW,CAACje,KAAM,CAAA,CAAA;YACrC,OAAO41D,uBAAwB,CAAA,IAAI,CAACntD,UAAU,IAAIzI,KAAOu2D,EAAAA,UAAAA,CAAAA,CAAAA;SAC1D;IACH,CAAA;IAEAvC,gBAAAA,CAAiBh0D,KAAK,EAAEw2D,kBAAkB,EAAE3C,eAAAA,GAAkB,CAAC,EAAE;QAC/D,MAAMz8C,QAAQ,IAAI,CAACuH,aAAa,CAAC3e,SAASyX,wKAAUo8C,GAAAA,eAAAA,CAAAA;QACpD,OAAO;YACL90D,CAAAA,EAAGrI,KAAKogB,GAAG,CAACM,SAASo/C,kBAAqB,GAAA,IAAI,CAACh4C,OAAO;YACtDxf,CAAAA,EAAGtI,KAAKsgB,GAAG,CAACI,SAASo/C,kBAAqB,GAAA,IAAI,CAAC/3C,OAAO;YACtDrH,KAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAEAgI,wBAAyBpf,CAAAA,KAAK,EAAEhC,KAAK,EAAE;QACrC,OAAO,IAAI,CAACg2D,gBAAgB,CAACh0D,OAAO,IAAI,CAAC+e,6BAA6B,CAAC/gB,KAAAA,CAAAA,CAAAA,CAAAA;IACzE,CAAA;IAEAy4D,eAAAA,CAAgBz2D,KAAK,EAAE;QACrB,OAAO,IAAI,CAACof,wBAAwB,CAACpf,SAAS,CAAG,EAAA,IAAI,CAACo5B,YAAY,EAAA,CAAA,CAAA;IACpE,CAAA;IAEAs9B,qBAAAA,CAAsB12D,KAAK,EAAE;QAC3B,MAAM,EAACZ,IAAAA,EAAMH,GAAAA,EAAKC,KAAK,EAAEC,MAAM,EAAC,GAAG,IAAI,CAACo1D,gBAAgB,CAACv0D,KAAM,CAAA,CAAA;QAC/D,OAAO;YACLZ,IAAAA;YACAH,GAAAA;YACAC,KAAAA;YACAC,MAAAA;QACF,CAAA,CAAA;IACF,CAAA;IAKAq9B,cAAiB,GAAA;QACf,MAAM,EAACvjB,eAAAA,EAAiBzG,IAAAA,EAAM,EAACwL,QAAAA,EAAS,EAAC,GAAG,IAAI,CAAC1gB,OAAO,CAAA;QACxD,IAAI2b,eAAiB,EAAA;YACnB,MAAMlU,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;YACpBA,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YACR13B,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;YACbw4B,cAAAA,CAAe,IAAI,EAAE,IAAI,CAAC12C,6BAA6B,CAAC,IAAI,CAACqyC,SAAS,GAAGpzC,QAAU,EAAA,IAAI,CAAC21C,YAAY,CAACp8D,MAAM,CAAA,CAAA;YAC3GwN,GAAAA,CAAIwqC,SAAS,EAAA,CAAA;YACbxqC,GAAAA,CAAIiU,SAAS,GAAGC,eAAAA,CAAAA;YAChBlU,GAAAA,CAAIiB,IAAI,EAAA,CAAA;YACRjB,GAAAA,CAAI43B,OAAO,EAAA,CAAA;SACZ;IACH,CAAA;IAKAC,QAAW,GAAA;QACT,MAAM73B,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMtG,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAM,EAACwgB,UAAU,EAAEtL,IAAAA,EAAMiL,MAAAA,EAAO,GAAGhf,IAAAA,CAAAA;QACnC,MAAMyrD,UAAa,GAAA,IAAI,CAACyJ,YAAY,CAACp8D,MAAM,CAAA;QAE3C,IAAIC,GAAG+a,MAAQgP,EAAAA,QAAAA,CAAAA;QAEf,IAAI9iB,IAAKwf,CAAAA,WAAW,CAACF,OAAO,EAAE;YAC5By3C,eAAAA,CAAgB,IAAI,EAAEtL,UAAAA,CAAAA,CAAAA;SACvB;QAED,IAAI13C,IAAAA,CAAKuL,OAAO,EAAE;YAChB,IAAI,CAAC3O,KAAK,CAAC9Y,OAAO,CAAC,CAACuB,MAAMmI,KAAU,GAAA;gBAClC,IAAIA,KAAAA,KAAU,KAAMA,KAAU,KAAA,CAAA,IAAK,IAAI,CAACrJ,GAAG,GAAG,CAAI,EAAA;oBAChD4b,MAAAA,GAAS,IAAI,CAACwM,6BAA6B,CAAClnB,KAAKmG,KAAK,CAAA,CAAA;oBACtD,MAAMmN,OAAU,GAAA,IAAI,CAAC1C,UAAU,CAACzI,KAAAA,CAAAA,CAAAA;oBAChC,MAAM06B,WAAAA,GAAcloB,IAAK8gB,CAAAA,UAAU,CAACnoB,OAAAA,CAAAA,CAAAA;oBACpC,MAAMwvB,iBAAAA,GAAoBld,MAAO6V,CAAAA,UAAU,CAACnoB,OAAAA,CAAAA,CAAAA;oBAE5CuqD,cAAAA,CAAe,IAAI,EAAEh7B,WAAanoB,EAAAA,MAAAA,EAAQ23C,UAAYvvB,EAAAA,iBAAAA,CAAAA,CAAAA;iBACvD;YACH,CAAA,CAAA,CAAA;SACD;QAED,IAAI7c,UAAAA,CAAWC,OAAO,EAAE;YACtBhZ,GAAAA,CAAI03B,IAAI,EAAA,CAAA;YAER,IAAKjlC,CAAI0yD,GAAAA,UAAAA,GAAa,CAAG1yD,EAAAA,CAAAA,IAAK,GAAGA,CAAK,EAAA,CAAA;gBACpC,MAAMkjC,cAAc5c,UAAWwV,CAAAA,UAAU,CAAC,IAAI,CAACygC,oBAAoB,CAACv8D,CAAAA,CAAAA,CAAAA,CAAAA;gBACpE,MAAM,EAACkC,KAAAA,EAAO+f,SAAAA,EAAU,GAAGihB,WAAAA,CAAAA;gBAE3B,IAAI,CAACjhB,SAAa,IAAA,CAAC/f,KAAO,EAAA;oBACxB,SAAS;iBACV;gBAEDqL,GAAAA,CAAI0U,SAAS,GAAGA,SAAAA,CAAAA;gBAChB1U,GAAAA,CAAI4U,WAAW,GAAGjgB,KAAAA,CAAAA;gBAElBqL,GAAIi4B,CAAAA,WAAW,CAACtC,WAAAA,CAAYthB,UAAU,CAAA,CAAA;gBACtCrU,GAAIsU,CAAAA,cAAc,GAAGqhB,WAAAA,CAAYphB,gBAAgB,CAAA;gBAEjD/G,MAAAA,GAAS,IAAI,CAACwM,6BAA6B,CAACtgB,IAAKC,CAAAA,OAAO,GAAG,IAAI,CAAC/H,GAAG,GAAG,IAAI,CAACmC,GAAG,CAAA,CAAA;gBAC9EyoB,QAAAA,GAAW,IAAI,CAACyyC,gBAAgB,CAACx8D,CAAG+a,EAAAA,MAAAA,CAAAA,CAAAA;gBACpCxN,GAAAA,CAAIk4B,SAAS,EAAA,CAAA;gBACbl4B,GAAIm4B,CAAAA,MAAM,CAAC,IAAI,CAAC1e,OAAO,EAAE,IAAI,CAACC,OAAO,CAAA,CAAA;gBACrC1Z,GAAAA,CAAIo4B,MAAM,CAAC5b,QAAAA,CAASxiB,CAAC,EAAEwiB,SAASviB,CAAC,CAAA,CAAA;gBACjC+F,GAAAA,CAAIq4B,MAAM,EAAA,CAAA;YACZ,CAAA;YAEAr4B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;SACZ;IACH,CAAA;IAKAW,aAAa,CAAA,CAAC;IAKdE,UAAa,GAAA;QACX,MAAMz4B,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMtG,IAAAA,GAAO,IAAI,CAACnB,OAAO,CAAA;QACzB,MAAM8wB,QAAAA,GAAW3vB,KAAK2Q,KAAK,CAAA;QAE3B,IAAI,CAACgf,QAASrQ,CAAAA,OAAO,EAAE;YACrB,OAAA;SACD;QAED,MAAMpH,UAAa,GAAA,IAAI,CAACgI,aAAa,CAAC,CAAA,CAAA,CAAA;QACtC,IAAIpM,MAAQe,EAAAA,KAAAA,CAAAA;QAEZvO,GAAAA,CAAI03B,IAAI,EAAA,CAAA;QACR13B,GAAIquC,CAAAA,SAAS,CAAC,IAAI,CAAC50B,OAAO,EAAE,IAAI,CAACC,OAAO,CAAA,CAAA;QACxC1Z,GAAAA,CAAI4xD,MAAM,CAAChgD,UAAAA,CAAAA,CAAAA;QACX5R,GAAAA,CAAI2T,SAAS,GAAG,QAAA,CAAA;QAChB3T,GAAAA,CAAIw2B,YAAY,GAAG,QAAA,CAAA;QAEnB,IAAI,CAACnsB,KAAK,CAAC9Y,OAAO,CAAC,CAACuB,MAAMmI,KAAU,GAAA;YAClC,IAAKA,KAAU,KAAA,CAAA,IAAK,IAAI,CAACrJ,GAAG,IAAI,CAAM,IAAA,CAAC8H,IAAKC,CAAAA,OAAO,EAAE;gBACnD,OAAA;aACD;YAED,MAAMg8B,cAActM,QAASkF,CAAAA,UAAU,CAAC,IAAI,CAAC7qB,UAAU,CAACzI,KAAAA,CAAAA,CAAAA,CAAAA;YACxD,MAAMu4B,QAAAA,OAAWhH,yKAAOmJ,EAAAA,WAAAA,CAAYpJ,IAAI,CAAA,CAAA;YACxC/e,MAAS,GAAA,IAAI,CAACwM,6BAA6B,CAAC,IAAI,CAAC3P,KAAK,CAACpP,KAAM,CAAA,CAAChC,KAAK,CAAA,CAAA;YAEnE,IAAI08B,WAAAA,CAAYuB,iBAAiB,EAAE;gBACjCl3B,GAAIusB,CAAAA,IAAI,GAAGiH,QAAAA,CAASI,MAAM,CAAA;gBAC1BrlB,KAAAA,GAAQvO,IAAIs9C,WAAW,CAACxqD,IAAK2S,CAAAA,KAAK,EAAE8I,KAAK,CAAA;gBACzCvO,GAAIiU,CAAAA,SAAS,GAAG0hB,WAAAA,CAAY2B,aAAa,CAAA;gBAEzC,MAAM5U,OAAAA,OAAUO,wKAAU0S,EAAAA,WAAAA,CAAY0B,eAAe,CAAA,CAAA;gBACrDr3B,GAAI23B,CAAAA,QAAQ,CACV,CAACppB,KAAQ,GAAA,CAAA,GAAImU,QAAQroB,IAAI,EACzB,CAACmT,MAAAA,GAASgmB,QAASt6B,CAAAA,IAAI,GAAG,CAAIwpB,GAAAA,OAAAA,CAAQxoB,GAAG,EACzCqU,KAAQmU,GAAAA,OAAAA,CAAQnU,KAAK,EACrBilB,QAASt6B,CAAAA,IAAI,GAAGwpB,OAAAA,CAAQpU,MAAM,CAAA,CAAA;aAEjC;gBAEDsqB,wKAAAA,EAAW54B,KAAKlN,IAAK2S,CAAAA,KAAK,EAAE,CAAG,EAAA,CAAC+H,QAAQgmB,QAAU,EAAA;gBAChD7+B,KAAAA,EAAOghC,YAAYhhC,KAAK;gBACxBkiC,WAAAA,EAAalB,YAAYmB,eAAe;gBACxCC,WAAAA,EAAapB,YAAYqB,eAAe;YAC1C,CAAA,CAAA,CAAA;QACF,CAAA,CAAA,CAAA;QAEAh3B,GAAAA,CAAI43B,OAAO,EAAA,CAAA;IACb,CAAA;IAKAkB,YAAY,CAAA,CAAC;AACf;AC5pBA,MAAM+4B,SAAY,GAAA;IAChBC,WAAa,EAAA;QAACC,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,CAAA;QAAGw0D,KAAO,EAAA,IAAA;IAAI,CAAA;IAChDsE,MAAQ,EAAA;QAACD,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,IAAA;QAAMw0D,KAAO,EAAA,EAAA;IAAE,CAAA;IAC5CuE,MAAQ,EAAA;QAACF,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,KAAA;QAAOw0D,KAAO,EAAA,EAAA;IAAE,CAAA;IAC7CwE,IAAM,EAAA;QAACH,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,OAAA;QAASw0D,KAAO,EAAA,EAAA;IAAE,CAAA;IAC7CyE,GAAK,EAAA;QAACJ,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,QAAA;QAAUw0D,KAAO,EAAA,EAAA;IAAE,CAAA;IAC7C0E,IAAM,EAAA;QAACL,MAAAA,EAAQ,KAAK;QAAE74D,IAAM,EAAA,SAAA;QAAWw0D,KAAO,EAAA,CAAA;IAAC,CAAA;IAC/C2E,KAAO,EAAA;QAACN,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,OAAA;QAASw0D,KAAO,EAAA,EAAA;IAAE,CAAA;IAC9C4E,OAAS,EAAA;QAACP,MAAAA,EAAQ,KAAK;QAAE74D,IAAM,EAAA,OAAA;QAASw0D,KAAO,EAAA,CAAA;IAAC,CAAA;IAChD6E,IAAM,EAAA;QAACR,MAAAA,EAAQ,IAAI;QAAE74D,IAAM,EAAA,QAAA;IAAQ,CAAA;AACrC,CAAA,CAAA;AAKA,MAAMs5D,QAAAA,aAAAA,GAA6C96D,MAAAA,CAAOC,IAAI,CAACk6D,SAAAA,CAAAA,CAAAA;AAM/D,SAASY,MAAAA,CAAO3oD,CAAC,EAAErP,CAAC,EAAE;IACpB,OAAOqP,CAAIrP,GAAAA,CAAAA,CAAAA;AACb,CAAA;AAOA,SAASmJ,KAAAA,CAAMpK,KAAK,EAAEk5D,KAAK,EAAE;IAC3B,QAAI7nD,wKAAAA,EAAc6nD,KAAQ,CAAA,EAAA;QACxB,OAAO,IAAI,CAAA;KACZ;IAED,MAAMC,OAAAA,GAAUn5D,MAAMo5D,QAAQ,CAAA;IAC9B,MAAM,EAACC,MAAAA,EAAQzoC,KAAAA,EAAO0oC,UAAU,EAAC,GAAGt5D,KAAAA,CAAMu5D,UAAU,CAAA;IACpD,IAAI95D,KAAQy5D,GAAAA,KAAAA,CAAAA;IAEZ,IAAI,OAAOG,WAAW,UAAY,EAAA;QAChC55D,KAAAA,GAAQ45D,MAAO55D,CAAAA,KAAAA,CAAAA,CAAAA;KAChB;IAGD,IAAI,KAACyC,wKAAAA,EAASzC,KAAQ,CAAA,EAAA;QACpBA,KAAQ,GAAA,OAAO45D,MAAW,KAAA,QAAA,GACtBF,OAAQ/uD,CAAAA,KAAK,CAAC3K,KAAAA,EAAO45D,MACrBF,CAAAA,GAAAA,OAAAA,CAAQ/uD,KAAK,CAAC3K,KAAM,CAAA,CAAA;KACzB;IAED,IAAIA,KAAAA,KAAU,IAAI,EAAE;QAClB,OAAO,IAAI,CAAA;KACZ;IAED,IAAImxB,KAAO,EAAA;QACTnxB,KAAAA,GAAQmxB,UAAU,MAAW/R,IAAAA,KAAAA,wKAAAA,EAASy6C,UAAeA,CAAAA,IAAAA,UAAAA,KAAe,IAAI,CAAD,GACnEH,QAAQv3C,OAAO,CAACniB,OAAO,SAAW65D,EAAAA,UAAAA,CAAAA,GAClCH,QAAQv3C,OAAO,CAACniB,OAAOmxB,KAAM,CAAA,CAAA;KAClC;IAED,OAAO,CAACnxB,KAAAA,CAAAA;AACV,CAAA;AAUA,SAAS+5D,0BAA0BC,OAAO,EAAErhE,GAAG,EAAEmC,GAAG,EAAEm/D,QAAQ,EAAE;IAC9D,MAAMl4D,IAAAA,GAAOw3D,MAAMhgE,MAAM,CAAA;IAEzB,IAAK,IAAIC,CAAI+/D,GAAAA,KAAAA,CAAMxjD,OAAO,CAACikD,UAAUxgE,CAAIuI,GAAAA,IAAAA,GAAO,CAAG,EAAA,EAAEvI,CAAG,CAAA;QACtD,MAAM0gE,WAAWtB,SAAS,CAACW,KAAK,CAAC//D,EAAE,CAAC,CAAA;QACpC,MAAMiC,MAAAA,GAASy+D,SAASzF,KAAK,GAAGyF,SAASzF,KAAK,GAAG3wD,OAAOq2D,gBAAgB,CAAA;QAExE,IAAID,SAASpB,MAAM,IAAIpgE,IAAKm5B,CAAAA,IAAI,CAAC,CAAC/2B,GAAMnC,GAAAA,GAAE,IAAA,CAAM8C,MAAAA,GAASy+D,SAASj6D,IAAG,MAAOg6D,QAAU,EAAA;YACpF,OAAOV,KAAK,CAAC//D,CAAE,CAAA,CAAA;SAChB;IACH,CAAA;IAEA,OAAO+/D,KAAK,CAACx3D,IAAAA,GAAO,CAAE,CAAA,CAAA;AACxB,CAAA;AAWA,SAASq4D,0BAA2B75D,CAAAA,KAAK,EAAE23B,QAAQ,EAAE8hC,OAAO,EAAErhE,GAAG,EAAEmC,GAAG,EAAE;IACtE,IAAK,IAAItB,CAAI+/D,GAAAA,KAAAA,CAAMhgE,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK+/D,KAAMxjD,CAAAA,OAAO,CAACikD,OAAAA,CAAAA,EAAUxgE,CAAK,EAAA,CAAA;QAC/D,MAAM04D,IAAAA,GAAOqH,KAAK,CAAC//D,CAAE,CAAA,CAAA;QACrB,IAAIo/D,SAAS,CAAC1G,IAAK,CAAA,CAAC4G,MAAM,IAAIv4D,KAAAA,CAAMo5D,QAAQ,CAACz3C,IAAI,CAACpnB,GAAAA,EAAKnC,GAAKu5D,EAAAA,IAAAA,CAAAA,IAASh6B,WAAW,CAAG,EAAA;YACjF,OAAOg6B,IAAAA,CAAAA;SACR;IACH,CAAA;IAEA,OAAOqH,KAAK,CAACS,OAAUT,GAAAA,KAAAA,CAAMxjD,OAAO,CAACikD,OAAAA,CAAAA,GAAW,CAAC,CAAC,CAAA;AACpD,CAAA;AAMA,SAASK,kBAAmBnI,CAAAA,IAAI,EAAE;IAChC,IAAK,IAAI14D,CAAAA,GAAI+/D,KAAMxjD,CAAAA,OAAO,CAACm8C,IAAQ,CAAA,GAAA,CAAA,EAAGnwD,IAAOw3D,GAAAA,KAAAA,CAAMhgE,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QACxE,IAAIo/D,SAAS,CAACW,KAAK,CAAC//D,EAAE,CAAC,CAACs/D,MAAM,EAAE;YAC9B,OAAOS,KAAK,CAAC//D,CAAE,CAAA,CAAA;SAChB;IACH,CAAA;AACF,CAAA;AAOA,SAAS8gE,OAAQlpD,CAAAA,KAAK,EAAEmpD,IAAI,EAAEC,UAAU,EAAE;IACxC,IAAI,CAACA,UAAY,EAAA;QACfppD,KAAK,CAACmpD,IAAK,CAAA,GAAG,IAAI,CAAA;KACb,MAAA,IAAIC,UAAWjhE,CAAAA,MAAM,EAAE;QAC5B,MAAM,EAACypB,EAAE,EAAEG,EAAAA,EAAG,OAAGs3C,yKAAAA,EAAQD,UAAYD,EAAAA,IAAAA,CAAAA,CAAAA;QACrC,MAAMG,SAAYF,GAAAA,UAAU,CAACx3C,EAAAA,CAAG,IAAIu3C,IAAAA,GAAOC,UAAU,CAACx3C,EAAG,CAAA,GAAGw3C,UAAU,CAACr3C,EAAG,CAAA,CAAA;QAC1E/R,KAAK,CAACspD,SAAU,CAAA,GAAG,IAAI,CAAA;KACxB;AACH,CAAA;AASA,SAASC,cAAcp6D,KAAK,EAAE6Q,KAAK,EAAEyJ,GAAG,EAAE+/C,SAAS,EAAE;IACnD,MAAMlB,OAAAA,GAAUn5D,MAAMo5D,QAAQ,CAAA;IAC9B,MAAM7oC,KAAAA,GAAQ,CAAC4oC,OAAAA,CAAQv3C,OAAO,CAAC/Q,KAAK,CAAC,CAAA,CAAE,CAACpR,KAAK,EAAE46D,SAAAA,CAAAA,CAAAA;IAC/C,MAAMplD,IAAAA,GAAOpE,KAAK,CAACA,KAAAA,CAAM7X,MAAM,GAAG,CAAA,CAAE,CAACyG,KAAK,CAAA;IAC1C,IAAI0wB,KAAO1uB,EAAAA,KAAAA,CAAAA;IAEX,IAAK0uB,KAAAA,GAAQI,KAAOJ,EAAAA,KAAAA,IAASlb,IAAMkb,EAAAA,KAAAA,GAAQ,CAACgpC,OAAAA,CAAQj/D,GAAG,CAACi2B,KAAO,EAAA,CAAA,EAAGkqC,SAAY,CAAA,CAAA;QAC5E54D,KAAQ6Y,GAAAA,GAAG,CAAC6V,KAAM,CAAA,CAAA;QAClB,IAAI1uB,SAAS,CAAG,EAAA;YACdoP,KAAK,CAACpP,KAAAA,CAAM,CAAC0uB,KAAK,GAAG,IAAI,CAAA;SAC1B;IACH,CAAA;IACA,OAAOtf,KAAAA,CAAAA;AACT,CAAA;AAQA,SAASypD,mBAAoBt6D,CAAAA,KAAK,EAAEnB,MAAM,EAAEw7D,SAAS,EAAE;IACrD,MAAMxpD,QAAQ,EAAE,CAAA;IAEhB,MAAMyJ,GAAAA,GAAM,CAAA,CAAC,CAAA;IACb,MAAM9Y,IAAAA,GAAO3C,OAAO7F,MAAM,CAAA;IAC1B,IAAIC,CAAGwG,EAAAA,KAAAA,CAAAA;IAEP,IAAKxG,CAAI,GAAA,CAAA,EAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG,CAAA;QACzBwG,KAAQZ,GAAAA,MAAM,CAAC5F,CAAE,CAAA,CAAA;QACjBqhB,GAAG,CAAC7a,MAAM,GAAGxG,CAAAA,CAAAA;QAEb4X,KAAAA,CAAM5W,IAAI,CAAC;YACTwF,KAAAA;YACA0wB,KAAAA,EAAO,KAAK;QACd,CAAA,CAAA,CAAA;IACF,CAAA;IAIA,OAAQ3uB,IAAS,KAAA,CAAA,IAAK,CAAC64D,SAAAA,GAAaxpD,QAAQupD,aAAcp6D,CAAAA,KAAAA,EAAO6Q,KAAOyJ,EAAAA,GAAAA,EAAK+/C,SAAU,CAAA,CAAA;AACzF,CAAA;AAEe,MAAME,SAAkB3mC,SAAAA,KAAAA,CAAAA;IAErC,OAAOzwB,KAAK,MAAO,CAAA;IAKnB,OAAO/E,QAAW,GAAA;QAQhBu7C,MAAQ,EAAA,MAAA;QAER6gB,QAAAA,EAAU,CAAA,CAAC;QACXR,IAAM,EAAA;YACJX,MAAAA,EAAQ,KAAK;YACb1H,IAAAA,EAAM,KAAK;YACX/gC,KAAAA,EAAO,KAAK;YACZ0oC,UAAAA,EAAY,KAAK;YACjBG,OAAS,EAAA,aAAA;YACTgB,cAAAA,EAAgB,CAAA,CAAC;QACnB,CAAA;QACA5pD,KAAO,EAAA;YASL+lB,MAAQ,EAAA,MAAA;YAERa,QAAAA,EAAU,KAAK;YAEftH,KAAO,EAAA;gBACLC,OAAAA,EAAS,KAAK;YAChB,CAAA;QACF,CAAA;KACA,CAAA;IAKFr5B,WAAAA,CAAYwI,KAAK,CAAE;QACjB,KAAK,CAACA,KAAAA,CAAAA,CAAAA;QAGN,IAAI,CAACyQ,MAAM,GAAG;YACZ3N,IAAAA,EAAM,EAAE;YACRwI,MAAAA,EAAQ,EAAE;YACV/K,GAAAA,EAAK,EAAE;QACT,CAAA,CAAA;QAGA,IAAI,CAAC46D,KAAK,GAAG,KAAA,CAAA;QAEb,IAAI,CAACC,UAAU,GAAGtjE,SAAAA,CAAAA;QAClB,IAAI,CAACujE,QAAQ,GAAG,CAAA,CAAC,CAAA;QACjB,IAAI,CAACC,WAAW,GAAG,KAAK,CAAA;QACxB,IAAI,CAACtB,UAAU,GAAGliE,SAAAA,CAAAA;IACpB,CAAA;IAEAmqB,IAAAA,CAAKsqB,SAAS,EAAE5rC,IAAO,GAAA,CAAA,CAAE,EAAE;QACzB,MAAM85D,IAAAA,GAAOluB,UAAUkuB,IAAI,IAAA,CAAKluB,SAAUkuB,CAAAA,IAAI,GAAG,CAAA,CAAC,CAAA,CAAA;QAElD,MAAMb,OAAU,GAAA,IAAI,CAACC,QAAQ,GAAG,IAAIoB,QAAAA,CAAS14C,KAAK,CAACgqB,SAAU0uB,CAAAA,QAAQ,CAAC/iE,IAAI,CAAA,CAAA;QAE1E0hE,OAAAA,CAAQ33C,IAAI,CAACthB,IAAAA,CAAAA,CAAAA;YAMb6lC,yKAAAA,EAAQi0B,IAAKS,CAAAA,cAAc,EAAEtB,OAAAA,CAAQ13C,OAAO,EAAA,CAAA,CAAA;QAE5C,IAAI,CAAC83C,UAAU,GAAG;YAChBF,MAAAA,EAAQW,KAAKX,MAAM;YACnBzoC,KAAAA,EAAOopC,KAAKppC,KAAK;YACjB0oC,UAAAA,EAAYU,KAAKV,UAAU;QAC7B,CAAA,CAAA;QAEA,KAAK,CAAC93C,IAAI,CAACsqB,SAAAA,CAAAA,CAAAA;QAEX,IAAI,CAAC+uB,WAAW,GAAG36D,IAAAA,CAAK46D,UAAU,CAAA;IACpC,CAAA;IAOA1wD,KAAM3E,CAAAA,GAAG,EAAEhE,KAAK,EAAE;QAChB,IAAIgE,QAAQpO,SAAW,EAAA;YACrB,OAAO,IAAI,CAAA;SACZ;QACD,OAAO+S,KAAAA,CAAM,IAAI,EAAE3E,GAAAA,CAAAA,CAAAA;IACrB,CAAA;IAEAokB,YAAe,GAAA;QACb,KAAK,CAACA,YAAY,EAAA,CAAA;QAClB,IAAI,CAAC7Z,MAAM,GAAG;YACZ3N,IAAAA,EAAM,EAAE;YACRwI,MAAAA,EAAQ,EAAE;YACV/K,GAAAA,EAAK,EAAE;QACT,CAAA,CAAA;IACF,CAAA;IAEAm2B,mBAAsB,GAAA;QACpB,MAAMl3B,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMo6D,OAAAA,GAAU,IAAI,CAACC,QAAQ,CAAA;QAC7B,MAAMzH,IAAO5yD,GAAAA,OAAAA,CAAQi7D,IAAI,CAACrI,IAAI,IAAI,KAAA,CAAA;QAElC,IAAI,EAACv5D,GAAAA,EAAKmC,GAAAA,EAAK8I,UAAAA,EAAYC,UAAAA,EAAW,GAAG,IAAI,CAACF,aAAa,EAAA,CAAA;QAK3D,SAAS23D,YAAaphB,CAAAA,MAAM,EAAE;YAC5B,IAAI,CAACt2C,UAAc,IAAA,CAACkS,KAAMokC,CAAAA,MAAAA,CAAOvhD,GAAG,CAAG,EAAA;gBACrCA,GAAAA,GAAMD,IAAKC,CAAAA,GAAG,CAACA,GAAAA,EAAKuhD,OAAOvhD,GAAG,CAAA,CAAA;aAC/B;YACD,IAAI,CAACkL,UAAc,IAAA,CAACiS,KAAMokC,CAAAA,MAAAA,CAAOp/C,GAAG,CAAG,EAAA;gBACrCA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAKo/C,OAAOp/C,GAAG,CAAA,CAAA;aAC/B;QACH,CAAA;QAGA,IAAI,CAAC8I,UAAc,IAAA,CAACC,UAAY,EAAA;YAE9By3D,YAAa,CAAA,IAAI,CAACC,eAAe,EAAA,CAAA,CAAA;YAIjC,IAAIj8D,OAAAA,CAAQ46C,MAAM,KAAK,OAAA,IAAW56C,QAAQ8R,KAAK,CAAC+lB,MAAM,KAAK,QAAU,EAAA;gBACnEmkC,YAAAA,CAAa,IAAI,CAACtvD,SAAS,CAAC,KAAK,CAAA,CAAA,CAAA;aAClC;SACF;QAEDrT,GAAAA,OAAM8J,wKAAS9J,EAAAA,GAAAA,CAAAA,IAAQ,CAACmd,KAAAA,CAAMnd,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC+gE,OAAAA,CAAQv3C,OAAO,CAACjpB,IAAKC,CAAAA,GAAG,IAAI+4D,IAAK,CAAA,CAAA;QAC7Ep3D,GAAAA,OAAM2H,wKAAS3H,EAAAA,GAAAA,CAAAA,IAAQ,CAACgb,KAAAA,CAAMhb,OAAOA,GAAM,GAAA,CAAC4+D,OAAQt3C,CAAAA,KAAK,CAAClpB,IAAAA,CAAKC,GAAG,EAAA,EAAI+4D,QAAQ,CAAC,CAAA;QAG/E,IAAI,CAACv5D,GAAG,GAAGD,KAAKC,GAAG,CAACA,KAAKmC,GAAM,GAAA,CAAA,CAAA,CAAA;QAC/B,IAAI,CAACA,GAAG,GAAGpC,KAAKoC,GAAG,CAACnC,MAAM,CAAGmC,EAAAA,GAAAA,CAAAA,CAAAA;IAC/B,CAAA;IAKAygE,eAAkB,GAAA;QAChB,MAAM/rD,GAAAA,GAAM,IAAI,CAACgsD,kBAAkB,EAAA,CAAA;QACnC,IAAI7iE,GAAAA,GAAMmL,OAAOE,iBAAiB,CAAA;QAClC,IAAIlJ,GAAAA,GAAMgJ,OAAOC,iBAAiB,CAAA;QAElC,IAAIyL,GAAAA,CAAIjW,MAAM,EAAE;YACdZ,GAAM6W,GAAAA,GAAG,CAAC,CAAE,CAAA,CAAA;YACZ1U,GAAAA,GAAM0U,GAAG,CAACA,GAAIjW,CAAAA,MAAM,GAAG,CAAE,CAAA,CAAA;SAC1B;QACD,OAAO;YAACZ,GAAAA;YAAKmC,GAAAA;QAAG,CAAA,CAAA;IAClB,CAAA;IAKA87B,UAAa,GAAA;QACX,MAAMt3B,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMm8D,QAAAA,GAAWn8D,QAAQi7D,IAAI,CAAA;QAC7B,MAAMnqC,QAAAA,GAAW9wB,QAAQ8R,KAAK,CAAA;QAC9B,MAAMopD,UAAapqC,GAAAA,QAAAA,CAAS+G,MAAM,KAAK,QAAW,GAAA,IAAI,CAACqkC,kBAAkB,EAAK,GAAA,IAAI,CAACE,SAAS,EAAE,CAAA;QAE9F,IAAIp8D,QAAQ46C,MAAM,KAAK,OAAWsgB,IAAAA,UAAAA,CAAWjhE,MAAM,EAAE;YACnD,IAAI,CAACZ,GAAG,GAAG,IAAI,CAACq8B,QAAQ,IAAIwlC,UAAU,CAAC,CAAE,CAAA,CAAA;YACzC,IAAI,CAAC1/D,GAAG,GAAG,IAAI,CAACi6B,QAAQ,IAAIylC,UAAU,CAACA,UAAAA,CAAWjhE,MAAM,GAAG,CAAE,CAAA,CAAA;SAC9D;QAED,MAAMZ,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QAEpB,MAAMsW,KAAAA,OAAQuqD,yKAAenB,EAAAA,UAAAA,EAAY7hE,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;QAK9C,IAAI,CAACmgE,KAAK,GAAGQ,QAAAA,CAASvJ,IAAI,IAAA,CAAK9hC,SAASD,QAAQ,GAC5C4pC,0BAA0B0B,QAASzB,CAAAA,OAAO,EAAE,IAAI,CAACrhE,GAAG,EAAE,IAAI,CAACmC,GAAG,EAAE,IAAI,CAAC8gE,iBAAiB,CAACjjE,GACvFyhE,CAAAA,CAAAA,GAAAA,0BAAAA,CAA2B,IAAI,EAAEhpD,KAAAA,CAAM7X,MAAM,EAAEkiE,QAAAA,CAASzB,OAAO,EAAE,IAAI,CAACrhE,GAAG,EAAE,IAAI,CAACmC,GAAG,CAAC,CAAD,CAAA;QACvF,IAAI,CAACogE,UAAU,GAAG,CAAC9qC,QAASM,CAAAA,KAAK,CAACC,OAAO,IAAI,IAAI,CAACsqC,KAAK,KAAK,MAASrjE,GAAAA,SAAAA,GACjEyiE,mBAAmB,IAAI,CAACY,KAAK,CAAC,CAAA;QAClC,IAAI,CAACY,WAAW,CAACrB,UAAAA,CAAAA,CAAAA;QAEjB,IAAIl7D,OAAAA,CAAQoB,OAAO,EAAE;YACnB0Q,KAAAA,CAAM1Q,OAAO,EAAA,CAAA;SACd;QAED,OAAOm6D,oBAAoB,IAAI,EAAEzpD,KAAO,EAAA,IAAI,CAAC8pD,UAAU,CAAA,CAAA;IACzD,CAAA;IAEA9jC,aAAgB,GAAA;QAGd,IAAI,IAAI,CAAC93B,OAAO,CAACw8D,mBAAmB,EAAE;YACpC,IAAI,CAACD,WAAW,CAAC,IAAI,CAACzqD,KAAK,CAACyJ,GAAG,CAAChhB,CAAAA,IAAQ,GAAA,CAACA,KAAKmG,KAAK,CAAA,CAAA,CAAA;SACpD;IACH,CAAA;IAUA67D,WAAAA,CAAYrB,UAAa,GAAA,EAAE,EAAE;QAC3B,IAAI5hE,KAAQ,GAAA,CAAA,CAAA;QACZ,IAAI+H,GAAM,GAAA,CAAA,CAAA;QACV,IAAImwB,KAAOtb,EAAAA,IAAAA,CAAAA;QAEX,IAAI,IAAI,CAAClW,OAAO,CAACiV,MAAM,IAAIimD,UAAAA,CAAWjhE,MAAM,EAAE;YAC5Cu3B,KAAAA,GAAQ,IAAI,CAACirC,kBAAkB,CAACvB,UAAU,CAAC,CAAE,CAAA,CAAA,CAAA;YAC7C,IAAIA,UAAAA,CAAWjhE,MAAM,KAAK,CAAG,EAAA;gBAC3BX,KAAAA,GAAQ,CAAIk4B,GAAAA,KAAAA,CAAAA;aACP,MAAA;gBACLl4B,KAAQ,GAAC,CAAA,IAAI,CAACmjE,kBAAkB,CAACvB,UAAU,CAAC,CAAA,CAAE,CAAI1pC,GAAAA,KAAI,IAAK,CAAA,CAAA;aAC5D;YACDtb,IAAO,GAAA,IAAI,CAACumD,kBAAkB,CAACvB,UAAU,CAACA,UAAAA,CAAWjhE,MAAM,GAAG,CAAE,CAAA,CAAA,CAAA;YAChE,IAAIihE,UAAAA,CAAWjhE,MAAM,KAAK,CAAG,EAAA;gBAC3BoH,GAAM6U,GAAAA,IAAAA,CAAAA;aACD,MAAA;gBACL7U,GAAAA,GAAM,CAAC6U,IAAO,GAAA,IAAI,CAACumD,kBAAkB,CAACvB,UAAU,CAACA,UAAWjhE,CAAAA,MAAM,GAAG,CAAA,CAAE,CAAA,IAAK,CAAA,CAAA;aAC7E;SACF;QACD,MAAMijC,QAAQg+B,UAAWjhE,CAAAA,MAAM,GAAG,CAAA,GAAI,MAAM,IAAI,CAAA;QAChDX,KAAQkgC,OAAAA,wKAAAA,EAAYlgC,OAAO,CAAG4jC,EAAAA,KAAAA,CAAAA,CAAAA;QAC9B77B,GAAMm4B,OAAAA,wKAAAA,EAAYn4B,KAAK,CAAG67B,EAAAA,KAAAA,CAAAA,CAAAA;QAE1B,IAAI,CAAC2+B,QAAQ,GAAG;YAACviE,KAAAA;YAAO+H,GAAAA;YAAKlF,MAAAA,EAAQ,CAAK7C,GAAAA,CAAAA,KAAQ,GAAA,CAAA,GAAI+H,GAAE,CAAA;QAAE,CAAA,CAAA;IAC5D,CAAA;IASA+6D,SAAY,GAAA;QACV,MAAMhC,OAAAA,GAAU,IAAI,CAACC,QAAQ,CAAA;QAC7B,MAAMhhE,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMwE,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMm8D,QAAAA,GAAWn8D,QAAQi7D,IAAI,CAAA;QAE7B,MAAMyB,KAAQP,GAAAA,QAAAA,CAASvJ,IAAI,IAAI6H,yBAA0B0B,CAAAA,QAAAA,CAASzB,OAAO,EAAErhE,GAAKmC,EAAAA,GAAAA,EAAK,IAAI,CAAC8gE,iBAAiB,CAACjjE,GAAAA,CAAAA,CAAAA,CAAAA;QAC5G,MAAMg7D,eAAWlrD,wKAAenJ,EAAAA,OAAAA,CAAQ8R,KAAK,CAACuiD,QAAQ,EAAE,CAAA,CAAA,CAAA;QACxD,MAAMsI,UAAUD,KAAU,KAAA,MAAA,GAASP,QAAS5B,CAAAA,UAAU,GAAG,KAAK,CAAA;QAC9D,MAAMqC,UAAa98C,OAAAA,wKAAAA,EAAS68C,OAAYA,CAAAA,IAAAA,OAAAA,KAAY,IAAI,CAAA;QACxD,MAAM7qD,QAAQ,CAAA,CAAC,CAAA;QACf,IAAI0f,KAAQn4B,GAAAA,GAAAA,CAAAA;QACZ,IAAI4hE,IAAM3vD,EAAAA,KAAAA,CAAAA;QAGV,IAAIsxD,UAAY,EAAA;YACdprC,KAAAA,GAAQ,CAAC4oC,OAAAA,CAAQv3C,OAAO,CAAC2O,OAAO,SAAWmrC,EAAAA,OAAAA,CAAAA,CAAAA;SAC5C;QAGDnrC,KAAAA,GAAQ,CAAC4oC,OAAQv3C,CAAAA,OAAO,CAAC2O,KAAOorC,EAAAA,UAAAA,GAAa,QAAQF,KAAK,CAAA,CAAA;QAG1D,IAAItC,QAAQx3C,IAAI,CAACpnB,KAAKnC,GAAKqjE,EAAAA,KAAAA,CAAAA,GAAS,SAASrI,QAAU,EAAA;YACrD,MAAM,IAAIjyC,MAAM/oB,GAAM,GAAA,OAAA,GAAUmC,MAAM,sCAAyC64D,GAAAA,QAAAA,GAAW,MAAMqI,KAAO,CAAA,CAAA;SACxG;QAED,MAAMxB,UAAAA,GAAal7D,QAAQ8R,KAAK,CAAC+lB,MAAM,KAAK,MAAA,IAAU,IAAI,CAACglC,iBAAiB,EAAA,CAAA;QAC5E,IAAK5B,OAAOzpC,KAAOlmB,EAAAA,KAAAA,GAAQ,CAAC,EAAE2vD,OAAOz/D,GAAKy/D,EAAAA,IAAAA,GAAO,CAACb,OAAAA,CAAQj/D,GAAG,CAAC8/D,IAAAA,EAAM5G,QAAUqI,EAAAA,KAAAA,CAAAA,EAAQpxD,OAAO,CAAE;YAC7F0vD,OAAAA,CAAQlpD,OAAOmpD,IAAMC,EAAAA,UAAAA,CAAAA,CAAAA;QACvB,CAAA;QAEA,IAAID,SAASz/D,GAAOwE,IAAAA,OAAAA,CAAQ46C,MAAM,KAAK,OAAA,IAAWtvC,UAAU,CAAG,EAAA;YAC7D0vD,OAAAA,CAAQlpD,OAAOmpD,IAAMC,EAAAA,UAAAA,CAAAA,CAAAA;SACtB;QAGD,OAAO/7D,MAAAA,CAAOC,IAAI,CAAC0S,KAAOR,CAAAA,CAAAA,IAAI,CAAC4oD,MAAAA,CAAAA,CAAQ3+C,GAAG,CAAC9Z,CAAAA,CAAAA,GAAK,CAACA,CAAAA,CAAAA,CAAAA;IACnD,CAAA;IAMA0L,gBAAAA,CAAiBzM,KAAK,EAAE;QACtB,MAAM05D,OAAAA,GAAU,IAAI,CAACC,QAAQ,CAAA;QAC7B,MAAM8B,QAAW,GAAA,IAAI,CAACn8D,OAAO,CAACi7D,IAAI,CAAA;QAElC,IAAIkB,QAAAA,CAASW,aAAa,EAAE;YAC1B,OAAO1C,OAAQz3C,CAAAA,MAAM,CAACjiB,KAAAA,EAAOy7D,SAASW,aAAa,CAAA,CAAA;SACpD;QACD,OAAO1C,QAAQz3C,MAAM,CAACjiB,OAAOy7D,QAAST,CAAAA,cAAc,CAACqB,QAAQ,CAAA,CAAA;IAC/D,CAAA;IAOAp6C,MAAOjiB,CAAAA,KAAK,EAAEiiB,MAAM,EAAE;QACpB,MAAM3iB,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAM0iB,OAAU1iB,GAAAA,OAAAA,CAAQi7D,IAAI,CAACS,cAAc,CAAA;QAC3C,MAAM9I,IAAAA,GAAO,IAAI,CAAC+I,KAAK,CAAA;QACvB,MAAMqB,GAAMr6C,GAAAA,MAAAA,IAAUD,OAAO,CAACkwC,IAAK,CAAA,CAAA;QACnC,OAAO,IAAI,CAACyH,QAAQ,CAAC13C,MAAM,CAACjiB,KAAOs8D,EAAAA,GAAAA,CAAAA,CAAAA;IACrC,CAAA;IAWAC,mBAAAA,CAAoBhC,IAAI,EAAEv4D,KAAK,EAAEoP,KAAK,EAAE6Q,MAAM,EAAE;QAC9C,MAAM3iB,OAAAA,GAAU,IAAI,CAACA,OAAO,CAAA;QAC5B,MAAMk9D,SAAYl9D,GAAAA,OAAAA,CAAQ8R,KAAK,CAAC4mB,QAAQ,CAAA;QAExC,IAAIwkC,SAAW,EAAA;YACb,WAAOzjE,wKAAAA,EAAKyjE,SAAW,EAAA;gBAACjC,IAAAA;gBAAMv4D,KAAAA;gBAAOoP,KAAAA;aAAM,EAAE,IAAI,CAAA,CAAA;SAClD;QAED,MAAM4Q,OAAU1iB,GAAAA,OAAAA,CAAQi7D,IAAI,CAACS,cAAc,CAAA;QAC3C,MAAM9I,IAAAA,GAAO,IAAI,CAAC+I,KAAK,CAAA;QACvB,MAAML,SAAAA,GAAY,IAAI,CAACM,UAAU,CAAA;QACjC,MAAMuB,WAAcvK,GAAAA,IAAAA,IAAQlwC,OAAO,CAACkwC,IAAK,CAAA,CAAA;QACzC,MAAMwK,WAAc9B,GAAAA,SAAAA,IAAa54C,OAAO,CAAC44C,SAAU,CAAA,CAAA;QACnD,MAAM/gE,IAAAA,GAAOuX,KAAK,CAACpP,KAAM,CAAA,CAAA;QACzB,MAAM0uB,KAAQkqC,GAAAA,SAAAA,IAAa8B,WAAe7iE,IAAAA,IAAAA,IAAQA,KAAK62B,KAAK,CAAA;QAE5D,OAAO,IAAI,CAACipC,QAAQ,CAAC13C,MAAM,CAACs4C,IAAMt4C,EAAAA,MAAAA,IAAAA,CAAWyO,KAAAA,GAAQgsC,WAAcD,GAAAA,WAAW,CAAD,CAAA,CAAA;IAC/E,CAAA;IAKA1kC,kBAAAA,CAAmB3mB,KAAK,EAAE;QACxB,IAAI5X,GAAGuI,IAAMlI,EAAAA,IAAAA,CAAAA;QAEb,IAAKL,CAAAA,GAAI,GAAGuI,IAAOqP,GAAAA,KAAAA,CAAM7X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9CK,IAAOuX,GAAAA,KAAK,CAAC5X,CAAE,CAAA,CAAA;YACfK,IAAK2S,CAAAA,KAAK,GAAG,IAAI,CAAC+vD,mBAAmB,CAAC1iE,IAAAA,CAAKmG,KAAK,EAAExG,CAAG4X,EAAAA,KAAAA,CAAAA,CAAAA;QACvD,CAAA;IACF,CAAA;IAMA2qD,kBAAAA,CAAmB/7D,KAAK,EAAE;QACxB,OAAOA,KAAAA,KAAU,IAAI,GAAG+L,GAAAA,GAAM,CAAC/L,KAAAA,GAAQ,IAAI,CAACrH,GAAG,IAAA,CAAK,IAAI,CAACmC,GAAG,GAAG,IAAI,CAACnC,GAAE,CAAE,CAAA;IAC1E,CAAA;IAMAwY,gBAAAA,CAAiBnR,KAAK,EAAE;QACtB,MAAM28D,OAAAA,GAAU,IAAI,CAACxB,QAAQ,CAAA;QAC7B,MAAMr1C,GAAM,GAAA,IAAI,CAACi2C,kBAAkB,CAAC/7D,KAAAA,CAAAA,CAAAA;QACpC,OAAO,IAAI,CAAC+W,kBAAkB,CAAC,CAAC4lD,OAAQ/jE,CAAAA,KAAK,GAAGktB,GAAE,IAAK62C,OAAAA,CAAQlhE,MAAM,CAAA,CAAA;IACvE,CAAA;IAMAwb,gBAAAA,CAAiB8jB,KAAK,EAAE;QACtB,MAAM4hC,OAAAA,GAAU,IAAI,CAACxB,QAAQ,CAAA;QAC7B,MAAMr1C,GAAAA,GAAM,IAAI,CAACqV,kBAAkB,CAACJ,SAAS4hC,OAAQlhE,CAAAA,MAAM,GAAGkhE,OAAAA,CAAQh8D,GAAG,CAAA;QACzE,OAAO,IAAI,CAAChI,GAAG,GAAGmtB,GAAO,GAAA,CAAA,IAAI,CAAChrB,GAAG,GAAG,IAAI,CAACnC,GAAG,CAAD,CAAA;IAC7C,CAAA;IAOAikE,aAAAA,CAAcpwD,KAAK,EAAE;QACnB,MAAMqwD,SAAY,GAAA,IAAI,CAACv9D,OAAO,CAAC8R,KAAK,CAAA;QACpC,MAAM0rD,cAAAA,GAAiB,IAAI,CAAC/1D,GAAG,CAACs9C,WAAW,CAAC73C,OAAO8I,KAAK,CAAA;QACxD,MAAM8D,KAAAA,OAAQiD,wKAAU,EAAA,IAAI,CAACpJ,YAAY,KAAK4pD,SAAUzkC,CAAAA,WAAW,GAAGykC,SAAAA,CAAU1kC,WAAW,CAAA,CAAA;QAC3F,MAAM4kC,WAAAA,GAAcrkE,IAAKogB,CAAAA,GAAG,CAACM,KAAAA,CAAAA,CAAAA;QAC7B,MAAM4jD,WAAAA,GAActkE,IAAKsgB,CAAAA,GAAG,CAACI,KAAAA,CAAAA,CAAAA;QAC7B,MAAM6jD,eAAe,IAAI,CAACviC,uBAAuB,CAAC,GAAGz6B,IAAI,CAAA;QAEzD,OAAO;YACLqoB,CAAG,EAACw0C,cAAiBC,GAAAA,WAAAA,GAAgBE,YAAeD,GAAAA,WAAAA;YACpDx0C,CAAG,EAACs0C,cAAiBE,GAAAA,WAAAA,GAAgBC,YAAeF,GAAAA,WAAAA;QACtD,CAAA,CAAA;IACF,CAAA;IAOAnB,iBAAAA,CAAkBsB,WAAW,EAAE;QAC7B,MAAMzB,QAAW,GAAA,IAAI,CAACn8D,OAAO,CAACi7D,IAAI,CAAA;QAClC,MAAMS,cAAAA,GAAiBS,SAAST,cAAc,CAAA;QAG9C,MAAM/4C,MAAAA,GAAS+4C,cAAc,CAACS,QAAAA,CAASvJ,IAAI,CAAC,IAAI8I,eAAenC,WAAW,CAAA;QAC1E,MAAMsE,YAAAA,GAAe,IAAI,CAACZ,mBAAmB,CAACW,WAAa,EAAA,CAAA,EAAGrC,mBAAoB,CAAA,IAAI,EAAE;YAACqC,WAAAA;SAAY,EAAE,IAAI,CAAChC,UAAU,CAAGj5C,EAAAA,MAAAA,CAAAA,CAAAA;QACzH,MAAMhiB,IAAO,GAAA,IAAI,CAAC28D,aAAa,CAACO,YAAAA,CAAAA,CAAAA;QAGhC,MAAMlD,QAAAA,GAAWvhE,KAAKoE,KAAK,CAAC,IAAI,CAACmW,YAAY,KAAK,IAAI,CAACqC,KAAK,GAAGrV,IAAAA,CAAKqoB,CAAC,GAAG,IAAI,CAACjT,MAAM,GAAGpV,IAAKuoB,CAAAA,CAAC,CAAI,GAAA,CAAA,CAAA;QAChG,OAAOyxC,QAAAA,GAAW,CAAIA,GAAAA,QAAAA,GAAW,CAAC,CAAA;IACpC,CAAA;IAKAkC,iBAAoB,GAAA;QAClB,IAAI3B,aAAa,IAAI,CAACjqD,MAAM,CAAC3N,IAAI,IAAI,EAAE,CAAA;QACvC,IAAIpJ,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAIy4D,UAAAA,CAAWjhE,MAAM,EAAE;YACrB,OAAOihE,UAAAA,CAAAA;SACR;QAED,MAAM9kC,KAAAA,GAAQ,IAAI,CAAClxB,uBAAuB,EAAA,CAAA;QAE1C,IAAI,IAAI,CAAC42D,WAAW,IAAI1lC,KAAAA,CAAMn8B,MAAM,EAAE;YACpC,OAAQ,IAAI,CAACgX,MAAM,CAAC3N,IAAI,GAAG8yB,KAAK,CAAC,CAAA,CAAE,CAAChxB,UAAU,CAAC2H,kBAAkB,CAAC,IAAI,CAAA,CAAA;SACvE;QAED,IAAK7S,CAAAA,GAAI,GAAGuI,IAAO2zB,GAAAA,KAAAA,CAAMn8B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9CghE,UAAaA,GAAAA,UAAAA,CAAW9pD,MAAM,CAACglB,KAAK,CAACl8B,CAAE,CAAA,CAACkL,UAAU,CAAC2H,kBAAkB,CAAC,IAAI,CAAA,CAAA,CAAA;QAC5E,CAAA;QAEA,OAAQ,IAAI,CAACkE,MAAM,CAAC3N,IAAI,GAAG,IAAI,CAACw6D,SAAS,CAAC5C,UAAAA,CAAAA,CAAAA;IAC5C,CAAA;IAKAgB,kBAAqB,GAAA;QACnB,MAAMhB,aAAa,IAAI,CAACjqD,MAAM,CAACnF,MAAM,IAAI,EAAE,CAAA;QAC3C,IAAI5R,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAIy4D,UAAAA,CAAWjhE,MAAM,EAAE;YACrB,OAAOihE,UAAAA,CAAAA;SACR;QAED,MAAMpvD,MAAAA,GAAS,IAAI,CAACC,SAAS,EAAA,CAAA;QAC7B,IAAK7R,CAAAA,GAAI,GAAGuI,IAAOqJ,GAAAA,MAAAA,CAAO7R,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC/CghE,UAAAA,CAAWhgE,IAAI,CAACmQ,KAAAA,CAAM,IAAI,EAAES,MAAM,CAAC5R,CAAE,CAAA,CAAA,CAAA,CAAA;QACvC,CAAA;QAEA,OAAQ,IAAI,CAAC+W,MAAM,CAACnF,MAAM,GAAG,IAAI,CAACgwD,WAAW,GAAGZ,UAAa,GAAA,IAAI,CAAC4C,SAAS,CAAC5C,UAAW,CAAA,CAAA;IACzF,CAAA;IAMA4C,SAAAA,CAAUh+D,MAAM,EAAE;QAEhB,WAAOuR,wKAAAA,EAAavR,MAAOwR,CAAAA,IAAI,CAAC4oD,MAAAA,CAAAA,CAAAA,CAAAA;IAClC,CAAA;AACF;ACvpBA,SAASlhB,WAAY+kB,CAAAA,KAAK,EAAExnD,GAAG,EAAEnV,OAAO,EAAE;IACxC,IAAIsiB,EAAK,GAAA,CAAA,CAAA;IACT,IAAIG,EAAAA,GAAKk6C,KAAM9jE,CAAAA,MAAM,GAAG,CAAA,CAAA;IACxB,IAAI+jE,UAAAA,EAAYC,YAAYC,UAAYC,EAAAA,UAAAA,CAAAA;IACxC,IAAI/8D,OAAS,EAAA;QACX,IAAImV,GAAOwnD,IAAAA,KAAK,CAACr6C,EAAAA,CAAG,CAAC8C,GAAG,IAAIjQ,GAAAA,IAAOwnD,KAAK,CAACl6C,EAAG,CAAA,CAAC2C,GAAG,EAAE;YAC/C,CAAA,EAAC9C,EAAAA,EAAIG,EAAAA,EAAG,OAAGP,wKAAAA,EAAay6C,KAAO,EAAA,KAAA,EAAOxnD,GAAG,CAAA,EAAA;SAC3C;QACA,CAAA,EAACiQ,GAAKw3C,EAAAA,UAAAA,EAAY/C,IAAAA,EAAMiD,UAAU,EAAC,GAAGH,KAAK,CAACr6C,EAAAA,CAAG,EAAD;QAC9C,CAAA,EAAC8C,GAAKy3C,EAAAA,UAAAA,EAAYhD,IAAAA,EAAMkD,UAAU,EAAC,GAAGJ,KAAK,CAACl6C,EAAAA,CAAG,EAAD;KAC1C,MAAA;QACL,IAAItN,GAAOwnD,IAAAA,KAAK,CAACr6C,EAAAA,CAAG,CAACu3C,IAAI,IAAI1kD,GAAAA,IAAOwnD,KAAK,CAACl6C,EAAG,CAAA,CAACo3C,IAAI,EAAE;YACjD,CAAA,EAACv3C,EAAAA,EAAIG,EAAAA,EAAG,OAAGP,wKAAAA,EAAay6C,KAAO,EAAA,MAAA,EAAQxnD,GAAG,CAAA,EAAA;SAC5C;QACA,CAAA,EAAC0kD,IAAM+C,EAAAA,UAAAA,EAAYx3C,GAAAA,EAAK03C,UAAU,EAAC,GAAGH,KAAK,CAACr6C,EAAAA,CAAG,EAAD;QAC9C,CAAA,EAACu3C,IAAMgD,EAAAA,UAAAA,EAAYz3C,GAAAA,EAAK23C,UAAU,EAAC,GAAGJ,KAAK,CAACl6C,EAAAA,CAAG,EAAD;KAChD;IAED,MAAMu6C,OAAOH,UAAaD,GAAAA,UAAAA,CAAAA;IAC1B,OAAOI,IAAOF,GAAAA,UAAAA,GAAa,CAACC,UAAaD,GAAAA,UAAS,IAAA,CAAM3nD,GAAMynD,GAAAA,UAAS,CAAKI,GAAAA,IAAAA,GAAOF,UAAU,CAAA;AAC/F,CAAA;AAEA,MAAMG,eAAwB7C,SAAAA,SAAAA,CAAAA;IAE5B,OAAOp3D,KAAK,YAAa,CAAA;IAKzB,OAAO/E,QAAAA,GAAWm8D,SAAUn8D,CAAAA,QAAQ,CAAC;IAKrCrH,WAAAA,CAAYwI,KAAK,CAAE;QACjB,KAAK,CAACA,KAAAA,CAAAA,CAAAA;QAGN,IAAI,CAAC89D,MAAM,GAAG,EAAE,CAAA;QAEhB,IAAI,CAACC,OAAO,GAAGjmE,SAAAA,CAAAA;QAEf,IAAI,CAACkmE,WAAW,GAAGlmE,SAAAA,CAAAA;IACrB,CAAA;IAKAikE,WAAc,GAAA;QACZ,MAAMrB,UAAAA,GAAa,IAAI,CAACuD,sBAAsB,EAAA,CAAA;QAC9C,MAAMV,KAAAA,GAAQ,IAAI,CAACO,MAAM,GAAG,IAAI,CAACI,gBAAgB,CAACxD,UAAAA,CAAAA,CAAAA;QAClD,IAAI,CAACqD,OAAO,GAAGvlB,YAAY+kB,KAAO,EAAA,IAAI,CAAC1kE,GAAG,CAAA,CAAA;QAC1C,IAAI,CAACmlE,WAAW,GAAGxlB,WAAY+kB,CAAAA,KAAAA,EAAO,IAAI,CAACviE,GAAG,CAAA,GAAI,IAAI,CAAC+iE,OAAO,CAAA;QAC9D,KAAK,CAAChC,WAAW,CAACrB,UAAAA,CAAAA,CAAAA;IACpB,CAAA;IAaAwD,gBAAAA,CAAiBxD,UAAU,EAAE;QAC3B,MAAM,EAAC7hE,GAAG,EAAEmC,GAAG,EAAC,GAAG,IAAI,CAAA;QACvB,MAAMxB,QAAQ,EAAE,CAAA;QAChB,MAAM+jE,QAAQ,EAAE,CAAA;QAChB,IAAI7jE,CAAAA,EAAGuI,IAAMgJ,EAAAA,IAAAA,EAAMiG,IAAMkB,EAAAA,IAAAA,CAAAA;QAEzB,IAAK1Y,CAAAA,GAAI,GAAGuI,IAAOy4D,GAAAA,UAAAA,CAAWjhE,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YACnDwX,IAAOwpD,GAAAA,UAAU,CAAChhE,CAAE,CAAA,CAAA;YACpB,IAAIwX,IAAAA,IAAQrY,GAAOqY,IAAAA,IAAAA,IAAQlW,GAAK,EAAA;gBAC9BxB,KAAAA,CAAMkB,IAAI,CAACwW,IAAAA,CAAAA,CAAAA;aACZ;QACH,CAAA;QAEA,IAAI1X,KAAAA,CAAMC,MAAM,GAAG,CAAG,EAAA;YAEpB,OAAO;gBACL;oBAACghE,IAAM5hE,EAAAA,GAAAA;oBAAKmtB,GAAK,EAAA,CAAA;gBAAC,CAAA;gBAClB;oBAACy0C,IAAMz/D,EAAAA,GAAAA;oBAAKgrB,GAAK,EAAA,CAAA;gBAAC,CAAA;aACnB,CAAA;SACF;QAED,IAAKtsB,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,EAAA,EAAEvI,CAAG,CAAA;YAC9C0Y,IAAO5Y,GAAAA,KAAK,CAACE,CAAAA,GAAI,CAAE,CAAA,CAAA;YACnBuR,IAAOzR,GAAAA,KAAK,CAACE,CAAAA,GAAI,CAAE,CAAA,CAAA;YACnBwX,IAAO1X,GAAAA,KAAK,CAACE,CAAE,CAAA,CAAA;YAGf,IAAId,IAAAA,CAAKy4B,KAAK,CAAEjf,CAAAA,IAAOnH,GAAAA,IAAG,IAAK,CAAA,CAAA,KAAOiG,IAAM,EAAA;gBAC1CqsD,KAAAA,CAAM7iE,IAAI,CAAC;oBAAC+/D,IAAMvpD,EAAAA,IAAAA;oBAAM8U,GAAKtsB,EAAAA,CAAAA,GAAAA,CAAKuI,IAAAA,GAAO,CAAA,CAAA;gBAAE,CAAA,CAAA,CAAA;aAC5C;QACH,CAAA;QACA,OAAOs7D,KAAAA,CAAAA;IACT,CAAA;IAQA3B,SAAY,GAAA;QACV,MAAM/iE,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG,CAAA;QACpB,IAAI0/D,UAAAA,GAAa,KAAK,CAAC2B,iBAAiB,EAAA,CAAA;QACxC,IAAI,CAAC3B,WAAW9zC,QAAQ,CAAC/tB,QAAQ,CAAC6hE,UAAAA,CAAWjhE,MAAM,EAAE;YACnDihE,UAAW7qD,CAAAA,MAAM,CAAC,CAAA,EAAG,CAAGhX,EAAAA,GAAAA,CAAAA,CAAAA;SACzB;QACD,IAAI,CAAC6hE,WAAW9zC,QAAQ,CAAC5rB,QAAQ0/D,UAAWjhE,CAAAA,MAAM,KAAK,CAAG,EAAA;YACxDihE,UAAAA,CAAWhgE,IAAI,CAACM,GAAAA,CAAAA,CAAAA;SACjB;QACD,OAAO0/D,WAAW5pD,IAAI,CAAC,CAACC,CAAAA,EAAGrP,IAAMqP,CAAIrP,GAAAA,CAAAA,CAAAA,CAAAA;IACvC,CAAA;IAOAu8D,sBAAyB,GAAA;QACvB,IAAIvD,aAAa,IAAI,CAACjqD,MAAM,CAAClQ,GAAG,IAAI,EAAE,CAAA;QAEtC,IAAIm6D,UAAAA,CAAWjhE,MAAM,EAAE;YACrB,OAAOihE,UAAAA,CAAAA;SACR;QAED,MAAM53D,IAAAA,GAAO,IAAI,CAACu5D,iBAAiB,EAAA,CAAA;QACnC,MAAM3vD,KAAAA,GAAQ,IAAI,CAACgvD,kBAAkB,EAAA,CAAA;QACrC,IAAI54D,IAAKrJ,CAAAA,MAAM,IAAIiT,KAAAA,CAAMjT,MAAM,EAAE;YAG/BihE,UAAAA,GAAa,IAAI,CAAC4C,SAAS,CAACx6D,IAAAA,CAAK8N,MAAM,CAAClE,KAAAA,CAAAA,CAAAA,CAAAA;SACnC,MAAA;YACLguD,UAAAA,GAAa53D,IAAKrJ,CAAAA,MAAM,GAAGqJ,IAAAA,GAAO4J,KAAK,CAAA;SACxC;QACDguD,UAAAA,GAAa,IAAI,CAACjqD,MAAM,CAAClQ,GAAG,GAAGm6D,UAAAA,CAAAA;QAE/B,OAAOA,UAAAA,CAAAA;IACT,CAAA;IAMAuB,kBAAAA,CAAmB/7D,KAAK,EAAE;QACxB,OAAO,CAACs4C,WAAY,CAAA,IAAI,CAACslB,MAAM,EAAE59D,KAAS,CAAA,GAAA,IAAI,CAAC69D,OAAM,IAAK,IAAI,CAACC,WAAW,CAAA;IAC5E,CAAA;IAMA7mD,gBAAAA,CAAiB8jB,KAAK,EAAE;QACtB,MAAM4hC,OAAAA,GAAU,IAAI,CAACxB,QAAQ,CAAA;QAC7B,MAAMngC,OAAAA,GAAU,IAAI,CAACG,kBAAkB,CAACJ,SAAS4hC,OAAQlhE,CAAAA,MAAM,GAAGkhE,OAAAA,CAAQh8D,GAAG,CAAA;QAC7E,OAAO23C,WAAY,CAAA,IAAI,CAACslB,MAAM,EAAE5iC,OAAU,GAAA,IAAI,CAAC8iC,WAAW,GAAG,IAAI,CAACD,OAAO,EAAE,IAAI,CAAA,CAAA;IACjF,CAAA;AACF;;;;;;;;;;MC3JaI,aAAgB,GAAA;IAC3Bl8B,WAAAA;IACAn1B,QAAAA;IACA0N,OAAAA;IACAhV,MAAAA","debugId":null}},
    {"offset": {"line": 25670, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/react-chartjs-2/dist/index.js","sources":["file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/react-chartjs-2/src/utils.ts","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/react-chartjs-2/src/chart.tsx","file:///C:/Users/Dr.%20David%20Breno/Desktop/FigDavid/node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setOptions","chart","nextOptions","options","Object","assign","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","props","height","width","redraw","type","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","config","setTimeout","update","canvas","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController"],"mappings":"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","debugId":null}}]
}